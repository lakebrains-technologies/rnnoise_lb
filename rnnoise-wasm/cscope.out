cscope 15 $HOME/rnnoise_test/rnnoise_lb/rnnoise-wasm               0000644638
	@Examples/dr_mp3.h

56 #i‚de‡
dr_mp3_h


57 
	#dr_mp3_h


	)

59 #ifde‡
__˝lu•lus


63 
	~<°ddef.h
>

65 #i‡
deföed
(
_MSC_VER
) && _MSC_VER < 1600

66 sig√d 
	tdrmp3_öt8
;

67 
	tdrmp3_uöt8
;

68 sig√d 
	tdrmp3_öt16
;

69 
	tdrmp3_uöt16
;

70 sig√d 
	tdrmp3_öt32
;

71 
	tdrmp3_uöt32
;

72 sig√d 
	t__öt64
 
	tdrmp3_öt64
;

73 
	t__öt64
 
	tdrmp3_uöt64
;

76 
	~<°döt.h
>

78 
öt8_t
 
	tdrmp3_öt8
;

79 
uöt8_t
 
	tdrmp3_uöt8
;

80 
öt16_t
 
	tdrmp3_öt16
;

81 
uöt16_t
 
	tdrmp3_uöt16
;

82 
öt32_t
 
	tdrmp3_öt32
;

83 
uöt32_t
 
	tdrmp3_uöt32
;

84 
öt64_t
 
	tdrmp3_öt64
;

85 
uöt64_t
 
	tdrmp3_uöt64
;

87 
drmp3_uöt8
 
	tdrmp3_boﬁ8
;

88 
drmp3_uöt32
 
	tdrmp3_boﬁ32
;

89 
	#DRMP3_TRUE
 1

	)

90 
	#DRMP3_FALSE
 0

	)

92 
	#DRMP3_MAX_PCM_FRAMES_PER_MP3_FRAME
 1152

	)

93 
	#DRMP3_MAX_SAMPLES_PER_FRAME
 (
DRMP3_MAX_PCM_FRAMES_PER_MP3_FRAME
*2)

	)

99 
‰ame_byãs
, 
ch™√ls
, 
hz
, 
œyî
, 
bôøã_kbps
;

100 } 
	tdrmp3dec_‰ame_öfo
;

103 
md˘_ovîœp
[2][9 * 32], 
qmf_°©e
[15 * 2 * 32];

104 
ª£rv
, 
‰ì_f‹m©_byãs
;

105 
hódî
[4], 
ª£rv_buf
[511];

106 } 
	tdrmp3dec
;

109 
drmp3dec_öô
(
drmp3dec
 *
dec
);

112 
drmp3dec_decode_‰ame
(
drmp3dec
 *
dec
, c⁄° *
mp3
, 
mp3_byãs
, *
pcm
, 
drmp3dec_‰ame_öfo
 *
öfo
);

115 
drmp3dec_f32_to_s16
(c⁄° *
ö
, 
drmp3_öt16
 *
out
, 
num_ßm∂es
);

123 
drmp3_§c
 
	tdrmp3_§c
;

125 
drmp3_uöt64
 (*
	tdrmp3_§c_ªad_¥oc
)(
	tdrmp3_§c
 *
	tpSRC
, 
	tdrmp3_uöt64
 
	t‰ameCou¡
, *
	tpFømesOut
,

126 *
	tpU£rD©a
);

129 
drmp3_§c_Æg‹ôhm_n⁄e
,

130 
drmp3_§c_Æg‹ôhm_löór


131 } 
	tdrmp3_§c_Æg‹ôhm
;

133 
	#DRMP3_SRC_CACHE_SIZE_IN_FRAMES
 512

	)

135 
drmp3_§c
 *
pSRC
;

136 
pCachedFømes
[2 * 
DRMP3_SRC_CACHE_SIZE_IN_FRAMES
];

137 
drmp3_uöt32
 
ˇchedFømeCou¡
;

138 
drmp3_uöt32
 
iNextFøme
;

139 } 
	tdrmp3_§c_ˇche
;

142 
drmp3_uöt32
 
ßm∂eR©eIn
;

143 
drmp3_uöt32
 
ßm∂eR©eOut
;

144 
drmp3_uöt32
 
ch™√ls
;

145 
drmp3_§c_Æg‹ôhm
 
Æg‹ôhm
;

146 
drmp3_uöt32
 
ˇcheSizeInFømes
;

147 } 
	tdrmp3_§c_c⁄fig
;

149 
	sdrmp3_§c
 {

150 
drmp3_§c_c⁄fig
 
c⁄fig
;

151 
drmp3_§c_ªad_¥oc
 
⁄Ród
;

152 *
pU£rD©a
;

153 
bö
[256];

154 
drmp3_§c_ˇche
 
ˇche
;

157 
Æpha
;

158 
drmp3_boﬁ32
 
isPªvFømesLﬂded
 : 1;

159 
drmp3_boﬁ32
 
isNextFømesLﬂded
 : 1;

160 } 
löór
;

161 } 
Ægo
;

165 
drmp3_£ek_‹igö_°¨t
,

166 
drmp3_£ek_‹igö_cuºít


167 } 
	tdrmp3_£ek_‹igö
;

170 
drmp3_uöt64
 
£ekPosInByãs
;

171 
drmp3_uöt64
 
pcmFømeIndex
;

172 
drmp3_uöt16
 
mp3FømesToDisˇrd
;

173 
drmp3_uöt16
 
pcmFømesToDisˇrd
;

174 } 
	tdrmp3_£ek_poöt
;

186 
size_t
 (*
	tdrmp3_ªad_¥oc
)(*
	tpU£rD©a
, *
	tpBuf„rOut
, 
	tsize_t
 
	tbyãsToRód
);

198 
drmp3_boﬁ32
 (*
	tdrmp3_£ek_¥oc
)(*
	tpU£rD©a
, 
	toff£t
, 
	tdrmp3_£ek_‹igö
 
	t‹igö
);

201 
drmp3_uöt32
 
ouçutCh™√ls
;

202 
drmp3_uöt32
 
ouçutSam∂eR©e
;

203 } 
	tdrmp3_c⁄fig
;

206 
drmp3dec
 
decodî
;

207 
drmp3dec_‰ame_öfo
 
‰ameInfo
;

208 
drmp3_uöt32
 
ch™√ls
;

209 
drmp3_uöt32
 
ßm∂eR©e
;

210 
drmp3_ªad_¥oc
 
⁄Ród
;

211 
drmp3_£ek_¥oc
 
⁄Sìk
;

212 *
pU£rD©a
;

213 
drmp3_uöt32
 
mp3FømeCh™√ls
;

214 
drmp3_uöt32
 
mp3FømeSam∂eR©e
;

215 
drmp3_uöt32
 
pcmFømesC⁄sumedInMP3Føme
;

216 
drmp3_uöt32
 
pcmFømesRemaöögInMP3Føme
;

217 
drmp3_uöt8
 
pcmFømes
[() *

218 
DRMP3_MAX_SAMPLES_PER_FRAME
];

219 
drmp3_uöt64
 
cuºítPCMFøme
;

220 
drmp3_uöt64
 
°ªamCurs‹
;

221 
drmp3_§c
 
§c
;

222 
drmp3_£ek_poöt
 *
pSìkPoöts
;

223 
drmp3_uöt32
 
£ekPoötCou¡
;

224 
size_t
 
d©aSize
;

225 
size_t
 
d©aC≠acôy
;

226 
drmp3_uöt8
 *
pD©a
;

227 
drmp3_boﬁ32
 
©End
 : 1;

229 c⁄° 
drmp3_uöt8
 *
pD©a
;

230 
size_t
 
d©aSize
;

231 
size_t
 
cuºítRódPos
;

232 } 
mem‹y
;

233 } 
	tdrmp3
;

246 
drmp3_boﬁ32


247 
drmp3_öô
(
drmp3
 *
pMP3
, 
drmp3_ªad_¥oc
 
⁄Ród
, 
drmp3_£ek_¥oc
 
⁄Sìk
, *
pU£rD©a
, c⁄° 
drmp3_c⁄fig
 *
pC⁄fig
);

255 
drmp3_boﬁ32
 
drmp3_öô_mem‹y
(
drmp3
 *
pMP3
, c⁄° *
pD©a
, 
size_t
 
d©aSize
, c⁄° 
drmp3_c⁄fig
 *
pC⁄fig
);

257 #i‚de‡
DR_MP3_NO_STDIO


264 
drmp3_boﬁ32
 
drmp3_öô_fûe
(
drmp3
 *
pMP3
, c⁄° *
fûeP©h
, c⁄° 
drmp3_c⁄fig
 *
pC⁄fig
);

269 
drmp3_unöô
(
drmp3
 *
pMP3
);

274 
drmp3_uöt64
 
drmp3_ªad_pcm_‰ames_f32
(
drmp3
 *
pMP3
, drmp3_uöt64 
‰amesToRód
, *
pBuf„rOut
);

279 
drmp3_boﬁ32
 
drmp3_£ek_to_pcm_‰ame
(
drmp3
 *
pMP3
, 
drmp3_uöt64
 
‰ameIndex
);

283 
drmp3_uöt64
 
drmp3_gë_pcm_‰ame_cou¡
(
drmp3
 *
pMP3
);

287 
drmp3_uöt64
 
drmp3_gë_mp3_‰ame_cou¡
(
drmp3
 *
pMP3
);

296 
drmp3_boﬁ32
 
drmp3_ˇlcuœã_£ek_poöts
(
drmp3
 *
pMP3
, 
drmp3_uöt32
 *
pSìkPoötCou¡
, 
drmp3_£ek_poöt
 *
pSìkPoöts
);

304 
drmp3_boﬁ32
 
drmp3_böd_£ek_èbÀ
(
drmp3
 *
pMP3
, 
drmp3_uöt32
 
£ekPoötCou¡
, 
drmp3_£ek_poöt
 *
pSìkPoöts
);

312 *
drmp3_›í_™d_ªad_f32
(
drmp3_ªad_¥oc
 
⁄Ród
, 
drmp3_£ek_¥oc
 
⁄Sìk
, *
pU£rD©a
, 
drmp3_c⁄fig
 *
pC⁄fig
,

313 
drmp3_uöt64
 *
pTŸÆFømeCou¡
);

315 *
drmp3_›í_mem‹y_™d_ªad_f32
(c⁄° *
pD©a
, 
size_t
 
d©aSize
, 
drmp3_c⁄fig
 *
pC⁄fig
,

316 
drmp3_uöt64
 *
pTŸÆFømeCou¡
);

318 #i‚de‡
DR_MP3_NO_STDIO


320 *
drmp3_›í_fûe_™d_ªad_f32
(c⁄° *
fûeP©h
, 
drmp3_c⁄fig
 *
pC⁄fig
, 
drmp3_uöt64
 *
pTŸÆFømeCou¡
);

325 
drmp3_‰ì
(*
p
);

327 #ifde‡
__˝lu•lus


338 #ifde‡
DR_MP3_IMPLEMENTATION


340 
	~<°dlib.h
>

341 
	~<°rög.h
>

342 
	~<°döt.h
>

343 
	~<limôs.h
>

346 #i‡
deföed
(
__TINYC__
)

347 
	#DR_MP3_NO_SIMD


	)

350 
	#DRMP3_OFFSET_PTR
(
p
, 
off£t
Ë((*)((
drmp3_uöt8
*)’Ë+ (off£t)))

	)

352 
	#DRMP3_MAX_FREE_FORMAT_FRAME_SIZE
 2304

	)

353 #i‚de‡
DRMP3_MAX_FRAME_SYNC_MATCHES


354 
	#DRMP3_MAX_FRAME_SYNC_MATCHES
 10

	)

357 
	#DRMP3_MAX_L3_FRAME_PAYLOAD_BYTES
 
DRMP3_MAX_FREE_FORMAT_FRAME_SIZE


	)

359 
	#DRMP3_MAX_BITRESERVOIR_BYTES
 511

	)

360 
	#DRMP3_SHORT_BLOCK_TYPE
 2

	)

361 
	#DRMP3_STOP_BLOCK_TYPE
 3

	)

362 
	#DRMP3_MODE_MONO
 3

	)

363 
	#DRMP3_MODE_JOINT_STEREO
 1

	)

364 
	#DRMP3_HDR_SIZE
 4

	)

365 
	#DRMP3_HDR_IS_MONO
(
h
Ë(((h[3]Ë& 0xC0Ë=0xC0)

	)

366 
	#DRMP3_HDR_IS_MS_STEREO
(
h
Ë(((h[3]Ë& 0xE0Ë=0x60)

	)

367 
	#DRMP3_HDR_IS_FREE_FORMAT
(
h
Ë(((h[2]Ë& 0xF0Ë=0)

	)

368 
	#DRMP3_HDR_IS_CRC
(
h
Ë(!((h[1]Ë& 1))

	)

369 
	#DRMP3_HDR_TEST_PADDING
(
h
Ë((h[2]Ë& 0x2)

	)

370 
	#DRMP3_HDR_TEST_MPEG1
(
h
Ë((h[1]Ë& 0x8)

	)

371 
	#DRMP3_HDR_TEST_NOT_MPEG25
(
h
Ë((h[1]Ë& 0x10)

	)

372 
	#DRMP3_HDR_TEST_I_STEREO
(
h
Ë((h[3]Ë& 0x10)

	)

373 
	#DRMP3_HDR_TEST_MS_STEREO
(
h
Ë((h[3]Ë& 0x20)

	)

374 
	#DRMP3_HDR_GET_STEREO_MODE
(
h
Ë(((h[3]Ë>> 6Ë& 3)

	)

375 
	#DRMP3_HDR_GET_STEREO_MODE_EXT
(
h
Ë(((h[3]Ë>> 4Ë& 3)

	)

376 
	#DRMP3_HDR_GET_LAYER
(
h
Ë(((h[1]Ë>> 1Ë& 3)

	)

377 
	#DRMP3_HDR_GET_BITRATE
(
h
Ë((h[2]Ë>> 4)

	)

378 
	#DRMP3_HDR_GET_SAMPLE_RATE
(
h
Ë(((h[2]Ë>> 2Ë& 3)

	)

379 
	#DRMP3_HDR_GET_MY_SAMPLE_RATE
(
h
Ë(
	`DRMP3_HDR_GET_SAMPLE_RATE
(hË+ (((h[1] >> 3Ë& 1Ë+ ((h[1] >> 4Ë& 1))*3)

	)

380 
	#DRMP3_HDR_IS_FRAME_576
(
h
Ë((h[1] & 14Ë=2)

	)

381 
	#DRMP3_HDR_IS_LAYER_1
(
h
Ë((h[1] & 6Ë=6)

	)

383 
	#DRMP3_BITS_DEQUANTIZER_OUT
 -1

	)

384 
	#DRMP3_MAX_SCF
 (255 + 
DRMP3_BITS_DEQUANTIZER_OUT
*4 - 210)

	)

385 
	#DRMP3_MAX_SCFI
 ((
DRMP3_MAX_SCF
 + 3Ë& ~3)

	)

387 
	#DRMP3_MIN
(
a
, 
b
Ë(◊Ë> (bË? (bË: (a))

	)

388 
	#DRMP3_MAX
(
a
, 
b
Ë(◊Ë< (bË? (bË: (a))

	)

390 #i‡!
deföed
(
DR_MP3_NO_SIMD
)

392 #i‡!
deföed
(
DR_MP3_ONLY_SIMD
Ë&& (deföed(
_M_X64
Ë|| deföed(
_M_ARM64
Ë|| deföed(
__x86_64__
Ë|| deföed(
__Ørch64__
))

394 
	#DR_MP3_ONLY_SIMD


	)

397 #i‡(
deföed
(
_MSC_VER
Ë&& (deföed(
_M_IX86
Ë|| deföed(
_M_X64
))Ë|| ((deföed(
__i386__
Ë|| deföed(
__x86_64__
)Ë&& deföed(
__SSE2__
))

398 #i‡
deföed
(
_MSC_VER
)

399 
	~<öåö.h
>

402 
	~<emmöåö.h
>

404 
	#DRMP3_HAVE_SSE
 1

	)

405 
	#DRMP3_HAVE_SIMD
 1

	)

406 
	#DRMP3_VSTORE
 
_mm_°‹eu_ps


	)

407 
	#DRMP3_VLD
 
_mm_lﬂdu_ps


	)

408 
	#DRMP3_VSET
 
_mm_£t1_ps


	)

409 
	#DRMP3_VADD
 
_mm_add_ps


	)

410 
	#DRMP3_VSUB
 
_mm_sub_ps


	)

411 
	#DRMP3_VMUL
 
_mm_mul_ps


	)

412 
	#DRMP3_VMAC
(
a
, 
x
, 
y
Ë
	`_mm_add_ps
◊, 
	`_mm_mul_ps
(x, y))

	)

413 
	#DRMP3_VMSB
(
a
, 
x
, 
y
Ë
	`_mm_sub_ps
◊, 
	`_mm_mul_ps
(x, y))

	)

414 
	#DRMP3_VMUL_S
(
x
, 
s
Ë
	`_mm_mul_ps
(x, 
	`_mm_£t1_ps
(s))

	)

415 
	#DRMP3_VREV
(
x
Ë
	`_mm_shufÊe_ps
(x, x, 
	`_MM_SHUFFLE
(0, 1, 2, 3))

	)

416 
__m128
 
	tdrmp3_f4
;

417 #i‡
deföed
(
_MSC_VER
Ë|| deföed(
DR_MP3_ONLY_SIMD
)

418 
	#drmp3_˝uid
 
__˝uid


	)

420 
__ölöe__
 
__©åibuã__
((
Æways_ölöe
)Ë
	$drmp3_˝uid
(
CPUInfo
[], c⁄° 
InfoTy≥
)

422 #i‡
	`deföed
(
__PIC__
)

423 
__asm__
 
	`__vﬁ©ûe__
(

424 #i‡
	`deföed
(
__x86_64__
)

434 : "˜" (
CPUInfo
[0]), "=r" (CPUInfo[1]), "=c" (CPUInfo[2]), "=d" (CPUInfo[3])

435 : "a" (
InfoTy≥
));

437 
__asm__
 
	`__vﬁ©ûe__
(

439 : "˜" (
CPUInfo
[0]), "=b" (CPUInfo[1]), "=c" (CPUInfo[2]), "=d" (CPUInfo[3])

440 : "a" (
InfoTy≥
));

442 
	}
}

445 
	$drmp3_have_simd
() {

446 #ifde‡
DR_MP3_ONLY_SIMD


449 
g_have_simd
;

450 
CPUInfo
[4];

451 #ifde‡
MINIMP3_TEST


452 
g_cou¡î
;

453 i‡(
g_cou¡î
++ > 100)

456 i‡(
g_have_simd
)

457 
íd
;

458 
	`drmp3_˝uid
(
CPUInfo
, 0);

459 i‡(
CPUInfo
[0] > 0)

461 
	`drmp3_˝uid
(
CPUInfo
, 1);

462 
g_have_simd
 = (
CPUInfo
[3] & (1 << 26)) + 1;

463  
g_have_simd
 - 1;

466 
íd
:

467  
g_have_simd
 - 1;

469 
	}
}

471 #ñi‡
deföed
(
__ARM_NEON
Ë|| deföed(
__Ørch64__
)

472 
	~<¨m_√⁄.h
>

473 
	#DRMP3_HAVE_SIMD
 1

	)

474 
	#DRMP3_VSTORE
 
v°1q_f32


	)

475 
	#DRMP3_VLD
 
vld1q_f32


	)

476 
	#DRMP3_VSET
 
vmovq_n_f32


	)

477 
	#DRMP3_VADD
 
vaddq_f32


	)

478 
	#DRMP3_VSUB
 
vsubq_f32


	)

479 
	#DRMP3_VMUL
 
vmulq_f32


	)

480 
	#DRMP3_VMAC
(
a
, 
x
, 
y
Ë
	`vmœq_f32
◊, x, y)

	)

481 
	#DRMP3_VMSB
(
a
, 
x
, 
y
Ë
	`vmlsq_f32
◊, x, y)

	)

482 
	#DRMP3_VMUL_S
(
x
, 
s
Ë
	`vmulq_f32
(x, 
	`vmovq_n_f32
(s))

	)

483 
	#DRMP3_VREV
(
x
Ë
	`vcomböe_f32
(
	`vgë_high_f32
(
	`vªv64q_f32
(x)), 
	`vgë_low_f32
(vªv64q_f32(x)))

	)

484 
Êﬂt32x4_t
 
	tdrmp3_f4
;

485 
	$drmp3_have_simd
()

488 
	}
}

490 
	#DRMP3_HAVE_SIMD
 0

	)

491 #ifde‡
DR_MP3_ONLY_SIMD


492 #îr‹ 
DR_MP3_ONLY_SIMD
 
u£d
, 
but
 
SSE
/
NEON
 
nŸ
 
íabÀd


498 
	#DRMP3_HAVE_SIMD
 0

	)

503 c⁄° 
drmp3_uöt8
 *
	mbuf
;

504 
	mpos
, 
	mlimô
;

505 } 
	tdrmp3_bs
;

508 
	mscf
[3 * 64];

509 
drmp3_uöt8
 
	mtŸÆ_b™ds
, 
	m°îeo_b™ds
, 
	mbôÆloc
[64], 
	mscfcod
[64];

510 } 
	tdrmp3_L12_sˇÀ_öfo
;

513 
drmp3_uöt8
 
	mèb_off£t
, 
	mcode_èb_width
, 
	mb™d_cou¡
;

514 } 
	tdrmp3_L12_subb™d_Æloc
;

517 c⁄° 
drmp3_uöt8
 *
	msfbèb
;

518 
drmp3_uöt16
 
	m∑π_23_Àngth
, 
	mbig_vÆues
, 
	msˇÀÁc_com¥ess
;

519 
drmp3_uöt8
 
	mglobÆ_gaö
, 
	mblock_ty≥
, 
	mmixed_block_Êag
, 
	mn_l⁄g_sfb
, 
	mn_sh‹t_sfb
;

520 
drmp3_uöt8
 
	mèbÀ_£À˘
[3], 
	mªgi⁄_cou¡
[3], 
	msubblock_gaö
[3];

521 
drmp3_uöt8
 
	m¥eÊag
, 
	msˇÀÁc_sˇÀ
, 
	mcou¡1_èbÀ
, 
	mscfsi
;

522 } 
	tdrmp3_L3_gr_öfo
;

525 
drmp3_bs
 
	mbs
;

526 
drmp3_uöt8
 
	mmaöd©a
[
DRMP3_MAX_BITRESERVOIR_BYTES
 + 
DRMP3_MAX_L3_FRAME_PAYLOAD_BYTES
];

527 
drmp3_L3_gr_öfo
 
	mgr_öfo
[4];

528 
	mgrbuf
[2][576], 
	mscf
[40], 
	msyn
[18 + 15][2 * 32];

529 
drmp3_uöt8
 
	mi°_pos
[2][39];

530 } 
	tdrmp3dec_s¸©ch
;

532 
	$drmp3_bs_öô
(
drmp3_bs
 *
bs
, c⁄° 
drmp3_uöt8
 *
d©a
, 
byãs
) {

533 
bs
->
buf
 = 
d©a
;

534 
bs
->
pos
 = 0;

535 
bs
->
limô
 = 
byãs
 * 8;

536 
	}
}

538 
drmp3_uöt32
 
	$drmp3_bs_gë_bôs
(
drmp3_bs
 *
bs
, 
n
) {

539 
drmp3_uöt32
 
√xt
, 
ˇche
 = 0, 
s
 = 
bs
->
pos
 & 7;

540 
shl
 = 
n
 + 
s
;

541 c⁄° 
drmp3_uöt8
 *
p
 = 
bs
->
buf
 + (bs->
pos
 >> 3);

542 i‡((
bs
->
pos
 +
n
Ë> bs->
limô
)

544 
√xt
 = *
p
++ & (255 >> 
s
);

545 (
shl
 -= 8) > 0) {

546 
ˇche
 |
√xt
 << 
shl
;

547 
√xt
 = *
p
++;

549  
ˇche
 | (
√xt
 >> -
shl
);

550 
	}
}

552 
	$drmp3_hdr_vÆid
(c⁄° 
drmp3_uöt8
 *
h
) {

553  
h
[0] == 0xff &&

554 ((
h
[1] & 0xF0) == 0xf0 || (h[1] & 0xFE) == 0xe2) &&

555 (
	`DRMP3_HDR_GET_LAYER
(
h
) != 0) &&

556 (
	`DRMP3_HDR_GET_BITRATE
(
h
) != 15) &&

557 (
	`DRMP3_HDR_GET_SAMPLE_RATE
(
h
) != 3);

558 
	}
}

560 
	$drmp3_hdr_com∑ª
(c⁄° 
drmp3_uöt8
 *
h1
, c⁄° drmp3_uöt8 *
h2
) {

561  
	`drmp3_hdr_vÆid
(
h2
) &&

562 ((
h1
[1] ^ 
h2
[1]) & 0xFE) == 0 &&

563 ((
h1
[2] ^ 
h2
[2]) & 0x0C) == 0 &&

564 !(
	`DRMP3_HDR_IS_FREE_FORMAT
(
h1
Ë^ DRMP3_HDR_IS_FREE_FORMAT(
h2
));

565 
	}
}

567 
	$drmp3_hdr_bôøã_kbps
(c⁄° 
drmp3_uöt8
 *
h
) {

568 c⁄° 
drmp3_uöt8
 
hÆ‰©e
[2][3][15] = {

572  2 * 
hÆ‰©e
[!!
	`DRMP3_HDR_TEST_MPEG1
(
h
)][
	`DRMP3_HDR_GET_LAYER
(hË- 1][
	`DRMP3_HDR_GET_BITRATE
(h)];

573 
	}
}

575 
	$drmp3_hdr_ßm∂e_øã_hz
(c⁄° 
drmp3_uöt8
 *
h
) {

576 c⁄° 
g_hz
[3] = {44100, 48000, 32000};

577  
g_hz
[
	`DRMP3_HDR_GET_SAMPLE_RATE
(
h
)] >> (Ë!
	`DRMP3_HDR_TEST_MPEG1
(hË>> (Ë!
	`DRMP3_HDR_TEST_NOT_MPEG25
(h);

578 
	}
}

580 
	$drmp3_hdr_‰ame_ßm∂es
(c⁄° 
drmp3_uöt8
 *
h
) {

581  
	`DRMP3_HDR_IS_LAYER_1
(
h
Ë? 384 : (1152 >> (Ë
	`DRMP3_HDR_IS_FRAME_576
(h));

582 
	}
}

584 
	$drmp3_hdr_‰ame_byãs
(c⁄° 
drmp3_uöt8
 *
h
, 
‰ì_f‹m©_size
) {

585 
‰ame_byãs
 = 
	`drmp3_hdr_‰ame_ßm∂es
(
h
Ë* 
	`drmp3_hdr_bôøã_kbps
(hË* 125 / 
	`drmp3_hdr_ßm∂e_øã_hz
(h);

586 i‡(
	`DRMP3_HDR_IS_LAYER_1
(
h
)) {

587 
‰ame_byãs
 &= ~3;

589  
‰ame_byãs
 ? føme_byã†: 
‰ì_f‹m©_size
;

590 
	}
}

592 
	$drmp3_hdr_∑ddög
(c⁄° 
drmp3_uöt8
 *
h
) {

593  
	`DRMP3_HDR_TEST_PADDING
(
h
Ë? (
	`DRMP3_HDR_IS_LAYER_1
(h) ? 4 : 1) : 0;

594 
	}
}

596 #i‚de‡
DR_MP3_ONLY_MP3


598 c⁄° 
drmp3_L12_subb™d_Æloc
 *
	$drmp3_L12_subb™d_Æloc_èbÀ
(c⁄° 
drmp3_uöt8
 *
hdr
, 
drmp3_L12_sˇÀ_öfo
 *
sci
) {

599 c⁄° 
drmp3_L12_subb™d_Æloc
 *
Æloc
;

600 
mode
 = 
	`DRMP3_HDR_GET_STEREO_MODE
(
hdr
);

601 
nb™ds
, 
°îeo_b™ds
 = (
mode
 =
DRMP3_MODE_MONO
Ë? 0 : (modê=
DRMP3_MODE_JOINT_STEREO
) ?

602 (
	`DRMP3_HDR_GET_STEREO_MODE_EXT
(
hdr
) << 2) + 4 : 32;

604 i‡(
	`DRMP3_HDR_IS_LAYER_1
(
hdr
)) {

605 c⁄° 
drmp3_L12_subb™d_Æloc
 
g_Æloc_L1
[] = {{76, 4, 32}};

606 
Æloc
 = 
g_Æloc_L1
;

607 
nb™ds
 = 32;

608 } i‡(!
	`DRMP3_HDR_TEST_MPEG1
(
hdr
)) {

609 c⁄° 
drmp3_L12_subb™d_Æloc
 
g_Æloc_L2M2
[] = {{60, 4, 4},

612 
Æloc
 = 
g_Æloc_L2M2
;

613 
nb™ds
 = 30;

615 c⁄° 
drmp3_L12_subb™d_Æloc
 
g_Æloc_L2M1
[] = {{0, 4, 3},

619 
ßm∂e_øã_idx
 = 
	`DRMP3_HDR_GET_SAMPLE_RATE
(
hdr
);

620 
kbps
 = 
	`drmp3_hdr_bôøã_kbps
(
hdr
Ë>> (Ë(
mode
 !
DRMP3_MODE_MONO
);

621 i‡(!
kbps
)

623 
kbps
 = 192;

626 
Æloc
 = 
g_Æloc_L2M1
;

627 
nb™ds
 = 27;

628 i‡(
kbps
 < 56) {

629 c⁄° 
drmp3_L12_subb™d_Æloc
 
g_Æloc_L2M1_lowøã
[] = {{44, 4, 2},

631 
Æloc
 = 
g_Æloc_L2M1_lowøã
;

632 
nb™ds
 = 
ßm∂e_øã_idx
 == 2 ? 12 : 8;

633 } i‡(
kbps
 >96 && 
ßm∂e_øã_idx
 != 1) {

634 
nb™ds
 = 30;

638 
sci
->
tŸÆ_b™ds
 = (
drmp3_uöt8
Ë
nb™ds
;

639 
sci
->
°îeo_b™ds
 = (
drmp3_uöt8
Ë
	`DRMP3_MIN
(°îeo_b™ds, 
nb™ds
);

641  
Æloc
;

642 
	}
}

644 
	$drmp3_L12_ªad_sˇÀÁ˘‹s
(
drmp3_bs
 *
bs
, 
drmp3_uöt8
 *
pba
, drmp3_uöt8 *
scfcod
, 
b™ds
, *
scf
) {

645 c⁄° 
g_deq_L12
[18 * 3] = {

646 
	#DRMP3_DQ
(
x
Ë9.53674316e-07f/x, 7.56931807e-07f/x, 6.00777173e-07f/
	)
x

647 
	`DRMP3_DQ
(3), DRMP3_DQ(7), DRMP3_DQ(15), DRMP3_DQ(31), DRMP3_DQ(63), DRMP3_DQ(127), DRMP3_DQ(255),

648 
	`DRMP3_DQ
(511), DRMP3_DQ(1023), DRMP3_DQ(2047), DRMP3_DQ(4095), DRMP3_DQ(8191), DRMP3_DQ(16383),

649 
	`DRMP3_DQ
(32767), DRMP3_DQ(65535), DRMP3_DQ(3), DRMP3_DQ(5), DRMP3_DQ(9)

651 
i
, 
m
;

652 
i
 = 0; i < 
b™ds
; i++) {

653 
s
 = 0;

654 
ba
 = *
pba
++;

655 
mask
 = 
ba
 ? 4 + ((19 >> 
scfcod
[
i
]) & 3) : 0;

656 
m
 = 4; m; m >>= 1) {

657 i‡(
mask
 & 
m
) {

658 
b
 = 
	`drmp3_bs_gë_bôs
(
bs
, 6);

659 
s
 = 
g_deq_L12
[
ba
 * 3 - 6 + 
b
 % 3] * (1 << 21 >> b / 3);

661 *
scf
++ = 
s
;

664 
	}
}

666 
	$drmp3_L12_ªad_sˇÀ_öfo
(c⁄° 
drmp3_uöt8
 *
hdr
, 
drmp3_bs
 *
bs
, 
drmp3_L12_sˇÀ_öfo
 *
sci
) {

667 c⁄° 
drmp3_uöt8
 
g_bôÆloc_code_èb
[] = {

676 c⁄° 
drmp3_L12_subb™d_Æloc
 *
subb™d_Æloc
 = 
	`drmp3_L12_subb™d_Æloc_èbÀ
(
hdr
, 
sci
);

678 
i
, 
k
 = 0, 
ba_bôs
 = 0;

679 c⁄° 
drmp3_uöt8
 *
ba_code_èb
 = 
g_bôÆloc_code_èb
;

681 
i
 = 0; i < 
sci
->
tŸÆ_b™ds
; i++) {

682 
drmp3_uöt8
 
ba
;

683 i‡(
i
 =
k
) {

684 
k
 +
subb™d_Æloc
->
b™d_cou¡
;

685 
ba_bôs
 = 
subb™d_Æloc
->
code_èb_width
;

686 
ba_code_èb
 = 
g_bôÆloc_code_èb
 + 
subb™d_Æloc
->
èb_off£t
;

687 
subb™d_Æloc
++;

689 
ba
 = 
ba_code_èb
[
	`drmp3_bs_gë_bôs
(
bs
, 
ba_bôs
)];

690 
sci
->
bôÆloc
[2 * 
i
] = 
ba
;

691 i‡(
i
 < 
sci
->
°îeo_b™ds
) {

692 
ba
 = 
ba_code_èb
[
	`drmp3_bs_gë_bôs
(
bs
, 
ba_bôs
)];

694 
sci
->
bôÆloc
[2 * 
i
 + 1] = sci->
°îeo_b™ds
 ? 
ba
 : 0;

697 
i
 = 0; i < 2 * 
sci
->
tŸÆ_b™ds
; i++) {

698 
sci
->
scfcod
[
i
] = (
drmp3_uöt8
Ë(sci->
bôÆloc
[i] ? 
	`DRMP3_HDR_IS_LAYER_1
(
hdr
Ë? 2 : 
	`drmp3_bs_gë_bôs
(
bs
, 2)

702 
	`drmp3_L12_ªad_sˇÀÁ˘‹s
(
bs
, 
sci
->
bôÆloc
, sci->
scfcod
, sci->
tŸÆ_b™ds
 * 2, sci->
scf
);

704 
i
 = 
sci
->
°îeo_b™ds
; i < sci->
tŸÆ_b™ds
; i++) {

705 
sci
->
bôÆloc
[2 * 
i
 + 1] = 0;

707 
	}
}

709 
	$drmp3_L12_dequ™tize_gønuÀ
(*
grbuf
, 
drmp3_bs
 *
bs
, 
drmp3_L12_sˇÀ_öfo
 *
sci
, 
group_size
) {

710 
i
, 
j
, 
k
, 
choff
 = 576;

711 
j
 = 0; j < 4; j++) {

712 *
d°
 = 
grbuf
 + 
group_size
 * 
j
;

713 
i
 = 0; i < 2 * 
sci
->
tŸÆ_b™ds
; i++) {

714 
ba
 = 
sci
->
bôÆloc
[
i
];

715 i‡(
ba
 != 0) {

716 i‡(
ba
 < 17) {

717 
hÆf
 = (1 << (
ba
 - 1)) - 1;

718 
k
 = 0; k < 
group_size
; k++) {

719 
d°
[
k
] = (Ë((Ë
	`drmp3_bs_gë_bôs
(
bs
, 
ba
Ë- 
hÆf
);

722 
mod
 = (2 << (
ba
 - 17)) + 1;

723 
code
 = 
	`drmp3_bs_gë_bôs
(
bs
, 
mod
 + 2 - (mod >> 3));

724 
k
 = 0; k < 
group_size
; k++, 
code
 /
mod
) {

725 
d°
[
k
] = (Ë((Ë(
code
 % 
mod
 - mod / 2));

729 
d°
 +
choff
;

730 
choff
 = 18 - choff;

733  
group_size
 * 4;

734 
	}
}

736 
	$drmp3_L12_≠∂y_scf_384
(
drmp3_L12_sˇÀ_öfo
 *
sci
, c⁄° *
scf
, *
d°
) {

737 
i
, 
k
;

738 
	`mem˝y
(
d°
 + 576 + 
sci
->
°îeo_b™ds
 * 18, dst + sci->stereo_bands * 18,

739 (
sci
->
tŸÆ_b™ds
 - sci->
°îeo_b™ds
) * 18 * ());

740 
i
 = 0; i < 
sci
->
tŸÆ_b™ds
; i++, 
d°
 +18, 
scf
 += 6) {

741 
k
 = 0; k < 12; k++) {

742 
d°
[
k
 + 0] *
scf
[0];

743 
d°
[
k
 + 576] *
scf
[3];

746 
	}
}

750 
	$drmp3_L3_ªad_side_öfo
(
drmp3_bs
 *
bs
, 
drmp3_L3_gr_öfo
 *
gr
, c⁄° 
drmp3_uöt8
 *
hdr
) {

751 c⁄° 
drmp3_uöt8
 
g_scf_l⁄g
[8][23] = {

761 c⁄° 
drmp3_uöt8
 
g_scf_sh‹t
[8][40] = {

771 c⁄° 
drmp3_uöt8
 
g_scf_mixed
[8][40] = {

782 
èbÀs
, 
scfsi
 = 0;

783 
maö_d©a_begö
, 
∑π_23_sum
 = 0;

784 
§_idx
 = 
	`DRMP3_HDR_GET_MY_SAMPLE_RATE
(
hdr
);

785 
§_idx
 -= (sr_idx != 0);

786 
gr_cou¡
 = 
	`DRMP3_HDR_IS_MONO
(
hdr
) ? 1 : 2;

788 i‡(
	`DRMP3_HDR_TEST_MPEG1
(
hdr
)) {

789 
gr_cou¡
 *= 2;

790 
maö_d©a_begö
 = 
	`drmp3_bs_gë_bôs
(
bs
, 9);

791 
scfsi
 = 
	`drmp3_bs_gë_bôs
(
bs
, 7 + 
gr_cou¡
);

793 
maö_d©a_begö
 = 
	`drmp3_bs_gë_bôs
(
bs
, 8 + 
gr_cou¡
) >> gr_count;

797 i‡(
	`DRMP3_HDR_IS_MONO
(
hdr
)) {

798 
scfsi
 <<= 4;

800 
gr
->
∑π_23_Àngth
 = (
drmp3_uöt16
Ë
	`drmp3_bs_gë_bôs
(
bs
, 12);

801 
∑π_23_sum
 +
gr
->
∑π_23_Àngth
;

802 
gr
->
big_vÆues
 = (
drmp3_uöt16
Ë
	`drmp3_bs_gë_bôs
(
bs
, 9);

803 i‡(
gr
->
big_vÆues
 > 288) {

806 
gr
->
globÆ_gaö
 = (
drmp3_uöt8
Ë
	`drmp3_bs_gë_bôs
(
bs
, 8);

807 
gr
->
sˇÀÁc_com¥ess
 = (
drmp3_uöt16
Ë
	`drmp3_bs_gë_bôs
(
bs
, 
	`DRMP3_HDR_TEST_MPEG1
(
hdr
) ? 4 : 9);

808 
gr
->
sfbèb
 = 
g_scf_l⁄g
[
§_idx
];

809 
gr
->
n_l⁄g_sfb
 = 22;

810 
gr
->
n_sh‹t_sfb
 = 0;

811 i‡(
	`drmp3_bs_gë_bôs
(
bs
, 1)) {

812 
gr
->
block_ty≥
 = (
drmp3_uöt8
Ë
	`drmp3_bs_gë_bôs
(
bs
, 2);

813 i‡(!
gr
->
block_ty≥
) {

816 
gr
->
mixed_block_Êag
 = (
drmp3_uöt8
Ë
	`drmp3_bs_gë_bôs
(
bs
, 1);

817 
gr
->
ªgi⁄_cou¡
[0] = 7;

818 
gr
->
ªgi⁄_cou¡
[1] = 255;

819 i‡(
gr
->
block_ty≥
 =
DRMP3_SHORT_BLOCK_TYPE
) {

820 
scfsi
 &= 0x0F0F;

821 i‡(!
gr
->
mixed_block_Êag
) {

822 
gr
->
ªgi⁄_cou¡
[0] = 8;

823 
gr
->
sfbèb
 = 
g_scf_sh‹t
[
§_idx
];

824 
gr
->
n_l⁄g_sfb
 = 0;

825 
gr
->
n_sh‹t_sfb
 = 39;

827 
gr
->
sfbèb
 = 
g_scf_mixed
[
§_idx
];

828 
gr
->
n_l⁄g_sfb
 = 
	`DRMP3_HDR_TEST_MPEG1
(
hdr
) ? 8 : 6;

829 
gr
->
n_sh‹t_sfb
 = 30;

832 
èbÀs
 = 
	`drmp3_bs_gë_bôs
(
bs
, 10);

833 
èbÀs
 <<= 5;

834 
gr
->
subblock_gaö
[0] = (
drmp3_uöt8
Ë
	`drmp3_bs_gë_bôs
(
bs
, 3);

835 
gr
->
subblock_gaö
[1] = (
drmp3_uöt8
Ë
	`drmp3_bs_gë_bôs
(
bs
, 3);

836 
gr
->
subblock_gaö
[2] = (
drmp3_uöt8
Ë
	`drmp3_bs_gë_bôs
(
bs
, 3);

838 
gr
->
block_ty≥
 = 0;

839 
gr
->
mixed_block_Êag
 = 0;

840 
èbÀs
 = 
	`drmp3_bs_gë_bôs
(
bs
, 15);

841 
gr
->
ªgi⁄_cou¡
[0] = (
drmp3_uöt8
Ë
	`drmp3_bs_gë_bôs
(
bs
, 4);

842 
gr
->
ªgi⁄_cou¡
[1] = (
drmp3_uöt8
Ë
	`drmp3_bs_gë_bôs
(
bs
, 3);

843 
gr
->
ªgi⁄_cou¡
[2] = 255;

845 
gr
->
èbÀ_£À˘
[0] = (
drmp3_uöt8
Ë(
èbÀs
 >> 10);

846 
gr
->
èbÀ_£À˘
[1] = (
drmp3_uöt8
Ë((
èbÀs
 >> 5) & 31);

847 
gr
->
èbÀ_£À˘
[2] = (
drmp3_uöt8
Ë((
èbÀs
) & 31);

848 
gr
->
¥eÊag
 = (
drmp3_uöt8
Ë(
	`DRMP3_HDR_TEST_MPEG1
(
hdr
Ë? 
	`drmp3_bs_gë_bôs
(
bs
, 1Ë: (gr->
sˇÀÁc_com¥ess
 >=

850 
gr
->
sˇÀÁc_sˇÀ
 = (
drmp3_uöt8
Ë
	`drmp3_bs_gë_bôs
(
bs
, 1);

851 
gr
->
cou¡1_èbÀ
 = (
drmp3_uöt8
Ë
	`drmp3_bs_gë_bôs
(
bs
, 1);

852 
gr
->
scfsi
 = (
drmp3_uöt8
) ((scfsi >> 12) & 15);

853 
scfsi
 <<= 4;

854 
gr
++;

855 } --
gr_cou¡
);

857 i‡(
∑π_23_sum
 + 
bs
->
pos
 > bs->
limô
 + 
maö_d©a_begö
 * 8) {

861  
maö_d©a_begö
;

862 
	}
}

864 
	$drmp3_L3_ªad_sˇÀÁ˘‹s
(
drmp3_uöt8
 *
scf
, drmp3_uöt8 *
i°_pos
, c⁄° drmp3_uöt8 *
scf_size
,

865 c⁄° 
drmp3_uöt8
 *
scf_cou¡
, 
drmp3_bs
 *
bôbuf
, 
scfsi
) {

866 
i
, 
k
;

867 
i
 = 0; i < 4 && 
scf_cou¡
[i]; i++, 
scfsi
 *= 2) {

868 
˙t
 = 
scf_cou¡
[
i
];

869 i‡(
scfsi
 & 8) {

870 
	`mem˝y
(
scf
, 
i°_pos
, 
˙t
);

872 
bôs
 = 
scf_size
[
i
];

873 i‡(!
bôs
) {

874 
	`mem£t
(
scf
, 0, 
˙t
);

875 
	`mem£t
(
i°_pos
, 0, 
˙t
);

877 
max_scf
 = (
scfsi
 < 0Ë? (1 << 
bôs
) - 1 : -1;

878 
k
 = 0; k < 
˙t
; k++) {

879 
s
 = 
	`drmp3_bs_gë_bôs
(
bôbuf
, 
bôs
);

880 
i°_pos
[
k
] = (
drmp3_uöt8
Ë(
s
 =
max_scf
 ? -1 : s);

881 
scf
[
k
] = (
drmp3_uöt8
Ë
s
;

885 
i°_pos
 +
˙t
;

886 
scf
 +
˙t
;

888 
scf
[0] = scf[1] = scf[2] = 0;

889 
	}
}

891 
	$drmp3_L3_ldexp_q2
(
y
, 
exp_q2
) {

892 c⁄° 
g_exp‰ac
[4] = {9.31322575e-10f, 7.83145814e-10f, 6.58544508e-10f, 5.53767716e-10f};

893 
e
;

895 
e
 = 
	`DRMP3_MIN
(30 * 4, 
exp_q2
);

896 
y
 *
g_exp‰ac
[
e
 & 3] * (1 << 30 >> (e >> 2));

897 } (
exp_q2
 -
e
) > 0);

898  
y
;

899 
	}
}

902 
	$drmp3_L3_decode_sˇÀÁ˘‹s
(c⁄° 
drmp3_uöt8
 *
hdr
, drmp3_uöt8 *
i°_pos
, 
drmp3_bs
 *
bs
, c⁄° 
drmp3_L3_gr_öfo
 *
gr
,

903 *
scf
, 
ch
) {

904 c⁄° 
drmp3_uöt8
 
g_scf_∑πôi⁄s
[3][28] = {

909 c⁄° 
drmp3_uöt8
 *
scf_∑πôi⁄
 = 
g_scf_∑πôi⁄s
[!!
gr
->
n_sh‹t_sfb
 + !gr->
n_l⁄g_sfb
];

910 
drmp3_uöt8
 
scf_size
[4], 
iscf
[40];

911 
i
, 
scf_shi·
 = 
gr
->
sˇÀÁc_sˇÀ
 + 1, 
gaö_exp
, 
scfsi
 = gr->scfsi;

912 
gaö
;

914 i‡(
	`DRMP3_HDR_TEST_MPEG1
(
hdr
)) {

915 c⁄° 
drmp3_uöt8
 
g_scfc_decode
[16] = {0, 1, 2, 3, 12, 5, 6, 7, 9, 10, 11, 13, 14, 15, 18, 19};

916 
∑π
 = 
g_scfc_decode
[
gr
->
sˇÀÁc_com¥ess
];

917 
scf_size
[1] = scf_size[0] = (
drmp3_uöt8
Ë(
∑π
 >> 2);

918 
scf_size
[3] = scf_size[2] = (
drmp3_uöt8
Ë(
∑π
 & 3);

920 c⁄° 
drmp3_uöt8
 
g_mod
[

922 
k
, 
mod¥od
, 
sfc
, 
i°
 = 
	`DRMP3_HDR_TEST_I_STEREO
(
hdr
Ë&& 
ch
;

923 
sfc
 = 
gr
->
sˇÀÁc_com¥ess
 >> 
i°
;

924 
k
 = 
i°
 * 3 * 4; 
sfc
 >0; sf¯-
mod¥od
, k += 4) {

925 
mod¥od
 = 1, 
i
 = 3; i >= 0; i--) {

926 
scf_size
[
i
] = (
drmp3_uöt8
Ë(
sfc
 / 
mod¥od
 % 
g_mod
[
k
 + i]);

927 
mod¥od
 *
g_mod
[
k
 + 
i
];

930 
scf_∑πôi⁄
 +
k
;

931 
scfsi
 = -16;

933 
	`drmp3_L3_ªad_sˇÀÁ˘‹s
(
iscf
, 
i°_pos
, 
scf_size
, 
scf_∑πôi⁄
, 
bs
, 
scfsi
);

935 i‡(
gr
->
n_sh‹t_sfb
) {

936 
sh
 = 3 - 
scf_shi·
;

937 
i
 = 0; i < 
gr
->
n_sh‹t_sfb
; i += 3) {

938 
iscf
[
gr
->
n_l⁄g_sfb
 + 
i
 + 0] +gr->
subblock_gaö
[0] << 
sh
;

939 
iscf
[
gr
->
n_l⁄g_sfb
 + 
i
 + 1] +gr->
subblock_gaö
[1] << 
sh
;

940 
iscf
[
gr
->
n_l⁄g_sfb
 + 
i
 + 2] +gr->
subblock_gaö
[2] << 
sh
;

942 } i‡(
gr
->
¥eÊag
) {

943 c⁄° 
drmp3_uöt8
 
g_¥ómp
[10] = {1, 1, 1, 1, 2, 2, 3, 3, 3, 2};

944 
i
 = 0; i < 10; i++) {

945 
iscf
[11 + 
i
] +
g_¥ómp
[i];

949 
gaö_exp
 = 
gr
->
globÆ_gaö
 + 
DRMP3_BITS_DEQUANTIZER_OUT
 * 4 - 210 - (
	`DRMP3_HDR_IS_MS_STEREO
(
hdr
) ? 2 : 0);

950 
gaö
 = 
	`drmp3_L3_ldexp_q2
(1 << (
DRMP3_MAX_SCFI
 / 4), DRMP3_MAX_SCFI - 
gaö_exp
);

951 
i
 = 0; i < (Ë(
gr
->
n_l⁄g_sfb
 + gr->
n_sh‹t_sfb
); i++) {

952 
scf
[
i
] = 
	`drmp3_L3_ldexp_q2
(
gaö
, 
iscf
[i] << 
scf_shi·
);

954 
	}
}

956 c⁄° 
	gg_drmp3_pow43
[129 + 16] = {

977 
	$drmp3_L3_pow_43
(
x
) {

978 
‰ac
;

979 
sign
, 
mu…
 = 256;

981 i‡(
x
 < 129) {

982  
g_drmp3_pow43
[16 + 
x
];

985 i‡(
x
 < 1024) {

986 
mu…
 = 16;

987 
x
 <<= 3;

990 
sign
 = 2 * 
x
 & 64;

991 
‰ac
 = (Ë((
x
 & 63Ë- 
sign
) / ((x & ~63) + sign);

992  
g_drmp3_pow43
[16 + ((
x
 + 
sign
Ë>> 6)] * (1.‡+ 
‰ac
 * ((4.‡/ 3Ë+ fø¯* (2.‡/ 9))Ë* 
mu…
;

993 
	}
}

996 
	$drmp3_L3_huffm™
(*
d°
, 
drmp3_bs
 *
bs
, c⁄° 
drmp3_L3_gr_öfo
 *
gr_öfo
, c⁄° *
scf
, 
œyî3gr_limô
) {

997 c⁄° 
drmp3_öt16
 
èbs
[] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

1155 c⁄° 
drmp3_uöt8
 
èb32
[] = {130, 162, 193, 209, 44, 28, 76, 140, 9, 9, 9, 9, 9, 9, 9, 9, 190, 254, 222, 238,

1157 c⁄° 
drmp3_uöt8
 
èb33
[] = {252, 236, 220, 204, 188, 172, 156, 140, 124, 108, 92, 76, 60, 44, 28, 12};

1158 c⁄° 
drmp3_öt16
 
èbödex
[

1161 c⁄° 
drmp3_uöt8
 
g_löbôs
[] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 8, 10, 13, 4,

1164 
	#DRMP3_PEEK_BITS
(
n
Ë(
bs_ˇche
 >> (32 -Ç))

	)

1165 
	#DRMP3_FLUSH_BITS
(
n
Ë{ 
bs_ˇche
 <<“); 
bs_sh
 +“); }

	)

1166 
	#DRMP3_CHECK_BITS
 
bs_sh
 >0Ë{ 
bs_ˇche
 |(
drmp3_uöt32
)*
bs_√xt_±r
++ << bs_sh; bs_sh -8; }

	)

1167 
	#DRMP3_BSPOS
 ((
bs_√xt_±r
 - 
bs
->
buf
)*8 - 24 + 
bs_sh
)

	)

1169 
⁄e
 = 0.0f;

1170 
úeg
 = 0, 
big_vÆ_˙t
 = 
gr_öfo
->
big_vÆues
;

1171 c⁄° 
drmp3_uöt8
 *
sfb
 = 
gr_öfo
->
sfbèb
;

1172 c⁄° 
drmp3_uöt8
 *
bs_√xt_±r
 = 
bs
->
buf
 + bs->
pos
 / 8;

1173 
drmp3_uöt32
 
bs_ˇche
 = (((
bs_√xt_±r
[0] * 256u + bs_next_ptr[1]) * 256u + bs_next_ptr[2]) * 256u + bs_next_ptr[3])

1174 << (
bs
->
pos
 & 7);

1175 
∑ús_to_decode
, 
≈
, 
bs_sh
 = (
bs
->
pos
 & 7) - 8;

1176 
bs_√xt_±r
 += 4;

1178 
big_vÆ_˙t
 > 0) {

1179 
èb_num
 = 
gr_öfo
->
èbÀ_£À˘
[
úeg
];

1180 
sfb_˙t
 = 
gr_öfo
->
ªgi⁄_cou¡
[
úeg
++];

1181 c⁄° 
drmp3_öt16
 *
codebook
 = 
èbs
 + 
èbödex
[
èb_num
];

1182 
löbôs
 = 
g_löbôs
[
èb_num
];

1184 
≈
 = *
sfb
++ / 2;

1185 
∑ús_to_decode
 = 
	`DRMP3_MIN
(
big_vÆ_˙t
, 
≈
);

1186 
⁄e
 = *
scf
++;

1188 
j
, 
w
 = 5;

1189 
Àaf
 = 
codebook
[
	`DRMP3_PEEK_BITS
(
w
)];

1190 
Àaf
 < 0) {

1191 
	`DRMP3_FLUSH_BITS
(
w
);

1192 
w
 = 
Àaf
 & 7;

1193 
Àaf
 = 
codebook
[
	`DRMP3_PEEK_BITS
(
w
) - (leaf >> 3)];

1195 
	`DRMP3_FLUSH_BITS
(
Àaf
 >> 8);

1197 
j
 = 0; j < 2; j++, 
d°
++, 
Àaf
 >>= 4) {

1198 
lsb
 = 
Àaf
 & 0x0F;

1199 i‡(
lsb
 =15 && 
löbôs
) {

1200 
lsb
 +
	`DRMP3_PEEK_BITS
(
löbôs
);

1201 
	`DRMP3_FLUSH_BITS
(
löbôs
);

1202 
DRMP3_CHECK_BITS
;

1203 *
d°
 = 
⁄e
 * 
	`drmp3_L3_pow_43
(
lsb
Ë* ((
öt32_t
Ë
bs_ˇche
 < 0 ? -1 : 1);

1205 *
d°
 = 
g_drmp3_pow43
[16 + 
lsb
 - 16 * (
bs_ˇche
 >> 31)] * 
⁄e
;

1207 
	`DRMP3_FLUSH_BITS
(
lsb
 ? 1 : 0);

1209 
DRMP3_CHECK_BITS
;

1210 } --
∑ús_to_decode
);

1211 } (
big_vÆ_˙t
 -
≈
Ë> 0 && --
sfb_˙t
 >= 0);

1214 
≈
 = 1 - 
big_vÆ_˙t
;; 
d°
 += 4) {

1215 c⁄° 
drmp3_uöt8
 *
codebook_cou¡1
 = (
gr_öfo
->
cou¡1_èbÀ
Ë? 
èb33
 : 
èb32
;

1216 
Àaf
 = 
codebook_cou¡1
[
	`DRMP3_PEEK_BITS
(4)];

1217 i‡(!(
Àaf
 & 8)) {

1218 
Àaf
 = 
codebook_cou¡1
[÷ó‡>> 3Ë+ (
bs_ˇche
 << 4 >> (32 - (leaf & 3)))];

1220 
	`DRMP3_FLUSH_BITS
(
Àaf
 & 7);

1221 i‡(
DRMP3_BSPOS
 > 
œyî3gr_limô
) {

1224 
	#DRMP3_RELOAD_SCALEFACTOR
 i‡(!--
≈
Ë{Ç∞*
sfb
++/2; i‡(!≈Ë; 
⁄e
 = *
scf
++; }

	)

1225 
	#DRMP3_DEQ_COUNT1
(
s
Ëi‡(
Àaf
 & (128 >> s)Ë{ 
d°
[s] = ((
drmp3_öt32
)
bs_ˇche
 < 0Ë? -
⁄e
 : o√; 
	`DRMP3_FLUSH_BITS
(1Ë}

	)

1226 
DRMP3_RELOAD_SCALEFACTOR
;

1227 
	`DRMP3_DEQ_COUNT1
(0);

1228 
	`DRMP3_DEQ_COUNT1
(1);

1229 
DRMP3_RELOAD_SCALEFACTOR
;

1230 
	`DRMP3_DEQ_COUNT1
(2);

1231 
	`DRMP3_DEQ_COUNT1
(3);

1232 
DRMP3_CHECK_BITS
;

1235 
bs
->
pos
 = 
œyî3gr_limô
;

1236 
	}
}

1238 
	$drmp3_L3_midside_°îeo
(*
À·
, 
n
) {

1239 
i
 = 0;

1240 *
right
 = 
À·
 + 576;

1241 #i‡
DRMP3_HAVE_SIMD


1242 i‡(
	`drmp3_have_simd
())

1243 ; 
i
 < 
n
 - 3; i += 4) {

1244 
drmp3_f4
 
vl
 = 
	`DRMP3_VLD
(
À·
 + 
i
);

1245 
drmp3_f4
 
vr
 = 
	`DRMP3_VLD
(
right
 + 
i
);

1246 
	`DRMP3_VSTORE
(
À·
 + 
i
, 
	`DRMP3_VADD
(
vl
, 
vr
));

1247 
	`DRMP3_VSTORE
(
right
 + 
i
, 
	`DRMP3_VSUB
(
vl
, 
vr
));

1250 ; 
i
 < 
n
; i++) {

1251 
a
 = 
À·
[
i
];

1252 
b
 = 
right
[
i
];

1253 
À·
[
i
] = 
a
 + 
b
;

1254 
right
[
i
] = 
a
 - 
b
;

1256 
	}
}

1258 
	$drmp3_L3_öãnsôy_°îeo_b™d
(*
À·
, 
n
, 
kl
, 
kr
) {

1259 
i
;

1260 
i
 = 0; i < 
n
; i++) {

1261 
À·
[
i
 + 576] =Üe·[i] * 
kr
;

1262 
À·
[
i
] =Üe·[i] * 
kl
;

1264 
	}
}

1266 
	$drmp3_L3_°îeo_t›_b™d
(c⁄° *
right
, c⁄° 
drmp3_uöt8
 *
sfb
, 
nb™ds
, 
max_b™d
[3]) {

1267 
i
, 
k
;

1269 
max_b™d
[0] = max_band[1] = max_band[2] = -1;

1271 
i
 = 0; i < 
nb™ds
; i++) {

1272 
k
 = 0; k < 
sfb
[
i
]; k += 2) {

1273 i‡(
right
[
k
] != 0 ||Ñight[k + 1] != 0) {

1274 
max_b™d
[
i
 % 3] = i;

1278 
right
 +
sfb
[
i
];

1280 
	}
}

1283 
	$drmp3_L3_°îeo_¥o˚ss
(*
À·
, c⁄° 
drmp3_uöt8
 *
i°_pos
, c⁄° drmp3_uöt8 *
sfb
, c⁄° drmp3_uöt8 *
hdr
,

1284 
max_b™d
[3], 
m≥g2_sh
) {

1285 c⁄° 
g_∑n
[

1288 
i
, 
max_pos
 = 
	`DRMP3_HDR_TEST_MPEG1
(
hdr
) ? 7 : 64;

1290 
i
 = 0; 
sfb
[i]; i++) {

1291 
ùos
 = 
i°_pos
[
i
];

1292 i‡((Ë
i
 > 
max_b™d
[ò% 3] && 
ùos
 < 
max_pos
) {

1293 
kl
, 
kr
, 
s
 = 
	`DRMP3_HDR_TEST_MS_STEREO
(
hdr
) ? 1.41421356f : 1;

1294 i‡(
	`DRMP3_HDR_TEST_MPEG1
(
hdr
)) {

1295 
kl
 = 
g_∑n
[2 * 
ùos
];

1296 
kr
 = 
g_∑n
[2 * 
ùos
 + 1];

1298 
kl
 = 1;

1299 
kr
 = 
	`drmp3_L3_ldexp_q2
(1, (
ùos
 + 1Ë>> 1 << 
m≥g2_sh
);

1300 i‡(
ùos
 & 1) {

1301 
kl
 = 
kr
;

1302 
kr
 = 1;

1305 
	`drmp3_L3_öãnsôy_°îeo_b™d
(
À·
, 
sfb
[
i
], 
kl
 * 
s
, 
kr
 * s);

1306 } i‡(
	`DRMP3_HDR_TEST_MS_STEREO
(
hdr
)) {

1307 
	`drmp3_L3_midside_°îeo
(
À·
, 
sfb
[
i
]);

1309 
À·
 +
sfb
[
i
];

1311 
	}
}

1314 
	$drmp3_L3_öãnsôy_°îeo
(*
À·
, 
drmp3_uöt8
 *
i°_pos
, c⁄° 
drmp3_L3_gr_öfo
 *
gr
, c⁄° drmp3_uöt8 *
hdr
) {

1315 
max_b™d
[3], 
n_sfb
 = 
gr
->
n_l⁄g_sfb
 + gr->
n_sh‹t_sfb
;

1316 
i
, 
max_blocks
 = 
gr
->
n_sh‹t_sfb
 ? 3 : 1;

1318 
	`drmp3_L3_°îeo_t›_b™d
(
À·
 + 576, 
gr
->
sfbèb
, 
n_sfb
, 
max_b™d
);

1319 i‡(
gr
->
n_l⁄g_sfb
) {

1320 
max_b™d
[0] = max_b™d[1] = max_b™d[2] = 
	`DRMP3_MAX
(DRMP3_MAX(max_band[0], max_band[1]), max_band[2]);

1322 
i
 = 0; i < 
max_blocks
; i++) {

1323 
deÁu…_pos
 = 
	`DRMP3_HDR_TEST_MPEG1
(
hdr
) ? 3 : 0;

1324 
ô›
 = 
n_sfb
 - 
max_blocks
 + 
i
;

1325 
¥ev
 = 
ô›
 - 
max_blocks
;

1326 
i°_pos
[
ô›
] = (
drmp3_uöt8
Ë(
max_b™d
[
i
] >
¥ev
 ? 
deÁu…_pos
 : ist_pos[prev]);

1328 
	`drmp3_L3_°îeo_¥o˚ss
(
À·
, 
i°_pos
, 
gr
->
sfbèb
, 
hdr
, 
max_b™d
, gr[1].
sˇÀÁc_com¥ess
 & 1);

1329 
	}
}

1331 
	$drmp3_L3_ª‹dî
(*
grbuf
, *
s¸©ch
, c⁄° 
drmp3_uöt8
 *
sfb
) {

1332 
i
, 
Àn
;

1333 *
§c
 = 
grbuf
, *
d°
 = 
s¸©ch
;

1335 ; 0 !(
Àn
 = *
sfb
); sfb +3, 
§c
 += 2 *Üen) {

1336 
i
 = 0; i < 
Àn
; i++, 
§c
++) {

1337 *
d°
++ = 
§c
[0 * 
Àn
];

1338 *
d°
++ = 
§c
[1 * 
Àn
];

1339 *
d°
++ = 
§c
[2 * 
Àn
];

1342 
	`mem˝y
(
grbuf
, 
s¸©ch
, (
d°
 - scratch) * ());

1343 
	}
}

1345 
	$drmp3_L3_™tülüs
(*
grbuf
, 
nb™ds
) {

1346 c⁄° 
g_Ø
[2][8] = {

1351 ; 
nb™ds
 > 0;Çb™ds--, 
grbuf
 += 18) {

1352 
i
 = 0;

1353 #i‡
DRMP3_HAVE_SIMD


1354 i‡(
	`drmp3_have_simd
())

1355 ; 
i
 < 8; i += 4) {

1356 
drmp3_f4
 
vu
 = 
	`DRMP3_VLD
(
grbuf
 + 18 + 
i
);

1357 
drmp3_f4
 
vd
 = 
	`DRMP3_VLD
(
grbuf
 + 14 - 
i
);

1358 
drmp3_f4
 
vc0
 = 
	`DRMP3_VLD
(
g_Ø
[0] + 
i
);

1359 
drmp3_f4
 
vc1
 = 
	`DRMP3_VLD
(
g_Ø
[1] + 
i
);

1360 
vd
 = 
	`DRMP3_VREV
(vd);

1361 
	`DRMP3_VSTORE
(
grbuf
 + 18 + 
i
, 
	`DRMP3_VSUB
(
	`DRMP3_VMUL
(
vu
, 
vc0
), DRMP3_VMUL(
vd
, 
vc1
)));

1362 
vd
 = 
	`DRMP3_VADD
(
	`DRMP3_VMUL
(
vu
, 
vc1
), DRMP3_VMUL(vd, 
vc0
));

1363 
	`DRMP3_VSTORE
(
grbuf
 + 14 - 
i
, 
	`DRMP3_VREV
(
vd
));

1366 #i‚de‡
DR_MP3_ONLY_SIMD


1367 ; 
i
 < 8; i++)

1369 
u
 = 
grbuf
[18 + 
i
];

1370 
d
 = 
grbuf
[17 - 
i
];

1371 
grbuf
[18 + 
i
] = 
u
*
g_Ø
[0][i] - 
d
*g_aa[1][i];

1372 
grbuf
[17 - 
i
] = 
u
*
g_Ø
[1][i] + 
d
*g_aa[0][i];

1376 
	}
}

1378 
	$drmp3_L3_d˘3_9
(*
y
) {

1379 
s0
, 
s1
, 
s2
, 
s3
, 
s4
, 
s5
, 
s6
, 
s7
, 
s8
, 
t0
, 
t2
, 
t4
;

1381 
s0
 = 
y
[0];

1382 
s2
 = 
y
[2];

1383 
s4
 = 
y
[4];

1384 
s6
 = 
y
[6];

1385 
s8
 = 
y
[8];

1386 
t0
 = 
s0
 + 
s6
 * 0.5f;

1387 
s0
 -
s6
;

1388 
t4
 = (
s4
 + 
s2
) * 0.93969262f;

1389 
t2
 = (
s8
 + 
s2
) * 0.76604444f;

1390 
s6
 = (
s4
 - 
s8
) * 0.17364818f;

1391 
s4
 +
s8
 - 
s2
;

1393 
s2
 = 
s0
 - 
s4
 * 0.5f;

1394 
y
[4] = 
s4
 + 
s0
;

1395 
s8
 = 
t0
 - 
t2
 + 
s6
;

1396 
s0
 = 
t0
 - 
t4
 + 
t2
;

1397 
s4
 = 
t0
 + 
t4
 - 
s6
;

1399 
s1
 = 
y
[1];

1400 
s3
 = 
y
[3];

1401 
s5
 = 
y
[5];

1402 
s7
 = 
y
[7];

1404 
s3
 *= 0.86602540f;

1405 
t0
 = (
s5
 + 
s1
) * 0.98480775f;

1406 
t4
 = (
s5
 - 
s7
) * 0.34202014f;

1407 
t2
 = (
s1
 + 
s7
) * 0.64278761f;

1408 
s1
 = (s1 - 
s5
 - 
s7
) * 0.86602540f;

1410 
s5
 = 
t0
 - 
s3
 - 
t2
;

1411 
s7
 = 
t4
 - 
s3
 - 
t0
;

1412 
s3
 = 
t4
 + s3 - 
t2
;

1414 
y
[0] = 
s4
 - 
s7
;

1415 
y
[1] = 
s2
 + 
s1
;

1416 
y
[2] = 
s0
 - 
s3
;

1417 
y
[3] = 
s8
 + 
s5
;

1418 
y
[5] = 
s8
 - 
s5
;

1419 
y
[6] = 
s0
 + 
s3
;

1420 
y
[7] = 
s2
 - 
s1
;

1421 
y
[8] = 
s4
 + 
s7
;

1422 
	}
}

1424 
	$drmp3_L3_imd˘36
(*
grbuf
, *
ovîœp
, c⁄° *
wödow
, 
nb™ds
) {

1425 
i
, 
j
;

1426 c⁄° 
g_twid9
[18] = {

1432 
j
 = 0; j < 
nb™ds
; j++, 
grbuf
 +18, 
ovîœp
 += 9) {

1433 
co
[9], 
si
[9];

1434 
co
[0] = -
grbuf
[0];

1435 
si
[0] = 
grbuf
[17];

1436 
i
 = 0; i < 4; i++) {

1437 
si
[8 - 2 * 
i
] = 
grbuf
[4 * i + 1] - grbuf[4 * i + 2];

1438 
co
[1 + 2 * 
i
] = 
grbuf
[4 * i + 1] + grbuf[4 * i + 2];

1439 
si
[7 - 2 * 
i
] = 
grbuf
[4 * i + 4] - grbuf[4 * i + 3];

1440 
co
[2 + 2 * 
i
] = -(
grbuf
[4 * i + 3] + grbuf[4 * i + 4]);

1442 
	`drmp3_L3_d˘3_9
(
co
);

1443 
	`drmp3_L3_d˘3_9
(
si
);

1445 
si
[1] = -si[1];

1446 
si
[3] = -si[3];

1447 
si
[5] = -si[5];

1448 
si
[7] = -si[7];

1450 
i
 = 0;

1452 #i‡
DRMP3_HAVE_SIMD


1453 i‡(
	`drmp3_have_simd
())

1454 ; 
i
 < 8; i += 4) {

1455 
drmp3_f4
 
vovl
 = 
	`DRMP3_VLD
(
ovîœp
 + 
i
);

1456 
drmp3_f4
 
vc
 = 
	`DRMP3_VLD
(
co
 + 
i
);

1457 
drmp3_f4
 
vs
 = 
	`DRMP3_VLD
(
si
 + 
i
);

1458 
drmp3_f4
 
vr0
 = 
	`DRMP3_VLD
(
g_twid9
 + 
i
);

1459 
drmp3_f4
 
vr1
 = 
	`DRMP3_VLD
(
g_twid9
 + 9 + 
i
);

1460 
drmp3_f4
 
vw0
 = 
	`DRMP3_VLD
(
wödow
 + 
i
);

1461 
drmp3_f4
 
vw1
 = 
	`DRMP3_VLD
(
wödow
 + 9 + 
i
);

1462 
drmp3_f4
 
vsum
 = 
	`DRMP3_VADD
(
	`DRMP3_VMUL
(
vc
, 
vr1
), DRMP3_VMUL(
vs
, 
vr0
));

1463 
	`DRMP3_VSTORE
(
ovîœp
 + 
i
, 
	`DRMP3_VSUB
(
	`DRMP3_VMUL
(
vc
, 
vr0
), DRMP3_VMUL(
vs
, 
vr1
)));

1464 
	`DRMP3_VSTORE
(
grbuf
 + 
i
, 
	`DRMP3_VSUB
(
	`DRMP3_VMUL
(
vovl
, 
vw0
), DRMP3_VMUL(
vsum
, 
vw1
)));

1465 
vsum
 = 
	`DRMP3_VADD
(
	`DRMP3_VMUL
(
vovl
, 
vw1
), DRMP3_VMUL(vsum, 
vw0
));

1466 
	`DRMP3_VSTORE
(
grbuf
 + 14 - 
i
, 
	`DRMP3_VREV
(
vsum
));

1469 ; 
i
 < 9; i++) {

1470 
ovl
 = 
ovîœp
[
i
];

1471 
sum
 = 
co
[
i
] * 
g_twid9
[9 + i] + 
si
[i] * g_twid9[0 + i];

1472 
ovîœp
[
i
] = 
co
[i] * 
g_twid9
[0 + i] - 
si
[i] * g_twid9[9 + i];

1473 
grbuf
[
i
] = 
ovl
 * 
wödow
[0 + i] - 
sum
 * window[9 + i];

1474 
grbuf
[17 - 
i
] = 
ovl
 * 
wödow
[9 + i] + 
sum
 * window[0 + i];

1477 
	}
}

1479 
	$drmp3_L3_id˘3
(
x0
, 
x1
, 
x2
, *
d°
) {

1480 
m1
 = 
x1
 * 0.86602540f;

1481 
a1
 = 
x0
 - 
x2
 * 0.5f;

1482 
d°
[1] = 
x0
 + 
x2
;

1483 
d°
[0] = 
a1
 + 
m1
;

1484 
d°
[2] = 
a1
 - 
m1
;

1485 
	}
}

1487 
	$drmp3_L3_imd˘12
(*
x
, *
d°
, *
ovîœp
) {

1488 c⁄° 
g_twid3
[6] = {0.79335334f, 0.92387953f, 0.99144486f, 0.60876143f, 0.38268343f, 0.13052619f};

1489 
co
[3], 
si
[3];

1490 
i
;

1492 
	`drmp3_L3_id˘3
(-
x
[0], x[6] + x[3], x[12] + x[9], 
co
);

1493 
	`drmp3_L3_id˘3
(
x
[15], x[12] - x[9], x[6] - x[3], 
si
);

1494 
si
[1] = -si[1];

1496 
i
 = 0; i < 3; i++) {

1497 
ovl
 = 
ovîœp
[
i
];

1498 
sum
 = 
co
[
i
] * 
g_twid3
[3 + i] + 
si
[i] * g_twid3[0 + i];

1499 
ovîœp
[
i
] = 
co
[i] * 
g_twid3
[0 + i] - 
si
[i] * g_twid3[3 + i];

1500 
d°
[
i
] = 
ovl
 * 
g_twid3
[2 - i] - 
sum
 * g_twid3[5 - i];

1501 
d°
[5 - 
i
] = 
ovl
 * 
g_twid3
[5 - i] + 
sum
 * g_twid3[2 - i];

1503 
	}
}

1505 
	$drmp3_L3_imd˘_sh‹t
(*
grbuf
, *
ovîœp
, 
nb™ds
) {

1506 ; 
nb™ds
 > 0;Çb™ds--, 
ovîœp
 +9, 
grbuf
 += 18) {

1507 
tmp
[18];

1508 
	`mem˝y
(
tmp
, 
grbuf
, (tmp));

1509 
	`mem˝y
(
grbuf
, 
ovîœp
, 6 * ());

1510 
	`drmp3_L3_imd˘12
(
tmp
, 
grbuf
 + 6, 
ovîœp
 + 6);

1511 
	`drmp3_L3_imd˘12
(
tmp
 + 1, 
grbuf
 + 12, 
ovîœp
 + 6);

1512 
	`drmp3_L3_imd˘12
(
tmp
 + 2, 
ovîœp
, overlap + 6);

1514 
	}
}

1516 
	$drmp3_L3_ch™ge_sign
(*
grbuf
) {

1517 
b
, 
i
;

1518 
b
 = 0, 
grbuf
 += 18; b < 32; b += 2, grbuf += 36)

1519 
i
 = 1; i < 18; i += 2)

1520 
grbuf
[
i
] = -grbuf[i];

1521 
	}
}

1523 
	$drmp3_L3_imd˘_gr
(*
grbuf
, *
ovîœp
, 
block_ty≥
, 
n_l⁄g_b™ds
) {

1524 c⁄° 
g_md˘_wödow
[2][18] = {

1528 i‡(
n_l⁄g_b™ds
) {

1529 
	`drmp3_L3_imd˘36
(
grbuf
, 
ovîœp
, 
g_md˘_wödow
[0], 
n_l⁄g_b™ds
);

1530 
grbuf
 +18 * 
n_l⁄g_b™ds
;

1531 
ovîœp
 +9 * 
n_l⁄g_b™ds
;

1533 i‡(
block_ty≥
 =
DRMP3_SHORT_BLOCK_TYPE
)

1534 
	`drmp3_L3_imd˘_sh‹t
(
grbuf
, 
ovîœp
, 32 - 
n_l⁄g_b™ds
);

1536 
	`drmp3_L3_imd˘36
(
grbuf
, 
ovîœp
, 
g_md˘_wödow
[
block_ty≥
 =
DRMP3_STOP_BLOCK_TYPE
], 32 - 
n_l⁄g_b™ds
);

1537 
	}
}

1539 
	$drmp3_L3_ßve_ª£rvoú
(
drmp3dec
 *
h
, 
drmp3dec_s¸©ch
 *
s
) {

1540 
pos
 = (
s
->
bs
.pos + 7) / 8u;

1541 
ªmaös
 = 
s
->
bs
.
limô
 / 8u - 
pos
;

1542 i‡(
ªmaös
 > 
DRMP3_MAX_BITRESERVOIR_BYTES
) {

1543 
pos
 +
ªmaös
 - 
DRMP3_MAX_BITRESERVOIR_BYTES
;

1544 
ªmaös
 = 
DRMP3_MAX_BITRESERVOIR_BYTES
;

1546 i‡(
ªmaös
 > 0) {

1547 
	`memmove
(
h
->
ª£rv_buf
, 
s
->
maöd©a
 + 
pos
, 
ªmaös
);

1549 
h
->
ª£rv
 = 
ªmaös
;

1550 
	}
}

1552 
	$drmp3_L3_ª°‹e_ª£rvoú
(
drmp3dec
 *
h
, 
drmp3_bs
 *
bs
, 
drmp3dec_s¸©ch
 *
s
, 
maö_d©a_begö
) {

1553 
‰ame_byãs
 = (
bs
->
limô
 - bs->
pos
) / 8;

1554 
byãs_have
 = 
	`DRMP3_MIN
(
h
->
ª£rv
, 
maö_d©a_begö
);

1555 
	`mem˝y
(
s
->
maöd©a
, 
h
->
ª£rv_buf
 + 
	`DRMP3_MAX
(0, h->
ª£rv
 - 
maö_d©a_begö
),

1556 
	`DRMP3_MIN
(
h
->
ª£rv
, 
maö_d©a_begö
));

1557 
	`mem˝y
(
s
->
maöd©a
 + 
byãs_have
, 
bs
->
buf
 + bs->
pos
 / 8, 
‰ame_byãs
);

1558 
	`drmp3_bs_öô
(&
s
->
bs
, s->
maöd©a
, 
byãs_have
 + 
‰ame_byãs
);

1559  
h
->
ª£rv
 >
maö_d©a_begö
;

1560 
	}
}

1562 
	$drmp3_L3_decode
(
drmp3dec
 *
h
, 
drmp3dec_s¸©ch
 *
s
, 
drmp3_L3_gr_öfo
 *
gr_öfo
, 
nch
) {

1563 
ch
;

1565 
ch
 = 0; ch < 
nch
; ch++) {

1566 
œyî3gr_limô
 = 
s
->
bs
.
pos
 + 
gr_öfo
[
ch
].
∑π_23_Àngth
;

1567 
	`drmp3_L3_decode_sˇÀÁ˘‹s
(
h
->
hódî
, 
s
->
i°_pos
[
ch
], &s->
bs
, 
gr_öfo
 + ch, s->
scf
, ch);

1568 
	`drmp3_L3_huffm™
(
s
->
grbuf
[
ch
], &s->
bs
, 
gr_öfo
 + ch, s->
scf
, 
œyî3gr_limô
);

1571 i‡(
	`DRMP3_HDR_TEST_I_STEREO
(
h
->
hódî
)) {

1572 
	`drmp3_L3_öãnsôy_°îeo
(
s
->
grbuf
[0], s->
i°_pos
[1], 
gr_öfo
, 
h
->
hódî
);

1573 } i‡(
	`DRMP3_HDR_IS_MS_STEREO
(
h
->
hódî
)) {

1574 
	`drmp3_L3_midside_°îeo
(
s
->
grbuf
[0], 576);

1577 
ch
 = 0; ch < 
nch
; ch++, 
gr_öfo
++) {

1578 
Ø_b™ds
 = 31;

1579 
n_l⁄g_b™ds
 = (
gr_öfo
->
mixed_block_Êag
 ? 2 : 0Ë<< (Ë(
	`DRMP3_HDR_GET_MY_SAMPLE_RATE
(
h
->
hódî
) == 2);

1581 i‡(
gr_öfo
->
n_sh‹t_sfb
) {

1582 
Ø_b™ds
 = 
n_l⁄g_b™ds
 - 1;

1583 
	`drmp3_L3_ª‹dî
(
s
->
grbuf
[
ch
] + 
n_l⁄g_b™ds
 * 18, s->
syn
[0], 
gr_öfo
->
sfbèb
 + gr_öfo->
n_l⁄g_sfb
);

1586 
	`drmp3_L3_™tülüs
(
s
->
grbuf
[
ch
], 
Ø_b™ds
);

1587 
	`drmp3_L3_imd˘_gr
(
s
->
grbuf
[
ch
], 
h
->
md˘_ovîœp
[ch], 
gr_öfo
->
block_ty≥
, 
n_l⁄g_b™ds
);

1588 
	`drmp3_L3_ch™ge_sign
(
s
->
grbuf
[
ch
]);

1590 
	}
}

1592 
	$drmp3d_DCT_II
(*
grbuf
, 
n
) {

1593 c⁄° 
g_£c
[24] = {

1598 
i
, 
k
 = 0;

1599 #i‡
DRMP3_HAVE_SIMD


1600 i‡(
	`drmp3_have_simd
())

1601 ; 
k
 < 
n
; k += 4) {

1602 
drmp3_f4
 
t
[4][8], *
x
;

1603 *
y
 = 
grbuf
 + 
k
;

1605 
x
 = 
t
[0], 
i
 = 0; i < 8; i++, x++) {

1606 
drmp3_f4
 
x0
 = 
	`DRMP3_VLD
(&
y
[
i
 * 18]);

1607 
drmp3_f4
 
x1
 = 
	`DRMP3_VLD
(&
y
[(15 - 
i
) * 18]);

1608 
drmp3_f4
 
x2
 = 
	`DRMP3_VLD
(&
y
[(16 + 
i
) * 18]);

1609 
drmp3_f4
 
x3
 = 
	`DRMP3_VLD
(&
y
[(31 - 
i
) * 18]);

1610 
drmp3_f4
 
t0
 = 
	`DRMP3_VADD
(
x0
, 
x3
);

1611 
drmp3_f4
 
t1
 = 
	`DRMP3_VADD
(
x1
, 
x2
);

1612 
drmp3_f4
 
t2
 = 
	`DRMP3_VMUL_S
(
	`DRMP3_VSUB
(
x1
, 
x2
), 
g_£c
[3 * 
i
 + 0]);

1613 
drmp3_f4
 
t3
 = 
	`DRMP3_VMUL_S
(
	`DRMP3_VSUB
(
x0
, 
x3
), 
g_£c
[3 * 
i
 + 1]);

1614 
x
[0] = 
	`DRMP3_VADD
(
t0
, 
t1
);

1615 
x
[8] = 
	`DRMP3_VMUL_S
(
	`DRMP3_VSUB
(
t0
, 
t1
), 
g_£c
[3 * 
i
 + 2]);

1616 
x
[16] = 
	`DRMP3_VADD
(
t3
, 
t2
);

1617 
x
[24] = 
	`DRMP3_VMUL_S
(
	`DRMP3_VSUB
(
t3
, 
t2
), 
g_£c
[3 * 
i
 + 2]);

1619 
x
 = 
t
[0], 
i
 = 0; i < 4; i++, x += 8) {

1620 
drmp3_f4
 
x0
 = 
x
[0], 
x1
 = x[1], 
x2
 = x[2], 
x3
 = x[3], 
x4
 = x[4], 
x5
 = x[5], 
x6
 = x[6], 
x7
 = x[7], 
xt
;

1621 
xt
 = 
	`DRMP3_VSUB
(
x0
, 
x7
);

1622 
x0
 = 
	`DRMP3_VADD
(x0, 
x7
);

1623 
x7
 = 
	`DRMP3_VSUB
(
x1
, 
x6
);

1624 
x1
 = 
	`DRMP3_VADD
(x1, 
x6
);

1625 
x6
 = 
	`DRMP3_VSUB
(
x2
, 
x5
);

1626 
x2
 = 
	`DRMP3_VADD
(x2, 
x5
);

1627 
x5
 = 
	`DRMP3_VSUB
(
x3
, 
x4
);

1628 
x3
 = 
	`DRMP3_VADD
(x3, 
x4
);

1629 
x4
 = 
	`DRMP3_VSUB
(
x0
, 
x3
);

1630 
x0
 = 
	`DRMP3_VADD
(x0, 
x3
);

1631 
x3
 = 
	`DRMP3_VSUB
(
x1
, 
x2
);

1632 
x1
 = 
	`DRMP3_VADD
(x1, 
x2
);

1633 
x
[0] = 
	`DRMP3_VADD
(
x0
, 
x1
);

1634 
x
[4] = 
	`DRMP3_VMUL_S
(
	`DRMP3_VSUB
(
x0
, 
x1
), 0.70710677f);

1635 
x5
 = 
	`DRMP3_VADD
(x5, 
x6
);

1636 
x6
 = 
	`DRMP3_VMUL_S
(
	`DRMP3_VADD
(x6, 
x7
), 0.70710677f);

1637 
x7
 = 
	`DRMP3_VADD
(x7, 
xt
);

1638 
x3
 = 
	`DRMP3_VMUL_S
(
	`DRMP3_VADD
(x3, 
x4
), 0.70710677f);

1639 
x5
 = 
	`DRMP3_VSUB
(x5, 
	`DRMP3_VMUL_S
(
x7
, 0.198912367f));

1640 
x7
 = 
	`DRMP3_VADD
(x7, 
	`DRMP3_VMUL_S
(
x5
, 0.382683432f));

1641 
x5
 = 
	`DRMP3_VSUB
(x5, 
	`DRMP3_VMUL_S
(
x7
, 0.198912367f));

1642 
x0
 = 
	`DRMP3_VSUB
(
xt
, 
x6
);

1643 
xt
 = 
	`DRMP3_VADD
(xt, 
x6
);

1644 
x
[1] = 
	`DRMP3_VMUL_S
(
	`DRMP3_VADD
(
xt
, 
x7
), 0.50979561f);

1645 
x
[2] = 
	`DRMP3_VMUL_S
(
	`DRMP3_VADD
(
x4
, 
x3
), 0.54119611f);

1646 
x
[3] = 
	`DRMP3_VMUL_S
(
	`DRMP3_VSUB
(
x0
, 
x5
), 0.60134488f);

1647 
x
[5] = 
	`DRMP3_VMUL_S
(
	`DRMP3_VADD
(
x0
, 
x5
), 0.89997619f);

1648 
x
[6] = 
	`DRMP3_VMUL_S
(
	`DRMP3_VSUB
(
x4
, 
x3
), 1.30656302f);

1649 
x
[7] = 
	`DRMP3_VMUL_S
(
	`DRMP3_VSUB
(
xt
, 
x7
), 2.56291556f);

1652 i‡(
k
 > 
n
 - 3) {

1653 #i‡
DRMP3_HAVE_SSE


1654 
	#DRMP3_VSAVE2
(
i
, 
v
Ë
	`_mm_°‹ñ_pi
((
__m64
 *)(*)&
y
[i*18], v)

	)

1656 
	#DRMP3_VSAVE2
(
i
, 
v
Ë
	`v°1_f32
((
Êﬂt32_t
 *)&
y
[i*18], 
	`vgë_low_f32
(v))

	)

1658 
i
 = 0; i < 7; i++, 
y
 += 4 * 18) {

1659 
drmp3_f4
 
s
 = 
	`DRMP3_VADD
(
t
[3][
i
],Å[3][i + 1]);

1660 
	`DRMP3_VSAVE2
(0, 
t
[0][
i
]);

1661 
	`DRMP3_VSAVE2
(1, 
	`DRMP3_VADD
(
t
[2][
i
], 
s
));

1662 
	`DRMP3_VSAVE2
(2, 
	`DRMP3_VADD
(
t
[1][
i
],Å[1][i + 1]));

1663 
	`DRMP3_VSAVE2
(3, 
	`DRMP3_VADD
(
t
[2][1 + 
i
], 
s
));

1665 
	`DRMP3_VSAVE2
(0, 
t
[0][7]);

1666 
	`DRMP3_VSAVE2
(1, 
	`DRMP3_VADD
(
t
[2][7],Å[3][7]));

1667 
	`DRMP3_VSAVE2
(2, 
t
[1][7]);

1668 
	`DRMP3_VSAVE2
(3, 
t
[3][7]);

1670 
	#DRMP3_VSAVE4
(
i
, 
v
Ë
	`DRMP3_VSTORE
(&
y
[i*18], v)

	)

1671 
i
 = 0; i < 7; i++, 
y
 += 4 * 18) {

1672 
drmp3_f4
 
s
 = 
	`DRMP3_VADD
(
t
[3][
i
],Å[3][i + 1]);

1673 
	`DRMP3_VSAVE4
(0, 
t
[0][
i
]);

1674 
	`DRMP3_VSAVE4
(1, 
	`DRMP3_VADD
(
t
[2][
i
], 
s
));

1675 
	`DRMP3_VSAVE4
(2, 
	`DRMP3_VADD
(
t
[1][
i
],Å[1][i + 1]));

1676 
	`DRMP3_VSAVE4
(3, 
	`DRMP3_VADD
(
t
[2][1 + 
i
], 
s
));

1678 
	`DRMP3_VSAVE4
(0, 
t
[0][7]);

1679 
	`DRMP3_VSAVE4
(1, 
	`DRMP3_VADD
(
t
[2][7],Å[3][7]));

1680 
	`DRMP3_VSAVE4
(2, 
t
[1][7]);

1681 
	`DRMP3_VSAVE4
(3, 
t
[3][7]);

1686 #ifde‡
DR_MP3_ONLY_SIMD


1689 ; 
k
 < 
n
; k++)

1691 
t
[4][8], *
x
, *
y
 = 
grbuf
 + 
k
;

1693 
x
 = 
t
[0], 
i
 = 0; i < 8; i++, x++)

1695 
x0
 = 
y
[
i
*18];

1696 
x1
 = 
y
[(15 - 
i
)*18];

1697 
x2
 = 
y
[(16 + 
i
)*18];

1698 
x3
 = 
y
[(31 - 
i
)*18];

1699 
t0
 = 
x0
 + 
x3
;

1700 
t1
 = 
x1
 + 
x2
;

1701 
t2
 = (
x1
 - 
x2
)*
g_£c
[3*
i
 + 0];

1702 
t3
 = (
x0
 - 
x3
)*
g_£c
[3*
i
 + 1];

1703 
x
[0] = 
t0
 + 
t1
;

1704 
x
[8] = (
t0
 - 
t1
)*
g_£c
[3*
i
 + 2];

1705 
x
[16] = 
t3
 + 
t2
;

1706 
x
[24] = (
t3
 - 
t2
)*
g_£c
[3*
i
 + 2];

1708 
x
 = 
t
[0], 
i
 = 0; i < 4; i++, x += 8)

1710 
x0
 = 
x
[0], 
x1
 = x[1], 
x2
 = x[2], 
x3
 = x[3], 
x4
 = x[4], 
x5
 = x[5], 
x6
 = x[6], 
x7
 = x[7], 
xt
;

1711 
xt
 = 
x0
 - 
x7
; x0 += x7;

1712 
x7
 = 
x1
 - 
x6
; x1 += x6;

1713 
x6
 = 
x2
 - 
x5
; x2 += x5;

1714 
x5
 = 
x3
 - 
x4
; x3 += x4;

1715 
x4
 = 
x0
 - 
x3
; x0 += x3;

1716 
x3
 = 
x1
 - 
x2
; x1 += x2;

1717 
x
[0] = 
x0
 + 
x1
;

1718 
x
[4] = (
x0
 - 
x1
)*0.70710677f;

1719 
x5
 = x5 + 
x6
;

1720 
x6
 = (x6 + 
x7
)*0.70710677f;

1721 
x7
 = x7 + 
xt
;

1722 
x3
 = (x3 + 
x4
)*0.70710677f;

1723 
x5
 -
x7
*0.198912367f;

1724 
x7
 +
x5
*0.382683432f;

1725 
x5
 -
x7
*0.198912367f;

1726 
x0
 = 
xt
 - 
x6
; xt += x6;

1727 
x
[1] = (
xt
 + 
x7
)*0.50979561f;

1728 
x
[2] = (
x4
 + 
x3
)*0.54119611f;

1729 
x
[3] = (
x0
 - 
x5
)*0.60134488f;

1730 
x
[5] = (
x0
 + 
x5
)*0.89997619f;

1731 
x
[6] = (
x4
 - 
x3
)*1.30656302f;

1732 
x
[7] = (
xt
 - 
x7
)*2.56291556f;

1735 
i
 = 0; i < 7; i++, 
y
 += 4*18)

1737 
y
[0*18] = 
t
[0][
i
];

1738 
y
[1*18] = 
t
[2][
i
] +Å[3][i] +Å[3][i + 1];

1739 
y
[2*18] = 
t
[1][
i
] +Å[1][i + 1];

1740 
y
[3*18] = 
t
[2][
i
 + 1] +Å[3][i] +Å[3][i + 1];

1742 
y
[0*18] = 
t
[0][7];

1743 
y
[1*18] = 
t
[2][7] +Å[3][7];

1744 
y
[2*18] = 
t
[1][7];

1745 
y
[3*18] = 
t
[3][7];

1748 
	}
}

1750 #i‚de‡
DR_MP3_FLOAT_OUTPUT


1751 
drmp3_öt16
 
	tdrmp3d_ßm∂e_t
;

1753 
drmp3_öt16
 
	$drmp3d_sˇÀ_pcm
(
ßm∂e
) {

1754 i‡(
ßm∂e
 >32766.5Ë (
drmp3_öt16
) 32767;

1755 i‡(
ßm∂e
 <-32767.5Ë (
drmp3_öt16
) -32768;

1756 
drmp3_öt16
 
s
 = (drmp3_öt16Ë(
ßm∂e
 + .5f);

1757 
s
 -= (s < 0);

1758  (
drmp3_öt16
Ë
s
;

1759 
	}
}

1762 
	tdrmp3d_ßm∂e_t
;

1764 
	$drmp3d_sˇÀ_pcm
(
ßm∂e
)

1766  
ßm∂e
*(1.f/32768.f);

1767 
	}
}

1770 
	$drmp3d_sy¡h_∑ú
(
drmp3d_ßm∂e_t
 *
pcm
, 
nch
, c⁄° *
z
) {

1771 
a
;

1772 
a
 = (
z
[14 * 64] - z[0]) * 29;

1773 
a
 +(
z
[1 * 64] + z[13 * 64]) * 213;

1774 
a
 +(
z
[12 * 64] - z[2 * 64]) * 459;

1775 
a
 +(
z
[3 * 64] + z[11 * 64]) * 2037;

1776 
a
 +(
z
[10 * 64] - z[4 * 64]) * 5153;

1777 
a
 +(
z
[5 * 64] + z[9 * 64]) * 6574;

1778 
a
 +(
z
[8 * 64] - z[6 * 64]) * 37489;

1779 
a
 +
z
[7 * 64] * 75038;

1780 
pcm
[0] = 
	`drmp3d_sˇÀ_pcm
(
a
);

1782 
z
 += 2;

1783 
a
 = 
z
[14 * 64] * 104;

1784 
a
 +
z
[12 * 64] * 1567;

1785 
a
 +
z
[10 * 64] * 9727;

1786 
a
 +
z
[8 * 64] * 64019;

1787 
a
 +
z
[6 * 64] * -9975;

1788 
a
 +
z
[4 * 64] * -45;

1789 
a
 +
z
[2 * 64] * 146;

1790 
a
 +
z
[0 * 64] * -5;

1791 
pcm
[16 * 
nch
] = 
	`drmp3d_sˇÀ_pcm
(
a
);

1792 
	}
}

1794 
	$drmp3d_sy¡h
(*
xl
, 
drmp3d_ßm∂e_t
 *
d°l
, 
nch
, *
lös
) {

1795 
i
;

1796 *
xr
 = 
xl
 + 576 * (
nch
 - 1);

1797 
drmp3d_ßm∂e_t
 *
d°r
 = 
d°l
 + (
nch
 - 1);

1799 c⁄° 
g_wö
[] = {

1816 *
zlö
 = 
lös
 + 15 * 64;

1817 c⁄° *
w
 = 
g_wö
;

1819 
zlö
[4 * 15] = 
xl
[18 * 16];

1820 
zlö
[4 * 15 + 1] = 
xr
[18 * 16];

1821 
zlö
[4 * 15 + 2] = 
xl
[0];

1822 
zlö
[4 * 15 + 3] = 
xr
[0];

1824 
zlö
[4 * 31] = 
xl
[1 + 18 * 16];

1825 
zlö
[4 * 31 + 1] = 
xr
[1 + 18 * 16];

1826 
zlö
[4 * 31 + 2] = 
xl
[1];

1827 
zlö
[4 * 31 + 3] = 
xr
[1];

1829 
	`drmp3d_sy¡h_∑ú
(
d°r
, 
nch
, 
lös
 + 4 * 15 + 1);

1830 
	`drmp3d_sy¡h_∑ú
(
d°r
 + 32 * 
nch
,Çch, 
lös
 + 4 * 15 + 64 + 1);

1831 
	`drmp3d_sy¡h_∑ú
(
d°l
, 
nch
, 
lös
 + 4 * 15);

1832 
	`drmp3d_sy¡h_∑ú
(
d°l
 + 32 * 
nch
,Çch, 
lös
 + 4 * 15 + 64);

1834 #i‡
DRMP3_HAVE_SIMD


1835 i‡(
	`drmp3_have_simd
())

1836 
i
 = 14; i >= 0; i--) {

1837 
	#DRMP3_VLOAD
(
k
Ë
drmp3_f4
 
w0
 = 
	`DRMP3_VSET
(*
w
++); drmp3_f4 
w1
 = DRMP3_VSET(*w++); drmp3_f4 
vz
 = 
	`DRMP3_VLD
(&
zlö
[4*
i
 - 64*k]); drmp3_f4 
vy
 = DRMP3_VLD(&zlö[4*ò- 64*(15 - k)]);

	)

1838 
	#DRMP3_V0
(
k
Ë{ 
	`DRMP3_VLOAD
(kË
b
 = 
	`DRMP3_VADD
(
	`DRMP3_VMUL
(
vz
, 
w1
), DRMP3_VMUL(
vy
, 
w0
)Ë; 
a
 = 
	`DRMP3_VSUB
(DRMP3_VMUL(vz, w0), DRMP3_VMUL(vy, w1)); }

	)

1839 
	#DRMP3_V1
(
k
Ë{ 
	`DRMP3_VLOAD
(kË
b
 = 
	`DRMP3_VADD
(b, DRMP3_VADD(
	`DRMP3_VMUL
(
vz
, 
w1
), DRMP3_VMUL(
vy
, 
w0
))); 
a
 = DRMP3_VADD◊, 
	`DRMP3_VSUB
(DRMP3_VMUL(vz, w0), DRMP3_VMUL(vy, w1))); }

	)

1840 
	#DRMP3_V2
(
k
Ë{ 
	`DRMP3_VLOAD
(kË
b
 = 
	`DRMP3_VADD
(b, DRMP3_VADD(
	`DRMP3_VMUL
(
vz
, 
w1
), DRMP3_VMUL(
vy
, 
w0
))); 
a
 = DRMP3_VADD◊, 
	`DRMP3_VSUB
(DRMP3_VMUL(vy, w1), DRMP3_VMUL(vz, w0))); }

	)

1841 
drmp3_f4
 
a
, 
b
;

1842 
zlö
[4 * 
i
] = 
xl
[18 * (31 - i)];

1843 
zlö
[4 * 
i
 + 1] = 
xr
[18 * (31 - i)];

1844 
zlö
[4 * 
i
 + 2] = 
xl
[1 + 18 * (31 - i)];

1845 
zlö
[4 * 
i
 + 3] = 
xr
[1 + 18 * (31 - i)];

1846 
zlö
[4 * 
i
 + 64] = 
xl
[1 + 18 * (1 + i)];

1847 
zlö
[4 * 
i
 + 64 + 1] = 
xr
[1 + 18 * (1 + i)];

1848 
zlö
[4 * 
i
 - 64 + 2] = 
xl
[18 * (1 + i)];

1849 
zlö
[4 * 
i
 - 64 + 3] = 
xr
[18 * (1 + i)];

1851 
	`DRMP3_V0
(0)

1852 
	`DRMP3_V2
(1)

1853 
	`DRMP3_V1
(2)

1854 
	`DRMP3_V2
(3)

1855 
	`DRMP3_V1
(4)

1856 
	`DRMP3_V2
(5)

1857 
	`DRMP3_V1
(6)

1858 
	`DRMP3_V2
(7)

1861 #i‚de‡
DR_MP3_FLOAT_OUTPUT


1862 #i‡
DRMP3_HAVE_SSE


1863 c⁄° 
drmp3_f4
 
g_max
 = {32767.0f, 32767.0f, 32767.0f, 32767.0f};

1864 c⁄° 
drmp3_f4
 
g_mö
 = {-32768.0f, -32768.0f, -32768.0f, -32768.0f};

1865 
__m128i
 
pcm8
 = 
	`_mm_∑cks_ïi32
(
	`_mm_cvçs_ïi32
(
	`_mm_max_ps
(
	`_mm_mö_ps
(
a
, 
g_max
), 
g_mö
)),

1866 
	`_mm_cvçs_ïi32
(
	`_mm_max_ps
(
	`_mm_mö_ps
(
b
, 
g_max
), 
g_mö
)));

1867 
d°r
[(15 - 
i
Ë* 
nch
] = (
drmp3_öt16
Ë
	`_mm_exåa˘_ïi16
(
pcm8
, 1);

1868 
d°r
[(17 + 
i
Ë* 
nch
] = (
drmp3_öt16
Ë
	`_mm_exåa˘_ïi16
(
pcm8
, 5);

1869 
d°l
[(15 - 
i
Ë* 
nch
] = (
drmp3_öt16
Ë
	`_mm_exåa˘_ïi16
(
pcm8
, 0);

1870 
d°l
[(17 + 
i
Ë* 
nch
] = (
drmp3_öt16
Ë
	`_mm_exåa˘_ïi16
(
pcm8
, 4);

1871 
d°r
[(47 - 
i
Ë* 
nch
] = (
drmp3_öt16
Ë
	`_mm_exåa˘_ïi16
(
pcm8
, 3);

1872 
d°r
[(49 + 
i
Ë* 
nch
] = (
drmp3_öt16
Ë
	`_mm_exåa˘_ïi16
(
pcm8
, 7);

1873 
d°l
[(47 - 
i
Ë* 
nch
] = (
drmp3_öt16
Ë
	`_mm_exåa˘_ïi16
(
pcm8
, 2);

1874 
d°l
[(49 + 
i
Ë* 
nch
] = (
drmp3_öt16
Ë
	`_mm_exåa˘_ïi16
(
pcm8
, 6);

1876 
öt16x4_t
 
pcma
, 
pcmb
;

1877 
a
 = 
	`DRMP3_VADD
◊, 
	`DRMP3_VSET
(0.5f));

1878 
b
 = 
	`DRMP3_VADD
(b, 
	`DRMP3_VSET
(0.5f));

1879 
pcma
 = 
	`vqmovn_s32
(
	`vqaddq_s32
(
	`vcvtq_s32_f32
(
a
), 
	`vªöãΩªtq_s32_u32
(
	`v˛tq_f32
◊, 
	`DRMP3_VSET
(0)))));

1880 
pcmb
 = 
	`vqmovn_s32
(
	`vqaddq_s32
(
	`vcvtq_s32_f32
(
b
), 
	`vªöãΩªtq_s32_u32
(
	`v˛tq_f32
(b, 
	`DRMP3_VSET
(0)))));

1881 
	`v°1_œ√_s16
(
d°r
 + (15 - 
i
)*
nch
, 
pcma
, 1);

1882 
	`v°1_œ√_s16
(
d°r
 + (17 + 
i
)*
nch
, 
pcmb
, 1);

1883 
	`v°1_œ√_s16
(
d°l
 + (15 - 
i
)*
nch
, 
pcma
, 0);

1884 
	`v°1_œ√_s16
(
d°l
 + (17 + 
i
)*
nch
, 
pcmb
, 0);

1885 
	`v°1_œ√_s16
(
d°r
 + (47 - 
i
)*
nch
, 
pcma
, 3);

1886 
	`v°1_œ√_s16
(
d°r
 + (49 + 
i
)*
nch
, 
pcmb
, 3);

1887 
	`v°1_œ√_s16
(
d°l
 + (47 - 
i
)*
nch
, 
pcma
, 2);

1888 
	`v°1_œ√_s16
(
d°l
 + (49 + 
i
)*
nch
, 
pcmb
, 2);

1891 c⁄° 
drmp3_f4
 
g_sˇÀ
 = { 1.0f/32768.0f, 1.0f/32768.0f, 1.0f/32768.0f, 1.0f/32768.0f };

1892 
a
 = 
	`DRMP3_VMUL
◊, 
g_sˇÀ
);

1893 
b
 = 
	`DRMP3_VMUL
(b, 
g_sˇÀ
);

1894 #i‡
DRMP3_HAVE_SSE


1895 
	`_mm_°‹e_ss
(
d°r
 + (15 - 
i
)*
nch
, 
	`_mm_shufÊe_ps
(
a
,á, 
	`_MM_SHUFFLE
(1, 1, 1, 1)));

1896 
	`_mm_°‹e_ss
(
d°r
 + (17 + 
i
)*
nch
, 
	`_mm_shufÊe_ps
(
b
, b, 
	`_MM_SHUFFLE
(1, 1, 1, 1)));

1897 
	`_mm_°‹e_ss
(
d°l
 + (15 - 
i
)*
nch
, 
	`_mm_shufÊe_ps
(
a
,á, 
	`_MM_SHUFFLE
(0, 0, 0, 0)));

1898 
	`_mm_°‹e_ss
(
d°l
 + (17 + 
i
)*
nch
, 
	`_mm_shufÊe_ps
(
b
, b, 
	`_MM_SHUFFLE
(0, 0, 0, 0)));

1899 
	`_mm_°‹e_ss
(
d°r
 + (47 - 
i
)*
nch
, 
	`_mm_shufÊe_ps
(
a
,á, 
	`_MM_SHUFFLE
(3, 3, 3, 3)));

1900 
	`_mm_°‹e_ss
(
d°r
 + (49 + 
i
)*
nch
, 
	`_mm_shufÊe_ps
(
b
, b, 
	`_MM_SHUFFLE
(3, 3, 3, 3)));

1901 
	`_mm_°‹e_ss
(
d°l
 + (47 - 
i
)*
nch
, 
	`_mm_shufÊe_ps
(
a
,á, 
	`_MM_SHUFFLE
(2, 2, 2, 2)));

1902 
	`_mm_°‹e_ss
(
d°l
 + (49 + 
i
)*
nch
, 
	`_mm_shufÊe_ps
(
b
, b, 
	`_MM_SHUFFLE
(2, 2, 2, 2)));

1904 
	`v°1q_œ√_f32
(
d°r
 + (15 - 
i
)*
nch
, 
a
, 1);

1905 
	`v°1q_œ√_f32
(
d°r
 + (17 + 
i
)*
nch
, 
b
, 1);

1906 
	`v°1q_œ√_f32
(
d°l
 + (15 - 
i
)*
nch
, 
a
, 0);

1907 
	`v°1q_œ√_f32
(
d°l
 + (17 + 
i
)*
nch
, 
b
, 0);

1908 
	`v°1q_œ√_f32
(
d°r
 + (47 - 
i
)*
nch
, 
a
, 3);

1909 
	`v°1q_œ√_f32
(
d°r
 + (49 + 
i
)*
nch
, 
b
, 3);

1910 
	`v°1q_œ√_f32
(
d°l
 + (47 - 
i
)*
nch
, 
a
, 2);

1911 
	`v°1q_œ√_f32
(
d°l
 + (49 + 
i
)*
nch
, 
b
, 2);

1918 #ifde‡
DR_MP3_ONLY_SIMD


1921 
i
 = 14; i >= 0; i--)

1923 
	#DRMP3_LOAD
(
k
Ë
w0
 = *
w
++; 
w1
 = *w++; *
vz
 = &
zlö
[4*
i
 - k*64]; *
vy
 = &zlö[4*ò- (15 - k)*64];

	)

1924 
	#DRMP3_S0
(
k
Ë{ 
j
; 
	`DRMP3_LOAD
(k); j = 0; j < 4; j++Ë
b
[j] = 
vz
[j]*
w1
 + 
vy
[j]*
w0
, 
a
[j] = vz[j]*w0 - vy[j]*w1; }

	)

1925 
	#DRMP3_S1
(
k
Ë{ 
j
; 
	`DRMP3_LOAD
(k); j = 0; j < 4; j++Ë
b
[j] +
vz
[j]*
w1
 + 
vy
[j]*
w0
, 
a
[j] +vz[j]*w0 - vy[j]*w1; }

	)

1926 
	#DRMP3_S2
(
k
Ë{ 
j
; 
	`DRMP3_LOAD
(k); j = 0; j < 4; j++Ë
b
[j] +
vz
[j]*
w1
 + 
vy
[j]*
w0
, 
a
[j] +vy[j]*w1 - vz[j]*w0; }

	)

1927 
a
[4], 
b
[4];

1929 
zlö
[4*
i
] = 
xl
[18*(31 - i)];

1930 
zlö
[4*
i
 + 1] = 
xr
[18*(31 - i)];

1931 
zlö
[4*
i
 + 2] = 
xl
[1 + 18*(31 - i)];

1932 
zlö
[4*
i
 + 3] = 
xr
[1 + 18*(31 - i)];

1933 
zlö
[4*(
i
 + 16)] = 
xl
[1 + 18*(1 + i)];

1934 
zlö
[4*(
i
 + 16Ë+ 1] = 
xr
[1 + 18*(1 + i)];

1935 
zlö
[4*(
i
 - 16Ë+ 2] = 
xl
[18*(1 + i)];

1936 
zlö
[4*(
i
 - 16Ë+ 3] = 
xr
[18*(1 + i)];

1938 
	`DRMP3_S0
(0Ë
	`DRMP3_S2
(1Ë
	`DRMP3_S1
(2) DRMP3_S2(3) DRMP3_S1(4) DRMP3_S2(5) DRMP3_S1(6) DRMP3_S2(7)

1940 
d°r
[(15 - 
i
)*
nch
] = 
	`drmp3d_sˇÀ_pcm
(
a
[1]);

1941 
d°r
[(17 + 
i
)*
nch
] = 
	`drmp3d_sˇÀ_pcm
(
b
[1]);

1942 
d°l
[(15 - 
i
)*
nch
] = 
	`drmp3d_sˇÀ_pcm
(
a
[0]);

1943 
d°l
[(17 + 
i
)*
nch
] = 
	`drmp3d_sˇÀ_pcm
(
b
[0]);

1944 
d°r
[(47 - 
i
)*
nch
] = 
	`drmp3d_sˇÀ_pcm
(
a
[3]);

1945 
d°r
[(49 + 
i
)*
nch
] = 
	`drmp3d_sˇÀ_pcm
(
b
[3]);

1946 
d°l
[(47 - 
i
)*
nch
] = 
	`drmp3d_sˇÀ_pcm
(
a
[2]);

1947 
d°l
[(49 + 
i
)*
nch
] = 
	`drmp3d_sˇÀ_pcm
(
b
[2]);

1950 
	}
}

1953 
	$drmp3d_sy¡h_gønuÀ
(*
qmf_°©e
, *
grbuf
, 
nb™ds
, 
nch
, 
drmp3d_ßm∂e_t
 *
pcm
, *
lös
) {

1954 
i
;

1955 
i
 = 0; i < 
nch
; i++) {

1956 
	`drmp3d_DCT_II
(
grbuf
 + 576 * 
i
, 
nb™ds
);

1959 
	`mem˝y
(
lös
, 
qmf_°©e
, () * 15 * 64);

1961 
i
 = 0; i < 
nb™ds
; i += 2) {

1962 
	`drmp3d_sy¡h
(
grbuf
 + 
i
, 
pcm
 + 32 * 
nch
 * i,Çch, 
lös
 + i * 64);

1964 #i‚de‡
DR_MP3_NONSTANDARD_BUT_LOGICAL


1965 i‡(
nch
 == 1) {

1966 
i
 = 0; i < 15 * 64; i += 2) {

1967 
qmf_°©e
[
i
] = 
lös
[
nb™ds
 * 64 + i];

1972 
	`mem˝y
(
qmf_°©e
, 
lös
 + 
nb™ds
 * 64, () * 15 * 64);

1974 
	}
}

1976 
	$drmp3d_m©ch_‰ame
(c⁄° 
drmp3_uöt8
 *
hdr
, 
mp3_byãs
, 
‰ame_byãs
) {

1977 
i
, 
nm©ch
;

1978 
i
 = 0, 
nm©ch
 = 0;Çm©ch < 
DRMP3_MAX_FRAME_SYNC_MATCHES
;Çmatch++) {

1979 
i
 +
	`drmp3_hdr_‰ame_byãs
(
hdr
 + i, 
‰ame_byãs
Ë+ 
	`drmp3_hdr_∑ddög
(hdr + i);

1980 i‡(
i
 + 
DRMP3_HDR_SIZE
 > 
mp3_byãs
)

1981  
nm©ch
 > 0;

1982 i‡(!
	`drmp3_hdr_com∑ª
(
hdr
, hd∏+ 
i
))

1986 
	}
}

1988 
	$drmp3d_föd_‰ame
(c⁄° 
drmp3_uöt8
 *
mp3
, 
mp3_byãs
, *
‰ì_f‹m©_byãs
, *
±r_‰ame_byãs
) {

1989 
i
, 
k
;

1990 
i
 = 0; i < 
mp3_byãs
 - 
DRMP3_HDR_SIZE
; i++, 
mp3
++) {

1991 i‡(
	`drmp3_hdr_vÆid
(
mp3
)) {

1992 
‰ame_byãs
 = 
	`drmp3_hdr_‰ame_byãs
(
mp3
, *
‰ì_f‹m©_byãs
);

1993 
‰ame_™d_∑ddög
 = 
‰ame_byãs
 + 
	`drmp3_hdr_∑ddög
(
mp3
);

1995 
k
 = 
DRMP3_HDR_SIZE
;

1996 !
‰ame_byãs
 && 
k
 < 
DRMP3_MAX_FREE_FORMAT_FRAME_SIZE
 && 
i
 + 2 * k < 
mp3_byãs
 - 
DRMP3_HDR_SIZE
; k++) {

1997 i‡(
	`drmp3_hdr_com∑ª
(
mp3
, mp3 + 
k
)) {

1998 
fb
 = 
k
 - 
	`drmp3_hdr_∑ddög
(
mp3
);

1999 
√xtfb
 = 
fb
 + 
	`drmp3_hdr_∑ddög
(
mp3
 + 
k
);

2000 i‡(
i
 + 
k
 + 
√xtfb
 + 
DRMP3_HDR_SIZE
 > 
mp3_byãs
 || !
	`drmp3_hdr_com∑ª
(
mp3
, mp3 + k +Çextfb))

2002 
‰ame_™d_∑ddög
 = 
k
;

2003 
‰ame_byãs
 = 
fb
;

2004 *
‰ì_f‹m©_byãs
 = 
fb
;

2008 i‡((
‰ame_byãs
 && 
i
 + 
‰ame_™d_∑ddög
 <
mp3_byãs
 &&

2009 
	`drmp3d_m©ch_‰ame
(
mp3
, 
mp3_byãs
 - 
i
, 
‰ame_byãs
)) ||

2010 (!
i
 && 
‰ame_™d_∑ddög
 =
mp3_byãs
)) {

2011 *
±r_‰ame_byãs
 = 
‰ame_™d_∑ddög
;

2012  
i
;

2014 *
‰ì_f‹m©_byãs
 = 0;

2017 *
±r_‰ame_byãs
 = 0;

2018  
i
;

2019 
	}
}

2021 
	$drmp3dec_öô
(
drmp3dec
 *
dec
) {

2022 
dec
->
hódî
[0] = 0;

2023 
	}
}

2026 
	$drmp3dec_decode_‰ame
(
drmp3dec
 *
dec
, c⁄° *
mp3
, 
mp3_byãs
, *
pcm
, 
drmp3dec_‰ame_öfo
 *
öfo
) {

2027 
i
 = 0, 
igr
, 
‰ame_size
 = 0, 
suc˚ss
 = 1;

2028 c⁄° 
drmp3_uöt8
 *
hdr
;

2029 
drmp3_bs
 
bs_‰ame
[1];

2030 
drmp3dec_s¸©ch
 
s¸©ch
;

2032 i‡(
mp3_byãs
 > 4 && 
dec
->
hódî
[0] =0xf‡&& 
	`drmp3_hdr_com∑ª
(dec->hódî, 
mp3
)) {

2033 
‰ame_size
 = 
	`drmp3_hdr_‰ame_byãs
(
mp3
, 
dec
->
‰ì_f‹m©_byãs
Ë+ 
	`drmp3_hdr_∑ddög
(mp3);

2034 i‡(
‰ame_size
 !
mp3_byãs
 &&

2035 (
‰ame_size
 + 
DRMP3_HDR_SIZE
 > 
mp3_byãs
 || !
	`drmp3_hdr_com∑ª
(
mp3
, mp3 + frame_size))) {

2036 
‰ame_size
 = 0;

2039 i‡(!
‰ame_size
) {

2040 
	`mem£t
(
dec
, 0, (
drmp3dec
));

2041 
i
 = 
	`drmp3d_föd_‰ame
(
mp3
, 
mp3_byãs
, &
dec
->
‰ì_f‹m©_byãs
, &
‰ame_size
);

2042 i‡(!
‰ame_size
 || 
i
 + føme_sizê> 
mp3_byãs
) {

2043 
öfo
->
‰ame_byãs
 = 
i
;

2048 
hdr
 = 
mp3
 + 
i
;

2049 
	`mem˝y
(
dec
->
hódî
, 
hdr
, 
DRMP3_HDR_SIZE
);

2050 
öfo
->
‰ame_byãs
 = 
i
 + 
‰ame_size
;

2051 
öfo
->
ch™√ls
 = 
	`DRMP3_HDR_IS_MONO
(
hdr
) ? 1 : 2;

2052 
öfo
->
hz
 = 
	`drmp3_hdr_ßm∂e_øã_hz
(
hdr
);

2053 
öfo
->
œyî
 = 4 - 
	`DRMP3_HDR_GET_LAYER
(
hdr
);

2054 
öfo
->
bôøã_kbps
 = 
	`drmp3_hdr_bôøã_kbps
(
hdr
);

2056 
	`drmp3_bs_öô
(
bs_‰ame
, 
hdr
 + 
DRMP3_HDR_SIZE
, 
‰ame_size
 - DRMP3_HDR_SIZE);

2057 i‡(
	`DRMP3_HDR_IS_CRC
(
hdr
)) {

2058 
	`drmp3_bs_gë_bôs
(
bs_‰ame
, 16);

2061 i‡(
öfo
->
œyî
 == 3) {

2062 
maö_d©a_begö
 = 
	`drmp3_L3_ªad_side_öfo
(
bs_‰ame
, 
s¸©ch
.
gr_öfo
, 
hdr
);

2063 i‡(
maö_d©a_begö
 < 0 || 
bs_‰ame
->
pos
 > bs_‰ame->
limô
) {

2064 
	`drmp3dec_öô
(
dec
);

2067 
suc˚ss
 = 
	`drmp3_L3_ª°‹e_ª£rvoú
(
dec
, 
bs_‰ame
, &
s¸©ch
, 
maö_d©a_begö
);

2068 i‡(
suc˚ss
 && 
pcm
 !
NULL
) {

2069 
igr
 = 0; ig∏< (
	`DRMP3_HDR_TEST_MPEG1
(
hdr
Ë? 2 : 1); igr++, 
pcm
 = 
	`DRMP3_OFFSET_PTR
(pcm,

2070 (
drmp3d_ßm∂e_t
) *

2072 
öfo
->
ch™√ls
)) {

2073 
	`mem£t
(
s¸©ch
.
grbuf
[0], 0, 576 * 2 * ());

2074 
	`drmp3_L3_decode
(
dec
, &
s¸©ch
, s¸©ch.
gr_öfo
 + 
igr
 * 
öfo
->
ch™√ls
, info->channels);

2075 
	`drmp3d_sy¡h_gønuÀ
(
dec
->
qmf_°©e
, 
s¸©ch
.
grbuf
[0], 18, 
öfo
->
ch™√ls
, (
drmp3d_ßm∂e_t
 *Ë
pcm
,

2076 
s¸©ch
.
syn
[0]);

2079 
	`drmp3_L3_ßve_ª£rvoú
(
dec
, &
s¸©ch
);

2081 #ifde‡
DR_MP3_ONLY_MP3


2084 i‡(
pcm
 =
NULL
) {

2085  
	`drmp3_hdr_‰ame_ßm∂es
(
hdr
);

2088 
drmp3_L12_sˇÀ_öfo
 
sci
[1];

2089 
	`drmp3_L12_ªad_sˇÀ_öfo
(
hdr
, 
bs_‰ame
, 
sci
);

2091 
	`mem£t
(
s¸©ch
.
grbuf
[0], 0, 576 * 2 * ());

2092 
i
 = 0, 
igr
 = 0; igr < 3; igr++) {

2093 i‡(12 =(
i
 +
	`drmp3_L12_dequ™tize_gønuÀ
(
s¸©ch
.
grbuf
[0] + i, 
bs_‰ame
, 
sci
, 
öfo
->
œyî
 | 1))) {

2094 
i
 = 0;

2095 
	`drmp3_L12_≠∂y_scf_384
(
sci
, sci->
scf
 + 
igr
, 
s¸©ch
.
grbuf
[0]);

2096 
	`drmp3d_sy¡h_gønuÀ
(
dec
->
qmf_°©e
, 
s¸©ch
.
grbuf
[0], 12, 
öfo
->
ch™√ls
, (
drmp3d_ßm∂e_t
 *Ë
pcm
,

2097 
s¸©ch
.
syn
[0]);

2098 
	`mem£t
(
s¸©ch
.
grbuf
[0], 0, 576 * 2 * ());

2099 
pcm
 = 
	`DRMP3_OFFSET_PTR
’cm, (
drmp3d_ßm∂e_t
Ë* 384 * 
öfo
->
ch™√ls
);

2101 i‡(
bs_‰ame
->
pos
 > bs_‰ame->
limô
) {

2102 
	`drmp3dec_öô
(
dec
);

2109  
suc˚ss
 * 
	`drmp3_hdr_‰ame_ßm∂es
(
dec
->
hódî
);

2110 
	}
}

2112 
	$drmp3dec_f32_to_s16
(c⁄° *
ö
, 
drmp3_öt16
 *
out
, 
num_ßm∂es
) {

2113 i‡(
num_ßm∂es
 > 0) {

2114 
i
 = 0;

2115 #i‡
DRMP3_HAVE_SIMD


2116 
Æig√d_cou¡
 = 
num_ßm∂es
 & ~7;

2117 ; 
i
 < 
Æig√d_cou¡
; i += 8) {

2118 c⁄° 
drmp3_f4
 
g_sˇÀ
 = {32768.0f, 32768.0f, 32768.0f, 32768.0f};

2119 
drmp3_f4
 
a
 = 
	`DRMP3_VMUL
(
	`DRMP3_VLD
(&
ö
[
i
]), 
g_sˇÀ
);

2120 
drmp3_f4
 
b
 = 
	`DRMP3_VMUL
(
	`DRMP3_VLD
(&
ö
[
i
 + 4]), 
g_sˇÀ
);

2121 #i‡
DRMP3_HAVE_SSE


2122 c⁄° 
drmp3_f4
 
g_max
 = {32767.0f, 32767.0f, 32767.0f, 32767.0f};

2123 c⁄° 
drmp3_f4
 
g_mö
 = {-32768.0f, -32768.0f, -32768.0f, -32768.0f};

2124 
__m128i
 
pcm8
 = 
	`_mm_∑cks_ïi32
(
	`_mm_cvçs_ïi32
(
	`_mm_max_ps
(
	`_mm_mö_ps
(
a
, 
g_max
), 
g_mö
)),

2125 
	`_mm_cvçs_ïi32
(
	`_mm_max_ps
(
	`_mm_mö_ps
(
b
, 
g_max
), 
g_mö
)));

2126 
out
[
i
] = (
drmp3_öt16
Ë
	`_mm_exåa˘_ïi16
(
pcm8
, 0);

2127 
out
[
i
 + 1] = (
drmp3_öt16
Ë
	`_mm_exåa˘_ïi16
(
pcm8
, 1);

2128 
out
[
i
 + 2] = (
drmp3_öt16
Ë
	`_mm_exåa˘_ïi16
(
pcm8
, 2);

2129 
out
[
i
 + 3] = (
drmp3_öt16
Ë
	`_mm_exåa˘_ïi16
(
pcm8
, 3);

2130 
out
[
i
 + 4] = (
drmp3_öt16
Ë
	`_mm_exåa˘_ïi16
(
pcm8
, 4);

2131 
out
[
i
 + 5] = (
drmp3_öt16
Ë
	`_mm_exåa˘_ïi16
(
pcm8
, 5);

2132 
out
[
i
 + 6] = (
drmp3_öt16
Ë
	`_mm_exåa˘_ïi16
(
pcm8
, 6);

2133 
out
[
i
 + 7] = (
drmp3_öt16
Ë
	`_mm_exåa˘_ïi16
(
pcm8
, 7);

2135 
öt16x4_t
 
pcma
, 
pcmb
;

2136 
a
 = 
	`DRMP3_VADD
◊, 
	`DRMP3_VSET
(0.5f));

2137 
b
 = 
	`DRMP3_VADD
(b, 
	`DRMP3_VSET
(0.5f));

2138 
pcma
 = 
	`vqmovn_s32
(
	`vqaddq_s32
(
	`vcvtq_s32_f32
(
a
), 
	`vªöãΩªtq_s32_u32
(
	`v˛tq_f32
◊, 
	`DRMP3_VSET
(0)))));

2139 
pcmb
 = 
	`vqmovn_s32
(
	`vqaddq_s32
(
	`vcvtq_s32_f32
(
b
), 
	`vªöãΩªtq_s32_u32
(
	`v˛tq_f32
(b, 
	`DRMP3_VSET
(0)))));

2140 
	`v°1_œ√_s16
(
out
+
i
 , 
pcma
, 0);

2141 
	`v°1_œ√_s16
(
out
+
i
+1, 
pcma
, 1);

2142 
	`v°1_œ√_s16
(
out
+
i
+2, 
pcma
, 2);

2143 
	`v°1_œ√_s16
(
out
+
i
+3, 
pcma
, 3);

2144 
	`v°1_œ√_s16
(
out
+
i
+4, 
pcmb
, 0);

2145 
	`v°1_œ√_s16
(
out
+
i
+5, 
pcmb
, 1);

2146 
	`v°1_œ√_s16
(
out
+
i
+6, 
pcmb
, 2);

2147 
	`v°1_œ√_s16
(
out
+
i
+7, 
pcmb
, 3);

2151 ; 
i
 < 
num_ßm∂es
; i++) {

2152 
ßm∂e
 = 
ö
[
i
] * 32768.0f;

2153 i‡(
ßm∂e
 >= 32766.5)

2154 
out
[
i
] = (
drmp3_öt16
) 32767;

2155 i‡(
ßm∂e
 <= -32767.5)

2156 
out
[
i
] = (
drmp3_öt16
) -32768;

2158 
s
 = (
drmp3_öt16
Ë(
ßm∂e
 + .5f);

2159 
s
 -= (s < 0);

2160 
out
[
i
] = 
s
;

2164 
	}
}

2174 #i‡
deföed
(
SIZE_MAX
)

2175 
	#DRMP3_SIZE_MAX
 
SIZE_MAX


	)

2177 #i‡
deföed
(
_WIN64
Ë|| deföed(
_LP64
Ë|| deföed(
__LP64__
)

2178 
	#DRMP3_SIZE_MAX
 ((
drmp3_uöt64
)0xFFFFFFFFFFFFFFFF)

	)

2180 
	#DRMP3_SIZE_MAX
 0xFFFFFFFF

	)

2185 #i‚de‡
DR_MP3_DEFAULT_CHANNELS


2186 
	#DR_MP3_DEFAULT_CHANNELS
 2

	)

2188 #i‚de‡
DR_MP3_DEFAULT_SAMPLE_RATE


2189 
	#DR_MP3_DEFAULT_SAMPLE_RATE
 44100

	)

2191 #i‚de‡
DRMP3_SEEK_LEADING_MP3_FRAMES


2192 
	#DRMP3_SEEK_LEADING_MP3_FRAMES
 2

	)

2197 #i‚de‡
DRMP3_ASSERT


2199 
	~<as£π.h
>

2201 
	#DRMP3_ASSERT
(
ex¥essi⁄
Ë
	`as£π
”x¥essi⁄)

	)

2203 #i‚de‡
DRMP3_COPY_MEMORY


2204 
	#DRMP3_COPY_MEMORY
(
d°
, 
§c
, 
sz
Ë
	`mem˝y
((d°), (§c), (sz))

	)

2206 #i‚de‡
DRMP3_ZERO_MEMORY


2207 
	#DRMP3_ZERO_MEMORY
(
p
, 
sz
Ë
	`mem£t
(’), 0, (sz))

	)

2209 
	#DRMP3_ZERO_OBJECT
(
p
Ë
	`DRMP3_ZERO_MEMORY
(’), (*’)))

	)

2210 #i‚de‡
DRMP3_MALLOC


2211 
	#DRMP3_MALLOC
(
sz
Ë
	`mÆloc
((sz))

	)

2213 #i‚de‡
DRMP3_REALLOC


2214 
	#DRMP3_REALLOC
(
p
, 
sz
Ë
	`ªÆloc
(’), (sz))

	)

2216 #i‚de‡
DRMP3_FREE


2217 
	#DRMP3_FREE
(
p
Ë
	`‰ì
(’))

	)

2220 
	#drmp3_as£π
 
DRMP3_ASSERT


	)

2221 
	#drmp3_c›y_mem‹y
 
DRMP3_COPY_MEMORY


	)

2222 
	#drmp3_zîo_mem‹y
 
DRMP3_ZERO_MEMORY


	)

2223 
	#drmp3_zîo_obje˘
 
DRMP3_ZERO_OBJECT


	)

2224 
	#drmp3_mÆloc
 
DRMP3_MALLOC


	)

2225 
	#drmp3_ªÆloc
 
DRMP3_REALLOC


	)

2227 
	#drmp3_cou¡of
(
x
Ë((xË/ (x[0]))

	)

2228 
	#drmp3_max
(
x
, 
y
Ë(((xË> (y)Ë? (xË: (y))

	)

2229 
	#drmp3_mö
(
x
, 
y
Ë(((xË< (y)Ë? (xË: (y))

	)

2231 
	#DRMP3_DATA_CHUNK_SIZE
 16384

2232 

	)

2233 
ölöe
 
	$drmp3_mix_f32
(
x
, 
y
, 
a
) {

2234  
x
 * (1 - 
a
Ë+ 
y
 *á;

2235 
	}
}

2237 
	$drmp3_bÀnd_f32
(*
pOut
, *
pInA
, *
pInB
, 
Á˘‹
, 
drmp3_uöt32
 
ch™√ls
) {

2238 
drmp3_uöt32
 
i
 = 0; i < 
ch™√ls
; ++i) {

2239 
pOut
[
i
] = 
	`drmp3_mix_f32
(
pInA
[i], 
pInB
[i], 
Á˘‹
);

2241 
	}
}

2243 
	$drmp3_§c_ˇche_öô
(
drmp3_§c
 *
pSRC
, 
drmp3_§c_ˇche
 *
pCache
) {

2244 
	`drmp3_as£π
(
pSRC
 !
NULL
);

2245 
	`drmp3_as£π
(
pCache
 !
NULL
);

2247 
pCache
->
pSRC
 =ÖSRC;

2248 
pCache
->
ˇchedFømeCou¡
 = 0;

2249 
pCache
->
iNextFøme
 = 0;

2250 
	}
}

2252 
drmp3_uöt64
 
	$drmp3_§c_ˇche_ªad_‰ames
(
drmp3_§c_ˇche
 *
pCache
, 
drmp3_uöt64
 
‰ameCou¡
, *
pFømesOut
) {

2253 
	`drmp3_as£π
(
pCache
 !
NULL
);

2254 
	`drmp3_as£π
(
pCache
->
pSRC
 !
NULL
);

2255 
	`drmp3_as£π
(
pCache
->
pSRC
->
⁄Ród
 !
NULL
);

2256 
	`drmp3_as£π
(
‰ameCou¡
 > 0);

2257 
	`drmp3_as£π
(
pFømesOut
 !
NULL
);

2259 
drmp3_uöt32
 
ch™√ls
 = 
pCache
->
pSRC
->
c⁄fig
.channels;

2261 
drmp3_uöt64
 
tŸÆFømesRód
 = 0;

2262 
‰ameCou¡
 > 0) {

2264 
drmp3_uöt64
 
‰amesRemaöögInMem‹y
 = 
pCache
->
ˇchedFømeCou¡
 -ÖCache->
iNextFøme
;

2265 
drmp3_uöt64
 
‰amesToRódFromMem‹y
 = 
‰ameCou¡
;

2266 i‡(
‰amesToRódFromMem‹y
 > 
‰amesRemaöögInMem‹y
) {

2267 
‰amesToRódFromMem‹y
 = 
‰amesRemaöögInMem‹y
;

2270 
	`drmp3_c›y_mem‹y
(
pFømesOut
, 
pCache
->
pCachedFømes
 +ÖCache->
iNextFøme
 * 
ch™√ls
,

2271 (
drmp3_uöt32
Ë(
‰amesToRódFromMem‹y
 * 
ch™√ls
 * ()));

2272 
pCache
->
iNextFøme
 +(
drmp3_uöt32
Ë
‰amesToRódFromMem‹y
;

2274 
tŸÆFømesRód
 +
‰amesToRódFromMem‹y
;

2275 
‰ameCou¡
 -
‰amesToRódFromMem‹y
;

2276 i‡(
‰ameCou¡
 == 0) {

2282 
	`drmp3_as£π
(
‰ameCou¡
 > 0);

2283 
pFømesOut
 +
‰amesToRódFromMem‹y
 * 
ch™√ls
;

2285 
pCache
->
iNextFøme
 = 0;

2286 
pCache
->
ˇchedFømeCou¡
 = 0;

2288 
drmp3_uöt32
 
‰amesToRódFromClõ¡
 = 
	`drmp3_cou¡of
(
pCache
->
pCachedFømes
Ë/ÖCache->
pSRC
->
c⁄fig
.
ch™√ls
;

2289 i‡(
‰amesToRódFromClõ¡
 > 
pCache
->
pSRC
->
c⁄fig
.
ˇcheSizeInFømes
) {

2290 
‰amesToRódFromClõ¡
 = 
pCache
->
pSRC
->
c⁄fig
.
ˇcheSizeInFømes
;

2293 
pCache
->
ˇchedFømeCou¡
 = (
drmp3_uöt32
ËpCache->
pSRC
->
	`⁄Ród
’Cache->pSRC, 
‰amesToRódFromClõ¡
,

2294 
pCache
->
pCachedFømes
,ÖCache->
pSRC
->
pU£rD©a
);

2298 i‡(
pCache
->
ˇchedFømeCou¡
 == 0) {

2303  
tŸÆFømesRód
;

2304 
	}
}

2307 
drmp3_uöt64


2308 
drmp3_§c_ªad_‰ames_∑s°hrough
(
drmp3_§c
 *
pSRC
, 
drmp3_uöt64
 
‰ameCou¡
, *
pFømesOut
, 
drmp3_boﬁ32
 
Êush
);

2310 
drmp3_uöt64


2311 
drmp3_§c_ªad_‰ames_löór
(
drmp3_§c
 *
pSRC
, 
drmp3_uöt64
 
‰ameCou¡
, *
pFømesOut
, 
drmp3_boﬁ32
 
Êush
);

2313 
drmp3_boﬁ32


2314 
	$drmp3_§c_öô
(c⁄° 
drmp3_§c_c⁄fig
 *
pC⁄fig
, 
drmp3_§c_ªad_¥oc
 
⁄Ród
, *
pU£rD©a
, 
drmp3_§c
 *
pSRC
) {

2315 i‡(
pSRC
 =
NULL
Ë 
DRMP3_FALSE
;

2316 
	`drmp3_zîo_obje˘
(
pSRC
);

2318 i‡(
pC⁄fig
 =
NULL
 || 
⁄Ród
 =NULLË 
DRMP3_FALSE
;

2319 i‡(
pC⁄fig
->
ch™√ls
 =0 ||ÖC⁄fig->ch™√l†> 2Ë 
DRMP3_FALSE
;

2321 
pSRC
->
c⁄fig
 = *
pC⁄fig
;

2322 
pSRC
->
⁄Ród
 = onRead;

2323 
pSRC
->
pU£rD©a
 =ÖUserData;

2325 i‡(
pSRC
->
c⁄fig
.
ˇcheSizeInFømes
 > 
DRMP3_SRC_CACHE_SIZE_IN_FRAMES
 ||ÖSRC->config.cacheSizeInFrames == 0) {

2326 
pSRC
->
c⁄fig
.
ˇcheSizeInFømes
 = 
DRMP3_SRC_CACHE_SIZE_IN_FRAMES
;

2329 
	`drmp3_§c_ˇche_öô
(
pSRC
, &pSRC->
ˇche
);

2330  
DRMP3_TRUE
;

2331 
	}
}

2333 
drmp3_boﬁ32
 
	$drmp3_§c_£t_öput_ßm∂e_øã
(
drmp3_§c
 *
pSRC
, 
drmp3_uöt32
 
ßm∂eR©eIn
) {

2334 i‡(
pSRC
 =
NULL
Ë 
DRMP3_FALSE
;

2337 i‡(
ßm∂eR©eIn
 == 0) {

2338  
DRMP3_FALSE
;

2341 
pSRC
->
c⁄fig
.
ßm∂eR©eIn
 = sampleRateIn;

2342  
DRMP3_TRUE
;

2343 
	}
}

2345 
drmp3_boﬁ32
 
	$drmp3_§c_£t_ouçut_ßm∂e_øã
(
drmp3_§c
 *
pSRC
, 
drmp3_uöt32
 
ßm∂eR©eOut
) {

2346 i‡(
pSRC
 =
NULL
Ë 
DRMP3_FALSE
;

2349 i‡(
ßm∂eR©eOut
 == 0) {

2350  
DRMP3_FALSE
;

2353 
pSRC
->
c⁄fig
.
ßm∂eR©eOut
 = sampleRateOut;

2354  
DRMP3_TRUE
;

2355 
	}
}

2357 
drmp3_uöt64
 
	$drmp3_§c_ªad_‰ames_ex
(
drmp3_§c
 *
pSRC
, 
drmp3_uöt64
 
‰ameCou¡
, *
pFømesOut
, 
drmp3_boﬁ32
 
Êush
) {

2358 i‡(
pSRC
 =
NULL
 || 
‰ameCou¡
 =0 || 
pFømesOut
 == NULL)  0;

2360 
drmp3_§c_Æg‹ôhm
 
Æg‹ôhm
 = 
pSRC
->
c⁄fig
.algorithm;

2363 i‡(
pSRC
->
c⁄fig
.
ßm∂eR©eIn
 =pSRC->c⁄fig.
ßm∂eR©eOut
) {

2364 
Æg‹ôhm
 = 
drmp3_§c_Æg‹ôhm_n⁄e
;

2368 
Æg‹ôhm
) {

2369 
drmp3_§c_Æg‹ôhm_n⁄e
:

2370  
	`drmp3_§c_ªad_‰ames_∑s°hrough
(
pSRC
, 
‰ameCou¡
, 
pFømesOut
, 
Êush
);

2371 
drmp3_§c_Æg‹ôhm_löór
:

2372  
	`drmp3_§c_ªad_‰ames_löór
(
pSRC
, 
‰ameCou¡
, 
pFømesOut
, 
Êush
);

2376 
	}
}

2378 
drmp3_uöt64
 
	$drmp3_§c_ªad_‰ames
(
drmp3_§c
 *
pSRC
, 
drmp3_uöt64
 
‰ameCou¡
, *
pFømesOut
) {

2379  
	`drmp3_§c_ªad_‰ames_ex
(
pSRC
, 
‰ameCou¡
, 
pFømesOut
, 
DRMP3_FALSE
);

2380 
	}
}

2382 
drmp3_uöt64


2383 
	$drmp3_§c_ªad_‰ames_∑s°hrough
(
drmp3_§c
 *
pSRC
, 
drmp3_uöt64
 
‰ameCou¡
, *
pFømesOut
, 
drmp3_boﬁ32
 
Êush
) {

2384 
	`drmp3_as£π
(
pSRC
 !
NULL
);

2385 
	`drmp3_as£π
(
‰ameCou¡
 > 0);

2386 
	`drmp3_as£π
(
pFømesOut
 !
NULL
);

2388 (Ë
Êush
;

2389  
pSRC
->
	`⁄Ród
’SRC, 
‰ameCou¡
, 
pFømesOut
,ÖSRC->
pU£rD©a
);

2390 
	}
}

2392 
drmp3_uöt64


2393 
	$drmp3_§c_ªad_‰ames_löór
(
drmp3_§c
 *
pSRC
, 
drmp3_uöt64
 
‰ameCou¡
, *
pFømesOut
, 
drmp3_boﬁ32
 
Êush
) {

2394 
	`drmp3_as£π
(
pSRC
 !
NULL
);

2395 
	`drmp3_as£π
(
‰ameCou¡
 > 0);

2396 
	`drmp3_as£π
(
pFømesOut
 !
NULL
);

2401 i‡(!
pSRC
->
Ægo
.
löór
.
isPªvFømesLﬂded
) {

2402 
drmp3_uöt64
 
‰amesRód
 = 
	`drmp3_§c_ˇche_ªad_‰ames
(&
pSRC
->
ˇche
, 1,ÖSRC->
bö
);

2403 i‡(
‰amesRód
 == 0) {

2406 
pSRC
->
Ægo
.
löór
.
isPªvFømesLﬂded
 = 
DRMP3_TRUE
;

2408 i‡(!
pSRC
->
Ægo
.
löór
.
isNextFømesLﬂded
) {

2409 
drmp3_uöt64
 
‰amesRód
 = 
	`drmp3_§c_ˇche_ªad_‰ames
(&
pSRC
->
ˇche
, 1,ÖSRC->
bö
 +ÖSRC->
c⁄fig
.
ch™√ls
);

2410 i‡(
‰amesRód
 == 0) {

2413 
pSRC
->
Ægo
.
löór
.
isNextFømesLﬂded
 = 
DRMP3_TRUE
;

2416 
Á˘‹
 = (Ë
pSRC
->
c⁄fig
.
ßm∂eR©eIn
 /ÖSRC->c⁄fig.
ßm∂eR©eOut
;

2418 
drmp3_uöt64
 
tŸÆFømesRód
 = 0;

2419 
‰ameCou¡
 > 0) {

2421 *
pPªvFøme
 = 
pSRC
->
bö
;

2422 *
pNextFøme
 = 
pSRC
->
bö
 +ÖSRC->
c⁄fig
.
ch™√ls
;

2424 
	`drmp3_bÀnd_f32
((*Ë
pFømesOut
, 
pPªvFøme
, 
pNextFøme
, (Ë
pSRC
->
Ægo
.
löór
.
Æpha
,

2425 
pSRC
->
c⁄fig
.
ch™√ls
);

2427 
pSRC
->
Ægo
.
löór
.
Æpha
 +
Á˘‹
;

2430 
drmp3_uöt32
 
‰amesToRódFromClõ¡
 = (drmp3_uöt32Ë
pSRC
->
Ægo
.
löór
.
Æpha
;

2431 
pSRC
->
Ægo
.
löór
.
Æpha
 =ÖSRC->Ægo.löór.Æph®- 
‰amesToRódFromClõ¡
;

2433 
drmp3_uöt32
 
i
 = 0; i < 
‰amesToRódFromClõ¡
; ++i) {

2434 
drmp3_uöt32
 
j
 = 0; j < 
pSRC
->
c⁄fig
.
ch™√ls
; ++j) {

2435 
pPªvFøme
[
j
] = 
pNextFøme
[j];

2438 
drmp3_uöt64
 
‰amesRód
 = 
	`drmp3_§c_ˇche_ªad_‰ames
(&
pSRC
->
ˇche
, 1, 
pNextFøme
);

2439 i‡(
‰amesRód
 == 0) {

2440 
drmp3_uöt32
 
j
 = 0; j < 
pSRC
->
c⁄fig
.
ch™√ls
; ++j) {

2441 
pNextFøme
[
j
] = 0;

2444 i‡(
pSRC
->
Ægo
.
löór
.
isNextFømesLﬂded
) {

2445 
pSRC
->
Ægo
.
löór
.
isNextFømesLﬂded
 = 
DRMP3_FALSE
;

2447 i‡(
Êush
) {

2448 
pSRC
->
Ægo
.
löór
.
isPªvFømesLﬂded
 = 
DRMP3_FALSE
;

2456 
pFømesOut
 = (
drmp3_uöt8
 *ËpFømesOuà+ (1 * 
pSRC
->
c⁄fig
.
ch™√ls
 * ());

2457 
‰ameCou¡
 -= 1;

2458 
tŸÆFømesRód
 += 1;

2461 i‡(!
pSRC
->
Ægo
.
löór
.
isNextFømesLﬂded
 && (!
Êush
 || !pSRC->Ægo.löór.
isPªvFømesLﬂded
)) {

2466  
tŸÆFømesRód
;

2467 
	}
}

2470 
size_t
 
	$drmp3__⁄_ªad
(
drmp3
 *
pMP3
, *
pBuf„rOut
, 
size_t
 
byãsToRód
) {

2471 
size_t
 
byãsRód
 = 
pMP3
->
	`⁄Ród
’MP3->
pU£rD©a
, 
pBuf„rOut
, 
byãsToRód
);

2472 
pMP3
->
°ªamCurs‹
 +
byãsRód
;

2473  
byãsRód
;

2474 
	}
}

2476 
drmp3_boﬁ32
 
	$drmp3__⁄_£ek
(
drmp3
 *
pMP3
, 
off£t
, 
drmp3_£ek_‹igö
 
‹igö
) {

2477 
	`drmp3_as£π
(
off£t
 >= 0);

2479 i‡(!
pMP3
->
	`⁄Sìk
’MP3->
pU£rD©a
, 
off£t
, 
‹igö
)) {

2480  
DRMP3_FALSE
;

2483 i‡(
‹igö
 =
drmp3_£ek_‹igö_°¨t
) {

2484 
pMP3
->
°ªamCurs‹
 = (
drmp3_uöt64
Ë
off£t
;

2486 
pMP3
->
°ªamCurs‹
 +
off£t
;

2489  
DRMP3_TRUE
;

2490 
	}
}

2492 
drmp3_boﬁ32
 
	$drmp3__⁄_£ek_64
(
drmp3
 *
pMP3
, 
drmp3_uöt64
 
off£t
, 
drmp3_£ek_‹igö
 
‹igö
) {

2493 i‡(
off£t
 <= 0x7FFFFFFF) {

2494  
	`drmp3__⁄_£ek
(
pMP3
, (Ë
off£t
, 
‹igö
);

2499 i‡(!
	`drmp3__⁄_£ek
(
pMP3
, 0x7FFFFFFF, 
drmp3_£ek_‹igö_°¨t
)) {

2500  
DRMP3_FALSE
;

2503 
off£t
 -= 0x7FFFFFFF;

2504 
off£t
 > 0) {

2505 i‡(
off£t
 <= 0x7FFFFFFF) {

2506 i‡(!
	`drmp3__⁄_£ek
(
pMP3
, (Ë
off£t
, 
drmp3_£ek_‹igö_cuºít
)) {

2507  
DRMP3_FALSE
;

2509 
off£t
 = 0;

2511 i‡(!
	`drmp3__⁄_£ek
(
pMP3
, 0x7FFFFFFF, 
drmp3_£ek_‹igö_cuºít
)) {

2512  
DRMP3_FALSE
;

2514 
off£t
 -= 0x7FFFFFFF;

2518  
DRMP3_TRUE
;

2519 
	}
}

2522 
drmp3_uöt32
 
	$drmp3_decode_√xt_‰ame_ex
(
drmp3
 *
pMP3
, 
drmp3d_ßm∂e_t
 *
pPCMFømes
, 
drmp3_boﬁ32
 
disˇrd
) {

2523 
	`drmp3_as£π
(
pMP3
 !
NULL
);

2524 
	`drmp3_as£π
(
pMP3
->
⁄Ród
 !
NULL
);

2526 i‡(
pMP3
->
©End
) {

2530 
drmp3_uöt32
 
pcmFømesRód
 = 0;

2533 i‡(
pMP3
->
d©aSize
 < 
DRMP3_DATA_CHUNK_SIZE
) {

2534 i‡(
pMP3
->
d©aC≠acôy
 < 
DRMP3_DATA_CHUNK_SIZE
) {

2535 
pMP3
->
d©aC≠acôy
 = 
DRMP3_DATA_CHUNK_SIZE
;

2536 
drmp3_uöt8
 *
pNewD©a
 = (drmp3_uöt8 *Ë
	`drmp3_ªÆloc
(
pMP3
->
pD©a
,ÖMP3->
d©aC≠acôy
);

2537 i‡(
pNewD©a
 =
NULL
) {

2541 
pMP3
->
pD©a
 = 
pNewD©a
;

2544 
size_t
 
byãsRód
 = 
	`drmp3__⁄_ªad
(
pMP3
,ÖMP3->
pD©a
 +ÖMP3->
d©aSize
,

2545 (
pMP3
->
d©aC≠acôy
 -ÖMP3->
d©aSize
));

2546 i‡(
byãsRód
 == 0) {

2547 i‡(
pMP3
->
d©aSize
 == 0) {

2548 
pMP3
->
©End
 = 
DRMP3_TRUE
;

2553 
pMP3
->
d©aSize
 +
byãsRód
;

2556 i‡(
pMP3
->
d©aSize
 > 
INT_MAX
) {

2557 
pMP3
->
©End
 = 
DRMP3_TRUE
;

2561 
drmp3dec_‰ame_öfo
 
öfo
;

2562 
pcmFømesRód
 = 
	`drmp3dec_decode_‰ame
(&
pMP3
->
decodî
,ÖMP3->
pD©a
, (ËpMP3->
d©aSize
, 
pPCMFømes
,

2563 &
öfo
);

2566 
size_t
 
À·ovîD©aSize
 = (
pMP3
->
d©aSize
 - (size_tË
öfo
.
‰ame_byãs
);

2567 i‡(
öfo
.
‰ame_byãs
 > 0) {

2568 
	`memmove
(
pMP3
->
pD©a
,ÖMP3->pD©®+ 
öfo
.
‰ame_byãs
, 
À·ovîD©aSize
);

2569 
pMP3
->
d©aSize
 = 
À·ovîD©aSize
;

2574 i‡(
pcmFømesRód
 > 0 || (
öfo
.
‰ame_byãs
 > 0 && 
disˇrd
)) {

2575 
pcmFømesRód
 = 
	`drmp3_hdr_‰ame_ßm∂es
(
pMP3
->
decodî
.
hódî
);

2576 
pMP3
->
pcmFømesC⁄sumedInMP3Føme
 = 0;

2577 
pMP3
->
pcmFømesRemaöögInMP3Føme
 = 
pcmFømesRód
;

2578 
pMP3
->
mp3FømeCh™√ls
 = 
öfo
.
ch™√ls
;

2579 
pMP3
->
mp3FømeSam∂eR©e
 = 
öfo
.
hz
;

2580 
	`drmp3_§c_£t_öput_ßm∂e_øã
(&
pMP3
->
§c
,ÖMP3->
mp3FømeSam∂eR©e
);

2582 } i‡(
öfo
.
‰ame_byãs
 == 0) {

2584 i‡(
pMP3
->
d©aC≠acôy
 =pMP3->
d©aSize
) {

2586 
pMP3
->
d©aC≠acôy
 +
DRMP3_DATA_CHUNK_SIZE
;

2587 
drmp3_uöt8
 *
pNewD©a
 = (drmp3_uöt8 *Ë
	`drmp3_ªÆloc
(
pMP3
->
pD©a
,ÖMP3->
d©aC≠acôy
);

2588 i‡(
pNewD©a
 =
NULL
) {

2592 
pMP3
->
pD©a
 = 
pNewD©a
;

2596 
size_t
 
byãsRód
 = 
	`drmp3__⁄_ªad
(
pMP3
,ÖMP3->
pD©a
 +ÖMP3->
d©aSize
,

2597 (
pMP3
->
d©aC≠acôy
 -ÖMP3->
d©aSize
));

2598 i‡(
byãsRód
 == 0) {

2599 
pMP3
->
©End
 = 
DRMP3_TRUE
;

2603 
pMP3
->
d©aSize
 +
byãsRód
;

2605 } 
DRMP3_TRUE
);

2607  
pcmFømesRód
;

2608 
	}
}

2610 
drmp3_uöt32
 
	$drmp3_decode_√xt_‰ame
(
drmp3
 *
pMP3
) {

2611 
	`drmp3_as£π
(
pMP3
 !
NULL
);

2612  
	`drmp3_decode_√xt_‰ame_ex
(
pMP3
, (
drmp3d_ßm∂e_t
 *ËpMP3->
pcmFømes
, 
DRMP3_FALSE
);

2613 
	}
}

2616 
drmp3_uöt32
 
	$drmp3_£ek_√xt_‰ame
(
drmp3
* 
pMP3
)

2618 
	`drmp3_as£π
(
pMP3
 !
NULL
);

2620 
drmp3_uöt32
 
pcmFømeCou¡
 = 
	`drmp3_decode_√xt_‰ame_ex
(
pMP3
, 
NULL
);

2621 i‡(
pcmFømeCou¡
 == 0) {

2626 
pMP3
->
cuºítPCMFøme
 +
pcmFømeCou¡
;

2627 
pMP3
->
pcmFømesC⁄sumedInMP3Føme
 = 
pcmFømeCou¡
;

2628 
pMP3
->
pcmFømesRemaöögInMP3Føme
 = 0;

2630  
pcmFømeCou¡
;

2631 
	}
}

2634 
drmp3_uöt64
 
	$drmp3_ªad_§c
(
drmp3_§c
 *
pSRC
, 
drmp3_uöt64
 
‰ameCou¡
, *
pFømesOut
, *
pU£rD©a
) {

2635 
drmp3
 *
pMP3
 = (drmp3 *Ë
pU£rD©a
;

2636 
	`drmp3_as£π
(
pMP3
 !
NULL
);

2637 
	`drmp3_as£π
(
pMP3
->
⁄Ród
 !
NULL
);

2639 *
pFømesOutF
 = (*Ë
pFømesOut
;

2640 
drmp3_uöt64
 
tŸÆFømesRód
 = 0;

2642 
‰ameCou¡
 > 0) {

2644 
pMP3
->
pcmFømesRemaöögInMP3Føme
 > 0 && 
‰ameCou¡
 > 0) {

2645 
drmp3d_ßm∂e_t
 *
‰ames
 = (drmp3d_ßm∂e_à*Ë
pMP3
->
pcmFømes
;

2646 #i‚de‡
DR_MP3_FLOAT_OUTPUT


2647 i‡(
pMP3
->
mp3FømeCh™√ls
 == 1) {

2648 i‡(
pMP3
->
ch™√ls
 == 1) {

2650 
pFømesOutF
[0] = 
‰ames
[
pMP3
->
pcmFømesC⁄sumedInMP3Føme
] / 32768.0f;

2653 
pFømesOutF
[0] = 
‰ames
[
pMP3
->
pcmFømesC⁄sumedInMP3Føme
] / 32768.0f;

2654 
pFømesOutF
[1] = 
‰ames
[
pMP3
->
pcmFømesC⁄sumedInMP3Føme
] / 32768.0f;

2657 i‡(
pMP3
->
ch™√ls
 == 1) {

2659 
ßm∂e
 = 0;

2660 
ßm∂e
 +
‰ames
[(
pMP3
->
pcmFømesC⁄sumedInMP3Føme
 *ÖMP3->
mp3FømeCh™√ls
) + 0] / 32768.0f;

2661 
ßm∂e
 +
‰ames
[(
pMP3
->
pcmFømesC⁄sumedInMP3Føme
 *ÖMP3->
mp3FømeCh™√ls
) + 1] / 32768.0f;

2662 
pFømesOutF
[0] = 
ßm∂e
 * 0.5f;

2665 
pFømesOutF
[0] =

2666 
‰ames
[(
pMP3
->
pcmFømesC⁄sumedInMP3Føme
 *ÖMP3->
mp3FømeCh™√ls
) + 0] / 32768.0f;

2667 
pFømesOutF
[1] =

2668 
‰ames
[(
pMP3
->
pcmFømesC⁄sumedInMP3Føme
 *ÖMP3->
mp3FømeCh™√ls
) + 1] / 32768.0f;

2672 i‡(
pMP3
->
mp3FømeCh™√ls
 == 1) {

2673 i‡(
pMP3
->
ch™√ls
 == 1) {

2675 
pFømesOutF
[0] = 
‰ames
[
pMP3
->
pcmFømesC⁄sumedInMP3Føme
];

2678 
pFømesOutF
[0] = 
‰ames
[
pMP3
->
pcmFømesC⁄sumedInMP3Føme
];

2679 
pFømesOutF
[1] = 
‰ames
[
pMP3
->
pcmFømesC⁄sumedInMP3Føme
];

2682 i‡(
pMP3
->
ch™√ls
 == 1) {

2684 
ßm∂e
 = 0;

2685 
ßm∂e
 +
‰ames
[(
pMP3
->
pcmFømesC⁄sumedInMP3Føme
*pMP3->
mp3FømeCh™√ls
)+0];

2686 
ßm∂e
 +
‰ames
[(
pMP3
->
pcmFømesC⁄sumedInMP3Føme
*pMP3->
mp3FømeCh™√ls
)+1];

2687 
pFømesOutF
[0] = 
ßm∂e
 * 0.5f;

2690 
pFømesOutF
[0] = 
‰ames
[(
pMP3
->
pcmFømesC⁄sumedInMP3Føme
*pMP3->
mp3FømeCh™√ls
)+0];

2691 
pFømesOutF
[1] = 
‰ames
[(
pMP3
->
pcmFømesC⁄sumedInMP3Føme
*pMP3->
mp3FømeCh™√ls
)+1];

2696 
pMP3
->
pcmFømesC⁄sumedInMP3Føme
 += 1;

2697 
pMP3
->
pcmFømesRemaöögInMP3Føme
 -= 1;

2698 
tŸÆFømesRód
 += 1;

2699 
‰ameCou¡
 -= 1;

2700 
pFømesOutF
 +
pSRC
->
c⁄fig
.
ch™√ls
;

2703 i‡(
‰ameCou¡
 == 0) {

2707 
	`drmp3_as£π
(
pMP3
->
pcmFømesRemaöögInMP3Føme
 == 0);

2711 i‡(
	`drmp3_decode_√xt_‰ame
(
pMP3
) == 0) {

2716  
tŸÆFømesRód
;

2717 
	}
}

2719 
drmp3_boﬁ32
 
	$drmp3_öô_öã∫Æ
(
drmp3
 *
pMP3
, 
drmp3_ªad_¥oc
 
⁄Ród
, 
drmp3_£ek_¥oc
 
⁄Sìk
, *
pU£rD©a
,

2720 c⁄° 
drmp3_c⁄fig
 *
pC⁄fig
) {

2721 
	`drmp3_as£π
(
pMP3
 !
NULL
);

2722 
	`drmp3_as£π
(
⁄Ród
 !
NULL
);

2725 
	`drmp3dec_öô
(&
pMP3
->
decodî
);

2728 
drmp3_c⁄fig
 
c⁄fig
;

2729 i‡(
pC⁄fig
 !
NULL
) {

2730 
c⁄fig
 = *
pC⁄fig
;

2732 
	`drmp3_zîo_obje˘
(&
c⁄fig
);

2735 
pMP3
->
ch™√ls
 = 
c⁄fig
.
ouçutCh™√ls
;

2736 i‡(
pMP3
->
ch™√ls
 == 0) {

2737 
pMP3
->
ch™√ls
 = 
DR_MP3_DEFAULT_CHANNELS
;

2741 i‡(
pMP3
->
ch™√ls
 > 2) {

2742 
pMP3
->
ch™√ls
 = 2;

2745 
pMP3
->
ßm∂eR©e
 = 
c⁄fig
.
ouçutSam∂eR©e
;

2746 i‡(
pMP3
->
ßm∂eR©e
 == 0) {

2747 
pMP3
->
ßm∂eR©e
 = 
DR_MP3_DEFAULT_SAMPLE_RATE
;

2750 
pMP3
->
⁄Ród
 = onRead;

2751 
pMP3
->
⁄Sìk
 = onSeek;

2752 
pMP3
->
pU£rD©a
 =ÖUserData;

2755 
drmp3_§c_c⁄fig
 
§cC⁄fig
;

2756 
	`drmp3_zîo_obje˘
(&
§cC⁄fig
);

2757 
§cC⁄fig
.
ßm∂eR©eIn
 = 
DR_MP3_DEFAULT_SAMPLE_RATE
;

2758 
§cC⁄fig
.
ßm∂eR©eOut
 = 
pMP3
->
ßm∂eR©e
;

2759 
§cC⁄fig
.
ch™√ls
 = 
pMP3
->channels;

2760 
§cC⁄fig
.
Æg‹ôhm
 = 
drmp3_§c_Æg‹ôhm_löór
;

2761 i‡(!
	`drmp3_§c_öô
(&
§cC⁄fig
, 
drmp3_ªad_§c
, 
pMP3
, &pMP3->
§c
)) {

2762 
	`drmp3_unöô
(
pMP3
);

2763  
DRMP3_FALSE
;

2767 i‡(!
	`drmp3_decode_√xt_‰ame
(
pMP3
)) {

2768 
	`drmp3_unöô
(
pMP3
);

2769  
DRMP3_FALSE
;

2772  
DRMP3_TRUE
;

2773 
	}
}

2775 
drmp3_boﬁ32


2776 
	$drmp3_öô
(
drmp3
 *
pMP3
, 
drmp3_ªad_¥oc
 
⁄Ród
, 
drmp3_£ek_¥oc
 
⁄Sìk
, *
pU£rD©a
, c⁄° 
drmp3_c⁄fig
 *
pC⁄fig
) {

2777 i‡(
pMP3
 =
NULL
 || 
⁄Ród
 == NULL) {

2778  
DRMP3_FALSE
;

2781 
	`drmp3_zîo_obje˘
(
pMP3
);

2782  
	`drmp3_öô_öã∫Æ
(
pMP3
, 
⁄Ród
, 
⁄Sìk
, 
pU£rD©a
, 
pC⁄fig
);

2783 
	}
}

2786 
size_t
 
	$drmp3__⁄_ªad_mem‹y
(*
pU£rD©a
, *
pBuf„rOut
, 
size_t
 
byãsToRód
) {

2787 
drmp3
 *
pMP3
 = (drmp3 *Ë
pU£rD©a
;

2788 
	`drmp3_as£π
(
pMP3
 !
NULL
);

2789 
	`drmp3_as£π
(
pMP3
->
mem‹y
.
d©aSize
 >pMP3->mem‹y.
cuºítRódPos
);

2791 
size_t
 
byãsRemaöög
 = 
pMP3
->
mem‹y
.
d©aSize
 -ÖMP3->mem‹y.
cuºítRódPos
;

2792 i‡(
byãsToRód
 > 
byãsRemaöög
) {

2793 
byãsToRód
 = 
byãsRemaöög
;

2796 i‡(
byãsToRód
 > 0) {

2797 
	`drmp3_c›y_mem‹y
(
pBuf„rOut
, 
pMP3
->
mem‹y
.
pD©a
 +ÖMP3->mem‹y.
cuºítRódPos
, 
byãsToRód
);

2798 
pMP3
->
mem‹y
.
cuºítRódPos
 +
byãsToRód
;

2801  
byãsToRód
;

2802 
	}
}

2804 
drmp3_boﬁ32
 
	$drmp3__⁄_£ek_mem‹y
(*
pU£rD©a
, 
byãOff£t
, 
drmp3_£ek_‹igö
 
‹igö
) {

2805 
drmp3
 *
pMP3
 = (drmp3 *Ë
pU£rD©a
;

2806 
	`drmp3_as£π
(
pMP3
 !
NULL
);

2808 i‡(
‹igö
 =
drmp3_£ek_‹igö_cuºít
) {

2809 i‡(
byãOff£t
 > 0) {

2810 i‡(
pMP3
->
mem‹y
.
cuºítRódPos
 + 
byãOff£t
 >ÖMP3->mem‹y.
d©aSize
) {

2811 
byãOff£t
 = (Ë(
pMP3
->
mem‹y
.
d©aSize
 -

2812 
pMP3
->
mem‹y
.
cuºítRódPos
);

2815 i‡(
pMP3
->
mem‹y
.
cuºítRódPos
 < (
size_t
Ë-
byãOff£t
) {

2816 
byãOff£t
 = -(Ë
pMP3
->
mem‹y
.
cuºítRódPos
;

2821 
pMP3
->
mem‹y
.
cuºítRódPos
 +
byãOff£t
;

2823 i‡((
drmp3_uöt32
Ë
byãOff£t
 <
pMP3
->
mem‹y
.
d©aSize
) {

2824 
pMP3
->
mem‹y
.
cuºítRódPos
 = 
byãOff£t
;

2826 
pMP3
->
mem‹y
.
cuºítRódPos
 =ÖMP3->mem‹y.
d©aSize
;

2830  
DRMP3_TRUE
;

2831 
	}
}

2833 
drmp3_boﬁ32
 
	$drmp3_öô_mem‹y
(
drmp3
 *
pMP3
, c⁄° *
pD©a
, 
size_t
 
d©aSize
, c⁄° 
drmp3_c⁄fig
 *
pC⁄fig
) {

2834 i‡(
pMP3
 =
NULL
) {

2835  
DRMP3_FALSE
;

2838 
	`drmp3_zîo_obje˘
(
pMP3
);

2840 i‡(
pD©a
 =
NULL
 || 
d©aSize
 == 0) {

2841  
DRMP3_FALSE
;

2844 
pMP3
->
mem‹y
.
pD©a
 = (c⁄° 
drmp3_uöt8
 *)ÖData;

2845 
pMP3
->
mem‹y
.
d©aSize
 = dataSize;

2846 
pMP3
->
mem‹y
.
cuºítRódPos
 = 0;

2848  
	`drmp3_öô_öã∫Æ
(
pMP3
, 
drmp3__⁄_ªad_mem‹y
, 
drmp3__⁄_£ek_mem‹y
,ÖMP3, 
pC⁄fig
);

2849 
	}
}

2852 #i‚de‡
DR_MP3_NO_STDIO


2854 
	~<°dio.h
>

2856 
size_t
 
	$drmp3__⁄_ªad_°dio
(*
pU£rD©a
, *
pBuf„rOut
, 
size_t
 
byãsToRód
) {

2857  
	`‰ód
(
pBuf„rOut
, 1, 
byãsToRód
, (
FILE
 *Ë
pU£rD©a
);

2858 
	}
}

2860 
drmp3_boﬁ32
 
	$drmp3__⁄_£ek_°dio
(*
pU£rD©a
, 
off£t
, 
drmp3_£ek_‹igö
 
‹igö
) {

2861  
	`f£ek
((
FILE
 *Ë
pU£rD©a
, 
off£t
, (
‹igö
 =
drmp3_£ek_‹igö_cuºít
Ë? 
SEEK_CUR
 : 
SEEK_SET
) == 0;

2862 
	}
}

2864 
drmp3_boﬁ32
 
	$drmp3_öô_fûe
(
drmp3
 *
pMP3
, c⁄° *
fûeP©h
, c⁄° 
drmp3_c⁄fig
 *
pC⁄fig
) {

2865 
FILE
 *
pFûe
;

2866 #i‡
	`deföed
(
_MSC_VER
) && _MSC_VER >= 1400

2867 i‡(
	`f›í_s
(&
pFûe
, 
fûeP©h
, "rb") != 0) {

2868  
DRMP3_FALSE
;

2871 
pFûe
 = 
	`f›í
(
fûeP©h
, "rb");

2872 i‡(
pFûe
 =
NULL
) {

2873  
DRMP3_FALSE
;

2877  
	`drmp3_öô
(
pMP3
, 
drmp3__⁄_ªad_°dio
, 
drmp3__⁄_£ek_°dio
, (*Ë
pFûe
, 
pC⁄fig
);

2878 
	}
}

2882 
	$drmp3_unöô
(
drmp3
 *
pMP3
) {

2883 i‡(
pMP3
 =
NULL
) {

2887 #i‚de‡
DR_MP3_NO_STDIO


2888 i‡(
pMP3
->
⁄Ród
 =
drmp3__⁄_ªad_°dio
) {

2889 
	`f˛o£
((
FILE
 *Ë
pMP3
->
pU£rD©a
);

2893 
	`drmp3_‰ì
(
pMP3
->
pD©a
);

2894 
	}
}

2896 
drmp3_uöt64
 
	$drmp3_ªad_pcm_‰ames_f32
(
drmp3
 *
pMP3
, 
drmp3_uöt64
 
‰amesToRód
, *
pBuf„rOut
) {

2897 i‡(
pMP3
 =
NULL
 ||ÖMP3->
⁄Ród
 == NULL) {

2901 
drmp3_uöt64
 
tŸÆFømesRód
 = 0;

2903 i‡(
pBuf„rOut
 =
NULL
) {

2904 
ãmp
[4096];

2905 
‰amesToRód
 > 0) {

2906 
drmp3_uöt64
 
‰amesToRódRightNow
 = (
ãmp
Ë/ —emp[0]Ë/ 
pMP3
->
ch™√ls
;

2907 i‡(
‰amesToRódRightNow
 > 
‰amesToRód
) {

2908 
‰amesToRódRightNow
 = 
‰amesToRód
;

2911 
drmp3_uöt64
 
‰amesJu°Ród
 = 
	`drmp3_ªad_pcm_‰ames_f32
(
pMP3
, 
‰amesToRódRightNow
, 
ãmp
);

2912 i‡(
‰amesJu°Ród
 == 0) {

2916 
‰amesToRód
 -
‰amesJu°Ród
;

2917 
tŸÆFømesRód
 +
‰amesJu°Ród
;

2920 
tŸÆFømesRód
 = 
	`drmp3_§c_ªad_‰ames_ex
(&
pMP3
->
§c
, 
‰amesToRód
, 
pBuf„rOut
, 
DRMP3_TRUE
);

2921 
pMP3
->
cuºítPCMFøme
 +
tŸÆFømesRód
;

2924  
tŸÆFømesRód
;

2925 
	}
}

2927 
	$drmp3_ª£t
(
drmp3
 *
pMP3
) {

2928 
	`drmp3_as£π
(
pMP3
 !
NULL
);

2930 
pMP3
->
pcmFømesC⁄sumedInMP3Føme
 = 0;

2931 
pMP3
->
pcmFømesRemaöögInMP3Føme
 = 0;

2932 
pMP3
->
cuºítPCMFøme
 = 0;

2933 
pMP3
->
d©aSize
 = 0;

2934 
pMP3
->
©End
 = 
DRMP3_FALSE
;

2935 
pMP3
->
§c
.
bö
[0] = 0;

2936 
pMP3
->
§c
.
bö
[1] = 0;

2937 
pMP3
->
§c
.
bö
[2] = 0;

2938 
pMP3
->
§c
.
bö
[3] = 0;

2939 
pMP3
->
§c
.
ˇche
.
ˇchedFømeCou¡
 = 0;

2940 
pMP3
->
§c
.
ˇche
.
iNextFøme
 = 0;

2941 
pMP3
->
§c
.
Ægo
.
löór
.
Æpha
 = 0;

2942 
pMP3
->
§c
.
Ægo
.
löór
.
isNextFømesLﬂded
 = 0;

2943 
pMP3
->
§c
.
Ægo
.
löór
.
isPªvFømesLﬂded
 = 0;

2945 
	`drmp3dec_öô
(&
pMP3
->
decodî
);

2946 
	}
}

2948 
drmp3_boﬁ32
 
	$drmp3_£ek_to_°¨t_of_°ªam
(
drmp3
 *
pMP3
) {

2949 
	`drmp3_as£π
(
pMP3
 !
NULL
);

2950 
	`drmp3_as£π
(
pMP3
->
⁄Sìk
 !
NULL
);

2953 i‡(!
	`drmp3__⁄_£ek
(
pMP3
, 0, 
drmp3_£ek_‹igö_°¨t
)) {

2954  
DRMP3_FALSE
;

2958 
	`drmp3_ª£t
(
pMP3
);

2959  
DRMP3_TRUE
;

2960 
	}
}

2962 
	$drmp3_gë_ˇched_pcm_‰ame_cou¡_‰om_§c
(
drmp3
 *
pMP3
) {

2963  (
pMP3
->
§c
.
ˇche
.
ˇchedFømeCou¡
 -ÖMP3->§c.ˇche.
iNextFøme
Ë+ (ËpMP3->§c.
Ægo
.
löór
.
Æpha
;

2964 
	}
}

2966 
	$drmp3_gë_pcm_‰ames_ªmaöög_ö_mp3_‰ame
(
drmp3
 *
pMP3
) {

2967 
Á˘‹
 = (Ë
pMP3
->
§c
.
c⁄fig
.
ßm∂eR©eOut
 / (ËpMP3->§c.c⁄fig.
ßm∂eR©eIn
;

2968 
‰ameCou¡PªSRC
 = 
	`drmp3_gë_ˇched_pcm_‰ame_cou¡_‰om_§c
(
pMP3
Ë+ÖMP3->
pcmFømesRemaöögInMP3Føme
;

2969  
‰ameCou¡PªSRC
 * 
Á˘‹
;

2970 
	}
}

2982 
drmp3_boﬁ32
 
	$drmp3_£ek_f‹w¨d_by_pcm_‰ames__bruã_f‹˚
(
drmp3
 *
pMP3
, 
drmp3_uöt64
 
‰ameOff£t
) {

2988 
drmp3_uöt64
 
maxFømesToRódAndDisˇrd
 = (drmp3_uöt64)(
DRMP3_MAX_PCM_FRAMES_PER_MP3_FRAME
 * 3 * (()
pMP3
->
§c
.
c⁄fig
.
ßm∂eR©eOut
 / (ÌMP3->§c.c⁄fig.
ßm∂eR©eIn
));

2991 
‰ameOff£t
 > 
maxFømesToRódAndDisˇrd
) {

2992 
pcmFømesRemaöögInCuºítMP3FømeF
 = 
	`drmp3_gë_pcm_‰ames_ªmaöög_ö_mp3_‰ame
(
pMP3
);

2993 
drmp3_uöt32
 
pcmFømesRemaöögInCuºítMP3Føme
 = (drmp3_uöt32)
pcmFømesRemaöögInCuºítMP3FømeF
;

2994 i‡(
‰ameOff£t
 > 
pcmFømesRemaöögInCuºítMP3Føme
) {

2995 
‰ameOff£t
 -
pcmFømesRemaöögInCuºítMP3Føme
;

2996 
pMP3
->
cuºítPCMFøme
 +
pcmFømesRemaöögInCuºítMP3Føme
;

2997 
pMP3
->
pcmFømesC⁄sumedInMP3Føme
 +pMP3->
pcmFømesRemaöögInMP3Føme
;

2998 
pMP3
->
pcmFømesRemaöögInMP3Føme
 = 0;

3003 
drmp3_uöt32
 
pcmFømeCou¡
 = 
	`drmp3_decode_√xt_‰ame_ex
(
pMP3
,ÖMP3->
pcmFømes
, 
DRMP3_FALSE
);

3004 i‡(
pcmFømeCou¡
 == 0) {

3010 
drmp3_uöt64
 
‰amesRód
 = 
	`drmp3_ªad_pcm_‰ames_f32
(
pMP3
, 
‰ameOff£t
, 
NULL
);

3011 i‡(
‰amesRód
 !
‰ameOff£t
) {

3012  
DRMP3_FALSE
;

3016 
drmp3_uöt64
 
‰amesRód
 = 
	`drmp3_ªad_pcm_‰ames_f32
(
pMP3
, 
‰ameOff£t
, 
NULL
);

3017 i‡(
‰amesRód
 !
‰ameOff£t
) {

3018  
DRMP3_FALSE
;

3022  
DRMP3_TRUE
;

3023 
	}
}

3025 
drmp3_boﬁ32
 
	$drmp3_£ek_to_pcm_‰ame__bruã_f‹˚
(
drmp3
 *
pMP3
, 
drmp3_uöt64
 
‰ameIndex
) {

3026 
	`drmp3_as£π
(
pMP3
 !
NULL
);

3028 i‡(
‰ameIndex
 =
pMP3
->
cuºítPCMFøme
) {

3029  
DRMP3_TRUE
;

3035 i‡(
‰ameIndex
 < 
pMP3
->
cuºítPCMFøme
) {

3037 i‡(!
	`drmp3_£ek_to_°¨t_of_°ªam
(
pMP3
)) {

3038  
DRMP3_FALSE
;

3042 
	`drmp3_as£π
(
‰ameIndex
 >
pMP3
->
cuºítPCMFøme
);

3043  
	`drmp3_£ek_f‹w¨d_by_pcm_‰ames__bruã_f‹˚
(
pMP3
, (
‰ameIndex
 -ÖMP3->
cuºítPCMFøme
));

3044 
	}
}

3046 
drmp3_boﬁ32
 
	$drmp3_föd_˛o£°_£ek_poöt
(
drmp3
 *
pMP3
, 
drmp3_uöt64
 
‰ameIndex
, 
drmp3_uöt32
 *
pSìkPoötIndex
) {

3047 
	`drmp3_as£π
(
pSìkPoötIndex
 !
NULL
);

3049 i‡(
‰ameIndex
 < 
pMP3
->
pSìkPoöts
[0].
pcmFømeIndex
) {

3050  
DRMP3_FALSE
;

3054 
drmp3_uöt32
 
iSìkPoöt
 = 0; iSìkPoöà< 
pMP3
->
£ekPoötCou¡
; ++iSeekPoint) {

3055 i‡(
pMP3
->
pSìkPoöts
[
iSìkPoöt
].
pcmFømeIndex
 > 
‰ameIndex
) {

3059 *
pSìkPoötIndex
 = 
iSìkPoöt
;

3062  
DRMP3_TRUE
;

3063 
	}
}

3065 
drmp3_boﬁ32
 
	$drmp3_£ek_to_pcm_‰ame__£ek_èbÀ
(
drmp3
 *
pMP3
, 
drmp3_uöt64
 
‰ameIndex
) {

3066 
	`drmp3_as£π
(
pMP3
 !
NULL
);

3067 
	`drmp3_as£π
(
pMP3
->
pSìkPoöts
 !
NULL
);

3068 
	`drmp3_as£π
(
pMP3
->
£ekPoötCou¡
 > 0);

3070 
drmp3_£ek_poöt
 
£ekPoöt
;

3073 
drmp3_uöt32
 
¥i‹SìkPoötIndex
;

3074 i‡(
	`drmp3_föd_˛o£°_£ek_poöt
(
pMP3
, 
‰ameIndex
, &
¥i‹SìkPoötIndex
)) {

3075 
£ekPoöt
 = 
pMP3
->
pSìkPoöts
[
¥i‹SìkPoötIndex
];

3077 
£ekPoöt
.
£ekPosInByãs
 = 0;

3078 
£ekPoöt
.
pcmFømeIndex
 = 0;

3079 
£ekPoöt
.
mp3FømesToDisˇrd
 = 0;

3080 
£ekPoöt
.
pcmFømesToDisˇrd
 = 0;

3084 i‡(!
	`drmp3__⁄_£ek_64
(
pMP3
, 
£ekPoöt
.
£ekPosInByãs
, 
drmp3_£ek_‹igö_°¨t
)) {

3085  
DRMP3_FALSE
;

3089 
	`drmp3_ª£t
(
pMP3
);

3092 
drmp3_uöt16
 
iMP3Føme
 = 0; iMP3Fømê< 
£ekPoöt
.
mp3FømesToDisˇrd
; ++iMP3Frame) {

3094 
drmp3d_ßm∂e_t
 *
pPCMFømes
 = 
NULL
;

3095 i‡(
iMP3Føme
 =
£ekPoöt
.
mp3FømesToDisˇrd
 - 1) {

3096 
pPCMFømes
 = (
drmp3d_ßm∂e_t
 *Ë
pMP3
->
pcmFømes
;

3100 
drmp3_uöt32
 
pcmFømesRódPªSRC
 = 
	`drmp3_decode_√xt_‰ame_ex
(
pMP3
, 
pPCMFømes
, 
DRMP3_TRUE
);

3101 i‡(
pcmFømesRódPªSRC
 == 0) {

3102  
DRMP3_FALSE
;

3107 
pMP3
->
cuºítPCMFøme
 = 
£ekPoöt
.
pcmFømeIndex
 - sìkPoöt.
pcmFømesToDisˇrd
;

3112 
pMP3
->
§c
.
Ægo
.
löór
.
Æpha
 =

3113 
pMP3
->
cuºítPCMFøme
 * ((ËpMP3->
§c
.
c⁄fig
.
ßm∂eR©eIn
 /ÖMP3->§c.c⁄fig.
ßm∂eR©eOut
);

3114 
pMP3
->
§c
.
Ægo
.
löór
.
Æpha
 =ÖMP3->§c.Ægo.löór.Æph®- (
drmp3_uöt32
) (pMP3->src.algo.linear.alpha);

3115 i‡(
pMP3
->
§c
.
Ægo
.
löór
.
Æpha
 > 0) {

3116 
pMP3
->
§c
.
Ægo
.
löór
.
isPªvFømesLﬂded
 = 1;

3121 
drmp3_uöt64
 
À·ovîFømes
 = 
‰ameIndex
 - 
pMP3
->
cuºítPCMFøme
;

3122  
	`drmp3_£ek_f‹w¨d_by_pcm_‰ames__bruã_f‹˚
(
pMP3
, 
À·ovîFømes
);

3123 
	}
}

3125 
drmp3_boﬁ32
 
	$drmp3_£ek_to_pcm_‰ame
(
drmp3
 *
pMP3
, 
drmp3_uöt64
 
‰ameIndex
) {

3126 i‡(
pMP3
 =
NULL
 ||ÖMP3->
⁄Sìk
 == NULL) {

3127  
DRMP3_FALSE
;

3130 i‡(
‰ameIndex
 == 0) {

3131  
	`drmp3_£ek_to_°¨t_of_°ªam
(
pMP3
);

3135 i‡(
pMP3
->
pSìkPoöts
 !
NULL
 &&ÖMP3->
£ekPoötCou¡
 > 0) {

3136  
	`drmp3_£ek_to_pcm_‰ame__£ek_èbÀ
(
pMP3
, 
‰ameIndex
);

3138  
	`drmp3_£ek_to_pcm_‰ame__bruã_f‹˚
(
pMP3
, 
‰ameIndex
);

3140 
	}
}

3142 
drmp3_boﬁ32


3143 
	$drmp3_gë_mp3_™d_pcm_‰ame_cou¡
(
drmp3
 *
pMP3
, 
drmp3_uöt64
 *
pMP3FømeCou¡
, drmp3_uöt64 *
pPCMFømeCou¡
) {

3144 i‡(
pMP3
 =
NULL
) {

3145  
DRMP3_FALSE
;

3152 i‡(
pMP3
->
⁄Sìk
 =
NULL
) {

3153  
DRMP3_FALSE
;

3157 
drmp3_uöt64
 
cuºítPCMFøme
 = 
pMP3
->currentPCMFrame;

3159 i‡(!
	`drmp3_£ek_to_°¨t_of_°ªam
(
pMP3
)) {

3160  
DRMP3_FALSE
;

3163 
drmp3_uöt64
 
tŸÆPCMFømeCou¡
 = 0;

3164 
drmp3_uöt64
 
tŸÆMP3FømeCou¡
 = 0;

3166 
tŸÆPCMFømeCou¡Fø˘i⁄ÆP¨t
 = 0;

3168 
drmp3_uöt32
 
pcmFømesInCuºítMP3FømeIn
 = 
	`drmp3_decode_√xt_‰ame_ex
(
pMP3
, 
NULL
, 
DRMP3_FALSE
);

3169 i‡(
pcmFømesInCuºítMP3FømeIn
 == 0) {

3173 
§cR©io
 = (Ë
pMP3
->
mp3FømeSam∂eR©e
 / (ËpMP3->
ßm∂eR©e
;

3174 
	`drmp3_as£π
(
§cR©io
 > 0);

3176 
pcmFømesInCuºítMP3FømeOutF
 =

3177 
tŸÆPCMFømeCou¡Fø˘i⁄ÆP¨t
 + (
pcmFømesInCuºítMP3FømeIn
 / 
§cR©io
);

3178 
drmp3_uöt32
 
pcmFømesInCuºítMP3FømeOut
 = (drmp3_uöt32Ë
pcmFømesInCuºítMP3FømeOutF
;

3179 
tŸÆPCMFømeCou¡Fø˘i⁄ÆP¨t
 = 
pcmFømesInCuºítMP3FømeOutF
 - 
pcmFømesInCuºítMP3FømeOut
;

3180 
tŸÆPCMFømeCou¡
 +
pcmFømesInCuºítMP3FømeOut
;

3181 
tŸÆMP3FømeCou¡
 += 1;

3185 i‡(!
	`drmp3_£ek_to_°¨t_of_°ªam
(
pMP3
)) {

3186  
DRMP3_FALSE
;

3189 i‡(!
	`drmp3_£ek_to_pcm_‰ame
(
pMP3
, 
cuºítPCMFøme
)) {

3190  
DRMP3_FALSE
;

3193 i‡(
pMP3FømeCou¡
 !
NULL
) {

3194 *
pMP3FømeCou¡
 = 
tŸÆMP3FømeCou¡
;

3196 i‡(
pPCMFømeCou¡
 !
NULL
) {

3197 *
pPCMFømeCou¡
 = 
tŸÆPCMFømeCou¡
;

3200  
DRMP3_TRUE
;

3201 
	}
}

3203 
drmp3_uöt64
 
	$drmp3_gë_pcm_‰ame_cou¡
(
drmp3
 *
pMP3
) {

3204 
drmp3_uöt64
 
tŸÆPCMFømeCou¡
;

3205 i‡(!
	`drmp3_gë_mp3_™d_pcm_‰ame_cou¡
(
pMP3
, 
NULL
, &
tŸÆPCMFømeCou¡
)) {

3209  
tŸÆPCMFømeCou¡
;

3210 
	}
}

3212 
drmp3_uöt64
 
	$drmp3_gë_mp3_‰ame_cou¡
(
drmp3
 *
pMP3
) {

3213 
drmp3_uöt64
 
tŸÆMP3FømeCou¡
;

3214 i‡(!
	`drmp3_gë_mp3_™d_pcm_‰ame_cou¡
(
pMP3
, &
tŸÆMP3FømeCou¡
, 
NULL
)) {

3218  
tŸÆMP3FømeCou¡
;

3219 
	}
}

3221 
	$drmp3__accumuœã_ru¬ög_pcm_‰ame_cou¡
(
drmp3
 *
pMP3
, 
drmp3_uöt32
 
pcmFømeCou¡In
,

3222 
drmp3_uöt64
 *
pRu¬ögPCMFømeCou¡
,

3223 *
pRu¬ögPCMFømeCou¡Fø˘i⁄ÆP¨t
) {

3224 
§cR©io
 = (Ë
pMP3
->
mp3FømeSam∂eR©e
 / (ËpMP3->
ßm∂eR©e
;

3225 
	`drmp3_as£π
(
§cR©io
 > 0);

3227 
pcmFømeCou¡OutF
 = *
pRu¬ögPCMFømeCou¡Fø˘i⁄ÆP¨t
 + (
pcmFømeCou¡In
 / 
§cR©io
);

3228 
drmp3_uöt32
 
pcmFømeCou¡Out
 = (drmp3_uöt32Ë
pcmFømeCou¡OutF
;

3229 *
pRu¬ögPCMFømeCou¡Fø˘i⁄ÆP¨t
 = 
pcmFømeCou¡OutF
 - 
pcmFømeCou¡Out
;

3230 *
pRu¬ögPCMFømeCou¡
 +
pcmFømeCou¡Out
;

3231 
	}
}

3234 
drmp3_uöt64
 
	mbyãPos
;

3235 
drmp3_uöt64
 
	mpcmFømeIndex
;

3236 } 
	tdrmp3__£ekög_mp3_‰ame_öfo
;

3238 
drmp3_boﬁ32
 
	$drmp3_ˇlcuœã_£ek_poöts
(
drmp3
 *
pMP3
, 
drmp3_uöt32
 *
pSìkPoötCou¡
, 
drmp3_£ek_poöt
 *
pSìkPoöts
) {

3239 i‡(
pMP3
 =
NULL
 || 
pSìkPoötCou¡
 =NULL || 
pSìkPoöts
 == NULL) {

3240  
DRMP3_FALSE
;

3243 
drmp3_uöt32
 
£ekPoötCou¡
 = *
pSìkPoötCou¡
;

3244 i‡(
£ekPoötCou¡
 == 0) {

3245  
DRMP3_FALSE
;

3249 
drmp3_uöt64
 
cuºítPCMFøme
 = 
pMP3
->currentPCMFrame;

3252 
drmp3_uöt64
 
tŸÆMP3FømeCou¡
;

3253 
drmp3_uöt64
 
tŸÆPCMFømeCou¡
;

3254 i‡(!
	`drmp3_gë_mp3_™d_pcm_‰ame_cou¡
(
pMP3
, &
tŸÆMP3FømeCou¡
, &
tŸÆPCMFømeCou¡
)) {

3255  
DRMP3_FALSE
;

3259 i‡(
tŸÆMP3FømeCou¡
 < 
DRMP3_SEEK_LEADING_MP3_FRAMES
 + 1) {

3260 
£ekPoötCou¡
 = 1;

3261 
pSìkPoöts
[0].
£ekPosInByãs
 = 0;

3262 
pSìkPoöts
[0].
pcmFømeIndex
 = 0;

3263 
pSìkPoöts
[0].
mp3FømesToDisˇrd
 = 0;

3264 
pSìkPoöts
[0].
pcmFømesToDisˇrd
 = 0;

3266 i‡(
£ekPoötCou¡
 > 
tŸÆMP3FømeCou¡
 - 1) {

3267 
£ekPoötCou¡
 = (
drmp3_uöt32
Ë
tŸÆMP3FømeCou¡
 - 1;

3270 
drmp3_uöt64
 
pcmFømesBëwìnSìkPoöts
 = 
tŸÆPCMFømeCou¡
 / (
£ekPoötCou¡
 + 1);

3274 i‡(!
	`drmp3_£ek_to_°¨t_of_°ªam
(
pMP3
)) {

3275  
DRMP3_FALSE
;

3280 
drmp3__£ekög_mp3_‰ame_öfo
 
mp3FømeInfo
[
DRMP3_SEEK_LEADING_MP3_FRAMES
 + 1];

3282 
drmp3_uöt64
 
ru¬ögPCMFømeCou¡
 = 0;

3283 
ru¬ögPCMFømeCou¡Fø˘i⁄ÆP¨t
 = 0;

3286 
iMP3Føme
 = 0; iMP3Fømê< 
DRMP3_SEEK_LEADING_MP3_FRAMES
 + 1; ++iMP3Frame) {

3288 
	`drmp3_as£π
(
pMP3
->
°ªamCurs‹
 >pMP3->
d©aSize
);

3289 
mp3FømeInfo
[
iMP3Føme
].
byãPos
 = 
pMP3
->
°ªamCurs‹
 -ÖMP3->
d©aSize
;

3290 
mp3FømeInfo
[
iMP3Føme
].
pcmFømeIndex
 = 
ru¬ögPCMFømeCou¡
;

3293 
drmp3_uöt32
 
pcmFømesInCuºítMP3FømeIn
 = 
	`drmp3_decode_√xt_‰ame_ex
(
pMP3
, 
NULL
, 
DRMP3_FALSE
);

3294 i‡(
pcmFømesInCuºítMP3FømeIn
 == 0) {

3295  
DRMP3_FALSE
;

3298 
	`drmp3__accumuœã_ru¬ög_pcm_‰ame_cou¡
(
pMP3
, 
pcmFømesInCuºítMP3FømeIn
, &
ru¬ögPCMFømeCou¡
,

3299 &
ru¬ögPCMFømeCou¡Fø˘i⁄ÆP¨t
);

3304 
drmp3_uöt64
 
√xtT¨gëPCMFøme
 = 0;

3305 
drmp3_uöt32
 
iSìkPoöt
 = 0; iSìkPoöà< 
£ekPoötCou¡
; ++iSeekPoint) {

3306 
√xtT¨gëPCMFøme
 +
pcmFømesBëwìnSìkPoöts
;

3309 i‡(
√xtT¨gëPCMFøme
 < 
ru¬ögPCMFømeCou¡
) {

3311 
pSìkPoöts
[
iSìkPoöt
].
£ekPosInByãs
 = 
mp3FømeInfo
[0].
byãPos
;

3312 
pSìkPoöts
[
iSìkPoöt
].
pcmFømeIndex
 = 
√xtT¨gëPCMFøme
;

3313 
pSìkPoöts
[
iSìkPoöt
].
mp3FømesToDisˇrd
 = 
DRMP3_SEEK_LEADING_MP3_FRAMES
;

3314 
pSìkPoöts
[
iSìkPoöt
].
pcmFømesToDisˇrd
 = (
drmp3_uöt16
Ë(
√xtT¨gëPCMFøme
 - 
mp3FømeInfo
[

3315 
DRMP3_SEEK_LEADING_MP3_FRAMES
 - 1].
pcmFømeIndex
);

3320 
size_t
 
i
 = 0; i < 
	`drmp3_cou¡of
(
mp3FømeInfo
) - 1; ++i) {

3321 
mp3FømeInfo
[
i
] = mp3FrameInfo[i + 1];

3325 
mp3FømeInfo
[
	`drmp3_cou¡of
(mp3FømeInfoË- 1].
byãPos
 = 
pMP3
->
°ªamCurs‹
 -ÖMP3->
d©aSize
;

3326 
mp3FømeInfo
[
	`drmp3_cou¡of
(mp3FømeInfoË- 1].
pcmFømeIndex
 = 
ru¬ögPCMFømeCou¡
;

3330 
drmp3_uöt32
 
pcmFømesInCuºítMP3FømeIn
 = 
	`drmp3_decode_√xt_‰ame_ex
(
pMP3
, 
NULL
, 
DRMP3_TRUE
);

3331 i‡(
pcmFømesInCuºítMP3FømeIn
 == 0) {

3332 
pSìkPoöts
[
iSìkPoöt
].
£ekPosInByãs
 = 
mp3FømeInfo
[0].
byãPos
;

3333 
pSìkPoöts
[
iSìkPoöt
].
pcmFømeIndex
 = 
√xtT¨gëPCMFøme
;

3334 
pSìkPoöts
[
iSìkPoöt
].
mp3FømesToDisˇrd
 = 
DRMP3_SEEK_LEADING_MP3_FRAMES
;

3335 
pSìkPoöts
[
iSìkPoöt
].
pcmFømesToDisˇrd
 = (
drmp3_uöt16
Ë(
√xtT¨gëPCMFøme
 - 
mp3FømeInfo
[

3336 
DRMP3_SEEK_LEADING_MP3_FRAMES
 - 1].
pcmFømeIndex
);

3340 
	`drmp3__accumuœã_ru¬ög_pcm_‰ame_cou¡
(
pMP3
, 
pcmFømesInCuºítMP3FømeIn
, &
ru¬ögPCMFømeCou¡
,

3341 &
ru¬ögPCMFømeCou¡Fø˘i⁄ÆP¨t
);

3347 i‡(!
	`drmp3_£ek_to_°¨t_of_°ªam
(
pMP3
)) {

3348  
DRMP3_FALSE
;

3350 i‡(!
	`drmp3_£ek_to_pcm_‰ame
(
pMP3
, 
cuºítPCMFøme
)) {

3351  
DRMP3_FALSE
;

3355 *
pSìkPoötCou¡
 = 
£ekPoötCou¡
;

3356  
DRMP3_TRUE
;

3357 
	}
}

3359 
drmp3_boﬁ32
 
	$drmp3_böd_£ek_èbÀ
(
drmp3
 *
pMP3
, 
drmp3_uöt32
 
£ekPoötCou¡
, 
drmp3_£ek_poöt
 *
pSìkPoöts
) {

3360 i‡(
pMP3
 =
NULL
) {

3361  
DRMP3_FALSE
;

3364 i‡(
£ekPoötCou¡
 =0 || 
pSìkPoöts
 =
NULL
) {

3366 
pMP3
->
£ekPoötCou¡
 = 0;

3367 
pMP3
->
pSìkPoöts
 = 
NULL
;

3370 
pMP3
->
£ekPoötCou¡
 = seekPointCount;

3371 
pMP3
->
pSìkPoöts
 =ÖSeekPoints;

3374  
DRMP3_TRUE
;

3375 
	}
}

3378 *
	$drmp3__fuŒ_ªad_™d_˛o£_f32
(
drmp3
 *
pMP3
, 
drmp3_c⁄fig
 *
pC⁄fig
, 
drmp3_uöt64
 *
pTŸÆFømeCou¡
) {

3379 
	`drmp3_as£π
(
pMP3
 !
NULL
);

3381 
drmp3_uöt64
 
tŸÆFømesRód
 = 0;

3382 
drmp3_uöt64
 
‰amesC≠acôy
 = 0;

3383 *
pFømes
 = 
NULL
;

3385 
ãmp
[4096];

3387 
drmp3_uöt64
 
‰amesToRódRightNow
 = 
	`drmp3_cou¡of
(
ãmp
Ë/ 
pMP3
->
ch™√ls
;

3388 
drmp3_uöt64
 
‰amesJu°Ród
 = 
	`drmp3_ªad_pcm_‰ames_f32
(
pMP3
, 
‰amesToRódRightNow
, 
ãmp
);

3389 i‡(
‰amesJu°Ród
 == 0) {

3394 i‡(
‰amesC≠acôy
 < 
tŸÆFømesRód
 + 
‰amesJu°Ród
) {

3395 
‰amesC≠acôy
 *= 2;

3396 i‡(
‰amesC≠acôy
 < 
tŸÆFømesRód
 + 
‰amesJu°Ród
) {

3397 
‰amesC≠acôy
 = 
tŸÆFømesRód
 + 
‰amesJu°Ród
;

3400 
drmp3_uöt64
 
√wFømesBuf„rSize
 = 
‰amesC≠acôy
 * 
pMP3
->
ch™√ls
 * ();

3401 i‡(
√wFømesBuf„rSize
 > 
DRMP3_SIZE_MAX
) {

3405 *
pNewFømes
 = (*Ë
	`drmp3_ªÆloc
(
pFømes
, (
size_t
Ë
√wFømesBuf„rSize
);

3406 i‡(
pNewFømes
 =
NULL
) {

3407 
	`drmp3_‰ì
(
pFømes
);

3411 
pFømes
 = 
pNewFømes
;

3414 
	`drmp3_c›y_mem‹y
(
pFømes
 + 
tŸÆFømesRód
 * 
pMP3
->
ch™√ls
, 
ãmp
,

3415 (
size_t
Ë(
‰amesJu°Ród
 * 
pMP3
->
ch™√ls
 * ()));

3416 
tŸÆFømesRód
 +
‰amesJu°Ród
;

3419 i‡(
‰amesJu°Ród
 !
‰amesToRódRightNow
) {

3424 i‡(
pC⁄fig
 !
NULL
) {

3425 
pC⁄fig
->
ouçutCh™√ls
 = 
pMP3
->
ch™√ls
;

3426 
pC⁄fig
->
ouçutSam∂eR©e
 = 
pMP3
->
ßm∂eR©e
;

3429 
	`drmp3_unöô
(
pMP3
);

3431 i‡(
pTŸÆFømeCou¡
Ë*pTŸÆFømeCou¡ = 
tŸÆFømesRód
;

3432  
pFømes
;

3433 
	}
}

3435 *
	$drmp3_›í_™d_ªad_f32
(
drmp3_ªad_¥oc
 
⁄Ród
, 
drmp3_£ek_¥oc
 
⁄Sìk
, *
pU£rD©a
, 
drmp3_c⁄fig
 *
pC⁄fig
,

3436 
drmp3_uöt64
 *
pTŸÆFømeCou¡
) {

3437 
drmp3
 
mp3
;

3438 i‡(!
	`drmp3_öô
(&
mp3
, 
⁄Ród
, 
⁄Sìk
, 
pU£rD©a
, 
pC⁄fig
)) {

3439  
NULL
;

3442  
	`drmp3__fuŒ_ªad_™d_˛o£_f32
(&
mp3
, 
pC⁄fig
, 
pTŸÆFømeCou¡
);

3443 
	}
}

3445 *
	$drmp3_›í_mem‹y_™d_ªad_f32
(c⁄° *
pD©a
, 
size_t
 
d©aSize
, 
drmp3_c⁄fig
 *
pC⁄fig
,

3446 
drmp3_uöt64
 *
pTŸÆFømeCou¡
) {

3447 
drmp3
 
mp3
;

3448 i‡(!
	`drmp3_öô_mem‹y
(&
mp3
, 
pD©a
, 
d©aSize
, 
pC⁄fig
)) {

3449  
NULL
;

3452  
	`drmp3__fuŒ_ªad_™d_˛o£_f32
(&
mp3
, 
pC⁄fig
, 
pTŸÆFømeCou¡
);

3453 
	}
}

3455 #i‚de‡
DR_MP3_NO_STDIO


3457 *
	$drmp3_›í_fûe_™d_ªad_f32
(c⁄° *
fûeP©h
, 
drmp3_c⁄fig
 *
pC⁄fig
, 
drmp3_uöt64
 *
pTŸÆFømeCou¡
) {

3458 
drmp3
 
mp3
;

3459 i‡(!
	`drmp3_öô_fûe
(&
mp3
, 
fûeP©h
, 
pC⁄fig
)) {

3460  
NULL
;

3463  
	`drmp3__fuŒ_ªad_™d_˛o£_f32
(&
mp3
, 
pC⁄fig
, 
pTŸÆFømeCou¡
);

3464 
	}
}

3468 
	$drmp3_‰ì
(*
p
) {

3469 
	`DRMP3_FREE
(
p
);

3470 
	}
}

	@Examples/dr_wav.h

148 #i‚de‡
dr_wav_h


149 
	#dr_wav_h


	)

151 
	~<°ddef.h
>

153 #i‡
deföed
(
_MSC_VER
) && _MSC_VER < 1600

154 sig√d 
	tdrwav_öt8
;

155 
	tdrwav_uöt8
;

156 sig√d 
	tdrwav_öt16
;

157 
	tdrwav_uöt16
;

158 sig√d 
	tdrwav_öt32
;

159 
	tdrwav_uöt32
;

160 sig√d 
	t__öt64
 
	tdrwav_öt64
;

161 
	t__öt64
 
	tdrwav_uöt64
;

163 
	~<°döt.h
>

164 
öt8_t
 
	tdrwav_öt8
;

165 
uöt8_t
 
	tdrwav_uöt8
;

166 
öt16_t
 
	tdrwav_öt16
;

167 
uöt16_t
 
	tdrwav_uöt16
;

168 
öt32_t
 
	tdrwav_öt32
;

169 
uöt32_t
 
	tdrwav_uöt32
;

170 
öt64_t
 
	tdrwav_öt64
;

171 
uöt64_t
 
	tdrwav_uöt64
;

173 
drwav_uöt8
 
	tdrwav_boﬁ8
;

174 
drwav_uöt32
 
	tdrwav_boﬁ32
;

175 
	#DRWAV_TRUE
 1

	)

176 
	#DRWAV_FALSE
 0

	)

178 #ifde‡
__˝lu•lus


183 
	#DR_WAVE_FORMAT_PCM
 0x1

	)

184 
	#DR_WAVE_FORMAT_ADPCM
 0x2

	)

185 
	#DR_WAVE_FORMAT_IEEE_FLOAT
 0x3

	)

186 
	#DR_WAVE_FORMAT_ALAW
 0x6

	)

187 
	#DR_WAVE_FORMAT_MULAW
 0x7

	)

188 
	#DR_WAVE_FORMAT_DVI_ADPCM
 0x11

	)

189 
	#DR_WAVE_FORMAT_EXTENSIBLE
 0xFFFE

	)

192 #i‚de‡
DRWAV_MAX_SMPL_LOOPS


193 
	#DRWAV_MAX_SMPL_LOOPS
 1

	)

197 
	#DRWAV_SEQUENTIAL
 0x00000001

	)

201 
drwav_£ek_‹igö_°¨t
,

202 
drwav_£ek_‹igö_cuºít


203 } 
	tdrwav_£ek_‹igö
;

207 
drwav_c⁄èöî_riff
,

208 
drwav_c⁄èöî_w64


209 } 
	tdrwav_c⁄èöî
;

215 
drwav_uöt8
 
fourcc
[4];

216 
drwav_uöt8
 
guid
[16];

217 } 
id
;

220 
drwav_uöt64
 
sizeInByãs
;

224 
∑ddögSize
;

225 } 
	tdrwav_chunk_hódî
;

237 
size_t
 (* 
	tdrwav_ªad_¥oc
)(* 
	tpU£rD©a
, * 
	tpBuf„rOut
, 
	tsize_t
 
	tbyãsToRód
);

248 
size_t
 (* 
	tdrwav_wrôe_¥oc
)(* 
	tpU£rD©a
, c⁄° * 
	tpD©a
, 
	tsize_t
 
	tbyãsToWrôe
);

260 
drwav_boﬁ32
 (* 
	tdrwav_£ek_¥oc
)(* 
	tpU£rD©a
, 
	toff£t
, 
	tdrwav_£ek_‹igö
 
	t‹igö
);

276 
drwav_uöt64
 (* 
	tdrwav_chunk_¥oc
)(* 
	tpChunkU£rD©a
, 
	tdrwav_ªad_¥oc
 
	t⁄Ród
, 
	tdrwav_£ek_¥oc
 
	t⁄Sìk
, * 
	tpRódSìkU£rD©a
, c⁄° 
	tdrwav_chunk_hódî
* 
	tpChunkHódî
);

281 c⁄° 
drwav_uöt8
* 
d©a
;

282 
size_t
 
d©aSize
;

283 
size_t
 
cuºítRódPos
;

284 } 
	tdrwav__mem‹y_°ªam
;

289 ** 
µD©a
;

290 
size_t
* 
pD©aSize
;

291 
size_t
 
d©aSize
;

292 
size_t
 
d©aC≠acôy
;

293 
size_t
 
cuºítWrôePos
;

294 } 
	tdrwav__mem‹y_°ªam_wrôe
;

298 
drwav_c⁄èöî
 
c⁄èöî
;

299 
drwav_uöt32
 
f‹m©
;

300 
drwav_uöt32
 
ch™√ls
;

301 
drwav_uöt32
 
ßm∂eR©e
;

302 
drwav_uöt32
 
bôsPîSam∂e
;

303 } 
	tdrwav_d©a_f‹m©
;

309 
drwav_uöt16
 
f‹m©Tag
;

312 
drwav_uöt16
 
ch™√ls
;

315 
drwav_uöt32
 
ßm∂eR©e
;

318 
drwav_uöt32
 
avgByãsPîSec
;

321 
drwav_uöt16
 
blockAlign
;

324 
drwav_uöt16
 
bôsPîSam∂e
;

327 
drwav_uöt16
 
exãndedSize
;

332 
drwav_uöt16
 
vÆidBôsPîSam∂e
;

335 
drwav_uöt32
 
ch™√lMask
;

338 
drwav_uöt8
 
subF‹m©
[16];

339 } 
	tdrwav_fmt
;

343 
drwav_uöt32
 
cuePoötId
;

344 
drwav_uöt32
 
ty≥
;

345 
drwav_uöt32
 
°¨t
;

346 
drwav_uöt32
 
íd
;

347 
drwav_uöt32
 
‰a˘i⁄
;

348 
drwav_uöt32
 
∂ayCou¡
;

349 } 
	tdrwav_sm∂_lo›
;

353 
drwav_uöt32
 
m™uÁ˘uªr
;

354 
drwav_uöt32
 
¥odu˘
;

355 
drwav_uöt32
 
ßm∂ePîiod
;

356 
drwav_uöt32
 
midiUnôyNŸes
;

357 
drwav_uöt32
 
midiPôchFø˘i⁄
;

358 
drwav_uöt32
 
sm±eF‹m©
;

359 
drwav_uöt32
 
sm±eOff£t
;

360 
drwav_uöt32
 
numSam∂eLo›s
;

361 
drwav_uöt32
 
ßm∂îD©a
;

362 
drwav_sm∂_lo›
 
lo›s
[
DRWAV_MAX_SMPL_LOOPS
];

363 } 
	tdrwav_sm∂
;

368 
drwav_ªad_¥oc
 
⁄Ród
;

371 
drwav_wrôe_¥oc
 
⁄Wrôe
;

374 
drwav_£ek_¥oc
 
⁄Sìk
;

377 * 
pU£rD©a
;

381 
drwav_c⁄èöî
 
c⁄èöî
;

385 
drwav_fmt
 
fmt
;

388 
drwav_uöt32
 
ßm∂eR©e
;

391 
drwav_uöt16
 
ch™√ls
;

394 
drwav_uöt16
 
bôsPîSam∂e
;

397 
drwav_uöt16
 
å™¶©edF‹m©Tag
;

400 
drwav_uöt64
 
tŸÆPCMFømeCou¡
;

404 
drwav_uöt64
 
d©aChunkD©aSize
;

407 
drwav_uöt64
 
d©aChunkD©aPos
;

410 
drwav_uöt64
 
byãsRemaöög
;

415 
drwav_uöt64
 
d©aChunkD©aSizeT¨gëWrôe
;

418 
drwav_boﬁ32
 
isSequítülWrôe
;

422 
drwav_sm∂
 
sm∂
;

426 
drwav__mem‹y_°ªam
 
mem‹ySåóm
;

427 
drwav__mem‹y_°ªam_wrôe
 
mem‹ySåómWrôe
;

432 
drwav_uöt64
 
iCuºítSam∂e
;

433 } 
com¥es£d
;

438 
drwav_uöt32
 
byãsRemaöögInBlock
;

439 
drwav_uöt16
 
¥edi˘‹
[2];

440 
drwav_öt32
 
dñè
[2];

441 
drwav_öt32
 
ˇchedSam∂es
[4];

442 
drwav_uöt32
 
ˇchedSam∂eCou¡
;

443 
drwav_öt32
 
¥evSam∂es
[2][2];

444 } 
mßdpcm
;

449 
drwav_uöt32
 
byãsRemaöögInBlock
;

450 
drwav_öt32
 
¥edi˘‹
[2];

451 
drwav_öt32
 
°ïIndex
[2];

452 
drwav_öt32
 
ˇchedSam∂es
[16];

453 
drwav_uöt32
 
ˇchedSam∂eCou¡
;

454 } 
ima
;

457 
drwav_uöt64
 
tŸÆSam∂eCou¡
;

458 } 
	tdrwav
;

491 
drwav_boﬁ32
 
drwav_öô
(
drwav
* 
pWav
, 
drwav_ªad_¥oc
 
⁄Ród
, 
drwav_£ek_¥oc
 
⁄Sìk
, * 
pU£rD©a
);

492 
drwav_boﬁ32
 
drwav_öô_ex
(
drwav
* 
pWav
, 
drwav_ªad_¥oc
 
⁄Ród
, 
drwav_£ek_¥oc
 
⁄Sìk
, 
drwav_chunk_¥oc
 
⁄Chunk
, * 
pRódSìkU£rD©a
, * 
pChunkU£rD©a
, 
drwav_uöt32
 
Êags
);

514 
drwav_boﬁ32
 
drwav_öô_wrôe
(
drwav
* 
pWav
, c⁄° 
drwav_d©a_f‹m©
* 
pF‹m©
, 
drwav_wrôe_¥oc
 
⁄Wrôe
, 
drwav_£ek_¥oc
 
⁄Sìk
, * 
pU£rD©a
);

515 
drwav_boﬁ32
 
drwav_öô_wrôe_£quítül
(
drwav
* 
pWav
, c⁄° 
drwav_d©a_f‹m©
* 
pF‹m©
, 
drwav_uöt64
 
tŸÆSam∂eCou¡
, 
drwav_wrôe_¥oc
 
⁄Wrôe
, * 
pU£rD©a
);

520 
drwav_unöô
(
drwav
* 
pWav
);

540 
drwav
* 
drwav_›í
(
drwav_ªad_¥oc
 
⁄Ród
, 
drwav_£ek_¥oc
 
⁄Sìk
, * 
pU£rD©a
);

541 
drwav
* 
drwav_›í_ex
(
drwav_ªad_¥oc
 
⁄Ród
, 
drwav_£ek_¥oc
 
⁄Sìk
, 
drwav_chunk_¥oc
 
⁄Chunk
, * 
pRódSìkU£rD©a
, * 
pChunkU£rD©a
, 
drwav_uöt32
 
Êags
);

560 
drwav
* 
drwav_›í_wrôe
(c⁄° 
drwav_d©a_f‹m©
* 
pF‹m©
, 
drwav_wrôe_¥oc
 
⁄Wrôe
, 
drwav_£ek_¥oc
 
⁄Sìk
, * 
pU£rD©a
);

561 
drwav
* 
drwav_›í_wrôe_£quítül
(c⁄° 
drwav_d©a_f‹m©
* 
pF‹m©
, 
drwav_uöt64
 
tŸÆSam∂eCou¡
, 
drwav_wrôe_¥oc
 
⁄Wrôe
, * 
pU£rD©a
);

566 
drwav_˛o£
(
drwav
* 
pWav
);

578 
size_t
 
drwav_ªad_øw
(
drwav
* 
pWav
, size_à
byãsToRód
, * 
pBuf„rOut
);

590 
drwav_uöt64
 
drwav_ªad_pcm_‰ames
(
drwav
* 
pWav
, drwav_uöt64 
‰amesToRód
, * 
pBuf„rOut
);

595 
drwav_boﬁ32
 
drwav_£ek_to_pcm_‰ame
(
drwav
* 
pWav
, 
drwav_uöt64
 
èrgëFømeIndex
);

601 
size_t
 
drwav_wrôe_øw
(
drwav
* 
pWav
, size_à
byãsToWrôe
, c⁄° * 
pD©a
);

606 
drwav_uöt64
 
drwav_wrôe_pcm_‰ames
(
drwav
* 
pWav
, drwav_uöt64 
‰amesToWrôe
, c⁄° * 
pD©a
);

610 #i‚de‡
DR_WAV_NO_CONVERSION_API


617 
drwav_uöt64
 
drwav_ªad_pcm_‰ames_s16
(
drwav
* 
pWav
, drwav_uöt64 
‰amesToRód
, 
drwav_öt16
* 
pBuf„rOut
);

620 
drwav_u8_to_s16
(
drwav_öt16
* 
pOut
, c⁄° 
drwav_uöt8
* 
pIn
, 
size_t
 
ßm∂eCou¡
);

623 
drwav_s24_to_s16
(
drwav_öt16
* 
pOut
, c⁄° 
drwav_uöt8
* 
pIn
, 
size_t
 
ßm∂eCou¡
);

626 
drwav_s32_to_s16
(
drwav_öt16
* 
pOut
, c⁄° 
drwav_öt32
* 
pIn
, 
size_t
 
ßm∂eCou¡
);

629 
drwav_f32_to_s16
(
drwav_öt16
* 
pOut
, c⁄° * 
pIn
, 
size_t
 
ßm∂eCou¡
);

632 
drwav_f64_to_s16
(
drwav_öt16
* 
pOut
, c⁄° * 
pIn
, 
size_t
 
ßm∂eCou¡
);

635 
drwav_Æaw_to_s16
(
drwav_öt16
* 
pOut
, c⁄° 
drwav_uöt8
* 
pIn
, 
size_t
 
ßm∂eCou¡
);

638 
drwav_muœw_to_s16
(
drwav_öt16
* 
pOut
, c⁄° 
drwav_uöt8
* 
pIn
, 
size_t
 
ßm∂eCou¡
);

647 
drwav_uöt64
 
drwav_ªad_pcm_‰ames_f32
(
drwav
* 
pWav
, drwav_uöt64 
‰amesToRód
, * 
pBuf„rOut
);

650 
drwav_u8_to_f32
(* 
pOut
, c⁄° 
drwav_uöt8
* 
pIn
, 
size_t
 
ßm∂eCou¡
);

653 
drwav_s16_to_f32
(* 
pOut
, c⁄° 
drwav_öt16
* 
pIn
, 
size_t
 
ßm∂eCou¡
);

656 
drwav_s24_to_f32
(* 
pOut
, c⁄° 
drwav_uöt8
* 
pIn
, 
size_t
 
ßm∂eCou¡
);

659 
drwav_s32_to_f32
(* 
pOut
, c⁄° 
drwav_öt32
* 
pIn
, 
size_t
 
ßm∂eCou¡
);

662 
drwav_f64_to_f32
(* 
pOut
, c⁄° * 
pIn
, 
size_t
 
ßm∂eCou¡
);

665 
drwav_Æaw_to_f32
(* 
pOut
, c⁄° 
drwav_uöt8
* 
pIn
, 
size_t
 
ßm∂eCou¡
);

668 
drwav_muœw_to_f32
(* 
pOut
, c⁄° 
drwav_uöt8
* 
pIn
, 
size_t
 
ßm∂eCou¡
);

677 
drwav_uöt64
 
drwav_ªad_pcm_‰ames_s32
(
drwav
* 
pWav
, drwav_uöt64 
‰amesToRód
, 
drwav_öt32
* 
pBuf„rOut
);

680 
drwav_u8_to_s32
(
drwav_öt32
* 
pOut
, c⁄° 
drwav_uöt8
* 
pIn
, 
size_t
 
ßm∂eCou¡
);

683 
drwav_s16_to_s32
(
drwav_öt32
* 
pOut
, c⁄° 
drwav_öt16
* 
pIn
, 
size_t
 
ßm∂eCou¡
);

686 
drwav_s24_to_s32
(
drwav_öt32
* 
pOut
, c⁄° 
drwav_uöt8
* 
pIn
, 
size_t
 
ßm∂eCou¡
);

689 
drwav_f32_to_s32
(
drwav_öt32
* 
pOut
, c⁄° * 
pIn
, 
size_t
 
ßm∂eCou¡
);

692 
drwav_f64_to_s32
(
drwav_öt32
* 
pOut
, c⁄° * 
pIn
, 
size_t
 
ßm∂eCou¡
);

695 
drwav_Æaw_to_s32
(
drwav_öt32
* 
pOut
, c⁄° 
drwav_uöt8
* 
pIn
, 
size_t
 
ßm∂eCou¡
);

698 
drwav_muœw_to_s32
(
drwav_öt32
* 
pOut
, c⁄° 
drwav_uöt8
* 
pIn
, 
size_t
 
ßm∂eCou¡
);

705 #i‚de‡
DR_WAV_NO_STDIO


712 
drwav_boﬁ32
 
drwav_öô_fûe
(
drwav
* 
pWav
, c⁄° * 
fûíame
);

713 
drwav_boﬁ32
 
drwav_öô_fûe_ex
(
drwav
* 
pWav
, c⁄° * 
fûíame
, 
drwav_chunk_¥oc
 
⁄Chunk
, * 
pChunkU£rD©a
, 
drwav_uöt32
 
Êags
);

720 
drwav_boﬁ32
 
drwav_öô_fûe_wrôe
(
drwav
* 
pWav
, c⁄° * 
fûíame
, c⁄° 
drwav_d©a_f‹m©
* 
pF‹m©
);

721 
drwav_boﬁ32
 
drwav_öô_fûe_wrôe_£quítül
(
drwav
* 
pWav
, c⁄° * 
fûíame
, c⁄° 
drwav_d©a_f‹m©
* 
pF‹m©
, 
drwav_uöt64
 
tŸÆSam∂eCou¡
);

728 
drwav
* 
drwav_›í_fûe
(c⁄° * 
fûíame
);

729 
drwav
* 
drwav_›í_fûe_ex
(c⁄° * 
fûíame
, 
drwav_chunk_¥oc
 
⁄Chunk
, * 
pChunkU£rD©a
, 
drwav_uöt32
 
Êags
);

736 
drwav
* 
drwav_›í_fûe_wrôe
(c⁄° * 
fûíame
, c⁄° 
drwav_d©a_f‹m©
* 
pF‹m©
);

737 
drwav
* 
drwav_›í_fûe_wrôe_£quítül
(c⁄° * 
fûíame
, c⁄° 
drwav_d©a_f‹m©
* 
pF‹m©
, 
drwav_uöt64
 
tŸÆSam∂eCou¡
);

747 
drwav_boﬁ32
 
drwav_öô_mem‹y
(
drwav
* 
pWav
, c⁄° * 
d©a
, 
size_t
 
d©aSize
);

748 
drwav_boﬁ32
 
drwav_öô_mem‹y_ex
(
drwav
* 
pWav
, c⁄° * 
d©a
, 
size_t
 
d©aSize
, 
drwav_chunk_¥oc
 
⁄Chunk
, * 
pChunkU£rD©a
, 
drwav_uöt32
 
Êags
);

756 
drwav_boﬁ32
 
drwav_öô_mem‹y_wrôe
(
drwav
* 
pWav
, ** 
µD©a
, 
size_t
* 
pD©aSize
, c⁄° 
drwav_d©a_f‹m©
* 
pF‹m©
);

757 
drwav_boﬁ32
 
drwav_öô_mem‹y_wrôe_£quítül
(
drwav
* 
pWav
, ** 
µD©a
, 
size_t
* 
pD©aSize
, c⁄° 
drwav_d©a_f‹m©
* 
pF‹m©
, 
drwav_uöt64
 
tŸÆSam∂eCou¡
);

765 
drwav
* 
drwav_›í_mem‹y
(c⁄° * 
d©a
, 
size_t
 
d©aSize
);

766 
drwav
* 
drwav_›í_mem‹y_ex
(c⁄° * 
d©a
, 
size_t
 
d©aSize
, 
drwav_chunk_¥oc
 
⁄Chunk
, * 
pChunkU£rD©a
, 
drwav_uöt32
 
Êags
);

774 
drwav
* 
drwav_›í_mem‹y_wrôe
(** 
µD©a
, 
size_t
* 
pD©aSize
, c⁄° 
drwav_d©a_f‹m©
* 
pF‹m©
);

775 
drwav
* 
drwav_›í_mem‹y_wrôe_£quítül
(** 
µD©a
, 
size_t
* 
pD©aSize
, c⁄° 
drwav_d©a_f‹m©
* 
pF‹m©
, 
drwav_uöt64
 
tŸÆSam∂eCou¡
);

778 #i‚de‡
DR_WAV_NO_CONVERSION_API


780 
drwav_öt16
* 
drwav_›í_™d_ªad_pcm_‰ames_s16
(
drwav_ªad_¥oc
 
⁄Ród
, 
drwav_£ek_¥oc
 
⁄Sìk
, * 
pU£rD©a
, * 
ch™√ls
, * 
ßm∂eR©e
, 
drwav_uöt64
* 
tŸÆFømeCou¡
);

781 * 
drwav_›í_™d_ªad_pcm_‰ames_f32
(
drwav_ªad_¥oc
 
⁄Ród
, 
drwav_£ek_¥oc
 
⁄Sìk
, * 
pU£rD©a
, * 
ch™√ls
, * 
ßm∂eR©e
, 
drwav_uöt64
* 
tŸÆFømeCou¡
);

782 
drwav_öt32
* 
drwav_›í_™d_ªad_pcm_‰ames_s32
(
drwav_ªad_¥oc
 
⁄Ród
, 
drwav_£ek_¥oc
 
⁄Sìk
, * 
pU£rD©a
, * 
ch™√ls
, * 
ßm∂eR©e
, 
drwav_uöt64
* 
tŸÆFømeCou¡
);

783 #i‚de‡
DR_WAV_NO_STDIO


785 
drwav_öt16
* 
drwav_›í_fûe_™d_ªad_pcm_‰ames_s16
(c⁄° * 
fûíame
, * 
ch™√ls
, * 
ßm∂eR©e
, 
drwav_uöt64
* 
tŸÆFømeCou¡
);

786 * 
drwav_›í_fûe_™d_ªad_pcm_‰ames_f32
(c⁄° * 
fûíame
, * 
ch™√ls
, * 
ßm∂eR©e
, 
drwav_uöt64
* 
tŸÆFømeCou¡
);

787 
drwav_öt32
* 
drwav_›í_fûe_™d_ªad_pcm_‰ames_s32
(c⁄° * 
fûíame
, * 
ch™√ls
, * 
ßm∂eR©e
, 
drwav_uöt64
* 
tŸÆFømeCou¡
);

791 
drwav_öt16
* 
drwav_›í_mem‹y_™d_ªad_pcm_‰ames_s16
(c⁄° * 
d©a
, 
size_t
 
d©aSize
, * 
ch™√ls
, * 
ßm∂eR©e
, 
drwav_uöt64
* 
tŸÆFømeCou¡
);

792 * 
drwav_›í_mem‹y_™d_ªad_pcm_‰ames_f32
(c⁄° * 
d©a
, 
size_t
 
d©aSize
, * 
ch™√ls
, * 
ßm∂eR©e
, 
drwav_uöt64
* 
tŸÆFømeCou¡
);

793 
drwav_öt32
* 
drwav_›í_mem‹y_™d_ªad_pcm_‰ames_s32
(c⁄° * 
d©a
, 
size_t
 
d©aSize
, * 
ch™√ls
, * 
ßm∂eR©e
, 
drwav_uöt64
* 
tŸÆFømeCou¡
);

797 
drwav_‰ì
(* 
pD©aRëu∫edByO≥nAndRód
);

802 
drwav_uöt64
 
drwav_ªad
(
drwav
* 
pWav
, drwav_uöt64 
ßm∂esToRód
, * 
pBuf„rOut
);

803 
drwav_uöt64
 
drwav_ªad_s16
(
drwav
* 
pWav
, drwav_uöt64 
ßm∂esToRód
, 
drwav_öt16
* 
pBuf„rOut
);

804 
drwav_uöt64
 
drwav_ªad_f32
(
drwav
* 
pWav
, drwav_uöt64 
ßm∂esToRód
, * 
pBuf„rOut
);

805 
drwav_uöt64
 
drwav_ªad_s32
(
drwav
* 
pWav
, drwav_uöt64 
ßm∂esToRód
, 
drwav_öt32
* 
pBuf„rOut
);

806 
drwav_boﬁ32
 
drwav_£ek_to_ßm∂e
(
drwav
* 
pWav
, 
drwav_uöt64
 
ßm∂e
);

807 
drwav_uöt64
 
drwav_wrôe
(
drwav
* 
pWav
, drwav_uöt64 
ßm∂esToWrôe
, c⁄° * 
pD©a
);

808 #i‚de‡
DR_WAV_NO_CONVERSION_API


809 
drwav_öt16
* 
drwav_›í_™d_ªad_s16
(
drwav_ªad_¥oc
 
⁄Ród
, 
drwav_£ek_¥oc
 
⁄Sìk
, * 
pU£rD©a
, * 
ch™√ls
, * 
ßm∂eR©e
, 
drwav_uöt64
* 
tŸÆSam∂eCou¡
);

810 * 
drwav_›í_™d_ªad_f32
(
drwav_ªad_¥oc
 
⁄Ród
, 
drwav_£ek_¥oc
 
⁄Sìk
, * 
pU£rD©a
, * 
ch™√ls
, * 
ßm∂eR©e
, 
drwav_uöt64
* 
tŸÆSam∂eCou¡
);

811 
drwav_öt32
* 
drwav_›í_™d_ªad_s32
(
drwav_ªad_¥oc
 
⁄Ród
, 
drwav_£ek_¥oc
 
⁄Sìk
, * 
pU£rD©a
, * 
ch™√ls
, * 
ßm∂eR©e
, 
drwav_uöt64
* 
tŸÆSam∂eCou¡
);

812 #i‚de‡
DR_WAV_NO_STDIO


813 
drwav_öt16
* 
drwav_›í_mem‹y_™d_ªad_s16
(c⁄° * 
d©a
, 
size_t
 
d©aSize
, * 
ch™√ls
, * 
ßm∂eR©e
, 
drwav_uöt64
* 
tŸÆSam∂eCou¡
);

814 * 
drwav_›í_fûe_™d_ªad_f32
(c⁄° * 
fûíame
, * 
ch™√ls
, * 
ßm∂eR©e
, 
drwav_uöt64
* 
tŸÆSam∂eCou¡
);

815 
drwav_öt32
* 
drwav_›í_fûe_™d_ªad_s32
(c⁄° * 
fûíame
, * 
ch™√ls
, * 
ßm∂eR©e
, 
drwav_uöt64
* 
tŸÆSam∂eCou¡
);

817 
drwav_öt16
* 
drwav_›í_mem‹y_™d_ªad_s16
(c⁄° * 
d©a
, 
size_t
 
d©aSize
, * 
ch™√ls
, * 
ßm∂eR©e
, 
drwav_uöt64
* 
tŸÆSam∂eCou¡
);

818 * 
drwav_›í_mem‹y_™d_ªad_f32
(c⁄° * 
d©a
, 
size_t
 
d©aSize
, * 
ch™√ls
, * 
ßm∂eR©e
, 
drwav_uöt64
* 
tŸÆSam∂eCou¡
);

819 
drwav_öt32
* 
drwav_›í_mem‹y_™d_ªad_s32
(c⁄° * 
d©a
, 
size_t
 
d©aSize
, * 
ch™√ls
, * 
ßm∂eR©e
, 
drwav_uöt64
* 
tŸÆSam∂eCou¡
);

823 #ifde‡
__˝lu•lus


835 #ifde‡
DR_WAV_IMPLEMENTATION


836 
	~<°dlib.h
>

837 
	~<°rög.h
>

838 
	~<limôs.h
>

840 #i‚de‡
DR_WAV_NO_STDIO


841 
	~<°dio.h
>

845 #i‚de‡
DRWAV_ASSERT


846 
	~<as£π.h
>

847 
	#DRWAV_ASSERT
(
ex¥essi⁄
Ë
	`as£π
”x¥essi⁄)

	)

849 #i‚de‡
DRWAV_MALLOC


850 
	#DRWAV_MALLOC
(
sz
Ë
	`mÆloc
((sz))

	)

852 #i‚de‡
DRWAV_REALLOC


853 
	#DRWAV_REALLOC
(
p
, 
sz
Ë
	`ªÆloc
(’), (sz))

	)

855 #i‚de‡
DRWAV_FREE


856 
	#DRWAV_FREE
(
p
Ë
	`‰ì
(’))

	)

858 #i‚de‡
DRWAV_COPY_MEMORY


859 
	#DRWAV_COPY_MEMORY
(
d°
, 
§c
, 
sz
Ë
	`mem˝y
((d°), (§c), (sz))

	)

861 #i‚de‡
DRWAV_ZERO_MEMORY


862 
	#DRWAV_ZERO_MEMORY
(
p
, 
sz
Ë
	`mem£t
(’), 0, (sz))

	)

865 
	#drwav_cou¡of
(
x
Ë((xË/ (x[0]))

	)

866 
	#drwav_Æign
(
x
, 
a
Ë((((xË+ (aË- 1Ë/ (a)Ë* (a))

	)

867 
	#drwav_mö
(
a
, 
b
Ë((◊Ë< (b)Ë? (aË: (b))

	)

868 
	#drwav_max
(
a
, 
b
Ë((◊Ë> (b)Ë? (aË: (b))

	)

869 
	#drwav_˛amp
(
x
, 
lo
, 
hi
Ë(
	`drwav_max
(÷o), 
	`drwav_mö
((hi), (x))))

	)

871 
	#drwav_as£π
 
DRWAV_ASSERT


	)

872 
	#drwav_c›y_mem‹y
 
DRWAV_COPY_MEMORY


	)

873 
	#drwav_zîo_mem‹y
 
DRWAV_ZERO_MEMORY


	)

875 
drwav_öt32
 
	tdrwav_ªsu…
;

876 
	#DRWAV_SUCCESS
 0

	)

877 
	#DRWAV_ERROR
 -1

	)

878 
	#DRWAV_INVALID_ARGS
 -2

	)

879 
	#DRWAV_INVALID_OPERATION
 -3

	)

880 
	#DRWAV_INVALID_FILE
 -100

	)

881 
	#DRWAV_EOF
 -101

	)

883 
	#DRWAV_MAX_SIMD_VECTOR_SIZE
 64

884 

	)

885 #ifde‡
_MSC_VER


886 
	#DRWAV_INLINE
 
__f‹˚ölöe


	)

888 #ifde‡
__GNUC__


889 
	#DRWAV_INLINE
 
ölöe
 
	`__©åibuã__
((
Æways_ölöe
))

	)

891 
	#DRWAV_INLINE
 
ölöe


	)

895 #i‡
deföed
(
SIZE_MAX
)

896 
	#DRWAV_SIZE_MAX
 
SIZE_MAX


	)

898 #i‡
deföed
(
_WIN64
Ë|| deföed(
_LP64
Ë|| deföed(
__LP64__
)

899 
	#DRWAV_SIZE_MAX
 ((
drwav_uöt64
)0xFFFFFFFFFFFFFFFF)

	)

901 
	#DRWAV_SIZE_MAX
 0xFFFFFFFF

	)

905 c⁄° 
drwav_uöt8
 
	gdrwavGUID_W64_RIFF
[16] = {0x72,0x69,0x66,0x66, 0x2E,0x91, 0xCF,0x11, 0xA5,0xD6, 0x28,0xDB,0x04,0xC1,0x00,0x00};

906 c⁄° 
drwav_uöt8
 
	gdrwavGUID_W64_WAVE
[16] = {0x77,0x61,0x76,0x65, 0xF3,0xAC, 0xD3,0x11, 0x8C,0xD1, 0x00,0xC0,0x4F,0x8E,0xDB,0x8A};

907 c⁄° 
drwav_uöt8
 
	gdrwavGUID_W64_JUNK
[16] = {0x6A,0x75,0x6E,0x6B, 0xF3,0xAC, 0xD3,0x11, 0x8C,0xD1, 0x00,0xC0,0x4F,0x8E,0xDB,0x8A};

908 c⁄° 
drwav_uöt8
 
	gdrwavGUID_W64_FMT
 [16] = {0x66,0x6D,0x74,0x20, 0xF3,0xAC, 0xD3,0x11, 0x8C,0xD1, 0x00,0xC0,0x4F,0x8E,0xDB,0x8A};

909 c⁄° 
drwav_uöt8
 
	gdrwavGUID_W64_FACT
[16] = {0x66,0x61,0x63,0x74, 0xF3,0xAC, 0xD3,0x11, 0x8C,0xD1, 0x00,0xC0,0x4F,0x8E,0xDB,0x8A};

910 c⁄° 
drwav_uöt8
 
	gdrwavGUID_W64_DATA
[16] = {0x64,0x61,0x74,0x61, 0xF3,0xAC, 0xD3,0x11, 0x8C,0xD1, 0x00,0xC0,0x4F,0x8E,0xDB,0x8A};

911 c⁄° 
drwav_uöt8
 
	gdrwavGUID_W64_SMPL
[16] = {0x73,0x6D,0x70,0x6C, 0xF3,0xAC, 0xD3,0x11, 0x8C,0xD1, 0x00,0xC0,0x4F,0x8E,0xDB,0x8A};

913 
DRWAV_INLINE
 
drwav_boﬁ32
 
	$drwav__guid_equÆ
(c⁄° 
drwav_uöt8
 
a
[16], c⁄° drwav_uöt8 
b
[16])

915 c⁄° 
drwav_uöt32
* 
a32
 = (c⁄° drwav_uöt32*)
a
;

916 c⁄° 
drwav_uöt32
* 
b32
 = (c⁄° drwav_uöt32*)
b
;

919 
a32
[0] =
b32
[0] &&

920 
a32
[1] =
b32
[1] &&

921 
a32
[2] =
b32
[2] &&

922 
a32
[3] =
b32
[3];

923 
	}
}

925 
DRWAV_INLINE
 
drwav_boﬁ32
 
	$drwav__fourcc_equÆ
(c⁄° * 
a
, c⁄° * 
b
)

928 
a
[0] =
b
[0] &&

929 
a
[1] =
b
[1] &&

930 
a
[2] =
b
[2] &&

931 
a
[3] =
b
[3];

932 
	}
}

936 
DRWAV_INLINE
 
	$drwav__is_lôée_ídün
()

938 
n
 = 1;

939  (*(*)&
n
) == 1;

940 
	}
}

942 
DRWAV_INLINE
 
	$drwav__byãs_to_u16
(c⁄° * 
d©a
)

944  (
d©a
[0] << 0) | (data[1] << 8);

945 
	}
}

947 
DRWAV_INLINE
 
	$drwav__byãs_to_s16
(c⁄° * 
d©a
)

949  ()
	`drwav__byãs_to_u16
(
d©a
);

950 
	}
}

952 
DRWAV_INLINE
 
	$drwav__byãs_to_u32
(c⁄° * 
d©a
)

954  (
d©a
[0] << 0) | (data[1] << 8) | (data[2] << 16) | (data[3] << 24);

955 
	}
}

957 
DRWAV_INLINE
 
drwav_uöt64
 
	$drwav__byãs_to_u64
(c⁄° * 
d©a
)

960 ((
drwav_uöt64
)
d©a
[0] << 0) | ((drwav_uint64)data[1] << 8) | ((drwav_uint64)data[2] << 16) | ((drwav_uint64)data[3] << 24) |

961 ((
drwav_uöt64
)
d©a
[4] << 32) | ((drwav_uint64)data[5] << 40) | ((drwav_uint64)data[6] << 48) | ((drwav_uint64)data[7] << 56);

962 
	}
}

964 
DRWAV_INLINE
 
	$drwav__byãs_to_guid
(c⁄° * 
d©a
, 
drwav_uöt8
* 
guid
)

966 
i
 = 0; i < 16; ++i) {

967 
guid
[
i
] = 
d©a
[i];

969 
	}
}

972 
DRWAV_INLINE
 
drwav_boﬁ32
 
	$drwav__is_com¥es£d_f‹m©_èg
(
drwav_uöt16
 
f‹m©Tag
)

975 
f‹m©Tag
 =
DR_WAVE_FORMAT_ADPCM
 ||

976 
f‹m©Tag
 =
DR_WAVE_FORMAT_DVI_ADPCM
;

977 
	}
}

979 
drwav_uöt64
 
drwav_ªad_s16__mßdpcm
(
drwav
* 
pWav
, drwav_uöt64 
ßm∂esToRód
, 
drwav_öt16
* 
pBuf„rOut
);

980 
drwav_uöt64
 
drwav_ªad_s16__ima
(
drwav
* 
pWav
, drwav_uöt64 
ßm∂esToRód
, 
drwav_öt16
* 
pBuf„rOut
);

981 
drwav_boﬁ32
 
drwav_öô_wrôe__öã∫Æ
(
drwav
* 
pWav
, c⁄° 
drwav_d©a_f‹m©
* 
pF‹m©
, 
drwav_uöt64
 
tŸÆSam∂eCou¡
, drwav_boﬁ32 
isSequítül
, 
drwav_wrôe_¥oc
 
⁄Wrôe
, 
drwav_£ek_¥oc
 
⁄Sìk
, * 
pU£rD©a
);

982 
drwav
* 
drwav_›í_wrôe__öã∫Æ
(c⁄° 
drwav_d©a_f‹m©
* 
pF‹m©
, 
drwav_uöt64
 
tŸÆSam∂eCou¡
, 
drwav_boﬁ32
 
isSequítül
, 
drwav_wrôe_¥oc
 
⁄Wrôe
, 
drwav_£ek_¥oc
 
⁄Sìk
, * 
pU£rD©a
);

984 
drwav_ªsu…
 
	$drwav__ªad_chunk_hódî
(
drwav_ªad_¥oc
 
⁄Ród
, * 
pU£rD©a
, 
drwav_c⁄èöî
 
c⁄èöî
, 
drwav_uöt64
* 
pRu¬ögByãsRódOut
, 
drwav_chunk_hódî
* 
pHódîOut
)

986 i‡(
c⁄èöî
 =
drwav_c⁄èöî_riff
) {

987 i‡(
	`⁄Ród
(
pU£rD©a
, 
pHódîOut
->
id
.
fourcc
, 4) != 4) {

988  
DRWAV_EOF
;

991 
sizeInByãs
[4];

992 i‡(
	`⁄Ród
(
pU£rD©a
, 
sizeInByãs
, 4) != 4) {

993  
DRWAV_INVALID_FILE
;

996 
pHódîOut
->
sizeInByãs
 = 
	`drwav__byãs_to_u32
(sizeInBytes);

997 
pHódîOut
->
∑ddögSize
 = ()’HódîOut->
sizeInByãs
 % 2);

998 *
pRu¬ögByãsRódOut
 += 8;

1000 i‡(
	`⁄Ród
(
pU£rD©a
, 
pHódîOut
->
id
.
guid
, 16) != 16) {

1001  
DRWAV_EOF
;

1004 
sizeInByãs
[8];

1005 i‡(
	`⁄Ród
(
pU£rD©a
, 
sizeInByãs
, 8) != 8) {

1006  
DRWAV_INVALID_FILE
;

1009 
pHódîOut
->
sizeInByãs
 = 
	`drwav__byãs_to_u64
(sizeInBytes) - 24;

1010 
pHódîOut
->
∑ddögSize
 = ()’HódîOut->
sizeInByãs
 % 8);

1011 *
pRu¬ögByãsRódOut
 += 24;

1014  
DRWAV_SUCCESS
;

1015 
	}
}

1017 
drwav_boﬁ32
 
	$drwav__£ek_f‹w¨d
(
drwav_£ek_¥oc
 
⁄Sìk
, 
drwav_uöt64
 
off£t
, * 
pU£rD©a
)

1019 
drwav_uöt64
 
byãsRemaöögToSìk
 = 
off£t
;

1020 
byãsRemaöögToSìk
 > 0) {

1021 i‡(
byãsRemaöögToSìk
 > 0x7FFFFFFF) {

1022 i‡(!
	`⁄Sìk
(
pU£rD©a
, 0x7FFFFFFF, 
drwav_£ek_‹igö_cuºít
)) {

1023  
DRWAV_FALSE
;

1025 
byãsRemaöögToSìk
 -= 0x7FFFFFFF;

1027 i‡(!
	`⁄Sìk
(
pU£rD©a
, ()
byãsRemaöögToSìk
, 
drwav_£ek_‹igö_cuºít
)) {

1028  
DRWAV_FALSE
;

1030 
byãsRemaöögToSìk
 = 0;

1034  
DRWAV_TRUE
;

1035 
	}
}

1037 
drwav_boﬁ32
 
	$drwav__£ek_‰om_°¨t
(
drwav_£ek_¥oc
 
⁄Sìk
, 
drwav_uöt64
 
off£t
, * 
pU£rD©a
)

1039 i‡(
off£t
 <= 0x7FFFFFFF) {

1040  
	`⁄Sìk
(
pU£rD©a
, ()
off£t
, 
drwav_£ek_‹igö_°¨t
);

1044 i‡(!
	`⁄Sìk
(
pU£rD©a
, 0x7FFFFFFF, 
drwav_£ek_‹igö_°¨t
)) {

1045  
DRWAV_FALSE
;

1047 
off£t
 -= 0x7FFFFFFF;

1050 i‡(
off£t
 <= 0x7FFFFFFF) {

1051  
	`⁄Sìk
(
pU£rD©a
, ()
off£t
, 
drwav_£ek_‹igö_cuºít
);

1054 i‡(!
	`⁄Sìk
(
pU£rD©a
, 0x7FFFFFFF, 
drwav_£ek_‹igö_cuºít
)) {

1055  
DRWAV_FALSE
;

1057 
off£t
 -= 0x7FFFFFFF;

1062 
	}
}

1065 
drwav_boﬁ32
 
	$drwav__ªad_fmt
(
drwav_ªad_¥oc
 
⁄Ród
, 
drwav_£ek_¥oc
 
⁄Sìk
, * 
pU£rD©a
, 
drwav_c⁄èöî
 
c⁄èöî
, 
drwav_uöt64
* 
pRu¬ögByãsRódOut
, 
drwav_fmt
* 
fmtOut
)

1067 
drwav_chunk_hódî
 
hódî
;

1068 i‡(
	`drwav__ªad_chunk_hódî
(
⁄Ród
, 
pU£rD©a
, 
c⁄èöî
, 
pRu¬ögByãsRódOut
, &
hódî
Ë!
DRWAV_SUCCESS
) {

1069  
DRWAV_FALSE
;

1074 (
c⁄èöî
 =
drwav_c⁄èöî_riff
 && !
	`drwav__fourcc_equÆ
(
hódî
.
id
.
fourcc
, "fmà")Ë|| (c⁄èöî =
drwav_c⁄èöî_w64
 && !
	`drwav__guid_equÆ
(hódî.id.
guid
, 
drwavGUID_W64_FMT
))) {

1075 i‡(!
	`drwav__£ek_f‹w¨d
(
⁄Sìk
, 
hódî
.
sizeInByãs
 + hódî.
∑ddögSize
, 
pU£rD©a
)) {

1076  
DRWAV_FALSE
;

1078 *
pRu¬ögByãsRódOut
 +
hódî
.
sizeInByãs
 + hódî.
∑ddögSize
;

1081 i‡(
	`drwav__ªad_chunk_hódî
(
⁄Ród
, 
pU£rD©a
, 
c⁄èöî
, 
pRu¬ögByãsRódOut
, &
hódî
Ë!
DRWAV_SUCCESS
) {

1082  
DRWAV_FALSE
;

1088 i‡(
c⁄èöî
 =
drwav_c⁄èöî_riff
) {

1089 i‡(!
	`drwav__fourcc_equÆ
(
hódî
.
id
.
fourcc
, "fmt ")) {

1090  
DRWAV_FALSE
;

1093 i‡(!
	`drwav__guid_equÆ
(
hódî
.
id
.
guid
, 
drwavGUID_W64_FMT
)) {

1094  
DRWAV_FALSE
;

1099 
fmt
[16];

1100 i‡(
	`⁄Ród
(
pU£rD©a
, 
fmt
, (fmt)) != (fmt)) {

1101  
DRWAV_FALSE
;

1103 *
pRu¬ögByãsRódOut
 +(
fmt
);

1105 
fmtOut
->
f‹m©Tag
 = 
	`drwav__byãs_to_u16
(
fmt
 + 0);

1106 
fmtOut
->
ch™√ls
 = 
	`drwav__byãs_to_u16
(
fmt
 + 2);

1107 
fmtOut
->
ßm∂eR©e
 = 
	`drwav__byãs_to_u32
(
fmt
 + 4);

1108 
fmtOut
->
avgByãsPîSec
 = 
	`drwav__byãs_to_u32
(
fmt
 + 8);

1109 
fmtOut
->
blockAlign
 = 
	`drwav__byãs_to_u16
(
fmt
 + 12);

1110 
fmtOut
->
bôsPîSam∂e
 = 
	`drwav__byãs_to_u16
(
fmt
 + 14);

1112 
fmtOut
->
exãndedSize
 = 0;

1113 
fmtOut
->
vÆidBôsPîSam∂e
 = 0;

1114 
fmtOut
->
ch™√lMask
 = 0;

1115 
	`mem£t
(
fmtOut
->
subF‹m©
, 0, (fmtOut->subFormat));

1117 i‡(
hódî
.
sizeInByãs
 > 16) {

1118 
fmt_cbSize
[2];

1119 i‡(
	`⁄Ród
(
pU£rD©a
, 
fmt_cbSize
, (fmt_cbSize)) != (fmt_cbSize)) {

1120  
DRWAV_FALSE
;

1122 *
pRu¬ögByãsRódOut
 +(
fmt_cbSize
);

1124 
byãsRódSoF¨
 = 18;

1126 
fmtOut
->
exãndedSize
 = 
	`drwav__byãs_to_u16
(
fmt_cbSize
);

1127 i‡(
fmtOut
->
exãndedSize
 > 0) {

1129 i‡(
fmtOut
->
f‹m©Tag
 =
DR_WAVE_FORMAT_EXTENSIBLE
) {

1130 i‡(
fmtOut
->
exãndedSize
 != 22) {

1131  
DRWAV_FALSE
;

1135 i‡(
fmtOut
->
f‹m©Tag
 =
DR_WAVE_FORMAT_EXTENSIBLE
) {

1136 
fmãxt
[22];

1137 i‡(
	`⁄Ród
(
pU£rD©a
, 
fmãxt
, 
fmtOut
->
exãndedSize
) != fmtOut->extendedSize) {

1138  
DRWAV_FALSE
;

1141 
fmtOut
->
vÆidBôsPîSam∂e
 = 
	`drwav__byãs_to_u16
(
fmãxt
 + 0);

1142 
fmtOut
->
ch™√lMask
 = 
	`drwav__byãs_to_u32
(
fmãxt
 + 2);

1143 
	`drwav__byãs_to_guid
(
fmãxt
 + 6, 
fmtOut
->
subF‹m©
);

1145 i‡(!
	`⁄Sìk
(
pU£rD©a
, 
fmtOut
->
exãndedSize
, 
drwav_£ek_‹igö_cuºít
)) {

1146  
DRWAV_FALSE
;

1149 *
pRu¬ögByãsRódOut
 +
fmtOut
->
exãndedSize
;

1151 
byãsRódSoF¨
 +
fmtOut
->
exãndedSize
;

1155 i‡(!
	`⁄Sìk
(
pU£rD©a
, ()(
hódî
.
sizeInByãs
 - 
byãsRódSoF¨
), 
drwav_£ek_‹igö_cuºít
)) {

1156  
DRWAV_FALSE
;

1158 *
pRu¬ögByãsRódOut
 +(
hódî
.
sizeInByãs
 - 
byãsRódSoF¨
);

1161 i‡(
hódî
.
∑ddögSize
 > 0) {

1162 i‡(!
	`⁄Sìk
(
pU£rD©a
, 
hódî
.
∑ddögSize
, 
drwav_£ek_‹igö_cuºít
)) {

1163  
DRWAV_FALSE
;

1165 *
pRu¬ögByãsRódOut
 +
hódî
.
∑ddögSize
;

1168  
DRWAV_TRUE
;

1169 
	}
}

1172 #i‚de‡
DR_WAV_NO_STDIO


1173 
FILE
* 
	$drwav_f›í
(c⁄° * 
fûeP©h
, c⁄° * 
›íMode
)

1175 
FILE
* 
pFûe
;

1176 #i‡
	`deföed
(
_MSC_VER
) && _MSC_VER >= 1400

1177 i‡(
	`f›í_s
(&
pFûe
, 
fûeP©h
, 
›íMode
) != 0) {

1178  
DRWAV_FALSE
;

1181 
pFûe
 = 
	`f›í
(
fûeP©h
, 
›íMode
);

1182 i‡(
pFûe
 =
NULL
) {

1183  
DRWAV_FALSE
;

1187  
pFûe
;

1188 
	}
}

1190 
size_t
 
	$drwav__⁄_ªad_°dio
(* 
pU£rD©a
, * 
pBuf„rOut
, 
size_t
 
byãsToRód
)

1192  
	`‰ód
(
pBuf„rOut
, 1, 
byãsToRód
, (
FILE
*)
pU£rD©a
);

1193 
	}
}

1195 
size_t
 
	$drwav__⁄_wrôe_°dio
(* 
pU£rD©a
, c⁄° * 
pD©a
, 
size_t
 
byãsToWrôe
)

1197  
	`fwrôe
(
pD©a
, 1, 
byãsToWrôe
, (
FILE
*)
pU£rD©a
);

1198 
	}
}

1200 
drwav_boﬁ32
 
	$drwav__⁄_£ek_°dio
(* 
pU£rD©a
, 
off£t
, 
drwav_£ek_‹igö
 
‹igö
)

1202  
	`f£ek
((
FILE
*)
pU£rD©a
, 
off£t
, (
‹igö
 =
drwav_£ek_‹igö_cuºít
Ë? 
SEEK_CUR
 : 
SEEK_SET
) == 0;

1203 
	}
}

1205 
drwav_boﬁ32
 
	$drwav_öô_fûe
(
drwav
* 
pWav
, c⁄° * 
fûíame
)

1207  
	`drwav_öô_fûe_ex
(
pWav
, 
fûíame
, 
NULL
, NULL, 0);

1208 
	}
}

1210 
drwav_boﬁ32
 
	$drwav_öô_fûe_ex
(
drwav
* 
pWav
, c⁄° * 
fûíame
, 
drwav_chunk_¥oc
 
⁄Chunk
, * 
pChunkU£rD©a
, 
drwav_uöt32
 
Êags
)

1212 
FILE
* 
pFûe
 = 
	`drwav_f›í
(
fûíame
, "rb");

1213 i‡(
pFûe
 =
NULL
) {

1214  
DRWAV_FALSE
;

1217  
	`drwav_öô_ex
(
pWav
, 
drwav__⁄_ªad_°dio
, 
drwav__⁄_£ek_°dio
, 
⁄Chunk
, (*)
pFûe
, 
pChunkU£rD©a
, 
Êags
);

1218 
	}
}

1221 
drwav_boﬁ32
 
	$drwav_öô_fûe_wrôe__öã∫Æ
(
drwav
* 
pWav
, c⁄° * 
fûíame
, c⁄° 
drwav_d©a_f‹m©
* 
pF‹m©
, 
drwav_uöt64
 
tŸÆSam∂eCou¡
, 
drwav_boﬁ32
 
isSequítül
)

1223 
FILE
* 
pFûe
 = 
	`drwav_f›í
(
fûíame
, "wb");

1224 i‡(
pFûe
 =
NULL
) {

1225  
DRWAV_FALSE
;

1228  
	`drwav_öô_wrôe__öã∫Æ
(
pWav
, 
pF‹m©
, 
tŸÆSam∂eCou¡
, 
isSequítül
, 
drwav__⁄_wrôe_°dio
, 
drwav__⁄_£ek_°dio
, (*)
pFûe
);

1229 
	}
}

1231 
drwav_boﬁ32
 
	$drwav_öô_fûe_wrôe
(
drwav
* 
pWav
, c⁄° * 
fûíame
, c⁄° 
drwav_d©a_f‹m©
* 
pF‹m©
)

1233  
	`drwav_öô_fûe_wrôe__öã∫Æ
(
pWav
, 
fûíame
, 
pF‹m©
, 0, 
DRWAV_FALSE
);

1234 
	}
}

1236 
drwav_boﬁ32
 
	$drwav_öô_fûe_wrôe_£quítül
(
drwav
* 
pWav
, c⁄° * 
fûíame
, c⁄° 
drwav_d©a_f‹m©
* 
pF‹m©
, 
drwav_uöt64
 
tŸÆSam∂eCou¡
)

1238  
	`drwav_öô_fûe_wrôe__öã∫Æ
(
pWav
, 
fûíame
, 
pF‹m©
, 
tŸÆSam∂eCou¡
, 
DRWAV_TRUE
);

1239 
	}
}

1241 
drwav
* 
	$drwav_›í_fûe
(c⁄° * 
fûíame
)

1243  
	`drwav_›í_fûe_ex
(
fûíame
, 
NULL
, NULL, 0);

1244 
	}
}

1246 
drwav
* 
	$drwav_›í_fûe_ex
(c⁄° * 
fûíame
, 
drwav_chunk_¥oc
 
⁄Chunk
, * 
pChunkU£rD©a
, 
drwav_uöt32
 
Êags
)

1248 
FILE
* 
pFûe
 = 
	`drwav_f›í
(
fûíame
, "rb");

1249 i‡(
pFûe
 =
NULL
) {

1250  
DRWAV_FALSE
;

1253 
drwav
* 
pWav
 = 
	`drwav_›í_ex
(
drwav__⁄_ªad_°dio
, 
drwav__⁄_£ek_°dio
, 
⁄Chunk
, (*)
pFûe
, 
pChunkU£rD©a
, 
Êags
);

1254 i‡(
pWav
 =
NULL
) {

1255 
	`f˛o£
(
pFûe
);

1256  
NULL
;

1259  
pWav
;

1260 
	}
}

1263 
drwav
* 
	$drwav_›í_fûe_wrôe__öã∫Æ
(c⁄° * 
fûíame
, c⁄° 
drwav_d©a_f‹m©
* 
pF‹m©
, 
drwav_uöt64
 
tŸÆSam∂eCou¡
, 
drwav_boﬁ32
 
isSequítül
)

1265 
FILE
* 
pFûe
 = 
	`drwav_f›í
(
fûíame
, "wb");

1266 i‡(
pFûe
 =
NULL
) {

1267  
DRWAV_FALSE
;

1270 
drwav
* 
pWav
 = 
	`drwav_›í_wrôe__öã∫Æ
(
pF‹m©
, 
tŸÆSam∂eCou¡
, 
isSequítül
, 
drwav__⁄_wrôe_°dio
, 
drwav__⁄_£ek_°dio
, (*)
pFûe
);

1271 i‡(
pWav
 =
NULL
) {

1272 
	`f˛o£
(
pFûe
);

1273  
NULL
;

1276  
pWav
;

1277 
	}
}

1279 
drwav
* 
	$drwav_›í_fûe_wrôe
(c⁄° * 
fûíame
, c⁄° 
drwav_d©a_f‹m©
* 
pF‹m©
)

1281  
	`drwav_›í_fûe_wrôe__öã∫Æ
(
fûíame
, 
pF‹m©
, 0, 
DRWAV_FALSE
);

1282 
	}
}

1284 
drwav
* 
	$drwav_›í_fûe_wrôe_£quítül
(c⁄° * 
fûíame
, c⁄° 
drwav_d©a_f‹m©
* 
pF‹m©
, 
drwav_uöt64
 
tŸÆSam∂eCou¡
)

1286  
	`drwav_›í_fûe_wrôe__öã∫Æ
(
fûíame
, 
pF‹m©
, 
tŸÆSam∂eCou¡
, 
DRWAV_TRUE
);

1287 
	}
}

1291 
size_t
 
	$drwav__⁄_ªad_mem‹y
(* 
pU£rD©a
, * 
pBuf„rOut
, 
size_t
 
byãsToRód
)

1293 
drwav__mem‹y_°ªam
* 
mem‹y
 = (drwav__mem‹y_°ªam*)
pU£rD©a
;

1294 
	`drwav_as£π
(
mem‹y
 !
NULL
);

1295 
	`drwav_as£π
(
mem‹y
->
d©aSize
 >mem‹y->
cuºítRódPos
);

1297 
size_t
 
byãsRemaöög
 = 
mem‹y
->
d©aSize
 - mem‹y->
cuºítRódPos
;

1298 i‡(
byãsToRód
 > 
byãsRemaöög
) {

1299 
byãsToRód
 = 
byãsRemaöög
;

1302 i‡(
byãsToRód
 > 0) {

1303 
	`DRWAV_COPY_MEMORY
(
pBuf„rOut
, 
mem‹y
->
d©a
 + mem‹y->
cuºítRódPos
, 
byãsToRód
);

1304 
mem‹y
->
cuºítRódPos
 +
byãsToRód
;

1307  
byãsToRód
;

1308 
	}
}

1310 
drwav_boﬁ32
 
	$drwav__⁄_£ek_mem‹y
(* 
pU£rD©a
, 
off£t
, 
drwav_£ek_‹igö
 
‹igö
)

1312 
drwav__mem‹y_°ªam
* 
mem‹y
 = (drwav__mem‹y_°ªam*)
pU£rD©a
;

1313 
	`drwav_as£π
(
mem‹y
 !
NULL
);

1315 i‡(
‹igö
 =
drwav_£ek_‹igö_cuºít
) {

1316 i‡(
off£t
 > 0) {

1317 i‡(
mem‹y
->
cuºítRódPos
 + 
off£t
 > mem‹y->
d©aSize
) {

1318  
DRWAV_FALSE
;

1321 i‡(
mem‹y
->
cuºítRódPos
 < (
size_t
)-
off£t
) {

1322  
DRWAV_FALSE
;

1327 
mem‹y
->
cuºítRódPos
 +
off£t
;

1329 i‡((
drwav_uöt32
)
off£t
 <
mem‹y
->
d©aSize
) {

1330 
mem‹y
->
cuºítRódPos
 = 
off£t
;

1332  
DRWAV_FALSE
;

1336  
DRWAV_TRUE
;

1337 
	}
}

1339 
size_t
 
	$drwav__⁄_wrôe_mem‹y
(* 
pU£rD©a
, c⁄° * 
pD©aIn
, 
size_t
 
byãsToWrôe
)

1341 
drwav__mem‹y_°ªam_wrôe
* 
mem‹y
 = (drwav__mem‹y_°ªam_wrôe*)
pU£rD©a
;

1342 
	`drwav_as£π
(
mem‹y
 !
NULL
);

1343 
	`drwav_as£π
(
mem‹y
->
d©aC≠acôy
 >mem‹y->
cuºítWrôePos
);

1345 
size_t
 
byãsRemaöög
 = 
mem‹y
->
d©aC≠acôy
 - mem‹y->
cuºítWrôePos
;

1346 i‡(
byãsRemaöög
 < 
byãsToWrôe
) {

1348 
size_t
 
√wD©aC≠acôy
 = (
mem‹y
->
d©aC≠acôy
 == 0) ? 256 : memory->dataCapacity * 2;

1351 i‡((
√wD©aC≠acôy
 - 
mem‹y
->
cuºítWrôePos
Ë< 
byãsToWrôe
) {

1352 
√wD©aC≠acôy
 = 
mem‹y
->
cuºítWrôePos
 + 
byãsToWrôe
;

1355 * 
pNewD©a
 = 
	`DRWAV_REALLOC
(*
mem‹y
->
µD©a
, 
√wD©aC≠acôy
);

1356 i‡(
pNewD©a
 =
NULL
) {

1360 *
mem‹y
->
µD©a
 = 
pNewD©a
;

1361 
mem‹y
->
d©aC≠acôy
 = 
√wD©aC≠acôy
;

1364 
drwav_uöt8
* 
pD©aOut
 = (drwav_uöt8*)(*
mem‹y
->
µD©a
);

1365 
	`DRWAV_COPY_MEMORY
(
pD©aOut
 + 
mem‹y
->
cuºítWrôePos
, 
pD©aIn
, 
byãsToWrôe
);

1367 
mem‹y
->
cuºítWrôePos
 +
byãsToWrôe
;

1368 i‡(
mem‹y
->
d©aSize
 < mem‹y->
cuºítWrôePos
) {

1369 
mem‹y
->
d©aSize
 = mem‹y->
cuºítWrôePos
;

1372 *
mem‹y
->
pD©aSize
 = mem‹y->
d©aSize
;

1374  
byãsToWrôe
;

1375 
	}
}

1377 
drwav_boﬁ32
 
	$drwav__⁄_£ek_mem‹y_wrôe
(* 
pU£rD©a
, 
off£t
, 
drwav_£ek_‹igö
 
‹igö
)

1379 
drwav__mem‹y_°ªam_wrôe
* 
mem‹y
 = (drwav__mem‹y_°ªam_wrôe*)
pU£rD©a
;

1380 
	`drwav_as£π
(
mem‹y
 !
NULL
);

1382 i‡(
‹igö
 =
drwav_£ek_‹igö_cuºít
) {

1383 i‡(
off£t
 > 0) {

1384 i‡(
mem‹y
->
cuºítWrôePos
 + 
off£t
 > mem‹y->
d©aSize
) {

1385 
off£t
 = ()(
mem‹y
->
d©aSize
 - mem‹y->
cuºítWrôePos
);

1388 i‡(
mem‹y
->
cuºítWrôePos
 < (
size_t
)-
off£t
) {

1389 
off£t
 = -()
mem‹y
->
cuºítWrôePos
;

1394 
mem‹y
->
cuºítWrôePos
 +
off£t
;

1396 i‡((
drwav_uöt32
)
off£t
 <
mem‹y
->
d©aSize
) {

1397 
mem‹y
->
cuºítWrôePos
 = 
off£t
;

1399 
mem‹y
->
cuºítWrôePos
 = mem‹y->
d©aSize
;

1403  
DRWAV_TRUE
;

1404 
	}
}

1406 
drwav_boﬁ32
 
	$drwav_öô_mem‹y
(
drwav
* 
pWav
, c⁄° * 
d©a
, 
size_t
 
d©aSize
)

1408  
	`drwav_öô_mem‹y_ex
(
pWav
, 
d©a
, 
d©aSize
, 
NULL
, NULL, 0);

1409 
	}
}

1411 
drwav_boﬁ32
 
	$drwav_öô_mem‹y_ex
(
drwav
* 
pWav
, c⁄° * 
d©a
, 
size_t
 
d©aSize
, 
drwav_chunk_¥oc
 
⁄Chunk
, * 
pChunkU£rD©a
, 
drwav_uöt32
 
Êags
)

1413 i‡(
d©a
 =
NULL
 || 
d©aSize
 == 0) {

1414  
DRWAV_FALSE
;

1417 
drwav__mem‹y_°ªam
 
mem‹ySåóm
;

1418 
	`drwav_zîo_mem‹y
(&
mem‹ySåóm
, (memoryStream));

1419 
mem‹ySåóm
.
d©a
 = (const *)data;

1420 
mem‹ySåóm
.
d©aSize
 = dataSize;

1421 
mem‹ySåóm
.
cuºítRódPos
 = 0;

1423 i‡(!
	`drwav_öô_ex
(
pWav
, 
drwav__⁄_ªad_mem‹y
, 
drwav__⁄_£ek_mem‹y
, 
⁄Chunk
, (*)&
mem‹ySåóm
, 
pChunkU£rD©a
, 
Êags
)) {

1424  
DRWAV_FALSE
;

1427 
pWav
->
mem‹ySåóm
 = memoryStream;

1428 
pWav
->
pU£rD©a
 = &pWav->
mem‹ySåóm
;

1429  
DRWAV_TRUE
;

1430 
	}
}

1433 
drwav_boﬁ32
 
	$drwav_öô_mem‹y_wrôe__öã∫Æ
(
drwav
* 
pWav
, ** 
µD©a
, 
size_t
* 
pD©aSize
, c⁄° 
drwav_d©a_f‹m©
* 
pF‹m©
, 
drwav_uöt64
 
tŸÆSam∂eCou¡
, 
drwav_boﬁ32
 
isSequítül
)

1435 i‡(
µD©a
 =
NULL
) {

1436  
DRWAV_FALSE
;

1439 *
µD©a
 = 
NULL
;

1440 *
pD©aSize
 = 0;

1442 
drwav__mem‹y_°ªam_wrôe
 
mem‹ySåómWrôe
;

1443 
	`drwav_zîo_mem‹y
(&
mem‹ySåómWrôe
, (memoryStreamWrite));

1444 
mem‹ySåómWrôe
.
µD©a
 =ÖpData;

1445 
mem‹ySåómWrôe
.
pD©aSize
 =ÖDataSize;

1446 
mem‹ySåómWrôe
.
d©aSize
 = 0;

1447 
mem‹ySåómWrôe
.
d©aC≠acôy
 = 0;

1448 
mem‹ySåómWrôe
.
cuºítWrôePos
 = 0;

1450 i‡(!
	`drwav_öô_wrôe__öã∫Æ
(
pWav
, 
pF‹m©
, 
tŸÆSam∂eCou¡
, 
isSequítül
, 
drwav__⁄_wrôe_mem‹y
, 
drwav__⁄_£ek_mem‹y_wrôe
, (*)&
mem‹ySåómWrôe
)) {

1451  
DRWAV_FALSE
;

1454 
pWav
->
mem‹ySåómWrôe
 = memoryStreamWrite;

1455 
pWav
->
pU£rD©a
 = &pWav->
mem‹ySåómWrôe
;

1456  
DRWAV_TRUE
;

1457 
	}
}

1459 
drwav_boﬁ32
 
	$drwav_öô_mem‹y_wrôe
(
drwav
* 
pWav
, ** 
µD©a
, 
size_t
* 
pD©aSize
, c⁄° 
drwav_d©a_f‹m©
* 
pF‹m©
)

1461  
	`drwav_öô_mem‹y_wrôe__öã∫Æ
(
pWav
, 
µD©a
, 
pD©aSize
, 
pF‹m©
, 0, 
DRWAV_FALSE
);

1462 
	}
}

1464 
drwav_boﬁ32
 
	$drwav_öô_mem‹y_wrôe_£quítül
(
drwav
* 
pWav
, ** 
µD©a
, 
size_t
* 
pD©aSize
, c⁄° 
drwav_d©a_f‹m©
* 
pF‹m©
, 
drwav_uöt64
 
tŸÆSam∂eCou¡
)

1466  
	`drwav_öô_mem‹y_wrôe__öã∫Æ
(
pWav
, 
µD©a
, 
pD©aSize
, 
pF‹m©
, 
tŸÆSam∂eCou¡
, 
DRWAV_TRUE
);

1467 
	}
}

1470 
drwav
* 
	$drwav_›í_mem‹y
(c⁄° * 
d©a
, 
size_t
 
d©aSize
)

1472  
	`drwav_›í_mem‹y_ex
(
d©a
, 
d©aSize
, 
NULL
, NULL, 0);

1473 
	}
}

1475 
drwav
* 
	$drwav_›í_mem‹y_ex
(c⁄° * 
d©a
, 
size_t
 
d©aSize
, 
drwav_chunk_¥oc
 
⁄Chunk
, * 
pChunkU£rD©a
, 
drwav_uöt32
 
Êags
)

1477 i‡(
d©a
 =
NULL
 || 
d©aSize
 == 0) {

1478  
NULL
;

1481 
drwav__mem‹y_°ªam
 
mem‹ySåóm
;

1482 
	`drwav_zîo_mem‹y
(&
mem‹ySåóm
, (memoryStream));

1483 
mem‹ySåóm
.
d©a
 = (const *)data;

1484 
mem‹ySåóm
.
d©aSize
 = dataSize;

1485 
mem‹ySåóm
.
cuºítRódPos
 = 0;

1487 
drwav
* 
pWav
 = 
	`drwav_›í_ex
(
drwav__⁄_ªad_mem‹y
, 
drwav__⁄_£ek_mem‹y
, 
⁄Chunk
, (*)&
mem‹ySåóm
, 
pChunkU£rD©a
, 
Êags
);

1488 i‡(
pWav
 =
NULL
) {

1489  
NULL
;

1492 
pWav
->
mem‹ySåóm
 = memoryStream;

1493 
pWav
->
pU£rD©a
 = &pWav->
mem‹ySåóm
;

1494  
pWav
;

1495 
	}
}

1498 
drwav
* 
	$drwav_›í_mem‹y_wrôe__öã∫Æ
(** 
µD©a
, 
size_t
* 
pD©aSize
, c⁄° 
drwav_d©a_f‹m©
* 
pF‹m©
, 
drwav_uöt64
 
tŸÆSam∂eCou¡
, 
drwav_boﬁ32
 
isSequítül
)

1500 i‡(
µD©a
 =
NULL
) {

1501  
NULL
;

1504 *
µD©a
 = 
NULL
;

1505 *
pD©aSize
 = 0;

1507 
drwav__mem‹y_°ªam_wrôe
 
mem‹ySåómWrôe
;

1508 
	`drwav_zîo_mem‹y
(&
mem‹ySåómWrôe
, (memoryStreamWrite));

1509 
mem‹ySåómWrôe
.
µD©a
 =ÖpData;

1510 
mem‹ySåómWrôe
.
pD©aSize
 =ÖDataSize;

1511 
mem‹ySåómWrôe
.
d©aSize
 = 0;

1512 
mem‹ySåómWrôe
.
d©aC≠acôy
 = 0;

1513 
mem‹ySåómWrôe
.
cuºítWrôePos
 = 0;

1515 
drwav
* 
pWav
 = 
	`drwav_›í_wrôe__öã∫Æ
(
pF‹m©
, 
tŸÆSam∂eCou¡
, 
isSequítül
, 
drwav__⁄_wrôe_mem‹y
, 
drwav__⁄_£ek_mem‹y_wrôe
, (*)&
mem‹ySåómWrôe
);

1516 i‡(
pWav
 =
NULL
) {

1517  
NULL
;

1520 
pWav
->
mem‹ySåómWrôe
 = memoryStreamWrite;

1521 
pWav
->
pU£rD©a
 = &pWav->
mem‹ySåómWrôe
;

1522  
pWav
;

1523 
	}
}

1525 
drwav
* 
	$drwav_›í_mem‹y_wrôe
(** 
µD©a
, 
size_t
* 
pD©aSize
, c⁄° 
drwav_d©a_f‹m©
* 
pF‹m©
)

1527  
	`drwav_›í_mem‹y_wrôe__öã∫Æ
(
µD©a
, 
pD©aSize
, 
pF‹m©
, 0, 
DRWAV_FALSE
);

1528 
	}
}

1530 
drwav
* 
	$drwav_›í_mem‹y_wrôe_£quítül
(** 
µD©a
, 
size_t
* 
pD©aSize
, c⁄° 
drwav_d©a_f‹m©
* 
pF‹m©
, 
drwav_uöt64
 
tŸÆSam∂eCou¡
)

1532  
	`drwav_›í_mem‹y_wrôe__öã∫Æ
(
µD©a
, 
pD©aSize
, 
pF‹m©
, 
tŸÆSam∂eCou¡
, 
DRWAV_TRUE
);

1533 
	}
}

1536 
size_t
 
	$drwav__⁄_ªad
(
drwav_ªad_¥oc
 
⁄Ród
, * 
pU£rD©a
, * 
pBuf„rOut
, 
size_t
 
byãsToRód
, 
drwav_uöt64
* 
pCurs‹
)

1538 
	`drwav_as£π
(
⁄Ród
 !
NULL
);

1539 
	`drwav_as£π
(
pCurs‹
 !
NULL
);

1541 
size_t
 
byãsRód
 = 
	`⁄Ród
(
pU£rD©a
, 
pBuf„rOut
, 
byãsToRód
);

1542 *
pCurs‹
 +
byãsRód
;

1543  
byãsRód
;

1544 
	}
}

1546 
drwav_boﬁ32
 
	$drwav__⁄_£ek
(
drwav_£ek_¥oc
 
⁄Sìk
, * 
pU£rD©a
, 
off£t
, 
drwav_£ek_‹igö
 
‹igö
, 
drwav_uöt64
* 
pCurs‹
)

1548 
	`drwav_as£π
(
⁄Sìk
 !
NULL
);

1549 
	`drwav_as£π
(
pCurs‹
 !
NULL
);

1551 i‡(!
	`⁄Sìk
(
pU£rD©a
, 
off£t
, 
‹igö
)) {

1552  
DRWAV_FALSE
;

1555 i‡(
‹igö
 =
drwav_£ek_‹igö_°¨t
) {

1556 *
pCurs‹
 = 
off£t
;

1558 *
pCurs‹
 +
off£t
;

1561  
DRWAV_TRUE
;

1562 
	}
}

1565 
drwav_uöt32
 
	$drwav_gë_byãs_≥r_ßm∂e
(
drwav
* 
pWav
)

1569 
drwav_uöt32
 
byãsPîSam∂e
 = 
pWav
->
bôsPîSam∂e
 >> 3;

1570 i‡(
byãsPîSam∂e
 =0 || (
pWav
->
bôsPîSam∂e
 & 0x7) != 0) {

1571 
byãsPîSam∂e
 = 
pWav
->
fmt
.
blockAlign
/pWav->fmt.
ch™√ls
;

1574  
byãsPîSam∂e
;

1575 
	}
}

1577 
drwav_uöt32
 
	$drwav_gë_byãs_≥r_pcm_‰ame
(
drwav
* 
pWav
)

1581 
drwav_uöt32
 
bôsPîFøme
 = 
pWav
->
bôsPîSam∂e
 *ÖWav->
fmt
.
ch™√ls
;

1582 
drwav_uöt32
 
byãsPîFøme
 = 
bôsPîFøme
 >> 3;

1583 i‡(
byãsPîFøme
 =0 || (
bôsPîFøme
 & 0x7) != 0) {

1584 
byãsPîFøme
 = 
pWav
->
fmt
.
blockAlign
;

1587  
byãsPîFøme
;

1588 
	}
}

1591 
drwav_boﬁ32
 
	$drwav_öô
(
drwav
* 
pWav
, 
drwav_ªad_¥oc
 
⁄Ród
, 
drwav_£ek_¥oc
 
⁄Sìk
, * 
pU£rD©a
)

1593  
	`drwav_öô_ex
(
pWav
, 
⁄Ród
, 
⁄Sìk
, 
NULL
, 
pU£rD©a
, NULL, 0);

1594 
	}
}

1596 
drwav_boﬁ32
 
	$drwav_öô_ex
(
drwav
* 
pWav
, 
drwav_ªad_¥oc
 
⁄Ród
, 
drwav_£ek_¥oc
 
⁄Sìk
, 
drwav_chunk_¥oc
 
⁄Chunk
, * 
pRódSìkU£rD©a
, * 
pChunkU£rD©a
, 
drwav_uöt32
 
Êags
)

1598 i‡(
⁄Ród
 =
NULL
 || 
⁄Sìk
 == NULL) {

1599  
DRWAV_FALSE
;

1602 
drwav_uöt64
 
curs‹
 = 0;

1603 
drwav_boﬁ32
 
£quítül
 = (
Êags
 & 
DRWAV_SEQUENTIAL
) != 0;

1605 
	`drwav_zîo_mem‹y
(
pWav
, (*pWav));

1606 
pWav
->
⁄Ród
 = onRead;

1607 
pWav
->
⁄Sìk
 = onSeek;

1608 
pWav
->
pU£rD©a
 = 
pRódSìkU£rD©a
;

1611 
riff
[4];

1612 i‡(
	`drwav__⁄_ªad
(
⁄Ród
, 
pRódSìkU£rD©a
, 
riff
, ‘iff), &
curs‹
) != (riff)) {

1613  
DRWAV_FALSE
;

1618 i‡(
	`drwav__fourcc_equÆ
(
riff
, "RIFF")) {

1619 
pWav
->
c⁄èöî
 = 
drwav_c⁄èöî_riff
;

1620 } i‡(
	`drwav__fourcc_equÆ
(
riff
, "riff")) {

1621 
pWav
->
c⁄èöî
 = 
drwav_c⁄èöî_w64
;

1624 
drwav_uöt8
 
riff2
[12];

1625 i‡(
	`drwav__⁄_ªad
(
⁄Ród
, 
pRódSìkU£rD©a
, 
riff2
, ‘iff2), &
curs‹
) != (riff2)) {

1626  
DRWAV_FALSE
;

1629 
i
 = 0; i < 12; ++i) {

1630 i‡(
riff2
[
i
] !
drwavGUID_W64_RIFF
[i+4]) {

1631  
DRWAV_FALSE
;

1635  
DRWAV_FALSE
;

1639 i‡(
pWav
->
c⁄èöî
 =
drwav_c⁄èöî_riff
) {

1641 
chunkSizeByãs
[4];

1642 i‡(
	`drwav__⁄_ªad
(
⁄Ród
, 
pRódSìkU£rD©a
, 
chunkSizeByãs
, (chunkSizeByãs), &
curs‹
) != (chunkSizeBytes)) {

1643  
DRWAV_FALSE
;

1646 
chunkSize
 = 
	`drwav__byãs_to_u32
(
chunkSizeByãs
);

1647 i‡(
chunkSize
 < 36) {

1648  
DRWAV_FALSE
;

1651 
wave
[4];

1652 i‡(
	`drwav__⁄_ªad
(
⁄Ród
, 
pRódSìkU£rD©a
, 
wave
, (wave), &
curs‹
) != (wave)) {

1653  
DRWAV_FALSE
;

1656 i‡(!
	`drwav__fourcc_equÆ
(
wave
, "WAVE")) {

1657  
DRWAV_FALSE
;

1661 
chunkSize
[8];

1662 i‡(
	`drwav__⁄_ªad
(
⁄Ród
, 
pRódSìkU£rD©a
, 
chunkSize
, (chunkSize), &
curs‹
) != (chunkSize)) {

1663  
DRWAV_FALSE
;

1666 i‡(
	`drwav__byãs_to_u64
(
chunkSize
) < 80) {

1667  
DRWAV_FALSE
;

1670 
drwav_uöt8
 
wave
[16];

1671 i‡(
	`drwav__⁄_ªad
(
⁄Ród
, 
pRódSìkU£rD©a
, 
wave
, (wave), &
curs‹
) != (wave)) {

1672  
DRWAV_FALSE
;

1675 i‡(!
	`drwav__guid_equÆ
(
wave
, 
drwavGUID_W64_WAVE
)) {

1676  
DRWAV_FALSE
;

1682 
drwav_fmt
 
fmt
;

1683 i‡(!
	`drwav__ªad_fmt
(
⁄Ród
, 
⁄Sìk
, 
pRódSìkU£rD©a
, 
pWav
->
c⁄èöî
, &
curs‹
, &
fmt
)) {

1684  
DRWAV_FALSE
;

1688 i‡(
fmt
.
ßm∂eR©e
 =0 || fmt.
ch™√ls
 =0 || fmt.
bôsPîSam∂e
 =0 || fmt.
blockAlign
 == 0) {

1689  
DRWAV_FALSE
;

1694 
å™¶©edF‹m©Tag
 = 
fmt
.
f‹m©Tag
;

1695 i‡(
å™¶©edF‹m©Tag
 =
DR_WAVE_FORMAT_EXTENSIBLE
) {

1696 
å™¶©edF‹m©Tag
 = 
	`drwav__byãs_to_u16
(
fmt
.
subF‹m©
 + 0);

1701 
drwav_uöt64
 
ßm∂eCou¡FromFa˘Chunk
 = 0;

1708 
drwav_boﬁ32
 
foundD©aChunk
 = 
DRWAV_FALSE
;

1709 
drwav_uöt64
 
d©aChunkSize
 = 0;

1712 
drwav_uöt64
 
chunkSize
 = 0;

1715 
drwav_chunk_hódî
 
hódî
;

1716 
drwav_ªsu…
 
ªsu…
 = 
	`drwav__ªad_chunk_hódî
(
⁄Ród
, 
pRódSìkU£rD©a
, 
pWav
->
c⁄èöî
, &
curs‹
, &
hódî
);

1717 i‡(
ªsu…
 !
DRWAV_SUCCESS
) {

1718 i‡(!
foundD©aChunk
) {

1719  
DRWAV_FALSE
;

1726 i‡(!
£quítül
 && 
⁄Chunk
 !
NULL
) {

1727 
drwav_uöt64
 
ˇŒbackByãsRód
 = 
	`⁄Chunk
(
pChunkU£rD©a
, 
⁄Ród
, 
⁄Sìk
, 
pRódSìkU£rD©a
, &
hódî
);

1731 i‡(
ˇŒbackByãsRód
 > 0) {

1732 i‡(!
	`drwav__£ek_‰om_°¨t
(
⁄Sìk
, 
curs‹
, 
pRódSìkU£rD©a
)) {

1733  
DRWAV_FALSE
;

1739 i‡(!
foundD©aChunk
) {

1740 
pWav
->
d©aChunkD©aPos
 = 
curs‹
;

1743 
chunkSize
 = 
hódî
.
sizeInByãs
;

1744 i‡(
pWav
->
c⁄èöî
 =
drwav_c⁄èöî_riff
) {

1745 i‡(
	`drwav__fourcc_equÆ
(
hódî
.
id
.
fourcc
, "data")) {

1746 
foundD©aChunk
 = 
DRWAV_TRUE
;

1747 
d©aChunkSize
 = 
chunkSize
;

1750 i‡(
	`drwav__guid_equÆ
(
hódî
.
id
.
guid
, 
drwavGUID_W64_DATA
)) {

1751 
foundD©aChunk
 = 
DRWAV_TRUE
;

1752 
d©aChunkSize
 = 
chunkSize
;

1758 i‡(
foundD©aChunk
 && 
£quítül
) {

1763 i‡(
pWav
->
c⁄èöî
 =
drwav_c⁄èöî_riff
) {

1764 i‡(
	`drwav__fourcc_equÆ
(
hódî
.
id
.
fourcc
, "fact")) {

1765 
drwav_uöt32
 
ßm∂eCou¡
;

1766 i‡(
	`drwav__⁄_ªad
(
⁄Ród
, 
pRódSìkU£rD©a
, &
ßm∂eCou¡
, 4, &
curs‹
) != 4) {

1767  
DRWAV_FALSE
;

1769 
chunkSize
 -= 4;

1771 i‡(!
foundD©aChunk
) {

1772 
pWav
->
d©aChunkD©aPos
 = 
curs‹
;

1777 i‡(
pWav
->
å™¶©edF‹m©Tag
 =
DR_WAVE_FORMAT_ADPCM
) {

1778 
ßm∂eCou¡FromFa˘Chunk
 = 
ßm∂eCou¡
;

1780 
ßm∂eCou¡FromFa˘Chunk
 = 0;

1784 i‡(
	`drwav__guid_equÆ
(
hódî
.
id
.
guid
, 
drwavGUID_W64_FACT
)) {

1785 i‡(
	`drwav__⁄_ªad
(
⁄Ród
, 
pRódSìkU£rD©a
, &
ßm∂eCou¡FromFa˘Chunk
, 8, &
curs‹
) != 8) {

1786  
DRWAV_FALSE
;

1788 
chunkSize
 -= 8;

1790 i‡(!
foundD©aChunk
) {

1791 
pWav
->
d©aChunkD©aPos
 = 
curs‹
;

1797 i‡(
pWav
->
c⁄èöî
 =
drwav_c⁄èöî_riff
) {

1798 i‡(
	`drwav__fourcc_equÆ
(
hódî
.
id
.
fourcc
, "smpl")) {

1799 
sm∂HódîD©a
[36];

1800 i‡(
chunkSize
 >(
sm∂HódîD©a
)) {

1801 
drwav_uöt64
 
byãsJu°Ród
 = 
	`drwav__⁄_ªad
(
⁄Ród
, 
pRódSìkU£rD©a
, 
sm∂HódîD©a
, (sm∂HódîD©a), &
curs‹
);

1802 
chunkSize
 -
byãsJu°Ród
;

1804 i‡(
byãsJu°Ród
 =(
sm∂HódîD©a
)) {

1805 
pWav
->
sm∂
.
m™uÁ˘uªr
 = 
	`drwav__byãs_to_u32
(
sm∂HódîD©a
+0);

1806 
pWav
->
sm∂
.
¥odu˘
 = 
	`drwav__byãs_to_u32
(
sm∂HódîD©a
+4);

1807 
pWav
->
sm∂
.
ßm∂ePîiod
 = 
	`drwav__byãs_to_u32
(
sm∂HódîD©a
+8);

1808 
pWav
->
sm∂
.
midiUnôyNŸes
 = 
	`drwav__byãs_to_u32
(
sm∂HódîD©a
+12);

1809 
pWav
->
sm∂
.
midiPôchFø˘i⁄
 = 
	`drwav__byãs_to_u32
(
sm∂HódîD©a
+16);

1810 
pWav
->
sm∂
.
sm±eF‹m©
 = 
	`drwav__byãs_to_u32
(
sm∂HódîD©a
+20);

1811 
pWav
->
sm∂
.
sm±eOff£t
 = 
	`drwav__byãs_to_u32
(
sm∂HódîD©a
+24);

1812 
pWav
->
sm∂
.
numSam∂eLo›s
 = 
	`drwav__byãs_to_u32
(
sm∂HódîD©a
+28);

1813 
pWav
->
sm∂
.
ßm∂îD©a
 = 
	`drwav__byãs_to_u32
(
sm∂HódîD©a
+32);

1815 
drwav_uöt32
 
iLo›
 = 0; iLo› < 
pWav
->
sm∂
.
numSam∂eLo›s
 && iLo› < 
	`drwav_cou¡of
’Wav->sm∂.
lo›s
); ++iLoop) {

1816 
sm∂Lo›D©a
[24];

1817 
byãsJu°Ród
 = 
	`drwav__⁄_ªad
(
⁄Ród
, 
pRódSìkU£rD©a
, 
sm∂Lo›D©a
, (sm∂Lo›D©a), &
curs‹
);

1818 
chunkSize
 -
byãsJu°Ród
;

1820 i‡(
byãsJu°Ród
 =(
sm∂Lo›D©a
)) {

1821 
pWav
->
sm∂
.
lo›s
[
iLo›
].
cuePoötId
 = 
	`drwav__byãs_to_u32
(
sm∂Lo›D©a
+0);

1822 
pWav
->
sm∂
.
lo›s
[
iLo›
].
ty≥
 = 
	`drwav__byãs_to_u32
(
sm∂Lo›D©a
+4);

1823 
pWav
->
sm∂
.
lo›s
[
iLo›
].
°¨t
 = 
	`drwav__byãs_to_u32
(
sm∂Lo›D©a
+8);

1824 
pWav
->
sm∂
.
lo›s
[
iLo›
].
íd
 = 
	`drwav__byãs_to_u32
(
sm∂Lo›D©a
+12);

1825 
pWav
->
sm∂
.
lo›s
[
iLo›
].
‰a˘i⁄
 = 
	`drwav__byãs_to_u32
(
sm∂Lo›D©a
+16);

1826 
pWav
->
sm∂
.
lo›s
[
iLo›
].
∂ayCou¡
 = 
	`drwav__byãs_to_u32
(
sm∂Lo›D©a
+20);

1837 i‡(
	`drwav__guid_equÆ
(
hódî
.
id
.
guid
, 
drwavGUID_W64_SMPL
)) {

1844 
chunkSize
 +
hódî
.
∑ddögSize
;

1845 i‡(!
	`drwav__£ek_f‹w¨d
(
⁄Sìk
, 
chunkSize
, 
pRódSìkU£rD©a
)) {

1848 
curs‹
 +
chunkSize
;

1850 i‡(!
foundD©aChunk
) {

1851 
pWav
->
d©aChunkD©aPos
 = 
curs‹
;

1856 i‡(!
foundD©aChunk
) {

1857  
DRWAV_FALSE
;

1861 i‡(!
£quítül
) {

1862 i‡(!
	`drwav__£ek_‰om_°¨t
(
⁄Sìk
, 
pWav
->
d©aChunkD©aPos
, 
pRódSìkU£rD©a
)) {

1863  
DRWAV_FALSE
;

1865 
curs‹
 = 
pWav
->
d©aChunkD©aPos
;

1871 
pWav
->
fmt
 = fmt;

1872 
pWav
->
ßm∂eR©e
 = 
fmt
.sampleRate;

1873 
pWav
->
ch™√ls
 = 
fmt
.channels;

1874 
pWav
->
bôsPîSam∂e
 = 
fmt
.bitsPerSample;

1875 
pWav
->
byãsRemaöög
 = 
d©aChunkSize
;

1876 
pWav
->
å™¶©edF‹m©Tag
 =ÅranslatedFormatTag;

1877 
pWav
->
d©aChunkD©aSize
 = 
d©aChunkSize
;

1879 i‡(
ßm∂eCou¡FromFa˘Chunk
 != 0) {

1880 
pWav
->
tŸÆPCMFømeCou¡
 = 
ßm∂eCou¡FromFa˘Chunk
;

1882 
pWav
->
tŸÆPCMFømeCou¡
 = 
d©aChunkSize
 / 
	`drwav_gë_byãs_≥r_pcm_‰ame
(pWav);

1884 i‡(
pWav
->
å™¶©edF‹m©Tag
 =
DR_WAVE_FORMAT_ADPCM
) {

1885 
drwav_uöt64
 
blockCou¡
 = 
d©aChunkSize
 / 
fmt
.
blockAlign
;

1886 
pWav
->
tŸÆPCMFømeCou¡
 = (((
blockCou¡
 * (
fmt
.
blockAlign
 - (6*pWav->
ch™√ls
))) * 2)) / fmt.channels;

1888 i‡(
pWav
->
å™¶©edF‹m©Tag
 =
DR_WAVE_FORMAT_DVI_ADPCM
) {

1889 
drwav_uöt64
 
blockCou¡
 = 
d©aChunkSize
 / 
fmt
.
blockAlign
;

1890 
pWav
->
tŸÆPCMFømeCou¡
 = (((
blockCou¡
 * (
fmt
.
blockAlign
 - (4*pWav->
ch™√ls
))) * 2) + (blockCount *ÖWav->channels)) / fmt.channels;

1895 i‡(
pWav
->
å™¶©edF‹m©Tag
 =
DR_WAVE_FORMAT_ADPCM
 ||ÖWav->å™¶©edF‹m©Tag =
DR_WAVE_FORMAT_DVI_ADPCM
) {

1896 i‡(
pWav
->
ch™√ls
 > 2) {

1897  
DRWAV_FALSE
;

1901 #ifde‡
DR_WAV_LIBSNDFILE_COMPAT


1908 i‡(
pWav
->
å™¶©edF‹m©Tag
 =
DR_WAVE_FORMAT_ADPCM
) {

1909 
drwav_uöt64
 
blockCou¡
 = 
d©aChunkSize
 / 
fmt
.
blockAlign
;

1910 
pWav
->
tŸÆPCMFømeCou¡
 = (((
blockCou¡
 * (
fmt
.
blockAlign
 - (6*pWav->
ch™√ls
))) * 2)) / fmt.channels;

1912 i‡(
pWav
->
å™¶©edF‹m©Tag
 =
DR_WAVE_FORMAT_DVI_ADPCM
) {

1913 
drwav_uöt64
 
blockCou¡
 = 
d©aChunkSize
 / 
fmt
.
blockAlign
;

1914 
pWav
->
tŸÆPCMFømeCou¡
 = (((
blockCou¡
 * (
fmt
.
blockAlign
 - (4*pWav->
ch™√ls
))) * 2) + (blockCount *ÖWav->channels)) / fmt.channels;

1918 
pWav
->
tŸÆSam∂eCou¡
 =ÖWav->
tŸÆPCMFømeCou¡
 *ÖWav->
ch™√ls
;

1920  
DRWAV_TRUE
;

1921 
	}
}

1924 
drwav_uöt32
 
	$drwav_riff_chunk_size_riff
(
drwav_uöt64
 
d©aChunkSize
)

1926 i‡(
d©aChunkSize
 <= (0xFFFFFFFF - 36)) {

1927  36 + (
drwav_uöt32
)
d©aChunkSize
;

1931 
	}
}

1933 
drwav_uöt32
 
	$drwav_d©a_chunk_size_riff
(
drwav_uöt64
 
d©aChunkSize
)

1935 i‡(
d©aChunkSize
 <= 0xFFFFFFFF) {

1936  (
drwav_uöt32
)
d©aChunkSize
;

1940 
	}
}

1942 
drwav_uöt64
 
	$drwav_riff_chunk_size_w64
(
drwav_uöt64
 
d©aChunkSize
)

1944  80 + 24 + 
d©aChunkSize
;

1945 
	}
}

1947 
drwav_uöt64
 
	$drwav_d©a_chunk_size_w64
(
drwav_uöt64
 
d©aChunkSize
)

1949  24 + 
d©aChunkSize
;

1950 
	}
}

1953 
drwav_boﬁ32
 
	$drwav_öô_wrôe__öã∫Æ
(
drwav
* 
pWav
, c⁄° 
drwav_d©a_f‹m©
* 
pF‹m©
, 
drwav_uöt64
 
tŸÆSam∂eCou¡
, 
drwav_boﬁ32
 
isSequítül
, 
drwav_wrôe_¥oc
 
⁄Wrôe
, 
drwav_£ek_¥oc
 
⁄Sìk
, * 
pU£rD©a
)

1955 i‡(
pWav
 =
NULL
) {

1956  
DRWAV_FALSE
;

1959 i‡(
⁄Wrôe
 =
NULL
) {

1960  
DRWAV_FALSE
;

1963 i‡(!
isSequítül
 && 
⁄Sìk
 =
NULL
) {

1964  
DRWAV_FALSE
;

1969 i‡(
pF‹m©
->
f‹m©
 =
DR_WAVE_FORMAT_EXTENSIBLE
) {

1970  
DRWAV_FALSE
;

1972 i‡(
pF‹m©
->
f‹m©
 =
DR_WAVE_FORMAT_ADPCM
 ||ÖF‹m©->f‹m© =
DR_WAVE_FORMAT_DVI_ADPCM
) {

1973  
DRWAV_FALSE
;

1977 
	`drwav_zîo_mem‹y
(
pWav
, (*pWav));

1978 
pWav
->
⁄Wrôe
 = onWrite;

1979 
pWav
->
⁄Sìk
 = onSeek;

1980 
pWav
->
pU£rD©a
 =ÖUserData;

1981 
pWav
->
fmt
.
f‹m©Tag
 = (
drwav_uöt16
)
pF‹m©
->
f‹m©
;

1982 
pWav
->
fmt
.
ch™√ls
 = (
drwav_uöt16
)
pF‹m©
->channels;

1983 
pWav
->
fmt
.
ßm∂eR©e
 = 
pF‹m©
->sampleRate;

1984 
pWav
->
fmt
.
avgByãsPîSec
 = (
drwav_uöt32
)((
pF‹m©
->
bôsPîSam∂e
 *ÖF‹m©->
ßm∂eR©e
 *ÖF‹m©->
ch™√ls
) / 8);

1985 
pWav
->
fmt
.
blockAlign
 = (
drwav_uöt16
)((
pF‹m©
->
ch™√ls
 *ÖF‹m©->
bôsPîSam∂e
) / 8);

1986 
pWav
->
fmt
.
bôsPîSam∂e
 = (
drwav_uöt16
)
pF‹m©
->bitsPerSample;

1987 
pWav
->
fmt
.
exãndedSize
 = 0;

1988 
pWav
->
isSequítülWrôe
 = 
isSequítül
;

1991 
size_t
 
ru¬ögPos
 = 0;

1996 
drwav_uöt64
 
öôülD©aChunkSize
 = 0;

1997 i‡(
isSequítül
) {

1998 
öôülD©aChunkSize
 = (
tŸÆSam∂eCou¡
 * 
pWav
->
fmt
.
bôsPîSam∂e
) / 8;

2002 i‡(
pF‹m©
->
c⁄èöî
 =
drwav_c⁄èöî_riff
) {

2003 i‡(
öôülD©aChunkSize
 > (0xFFFFFFFF - 36)) {

2004  
DRWAV_FALSE
;

2009 
pWav
->
d©aChunkD©aSizeT¨gëWrôe
 = 
öôülD©aChunkSize
;

2013 i‡(
pF‹m©
->
c⁄èöî
 =
drwav_c⁄èöî_riff
) {

2014 
drwav_uöt32
 
chunkSizeRIFF
 = 36 + (drwav_uöt32)
öôülD©aChunkSize
;

2015 
ru¬ögPos
 +
pWav
->
	`⁄Wrôe
(
pU£rD©a
, "RIFF", 4);

2016 
ru¬ögPos
 +
pWav
->
	`⁄Wrôe
(
pU£rD©a
, &
chunkSizeRIFF
, 4);

2017 
ru¬ögPos
 +
pWav
->
	`⁄Wrôe
(
pU£rD©a
, "WAVE", 4);

2019 
drwav_uöt64
 
chunkSizeRIFF
 = 80 + 24 + 
öôülD©aChunkSize
;

2020 
ru¬ögPos
 +
pWav
->
	`⁄Wrôe
(
pU£rD©a
, 
drwavGUID_W64_RIFF
, 16);

2021 
ru¬ögPos
 +
pWav
->
	`⁄Wrôe
(
pU£rD©a
, &
chunkSizeRIFF
, 8);

2022 
ru¬ögPos
 +
pWav
->
	`⁄Wrôe
(
pU£rD©a
, 
drwavGUID_W64_WAVE
, 16);

2026 
drwav_uöt64
 
chunkSizeFMT
;

2027 i‡(
pF‹m©
->
c⁄èöî
 =
drwav_c⁄èöî_riff
) {

2028 
chunkSizeFMT
 = 16;

2029 
ru¬ögPos
 +
pWav
->
	`⁄Wrôe
(
pU£rD©a
, "fmt ", 4);

2030 
ru¬ögPos
 +
pWav
->
	`⁄Wrôe
(
pU£rD©a
, &
chunkSizeFMT
, 4);

2032 
chunkSizeFMT
 = 40;

2033 
ru¬ögPos
 +
pWav
->
	`⁄Wrôe
(
pU£rD©a
, 
drwavGUID_W64_FMT
, 16);

2034 
ru¬ögPos
 +
pWav
->
	`⁄Wrôe
(
pU£rD©a
, &
chunkSizeFMT
, 8);

2037 
ru¬ögPos
 +
pWav
->
	`⁄Wrôe
(
pU£rD©a
, &pWav->
fmt
.
f‹m©Tag
, 2);

2038 
ru¬ögPos
 +
pWav
->
	`⁄Wrôe
(
pU£rD©a
, &pWav->
fmt
.
ch™√ls
, 2);

2039 
ru¬ögPos
 +
pWav
->
	`⁄Wrôe
(
pU£rD©a
, &pWav->
fmt
.
ßm∂eR©e
, 4);

2040 
ru¬ögPos
 +
pWav
->
	`⁄Wrôe
(
pU£rD©a
, &pWav->
fmt
.
avgByãsPîSec
, 4);

2041 
ru¬ögPos
 +
pWav
->
	`⁄Wrôe
(
pU£rD©a
, &pWav->
fmt
.
blockAlign
, 2);

2042 
ru¬ögPos
 +
pWav
->
	`⁄Wrôe
(
pU£rD©a
, &pWav->
fmt
.
bôsPîSam∂e
, 2);

2044 
pWav
->
d©aChunkD©aPos
 = 
ru¬ögPos
;

2047 i‡(
pF‹m©
->
c⁄èöî
 =
drwav_c⁄èöî_riff
) {

2048 
drwav_uöt32
 
chunkSizeDATA
 = (drwav_uöt32)
öôülD©aChunkSize
;

2049 
ru¬ögPos
 +
pWav
->
	`⁄Wrôe
(
pU£rD©a
, "data", 4);

2050 
ru¬ögPos
 +
pWav
->
	`⁄Wrôe
(
pU£rD©a
, &
chunkSizeDATA
, 4);

2052 
drwav_uöt64
 
chunkSizeDATA
 = 24 + 
öôülD©aChunkSize
;

2053 
ru¬ögPos
 +
pWav
->
	`⁄Wrôe
(
pU£rD©a
, 
drwavGUID_W64_DATA
, 16);

2054 
ru¬ögPos
 +
pWav
->
	`⁄Wrôe
(
pU£rD©a
, &
chunkSizeDATA
, 8);

2059 i‡(
pF‹m©
->
c⁄èöî
 =
drwav_c⁄èöî_riff
) {

2060 i‡(
ru¬ögPos
 !20 + 
chunkSizeFMT
 + 8) {

2061  
DRWAV_FALSE
;

2064 i‡(
ru¬ögPos
 !40 + 
chunkSizeFMT
 + 24) {

2065  
DRWAV_FALSE
;

2072 
pWav
->
c⁄èöî
 = 
pF‹m©
->container;

2073 
pWav
->
ch™√ls
 = (
drwav_uöt16
)
pF‹m©
->channels;

2074 
pWav
->
ßm∂eR©e
 = 
pF‹m©
->sampleRate;

2075 
pWav
->
bôsPîSam∂e
 = (
drwav_uöt16
)
pF‹m©
->bitsPerSample;

2076 
pWav
->
å™¶©edF‹m©Tag
 = (
drwav_uöt16
)
pF‹m©
->
f‹m©
;

2078  
DRWAV_TRUE
;

2079 
	}
}

2082 
drwav_boﬁ32
 
	$drwav_öô_wrôe
(
drwav
* 
pWav
, c⁄° 
drwav_d©a_f‹m©
* 
pF‹m©
, 
drwav_wrôe_¥oc
 
⁄Wrôe
, 
drwav_£ek_¥oc
 
⁄Sìk
, * 
pU£rD©a
)

2084  
	`drwav_öô_wrôe__öã∫Æ
(
pWav
, 
pF‹m©
, 0, 
DRWAV_FALSE
, 
⁄Wrôe
, 
⁄Sìk
, 
pU£rD©a
);

2085 
	}
}

2087 
drwav_boﬁ32
 
	$drwav_öô_wrôe_£quítül
(
drwav
* 
pWav
, c⁄° 
drwav_d©a_f‹m©
* 
pF‹m©
, 
drwav_uöt64
 
tŸÆSam∂eCou¡
, 
drwav_wrôe_¥oc
 
⁄Wrôe
, * 
pU£rD©a
)

2089  
	`drwav_öô_wrôe__öã∫Æ
(
pWav
, 
pF‹m©
, 
tŸÆSam∂eCou¡
, 
DRWAV_TRUE
, 
⁄Wrôe
, 
NULL
, 
pU£rD©a
);

2090 
	}
}

2092 
	$drwav_unöô
(
drwav
* 
pWav
)

2094 i‡(
pWav
 =
NULL
) {

2101 i‡(
pWav
->
⁄Wrôe
 !
NULL
) {

2103 i‡(
pWav
->
isSequítülWrôe
) {

2104 
	`drwav_as£π
(
pWav
->
d©aChunkD©aSize
 =pWav->
d©aChunkD©aSizeT¨gëWrôe
);

2108 
drwav_uöt32
 
∑ddögSize
 = 0;

2109 i‡(
pWav
->
c⁄èöî
 =
drwav_c⁄èöî_riff
) {

2110 
∑ddögSize
 = (
drwav_uöt32
)(
pWav
->
d©aChunkD©aSize
 % 2);

2112 
∑ddögSize
 = (
drwav_uöt32
)(
pWav
->
d©aChunkD©aSize
 % 8);

2115 i‡(
∑ddögSize
 > 0) {

2116 
drwav_uöt64
 
∑ddögD©a
 = 0;

2117 
pWav
->
	`⁄Wrôe
’Wav->
pU£rD©a
, &
∑ddögD©a
, 
∑ddögSize
);

2123 i‡(
pWav
->
⁄Sìk
 && !pWav->
isSequítülWrôe
) {

2124 i‡(
pWav
->
c⁄èöî
 =
drwav_c⁄èöî_riff
) {

2126 i‡(
pWav
->
	`⁄Sìk
’Wav->
pU£rD©a
, 4, 
drwav_£ek_‹igö_°¨t
)) {

2127 
drwav_uöt32
 
riffChunkSize
 = 
	`drwav_riff_chunk_size_riff
(
pWav
->
d©aChunkD©aSize
);

2128 
pWav
->
	`⁄Wrôe
’Wav->
pU£rD©a
, &
riffChunkSize
, 4);

2132 i‡(
pWav
->
	`⁄Sìk
’Wav->
pU£rD©a
, (ÌWav->
d©aChunkD©aPos
 + 4, 
drwav_£ek_‹igö_°¨t
)) {

2133 
drwav_uöt32
 
d©aChunkSize
 = 
	`drwav_d©a_chunk_size_riff
(
pWav
->
d©aChunkD©aSize
);

2134 
pWav
->
	`⁄Wrôe
’Wav->
pU£rD©a
, &
d©aChunkSize
, 4);

2138 i‡(
pWav
->
	`⁄Sìk
’Wav->
pU£rD©a
, 16, 
drwav_£ek_‹igö_°¨t
)) {

2139 
drwav_uöt64
 
riffChunkSize
 = 
	`drwav_riff_chunk_size_w64
(
pWav
->
d©aChunkD©aSize
);

2140 
pWav
->
	`⁄Wrôe
’Wav->
pU£rD©a
, &
riffChunkSize
, 8);

2144 i‡(
pWav
->
	`⁄Sìk
’Wav->
pU£rD©a
, (ÌWav->
d©aChunkD©aPos
 + 16, 
drwav_£ek_‹igö_°¨t
)) {

2145 
drwav_uöt64
 
d©aChunkSize
 = 
	`drwav_d©a_chunk_size_w64
(
pWav
->
d©aChunkD©aSize
);

2146 
pWav
->
	`⁄Wrôe
’Wav->
pU£rD©a
, &
d©aChunkSize
, 8);

2152 #i‚de‡
DR_WAV_NO_STDIO


2155 i‡(
pWav
->
⁄Ród
 =
drwav__⁄_ªad_°dio
 ||ÖWav->
⁄Wrôe
 =
drwav__⁄_wrôe_°dio
) {

2156 
	`f˛o£
((
FILE
*)
pWav
->
pU£rD©a
);

2159 
	}
}

2162 
drwav
* 
	$drwav_›í
(
drwav_ªad_¥oc
 
⁄Ród
, 
drwav_£ek_¥oc
 
⁄Sìk
, * 
pU£rD©a
)

2164  
	`drwav_›í_ex
(
⁄Ród
, 
⁄Sìk
, 
NULL
, 
pU£rD©a
, NULL, 0);

2165 
	}
}

2167 
drwav
* 
	$drwav_›í_ex
(
drwav_ªad_¥oc
 
⁄Ród
, 
drwav_£ek_¥oc
 
⁄Sìk
, 
drwav_chunk_¥oc
 
⁄Chunk
, * 
pRódSìkU£rD©a
, * 
pChunkU£rD©a
, 
drwav_uöt32
 
Êags
)

2169 
drwav
* 
pWav
 = (drwav*)
	`DRWAV_MALLOC
((*pWav));

2170 i‡(
pWav
 =
NULL
) {

2171  
NULL
;

2174 i‡(!
	`drwav_öô_ex
(
pWav
, 
⁄Ród
, 
⁄Sìk
, 
⁄Chunk
, 
pRódSìkU£rD©a
, 
pChunkU£rD©a
, 
Êags
)) {

2175 
	`DRWAV_FREE
(
pWav
);

2176  
NULL
;

2179  
pWav
;

2180 
	}
}

2183 
drwav
* 
	$drwav_›í_wrôe__öã∫Æ
(c⁄° 
drwav_d©a_f‹m©
* 
pF‹m©
, 
drwav_uöt64
 
tŸÆSam∂eCou¡
, 
drwav_boﬁ32
 
isSequítül
, 
drwav_wrôe_¥oc
 
⁄Wrôe
, 
drwav_£ek_¥oc
 
⁄Sìk
, * 
pU£rD©a
)

2185 
drwav
* 
pWav
 = (drwav*)
	`DRWAV_MALLOC
((*pWav));

2186 i‡(
pWav
 =
NULL
) {

2187  
NULL
;

2190 i‡(!
	`drwav_öô_wrôe__öã∫Æ
(
pWav
, 
pF‹m©
, 
tŸÆSam∂eCou¡
, 
isSequítül
, 
⁄Wrôe
, 
⁄Sìk
, 
pU£rD©a
)) {

2191 
	`DRWAV_FREE
(
pWav
);

2192  
NULL
;

2195  
pWav
;

2196 
	}
}

2198 
drwav
* 
	$drwav_›í_wrôe
(c⁄° 
drwav_d©a_f‹m©
* 
pF‹m©
, 
drwav_wrôe_¥oc
 
⁄Wrôe
, 
drwav_£ek_¥oc
 
⁄Sìk
, * 
pU£rD©a
)

2200  
	`drwav_›í_wrôe__öã∫Æ
(
pF‹m©
, 0, 
DRWAV_FALSE
, 
⁄Wrôe
, 
⁄Sìk
, 
pU£rD©a
);

2201 
	}
}

2203 
drwav
* 
	$drwav_›í_wrôe_£quítül
(c⁄° 
drwav_d©a_f‹m©
* 
pF‹m©
, 
drwav_uöt64
 
tŸÆSam∂eCou¡
, 
drwav_wrôe_¥oc
 
⁄Wrôe
, * 
pU£rD©a
)

2205  
	`drwav_›í_wrôe__öã∫Æ
(
pF‹m©
, 
tŸÆSam∂eCou¡
, 
DRWAV_TRUE
, 
⁄Wrôe
, 
NULL
, 
pU£rD©a
);

2206 
	}
}

2208 
	$drwav_˛o£
(
drwav
* 
pWav
)

2210 
	`drwav_unöô
(
pWav
);

2211 
	`DRWAV_FREE
(
pWav
);

2212 
	}
}

2215 
size_t
 
	$drwav_ªad_øw
(
drwav
* 
pWav
, 
size_t
 
byãsToRód
, * 
pBuf„rOut
)

2217 i‡(
pWav
 =
NULL
 || 
byãsToRód
 =0 || 
pBuf„rOut
 == NULL) {

2221 i‡(
byãsToRód
 > 
pWav
->
byãsRemaöög
) {

2222 
byãsToRód
 = (
size_t
)
pWav
->
byãsRemaöög
;

2225 
size_t
 
byãsRód
 = 
pWav
->
	`⁄Ród
’Wav->
pU£rD©a
, 
pBuf„rOut
, 
byãsToRód
);

2227 
pWav
->
byãsRemaöög
 -
byãsRód
;

2228  
byãsRód
;

2229 
	}
}

2231 
drwav_uöt64
 
	$drwav_ªad
(
drwav
* 
pWav
, 
drwav_uöt64
 
ßm∂esToRód
, * 
pBuf„rOut
)

2233 i‡(
pWav
 =
NULL
 || 
ßm∂esToRód
 =0 || 
pBuf„rOut
 == NULL) {

2238 i‡(
	`drwav__is_com¥es£d_f‹m©_èg
(
pWav
->
å™¶©edF‹m©Tag
)) {

2242 
drwav_uöt32
 
byãsPîSam∂e
 = 
	`drwav_gë_byãs_≥r_ßm∂e
(
pWav
);

2243 i‡(
byãsPîSam∂e
 == 0) {

2248 i‡(
ßm∂esToRód
 * 
byãsPîSam∂e
 > 
DRWAV_SIZE_MAX
) {

2249 
ßm∂esToRód
 = 
DRWAV_SIZE_MAX
 / 
byãsPîSam∂e
;

2252 
size_t
 
byãsRód
 = 
	`drwav_ªad_øw
(
pWav
, (size_t)(
ßm∂esToRód
 * 
byãsPîSam∂e
), 
pBuf„rOut
);

2253  
byãsRód
 / 
byãsPîSam∂e
;

2254 
	}
}

2256 
drwav_uöt64
 
	$drwav_ªad_pcm_‰ames
(
drwav
* 
pWav
, 
drwav_uöt64
 
‰amesToRód
, * 
pBuf„rOut
)

2258 i‡(
pWav
 =
NULL
 || 
‰amesToRód
 =0 || 
pBuf„rOut
 == NULL) {

2263 i‡(
	`drwav__is_com¥es£d_f‹m©_èg
(
pWav
->
å™¶©edF‹m©Tag
)) {

2267 
drwav_uöt32
 
byãsPîFøme
 = 
	`drwav_gë_byãs_≥r_pcm_‰ame
(
pWav
);

2268 i‡(
byãsPîFøme
 == 0) {

2273 i‡(
‰amesToRód
 * 
byãsPîFøme
 > 
DRWAV_SIZE_MAX
) {

2274 
‰amesToRód
 = 
DRWAV_SIZE_MAX
 / 
byãsPîFøme
;

2277 
size_t
 
byãsRód
 = 
	`drwav_ªad_øw
(
pWav
, (size_t)(
‰amesToRód
 * 
byãsPîFøme
), 
pBuf„rOut
);

2278  
byãsRód
 / 
byãsPîFøme
;

2279 
	}
}

2281 
drwav_boﬁ32
 
	$drwav_£ek_to_fú°_pcm_‰ame
(
drwav
* 
pWav
)

2283 i‡(
pWav
->
⁄Wrôe
 !
NULL
) {

2284  
DRWAV_FALSE
;

2287 i‡(!
pWav
->
	`⁄Sìk
’Wav->
pU£rD©a
, (ÌWav->
d©aChunkD©aPos
, 
drwav_£ek_‹igö_°¨t
)) {

2288  
DRWAV_FALSE
;

2291 i‡(
	`drwav__is_com¥es£d_f‹m©_èg
(
pWav
->
å™¶©edF‹m©Tag
)) {

2292 
pWav
->
com¥es£d
.
iCuºítSam∂e
 = 0;

2295 
pWav
->
byãsRemaöög
 =ÖWav->
d©aChunkD©aSize
;

2296  
DRWAV_TRUE
;

2297 
	}
}

2299 
drwav_boﬁ32
 
	$drwav_£ek_to_ßm∂e
(
drwav
* 
pWav
, 
drwav_uöt64
 
ßm∂e
)

2303 i‡(
pWav
->
⁄Wrôe
 !
NULL
) {

2304  
DRWAV_FALSE
;

2307 i‡(
pWav
 =
NULL
 ||ÖWav->
⁄Sìk
 == NULL) {

2308  
DRWAV_FALSE
;

2312 i‡(
pWav
->
tŸÆSam∂eCou¡
 == 0) {

2313  
DRWAV_TRUE
;

2317 i‡(
ßm∂e
 >
pWav
->
tŸÆSam∂eCou¡
) {

2318 
ßm∂e
 = 
pWav
->
tŸÆSam∂eCou¡
 - 1;

2324 i‡(
	`drwav__is_com¥es£d_f‹m©_èg
(
pWav
->
å™¶©edF‹m©Tag
)) {

2329 i‡(
ßm∂e
 < 
pWav
->
com¥es£d
.
iCuºítSam∂e
) {

2330 i‡(!
	`drwav_£ek_to_fú°_pcm_‰ame
(
pWav
)) {

2331  
DRWAV_FALSE
;

2335 i‡(
ßm∂e
 > 
pWav
->
com¥es£d
.
iCuºítSam∂e
) {

2336 
drwav_uöt64
 
off£t
 = 
ßm∂e
 - 
pWav
->
com¥es£d
.
iCuºítSam∂e
;

2338 
drwav_öt16
 
devnuŒ
[2048];

2339 
off£t
 > 0) {

2340 
drwav_uöt64
 
ßm∂esToRód
 = 
off£t
;

2341 i‡(
ßm∂esToRód
 > 2048) {

2342 
ßm∂esToRód
 = 2048;

2345 
drwav_uöt64
 
ßm∂esRód
 = 0;

2346 i‡(
pWav
->
å™¶©edF‹m©Tag
 =
DR_WAVE_FORMAT_ADPCM
) {

2347 
ßm∂esRód
 = 
	`drwav_ªad_s16__mßdpcm
(
pWav
, 
ßm∂esToRód
, 
devnuŒ
);

2348 } i‡(
pWav
->
å™¶©edF‹m©Tag
 =
DR_WAVE_FORMAT_DVI_ADPCM
) {

2349 
ßm∂esRód
 = 
	`drwav_ªad_s16__ima
(
pWav
, 
ßm∂esToRód
, 
devnuŒ
);

2351 
	`as£π
(
DRWAV_FALSE
);

2354 i‡(
ßm∂esRód
 !
ßm∂esToRód
) {

2355  
DRWAV_FALSE
;

2358 
off£t
 -
ßm∂esRód
;

2362 
drwav_uöt64
 
tŸÆSizeInByãs
 = 
pWav
->
tŸÆPCMFømeCou¡
 * 
	`drwav_gë_byãs_≥r_pcm_‰ame
(pWav);

2363 
	`drwav_as£π
(
tŸÆSizeInByãs
 >
pWav
->
byãsRemaöög
);

2365 
drwav_uöt64
 
cuºítByãPos
 = 
tŸÆSizeInByãs
 - 
pWav
->
byãsRemaöög
;

2366 
drwav_uöt64
 
èrgëByãPos
 = 
ßm∂e
 * 
	`drwav_gë_byãs_≥r_ßm∂e
(
pWav
);

2368 
drwav_uöt64
 
off£t
;

2369 i‡(
cuºítByãPos
 < 
èrgëByãPos
) {

2371 
off£t
 = (
èrgëByãPos
 - 
cuºítByãPos
);

2374 i‡(!
	`drwav_£ek_to_fú°_pcm_‰ame
(
pWav
)) {

2375  
DRWAV_FALSE
;

2377 
off£t
 = 
èrgëByãPos
;

2380 
off£t
 > 0) {

2381 
off£t32
 = ((
off£t
 > 
INT_MAX
) ? INT_MAX : ()offset);

2382 i‡(!
pWav
->
	`⁄Sìk
’Wav->
pU£rD©a
, 
off£t32
, 
drwav_£ek_‹igö_cuºít
)) {

2383  
DRWAV_FALSE
;

2386 
pWav
->
byãsRemaöög
 -
off£t32
;

2387 
off£t
 -
off£t32
;

2391  
DRWAV_TRUE
;

2392 
	}
}

2394 
drwav_boﬁ32
 
	$drwav_£ek_to_pcm_‰ame
(
drwav
* 
pWav
, 
drwav_uöt64
 
èrgëFømeIndex
)

2396  
	`drwav_£ek_to_ßm∂e
(
pWav
, 
èrgëFømeIndex
 *ÖWav->
ch™√ls
);

2397 
	}
}

2400 
size_t
 
	$drwav_wrôe_øw
(
drwav
* 
pWav
, 
size_t
 
byãsToWrôe
, c⁄° * 
pD©a
)

2402 i‡(
pWav
 =
NULL
 || 
byãsToWrôe
 =0 || 
pD©a
 == NULL) {

2406 
size_t
 
byãsWrôãn
 = 
pWav
->
	`⁄Wrôe
’Wav->
pU£rD©a
, 
pD©a
, 
byãsToWrôe
);

2407 
pWav
->
d©aChunkD©aSize
 +
byãsWrôãn
;

2409  
byãsWrôãn
;

2410 
	}
}

2412 
drwav_uöt64
 
	$drwav_wrôe
(
drwav
* 
pWav
, 
drwav_uöt64
 
ßm∂esToWrôe
, c⁄° * 
pD©a
)

2414 i‡(
pWav
 =
NULL
 || 
ßm∂esToWrôe
 =0 || 
pD©a
 == NULL) {

2418 
drwav_uöt64
 
byãsToWrôe
 = ((
ßm∂esToWrôe
 * 
pWav
->
bôsPîSam∂e
) / 8);

2419 i‡(
byãsToWrôe
 > 
DRWAV_SIZE_MAX
) {

2423 
drwav_uöt64
 
byãsWrôãn
 = 0;

2424 c⁄° 
drwav_uöt8
* 
pRu¬ögD©a
 = (c⁄° drwav_uöt8*)
pD©a
;

2425 
byãsToWrôe
 > 0) {

2426 
drwav_uöt64
 
byãsToWrôeThisIãøti⁄
 = 
byãsToWrôe
;

2427 i‡(
byãsToWrôeThisIãøti⁄
 > 
DRWAV_SIZE_MAX
) {

2428 
byãsToWrôeThisIãøti⁄
 = 
DRWAV_SIZE_MAX
;

2431 
size_t
 
byãsJu°Wrôãn
 = 
	`drwav_wrôe_øw
(
pWav
, (size_t)
byãsToWrôeThisIãøti⁄
, 
pRu¬ögD©a
);

2432 i‡(
byãsJu°Wrôãn
 == 0) {

2436 
byãsToWrôe
 -
byãsJu°Wrôãn
;

2437 
byãsWrôãn
 +
byãsJu°Wrôãn
;

2438 
pRu¬ögD©a
 +
byãsJu°Wrôãn
;

2441  (
byãsWrôãn
 * 8Ë/ 
pWav
->
bôsPîSam∂e
;

2442 
	}
}

2444 
drwav_uöt64
 
	$drwav_wrôe_pcm_‰ames
(
drwav
* 
pWav
, 
drwav_uöt64
 
‰amesToWrôe
, c⁄° * 
pD©a
)

2446  
	`drwav_wrôe
(
pWav
, 
‰amesToWrôe
 *ÖWav->
ch™√ls
, 
pD©a
) /ÖWav->channels;

2447 
	}
}

2451 
drwav_uöt64
 
	$drwav_ªad_s16__mßdpcm
(
drwav
* 
pWav
, 
drwav_uöt64
 
ßm∂esToRód
, 
drwav_öt16
* 
pBuf„rOut
)

2453 
	`drwav_as£π
(
pWav
 !
NULL
);

2454 
	`drwav_as£π
(
ßm∂esToRód
 > 0);

2455 
	`drwav_as£π
(
pBuf„rOut
 !
NULL
);

2459 
drwav_uöt64
 
tŸÆSam∂esRód
 = 0;

2461 
ßm∂esToRód
 > 0 && 
pWav
->
com¥es£d
.
iCuºítSam∂e
 <ÖWav->
tŸÆSam∂eCou¡
) {

2463 i‡(
pWav
->
mßdpcm
.
ˇchedSam∂eCou¡
 =0 &&ÖWav->mßdpcm.
byãsRemaöögInBlock
 == 0) {

2464 i‡(
pWav
->
ch™√ls
 == 1) {

2466 
drwav_uöt8
 
hódî
[7];

2467 i‡(
pWav
->
	`⁄Ród
’Wav->
pU£rD©a
, 
hódî
, (header)) != (header)) {

2468  
tŸÆSam∂esRód
;

2470 
pWav
->
mßdpcm
.
byãsRemaöögInBlock
 =ÖWav->
fmt
.
blockAlign
 - (
hódî
);

2472 
pWav
->
mßdpcm
.
¥edi˘‹
[0] = 
hódî
[0];

2473 
pWav
->
mßdpcm
.
dñè
[0] = 
	`drwav__byãs_to_s16
(
hódî
 + 1);

2474 
pWav
->
mßdpcm
.
¥evSam∂es
[0][1] = (
drwav_öt32
)
	`drwav__byãs_to_s16
(
hódî
 + 3);

2475 
pWav
->
mßdpcm
.
¥evSam∂es
[0][0] = (
drwav_öt32
)
	`drwav__byãs_to_s16
(
hódî
 + 5);

2476 
pWav
->
mßdpcm
.
ˇchedSam∂es
[2] =ÖWav->mßdpcm.
¥evSam∂es
[0][0];

2477 
pWav
->
mßdpcm
.
ˇchedSam∂es
[3] =ÖWav->mßdpcm.
¥evSam∂es
[0][1];

2478 
pWav
->
mßdpcm
.
ˇchedSam∂eCou¡
 = 2;

2481 
drwav_uöt8
 
hódî
[14];

2482 i‡(
pWav
->
	`⁄Ród
’Wav->
pU£rD©a
, 
hódî
, (header)) != (header)) {

2483  
tŸÆSam∂esRód
;

2485 
pWav
->
mßdpcm
.
byãsRemaöögInBlock
 =ÖWav->
fmt
.
blockAlign
 - (
hódî
);

2487 
pWav
->
mßdpcm
.
¥edi˘‹
[0] = 
hódî
[0];

2488 
pWav
->
mßdpcm
.
¥edi˘‹
[1] = 
hódî
[1];

2489 
pWav
->
mßdpcm
.
dñè
[0] = 
	`drwav__byãs_to_s16
(
hódî
 + 2);

2490 
pWav
->
mßdpcm
.
dñè
[1] = 
	`drwav__byãs_to_s16
(
hódî
 + 4);

2491 
pWav
->
mßdpcm
.
¥evSam∂es
[0][1] = (
drwav_öt32
)
	`drwav__byãs_to_s16
(
hódî
 + 6);

2492 
pWav
->
mßdpcm
.
¥evSam∂es
[1][1] = (
drwav_öt32
)
	`drwav__byãs_to_s16
(
hódî
 + 8);

2493 
pWav
->
mßdpcm
.
¥evSam∂es
[0][0] = (
drwav_öt32
)
	`drwav__byãs_to_s16
(
hódî
 + 10);

2494 
pWav
->
mßdpcm
.
¥evSam∂es
[1][0] = (
drwav_öt32
)
	`drwav__byãs_to_s16
(
hódî
 + 12);

2496 
pWav
->
mßdpcm
.
ˇchedSam∂es
[0] =ÖWav->mßdpcm.
¥evSam∂es
[0][0];

2497 
pWav
->
mßdpcm
.
ˇchedSam∂es
[1] =ÖWav->mßdpcm.
¥evSam∂es
[1][0];

2498 
pWav
->
mßdpcm
.
ˇchedSam∂es
[2] =ÖWav->mßdpcm.
¥evSam∂es
[0][1];

2499 
pWav
->
mßdpcm
.
ˇchedSam∂es
[3] =ÖWav->mßdpcm.
¥evSam∂es
[1][1];

2500 
pWav
->
mßdpcm
.
ˇchedSam∂eCou¡
 = 4;

2505 
ßm∂esToRód
 > 0 && 
pWav
->
mßdpcm
.
ˇchedSam∂eCou¡
 > 0 &&ÖWav->
com¥es£d
.
iCuºítSam∂e
 <ÖWav->
tŸÆSam∂eCou¡
) {

2506 
pBuf„rOut
[0] = (
drwav_öt16
)
pWav
->
mßdpcm
.
ˇchedSam∂es
[
	`drwav_cou¡of
’Wav->mßdpcm.ˇchedSam∂esË-ÖWav->mßdpcm.
ˇchedSam∂eCou¡
];

2507 
pWav
->
mßdpcm
.
ˇchedSam∂eCou¡
 -= 1;

2509 
pBuf„rOut
 += 1;

2510 
ßm∂esToRód
 -= 1;

2511 
tŸÆSam∂esRód
 += 1;

2512 
pWav
->
com¥es£d
.
iCuºítSam∂e
 += 1;

2515 i‡(
ßm∂esToRód
 == 0) {

2516  
tŸÆSam∂esRód
;

2522 i‡(
pWav
->
mßdpcm
.
ˇchedSam∂eCou¡
 == 0) {

2523 i‡(
pWav
->
mßdpcm
.
byãsRemaöögInBlock
 == 0) {

2526 
drwav_uöt8
 
nibbÀs
;

2527 i‡(
pWav
->
	`⁄Ród
’Wav->
pU£rD©a
, &
nibbÀs
, 1) != 1) {

2528  
tŸÆSam∂esRód
;

2530 
pWav
->
mßdpcm
.
byãsRemaöögInBlock
 -= 1;

2533 
drwav_öt32
 
nibbÀ0
 = ((
nibbÀs
 & 0xF0) >> 4); if ((nibbles & 0x80)) {Çibble0 |= 0xFFFFFFF0UL; }

2534 
drwav_öt32
 
nibbÀ1
 = ((
nibbÀs
 & 0x0F) >> 0); if ((nibbles & 0x08)) {Çibble1 |= 0xFFFFFFF0UL; }

2536 
drwav_öt32
 
ad≠èti⁄TabÀ
[] = {

2540 
drwav_öt32
 
c€ff1TabÀ
[] = { 256, 512, 0, 192, 240, 460, 392 };

2541 
drwav_öt32
 
c€ff2TabÀ
[] = { 0, -256, 0, 64, 0, -208, -232 };

2543 i‡(
pWav
->
ch™√ls
 == 1) {

2545 
drwav_öt32
 
√wSam∂e0
;

2546 
√wSam∂e0
 = ((
pWav
->
mßdpcm
.
¥evSam∂es
[0][1] * 
c€ff1TabÀ
[pWav->mßdpcm.
¥edi˘‹
[0]]Ë+ (pWav->mßdpcm.¥evSam∂es[0][0] * 
c€ff2TabÀ
[pWav->msadpcm.predictor[0]])) >> 8;

2547 
√wSam∂e0
 +
nibbÀ0
 * 
pWav
->
mßdpcm
.
dñè
[0];

2548 
√wSam∂e0
 = 
	`drwav_˛amp
(newSample0, -32768, 32767);

2550 
pWav
->
mßdpcm
.
dñè
[0] = (
ad≠èti⁄TabÀ
[((
nibbÀs
 & 0xF0) >> 4)] *ÖWav->msadpcm.delta[0]) >> 8;

2551 i‡(
pWav
->
mßdpcm
.
dñè
[0] < 16) {

2552 
pWav
->
mßdpcm
.
dñè
[0] = 16;

2555 
pWav
->
mßdpcm
.
¥evSam∂es
[0][0] =ÖWav->msadpcm.prevSamples[0][1];

2556 
pWav
->
mßdpcm
.
¥evSam∂es
[0][1] = 
√wSam∂e0
;

2559 
drwav_öt32
 
√wSam∂e1
;

2560 
√wSam∂e1
 = ((
pWav
->
mßdpcm
.
¥evSam∂es
[0][1] * 
c€ff1TabÀ
[pWav->mßdpcm.
¥edi˘‹
[0]]Ë+ (pWav->mßdpcm.¥evSam∂es[0][0] * 
c€ff2TabÀ
[pWav->msadpcm.predictor[0]])) >> 8;

2561 
√wSam∂e1
 +
nibbÀ1
 * 
pWav
->
mßdpcm
.
dñè
[0];

2562 
√wSam∂e1
 = 
	`drwav_˛amp
(newSample1, -32768, 32767);

2564 
pWav
->
mßdpcm
.
dñè
[0] = (
ad≠èti⁄TabÀ
[((
nibbÀs
 & 0x0F) >> 0)] *ÖWav->msadpcm.delta[0]) >> 8;

2565 i‡(
pWav
->
mßdpcm
.
dñè
[0] < 16) {

2566 
pWav
->
mßdpcm
.
dñè
[0] = 16;

2569 
pWav
->
mßdpcm
.
¥evSam∂es
[0][0] =ÖWav->msadpcm.prevSamples[0][1];

2570 
pWav
->
mßdpcm
.
¥evSam∂es
[0][1] = 
√wSam∂e1
;

2573 
pWav
->
mßdpcm
.
ˇchedSam∂es
[2] = 
√wSam∂e0
;

2574 
pWav
->
mßdpcm
.
ˇchedSam∂es
[3] = 
√wSam∂e1
;

2575 
pWav
->
mßdpcm
.
ˇchedSam∂eCou¡
 = 2;

2580 
drwav_öt32
 
√wSam∂e0
;

2581 
√wSam∂e0
 = ((
pWav
->
mßdpcm
.
¥evSam∂es
[0][1] * 
c€ff1TabÀ
[pWav->mßdpcm.
¥edi˘‹
[0]]Ë+ (pWav->mßdpcm.¥evSam∂es[0][0] * 
c€ff2TabÀ
[pWav->msadpcm.predictor[0]])) >> 8;

2582 
√wSam∂e0
 +
nibbÀ0
 * 
pWav
->
mßdpcm
.
dñè
[0];

2583 
√wSam∂e0
 = 
	`drwav_˛amp
(newSample0, -32768, 32767);

2585 
pWav
->
mßdpcm
.
dñè
[0] = (
ad≠èti⁄TabÀ
[((
nibbÀs
 & 0xF0) >> 4)] *ÖWav->msadpcm.delta[0]) >> 8;

2586 i‡(
pWav
->
mßdpcm
.
dñè
[0] < 16) {

2587 
pWav
->
mßdpcm
.
dñè
[0] = 16;

2590 
pWav
->
mßdpcm
.
¥evSam∂es
[0][0] =ÖWav->msadpcm.prevSamples[0][1];

2591 
pWav
->
mßdpcm
.
¥evSam∂es
[0][1] = 
√wSam∂e0
;

2595 
drwav_öt32
 
√wSam∂e1
;

2596 
√wSam∂e1
 = ((
pWav
->
mßdpcm
.
¥evSam∂es
[1][1] * 
c€ff1TabÀ
[pWav->mßdpcm.
¥edi˘‹
[1]]Ë+ (pWav->mßdpcm.¥evSam∂es[1][0] * 
c€ff2TabÀ
[pWav->msadpcm.predictor[1]])) >> 8;

2597 
√wSam∂e1
 +
nibbÀ1
 * 
pWav
->
mßdpcm
.
dñè
[1];

2598 
√wSam∂e1
 = 
	`drwav_˛amp
(newSample1, -32768, 32767);

2600 
pWav
->
mßdpcm
.
dñè
[1] = (
ad≠èti⁄TabÀ
[((
nibbÀs
 & 0x0F) >> 0)] *ÖWav->msadpcm.delta[1]) >> 8;

2601 i‡(
pWav
->
mßdpcm
.
dñè
[1] < 16) {

2602 
pWav
->
mßdpcm
.
dñè
[1] = 16;

2605 
pWav
->
mßdpcm
.
¥evSam∂es
[1][0] =ÖWav->msadpcm.prevSamples[1][1];

2606 
pWav
->
mßdpcm
.
¥evSam∂es
[1][1] = 
√wSam∂e1
;

2608 
pWav
->
mßdpcm
.
ˇchedSam∂es
[2] = 
√wSam∂e0
;

2609 
pWav
->
mßdpcm
.
ˇchedSam∂es
[3] = 
√wSam∂e1
;

2610 
pWav
->
mßdpcm
.
ˇchedSam∂eCou¡
 = 2;

2616  
tŸÆSam∂esRód
;

2617 
	}
}

2619 
drwav_uöt64
 
	$drwav_ªad_s16__ima
(
drwav
* 
pWav
, 
drwav_uöt64
 
ßm∂esToRód
, 
drwav_öt16
* 
pBuf„rOut
)

2621 
	`drwav_as£π
(
pWav
 !
NULL
);

2622 
	`drwav_as£π
(
ßm∂esToRód
 > 0);

2623 
	`drwav_as£π
(
pBuf„rOut
 !
NULL
);

2627 
drwav_uöt64
 
tŸÆSam∂esRód
 = 0;

2629 
ßm∂esToRód
 > 0 && 
pWav
->
com¥es£d
.
iCuºítSam∂e
 <ÖWav->
tŸÆSam∂eCou¡
) {

2631 i‡(
pWav
->
ima
.
ˇchedSam∂eCou¡
 =0 &&ÖWav->ima.
byãsRemaöögInBlock
 == 0) {

2632 i‡(
pWav
->
ch™√ls
 == 1) {

2634 
drwav_uöt8
 
hódî
[4];

2635 i‡(
pWav
->
	`⁄Ród
’Wav->
pU£rD©a
, 
hódî
, (header)) != (header)) {

2636  
tŸÆSam∂esRód
;

2638 
pWav
->
ima
.
byãsRemaöögInBlock
 =ÖWav->
fmt
.
blockAlign
 - (
hódî
);

2640 
pWav
->
ima
.
¥edi˘‹
[0] = 
	`drwav__byãs_to_s16
(
hódî
 + 0);

2641 
pWav
->
ima
.
°ïIndex
[0] = 
hódî
[2];

2642 
pWav
->
ima
.
ˇchedSam∂es
[
	`drwav_cou¡of
’Wav->ima.ˇchedSam∂esË- 1] =ÖWav->ima.
¥edi˘‹
[0];

2643 
pWav
->
ima
.
ˇchedSam∂eCou¡
 = 1;

2646 
drwav_uöt8
 
hódî
[8];

2647 i‡(
pWav
->
	`⁄Ród
’Wav->
pU£rD©a
, 
hódî
, (header)) != (header)) {

2648  
tŸÆSam∂esRód
;

2650 
pWav
->
ima
.
byãsRemaöögInBlock
 =ÖWav->
fmt
.
blockAlign
 - (
hódî
);

2652 
pWav
->
ima
.
¥edi˘‹
[0] = 
	`drwav__byãs_to_s16
(
hódî
 + 0);

2653 
pWav
->
ima
.
°ïIndex
[0] = 
hódî
[2];

2654 
pWav
->
ima
.
¥edi˘‹
[1] = 
	`drwav__byãs_to_s16
(
hódî
 + 4);

2655 
pWav
->
ima
.
°ïIndex
[1] = 
hódî
[6];

2657 
pWav
->
ima
.
ˇchedSam∂es
[
	`drwav_cou¡of
’Wav->ima.ˇchedSam∂esË- 2] =ÖWav->ima.
¥edi˘‹
[0];

2658 
pWav
->
ima
.
ˇchedSam∂es
[
	`drwav_cou¡of
’Wav->ima.ˇchedSam∂esË- 1] =ÖWav->ima.
¥edi˘‹
[1];

2659 
pWav
->
ima
.
ˇchedSam∂eCou¡
 = 2;

2664 
ßm∂esToRód
 > 0 && 
pWav
->
ima
.
ˇchedSam∂eCou¡
 > 0 &&ÖWav->
com¥es£d
.
iCuºítSam∂e
 <ÖWav->
tŸÆSam∂eCou¡
) {

2665 
pBuf„rOut
[0] = (
drwav_öt16
)
pWav
->
ima
.
ˇchedSam∂es
[
	`drwav_cou¡of
’Wav->ima.ˇchedSam∂esË-ÖWav->ima.
ˇchedSam∂eCou¡
];

2666 
pWav
->
ima
.
ˇchedSam∂eCou¡
 -= 1;

2668 
pBuf„rOut
 += 1;

2669 
ßm∂esToRód
 -= 1;

2670 
tŸÆSam∂esRód
 += 1;

2671 
pWav
->
com¥es£d
.
iCuºítSam∂e
 += 1;

2674 i‡(
ßm∂esToRód
 == 0) {

2675  
tŸÆSam∂esRód
;

2680 i‡(
pWav
->
ima
.
ˇchedSam∂eCou¡
 == 0) {

2681 i‡(
pWav
->
ima
.
byãsRemaöögInBlock
 == 0) {

2684 
drwav_öt32
 
ödexTabÀ
[16] = {

2689 
drwav_öt32
 
°ïTabÀ
[89] = {

2703 
pWav
->
ima
.
ˇchedSam∂eCou¡
 = 8 *ÖWav->
ch™√ls
;

2704 
drwav_uöt32
 
iCh™√l
 = 0; iCh™√»< 
pWav
->
ch™√ls
; ++iChannel) {

2705 
drwav_uöt8
 
nibbÀs
[4];

2706 i‡(
pWav
->
	`⁄Ród
’Wav->
pU£rD©a
, &
nibbÀs
, 4) != 4) {

2707  
tŸÆSam∂esRód
;

2709 
pWav
->
ima
.
byãsRemaöögInBlock
 -= 4;

2711 
drwav_uöt32
 
iByã
 = 0; iByte < 4; ++iByte) {

2712 
drwav_uöt8
 
nibbÀ0
 = ((
nibbÀs
[
iByã
] & 0x0F) >> 0);

2713 
drwav_uöt8
 
nibbÀ1
 = ((
nibbÀs
[
iByã
] & 0xF0) >> 4);

2715 
drwav_öt32
 
°ï
 = 
°ïTabÀ
[
pWav
->
ima
.
°ïIndex
[
iCh™√l
]];

2716 
drwav_öt32
 
¥edi˘‹
 = 
pWav
->
ima
.¥edi˘‹[
iCh™√l
];

2718 
drwav_öt32
 
diff
 = 
°ï
 >> 3;

2719 i‡(
nibbÀ0
 & 1Ë
diff
 +
°ï
 >> 2;

2720 i‡(
nibbÀ0
 & 2Ë
diff
 +
°ï
 >> 1;

2721 i‡(
nibbÀ0
 & 4Ë
diff
 +
°ï
;

2722 i‡(
nibbÀ0
 & 8Ë
diff
 = -diff;

2724 
¥edi˘‹
 = 
	`drwav_˛amp
’ªdi˘‹ + 
diff
, -32768, 32767);

2725 
pWav
->
ima
.
¥edi˘‹
[
iCh™√l
] =Öredictor;

2726 
pWav
->
ima
.
°ïIndex
[
iCh™√l
] = 
	`drwav_˛amp
’Wav->ima.°ïIndex[iCh™√l] + 
ödexTabÀ
[
nibbÀ0
], 0, (
drwav_öt32
)
	`drwav_cou¡of
(
°ïTabÀ
)-1);

2727 
pWav
->
ima
.
ˇchedSam∂es
[(
	`drwav_cou¡of
’Wav->ima.ˇchedSam∂esË-ÖWav->ima.
ˇchedSam∂eCou¡
Ë+ (
iByã
*2+0)*pWav->
ch™√ls
 + 
iCh™√l
] = 
¥edi˘‹
;

2730 
°ï
 = 
°ïTabÀ
[
pWav
->
ima
.
°ïIndex
[
iCh™√l
]];

2731 
¥edi˘‹
 = 
pWav
->
ima
.¥edi˘‹[
iCh™√l
];

2733 
diff
 = 
°ï
 >> 3;

2734 i‡(
nibbÀ1
 & 1Ë
diff
 +
°ï
 >> 2;

2735 i‡(
nibbÀ1
 & 2Ë
diff
 +
°ï
 >> 1;

2736 i‡(
nibbÀ1
 & 4Ë
diff
 +
°ï
;

2737 i‡(
nibbÀ1
 & 8Ë
diff
 = -diff;

2739 
¥edi˘‹
 = 
	`drwav_˛amp
’ªdi˘‹ + 
diff
, -32768, 32767);

2740 
pWav
->
ima
.
¥edi˘‹
[
iCh™√l
] =Öredictor;

2741 
pWav
->
ima
.
°ïIndex
[
iCh™√l
] = 
	`drwav_˛amp
’Wav->ima.°ïIndex[iCh™√l] + 
ödexTabÀ
[
nibbÀ1
], 0, (
drwav_öt32
)
	`drwav_cou¡of
(
°ïTabÀ
)-1);

2742 
pWav
->
ima
.
ˇchedSam∂es
[(
	`drwav_cou¡of
’Wav->ima.ˇchedSam∂esË-ÖWav->ima.
ˇchedSam∂eCou¡
Ë+ (
iByã
*2+1)*pWav->
ch™√ls
 + 
iCh™√l
] = 
¥edi˘‹
;

2749  
tŸÆSam∂esRód
;

2750 
	}
}

2753 #i‚de‡
DR_WAV_NO_CONVERSION_API


2754 
	gg_drwavAœwTabÀ
[256] = {

2773 
	gg_drwavMuœwTabÀ
[256] = {

2792 
DRWAV_INLINE
 
drwav_öt16
 
	$drwav__Æaw_to_s16
(
drwav_uöt8
 
ßm∂eIn
)

2794  ()
g_drwavAœwTabÀ
[
ßm∂eIn
];

2795 
	}
}

2797 
DRWAV_INLINE
 
drwav_öt16
 
	$drwav__muœw_to_s16
(
drwav_uöt8
 
ßm∂eIn
)

2799  ()
g_drwavMuœwTabÀ
[
ßm∂eIn
];

2800 
	}
}

2804 
	$drwav__pcm_to_s16
(
drwav_öt16
* 
pOut
, c⁄° * 
pIn
, 
size_t
 
tŸÆSam∂eCou¡
, 
byãsPîSam∂e
)

2807 i‡(
byãsPîSam∂e
 == 1) {

2808 
	`drwav_u8_to_s16
(
pOut
, 
pIn
, 
tŸÆSam∂eCou¡
);

2814 i‡(
byãsPîSam∂e
 == 2) {

2815 
i
 = 0; i < 
tŸÆSam∂eCou¡
; ++i) {

2816 *
pOut
++ = ((c⁄° 
drwav_öt16
*)
pIn
)[
i
];

2820 i‡(
byãsPîSam∂e
 == 3) {

2821 
	`drwav_s24_to_s16
(
pOut
, 
pIn
, 
tŸÆSam∂eCou¡
);

2824 i‡(
byãsPîSam∂e
 == 4) {

2825 
	`drwav_s32_to_s16
(
pOut
, (c⁄° 
drwav_öt32
*)
pIn
, 
tŸÆSam∂eCou¡
);

2831 i‡(
byãsPîSam∂e
 > 8) {

2832 
	`drwav_zîo_mem‹y
(
pOut
, 
tŸÆSam∂eCou¡
 * (*pOut));

2838 
i
 = 0; i < 
tŸÆSam∂eCou¡
; ++i) {

2839 
drwav_uöt64
 
ßm∂e
 = 0;

2840 
shi·
 = (8 - 
byãsPîSam∂e
) * 8;

2842 
j
;

2843 
j
 = 0; j < 
byãsPîSam∂e
 && j < 8; j += 1) {

2844 
ßm∂e
 |(
drwav_uöt64
)(
pIn
[
j
]Ë<< 
shi·
;

2845 
shi·
 += 8;

2848 
pIn
 +
j
;

2849 *
pOut
++ = (
drwav_öt16
)((
drwav_öt64
)
ßm∂e
 >> 48);

2851 
	}
}

2853 
	$drwav__õì_to_s16
(
drwav_öt16
* 
pOut
, c⁄° * 
pIn
, 
size_t
 
tŸÆSam∂eCou¡
, 
byãsPîSam∂e
)

2855 i‡(
byãsPîSam∂e
 == 4) {

2856 
	`drwav_f32_to_s16
(
pOut
, (c⁄° *)
pIn
, 
tŸÆSam∂eCou¡
);

2858 } i‡(
byãsPîSam∂e
 == 8) {

2859 
	`drwav_f64_to_s16
(
pOut
, (c⁄° *)
pIn
, 
tŸÆSam∂eCou¡
);

2863 
	`drwav_zîo_mem‹y
(
pOut
, 
tŸÆSam∂eCou¡
 * (*pOut));

2866 
	}
}

2868 
drwav_uöt64
 
	$drwav_ªad_s16__pcm
(
drwav
* 
pWav
, 
drwav_uöt64
 
ßm∂esToRód
, 
drwav_öt16
* 
pBuf„rOut
)

2870 
drwav_uöt32
 
byãsPîSam∂e
;

2873 i‡(
pWav
->
å™¶©edF‹m©Tag
 =
DR_WAVE_FORMAT_PCM
 &&ÖWav->
bôsPîSam∂e
 == 16) {

2874  
	`drwav_ªad
(
pWav
, 
ßm∂esToRód
, 
pBuf„rOut
);

2877 
byãsPîSam∂e
 = 
	`drwav_gë_byãs_≥r_ßm∂e
(
pWav
);

2878 i‡(
byãsPîSam∂e
 == 0) {

2882 
drwav_uöt64
 
tŸÆSam∂esRód
 = 0;

2883 
ßm∂eD©a
[4096];

2884 
ßm∂esToRód
 > 0) {

2885 
drwav_uöt64
 
ßm∂esRód
 = 
	`drwav_ªad
(
pWav
, 
	`drwav_mö
(
ßm∂esToRód
, (
ßm∂eD©a
)/
byãsPîSam∂e
), sampleData);

2886 i‡(
ßm∂esRód
 == 0) {

2890 
	`drwav__pcm_to_s16
(
pBuf„rOut
, 
ßm∂eD©a
, (
size_t
)
ßm∂esRód
, 
byãsPîSam∂e
);

2892 
pBuf„rOut
 +
ßm∂esRód
;

2893 
ßm∂esToRód
 -
ßm∂esRód
;

2894 
tŸÆSam∂esRód
 +
ßm∂esRód
;

2897  
tŸÆSam∂esRód
;

2898 
	}
}

2900 
drwav_uöt64
 
	$drwav_ªad_s16__õì
(
drwav
* 
pWav
, 
drwav_uöt64
 
ßm∂esToRód
, 
drwav_öt16
* 
pBuf„rOut
)

2902 
drwav_uöt32
 
byãsPîSam∂e
 = 
	`drwav_gë_byãs_≥r_ßm∂e
(
pWav
);

2903 i‡(
byãsPîSam∂e
 == 0) {

2907 
drwav_uöt64
 
tŸÆSam∂esRód
 = 0;

2908 
ßm∂eD©a
[4096];

2909 
ßm∂esToRód
 > 0) {

2910 
drwav_uöt64
 
ßm∂esRód
 = 
	`drwav_ªad
(
pWav
, 
	`drwav_mö
(
ßm∂esToRód
, (
ßm∂eD©a
)/
byãsPîSam∂e
), sampleData);

2911 i‡(
ßm∂esRód
 == 0) {

2915 
	`drwav__õì_to_s16
(
pBuf„rOut
, 
ßm∂eD©a
, (
size_t
)
ßm∂esRód
, 
byãsPîSam∂e
);

2917 
pBuf„rOut
 +
ßm∂esRód
;

2918 
ßm∂esToRód
 -
ßm∂esRód
;

2919 
tŸÆSam∂esRód
 +
ßm∂esRód
;

2922  
tŸÆSam∂esRód
;

2923 
	}
}

2925 
drwav_uöt64
 
	$drwav_ªad_s16__Æaw
(
drwav
* 
pWav
, 
drwav_uöt64
 
ßm∂esToRód
, 
drwav_öt16
* 
pBuf„rOut
)

2927 
drwav_uöt32
 
byãsPîSam∂e
 = 
	`drwav_gë_byãs_≥r_ßm∂e
(
pWav
);

2928 i‡(
byãsPîSam∂e
 == 0) {

2932 
drwav_uöt64
 
tŸÆSam∂esRód
 = 0;

2933 
ßm∂eD©a
[4096];

2934 
ßm∂esToRód
 > 0) {

2935 
drwav_uöt64
 
ßm∂esRód
 = 
	`drwav_ªad
(
pWav
, 
	`drwav_mö
(
ßm∂esToRód
, (
ßm∂eD©a
)/
byãsPîSam∂e
), sampleData);

2936 i‡(
ßm∂esRód
 == 0) {

2940 
	`drwav_Æaw_to_s16
(
pBuf„rOut
, 
ßm∂eD©a
, (
size_t
)
ßm∂esRód
);

2942 
pBuf„rOut
 +
ßm∂esRód
;

2943 
ßm∂esToRód
 -
ßm∂esRód
;

2944 
tŸÆSam∂esRód
 +
ßm∂esRód
;

2947  
tŸÆSam∂esRód
;

2948 
	}
}

2950 
drwav_uöt64
 
	$drwav_ªad_s16__muœw
(
drwav
* 
pWav
, 
drwav_uöt64
 
ßm∂esToRód
, 
drwav_öt16
* 
pBuf„rOut
)

2952 
drwav_uöt32
 
byãsPîSam∂e
 = 
	`drwav_gë_byãs_≥r_ßm∂e
(
pWav
);

2953 i‡(
byãsPîSam∂e
 == 0) {

2957 
drwav_uöt64
 
tŸÆSam∂esRód
 = 0;

2958 
ßm∂eD©a
[4096];

2959 
ßm∂esToRód
 > 0) {

2960 
drwav_uöt64
 
ßm∂esRód
 = 
	`drwav_ªad
(
pWav
, 
	`drwav_mö
(
ßm∂esToRód
, (
ßm∂eD©a
)/
byãsPîSam∂e
), sampleData);

2961 i‡(
ßm∂esRód
 == 0) {

2965 
	`drwav_muœw_to_s16
(
pBuf„rOut
, 
ßm∂eD©a
, (
size_t
)
ßm∂esRód
);

2967 
pBuf„rOut
 +
ßm∂esRód
;

2968 
ßm∂esToRód
 -
ßm∂esRód
;

2969 
tŸÆSam∂esRód
 +
ßm∂esRód
;

2972  
tŸÆSam∂esRód
;

2973 
	}
}

2975 
drwav_uöt64
 
	$drwav_ªad_s16
(
drwav
* 
pWav
, 
drwav_uöt64
 
ßm∂esToRód
, 
drwav_öt16
* 
pBuf„rOut
)

2977 i‡(
pWav
 =
NULL
 || 
ßm∂esToRód
 =0 || 
pBuf„rOut
 == NULL) {

2982 i‡(
ßm∂esToRód
 * (
drwav_öt16
Ë> 
DRWAV_SIZE_MAX
) {

2983 
ßm∂esToRód
 = 
DRWAV_SIZE_MAX
 / (
drwav_öt16
);

2986 i‡(
pWav
->
å™¶©edF‹m©Tag
 =
DR_WAVE_FORMAT_PCM
) {

2987  
	`drwav_ªad_s16__pcm
(
pWav
, 
ßm∂esToRód
, 
pBuf„rOut
);

2990 i‡(
pWav
->
å™¶©edF‹m©Tag
 =
DR_WAVE_FORMAT_ADPCM
) {

2991  
	`drwav_ªad_s16__mßdpcm
(
pWav
, 
ßm∂esToRód
, 
pBuf„rOut
);

2994 i‡(
pWav
->
å™¶©edF‹m©Tag
 =
DR_WAVE_FORMAT_IEEE_FLOAT
) {

2995  
	`drwav_ªad_s16__õì
(
pWav
, 
ßm∂esToRód
, 
pBuf„rOut
);

2998 i‡(
pWav
->
å™¶©edF‹m©Tag
 =
DR_WAVE_FORMAT_ALAW
) {

2999  
	`drwav_ªad_s16__Æaw
(
pWav
, 
ßm∂esToRód
, 
pBuf„rOut
);

3002 i‡(
pWav
->
å™¶©edF‹m©Tag
 =
DR_WAVE_FORMAT_MULAW
) {

3003  
	`drwav_ªad_s16__muœw
(
pWav
, 
ßm∂esToRód
, 
pBuf„rOut
);

3006 i‡(
pWav
->
å™¶©edF‹m©Tag
 =
DR_WAVE_FORMAT_DVI_ADPCM
) {

3007  
	`drwav_ªad_s16__ima
(
pWav
, 
ßm∂esToRód
, 
pBuf„rOut
);

3011 
	}
}

3013 
drwav_uöt64
 
	$drwav_ªad_pcm_‰ames_s16
(
drwav
* 
pWav
, 
drwav_uöt64
 
‰amesToRód
, 
drwav_öt16
* 
pBuf„rOut
)

3015  
	`drwav_ªad_s16
(
pWav
, 
‰amesToRód
 *ÖWav->
ch™√ls
, 
pBuf„rOut
) /ÖWav->channels;

3016 
	}
}

3018 
	$drwav_u8_to_s16
(
drwav_öt16
* 
pOut
, c⁄° 
drwav_uöt8
* 
pIn
, 
size_t
 
ßm∂eCou¡
)

3020 
r
;

3021 
size_t
 
i
 = 0; i < 
ßm∂eCou¡
; ++i) {

3022 
x
 = 
pIn
[
i
];

3023 
r
 = 
x
 - 128;

3024 
r
 =Ñ << 8;

3025 
pOut
[
i
] = ()
r
;

3027 
	}
}

3029 
	$drwav_s24_to_s16
(
drwav_öt16
* 
pOut
, c⁄° 
drwav_uöt8
* 
pIn
, 
size_t
 
ßm∂eCou¡
)

3031 
r
;

3032 
size_t
 
i
 = 0; i < 
ßm∂eCou¡
; ++i) {

3033 
x
 = (()((()(((c⁄° *)
pIn
)[
i
*3+0]) << 8) | (()(((const *)pIn)[i*3+1]) << 16) | (()(((const *)pIn)[i*3+2])) << 24)) >> 8;

3034 
r
 = 
x
 >> 8;

3035 
pOut
[
i
] = ()
r
;

3037 
	}
}

3039 
	$drwav_s32_to_s16
(
drwav_öt16
* 
pOut
, c⁄° 
drwav_öt32
* 
pIn
, 
size_t
 
ßm∂eCou¡
)

3041 
r
;

3042 
size_t
 
i
 = 0; i < 
ßm∂eCou¡
; ++i) {

3043 
x
 = 
pIn
[
i
];

3044 
r
 = 
x
 >> 16;

3045 
pOut
[
i
] = ()
r
;

3047 
	}
}

3049 
	$drwav_f32_to_s16
(
drwav_öt16
* 
pOut
, c⁄° * 
pIn
, 
size_t
 
ßm∂eCou¡
)

3051 
r
;

3052 
size_t
 
i
 = 0; i < 
ßm∂eCou¡
; ++i) {

3053 
x
 = 
pIn
[
i
];

3054 
c
;

3055 
c
 = ((
x
 < -1) ? -1 : ((x > 1) ? 1 : x));

3056 
c
 = c + 1;

3057 
r
 = ()(
c
 * 32767.5f);

3058 
r
 =Ñ - 32768;

3059 
pOut
[
i
] = ()
r
;

3061 
	}
}

3063 
	$drwav_f64_to_s16
(
drwav_öt16
* 
pOut
, c⁄° * 
pIn
, 
size_t
 
ßm∂eCou¡
)

3065 
r
;

3066 
size_t
 
i
 = 0; i < 
ßm∂eCou¡
; ++i) {

3067 
x
 = 
pIn
[
i
];

3068 
c
;

3069 
c
 = ((
x
 < -1) ? -1 : ((x > 1) ? 1 : x));

3070 
c
 = c + 1;

3071 
r
 = ()(
c
 * 32767.5);

3072 
r
 =Ñ - 32768;

3073 
pOut
[
i
] = ()
r
;

3075 
	}
}

3077 
	$drwav_Æaw_to_s16
(
drwav_öt16
* 
pOut
, c⁄° 
drwav_uöt8
* 
pIn
, 
size_t
 
ßm∂eCou¡
)

3079 
size_t
 
i
 = 0; i < 
ßm∂eCou¡
; ++i) {

3080 
pOut
[
i
] = 
	`drwav__Æaw_to_s16
(
pIn
[i]);

3082 
	}
}

3084 
	$drwav_muœw_to_s16
(
drwav_öt16
* 
pOut
, c⁄° 
drwav_uöt8
* 
pIn
, 
size_t
 
ßm∂eCou¡
)

3086 
size_t
 
i
 = 0; i < 
ßm∂eCou¡
; ++i) {

3087 
pOut
[
i
] = 
	`drwav__muœw_to_s16
(
pIn
[i]);

3089 
	}
}

3093 
	$drwav__pcm_to_f32
(* 
pOut
, c⁄° * 
pIn
, 
size_t
 
ßm∂eCou¡
, 
byãsPîSam∂e
)

3096 i‡(
byãsPîSam∂e
 == 1) {

3097 
	`drwav_u8_to_f32
(
pOut
, 
pIn
, 
ßm∂eCou¡
);

3102 i‡(
byãsPîSam∂e
 == 2) {

3103 
	`drwav_s16_to_f32
(
pOut
, (c⁄° 
drwav_öt16
*)
pIn
, 
ßm∂eCou¡
);

3106 i‡(
byãsPîSam∂e
 == 3) {

3107 
	`drwav_s24_to_f32
(
pOut
, 
pIn
, 
ßm∂eCou¡
);

3110 i‡(
byãsPîSam∂e
 == 4) {

3111 
	`drwav_s32_to_f32
(
pOut
, (c⁄° 
drwav_öt32
*)
pIn
, 
ßm∂eCou¡
);

3117 i‡(
byãsPîSam∂e
 > 8) {

3118 
	`drwav_zîo_mem‹y
(
pOut
, 
ßm∂eCou¡
 * (*pOut));

3124 
i
 = 0; i < 
ßm∂eCou¡
; ++i) {

3125 
drwav_uöt64
 
ßm∂e
 = 0;

3126 
shi·
 = (8 - 
byãsPîSam∂e
) * 8;

3128 
j
;

3129 
j
 = 0; j < 
byãsPîSam∂e
 && j < 8; j += 1) {

3130 
ßm∂e
 |(
drwav_uöt64
)(
pIn
[
j
]Ë<< 
shi·
;

3131 
shi·
 += 8;

3134 
pIn
 +
j
;

3135 *
pOut
++ = ()((
drwav_öt64
)
ßm∂e
 / 9223372036854775807.0);

3137 
	}
}

3139 
	$drwav__õì_to_f32
(* 
pOut
, c⁄° * 
pIn
, 
size_t
 
ßm∂eCou¡
, 
byãsPîSam∂e
)

3141 i‡(
byãsPîSam∂e
 == 4) {

3142 
i
 = 0; i < 
ßm∂eCou¡
; ++i) {

3143 *
pOut
++ = ((c⁄° *)
pIn
)[
i
];

3146 } i‡(
byãsPîSam∂e
 == 8) {

3147 
	`drwav_f64_to_f32
(
pOut
, (c⁄° *)
pIn
, 
ßm∂eCou¡
);

3151 
	`drwav_zîo_mem‹y
(
pOut
, 
ßm∂eCou¡
 * (*pOut));

3154 
	}
}

3157 
drwav_uöt64
 
	$drwav_ªad_f32__pcm
(
drwav
* 
pWav
, 
drwav_uöt64
 
ßm∂esToRód
, * 
pBuf„rOut
)

3159 
drwav_uöt32
 
byãsPîSam∂e
 = 
	`drwav_gë_byãs_≥r_ßm∂e
(
pWav
);

3160 i‡(
byãsPîSam∂e
 == 0) {

3164 
drwav_uöt64
 
tŸÆSam∂esRód
 = 0;

3165 
ßm∂eD©a
[4096];

3166 
ßm∂esToRód
 > 0) {

3167 
drwav_uöt64
 
ßm∂esRód
 = 
	`drwav_ªad
(
pWav
, 
	`drwav_mö
(
ßm∂esToRód
, (
ßm∂eD©a
)/
byãsPîSam∂e
), sampleData);

3168 i‡(
ßm∂esRód
 == 0) {

3172 
	`drwav__pcm_to_f32
(
pBuf„rOut
, 
ßm∂eD©a
, (
size_t
)
ßm∂esRód
, 
byãsPîSam∂e
);

3173 
pBuf„rOut
 +
ßm∂esRód
;

3175 
ßm∂esToRód
 -
ßm∂esRód
;

3176 
tŸÆSam∂esRód
 +
ßm∂esRód
;

3179  
tŸÆSam∂esRód
;

3180 
	}
}

3182 
drwav_uöt64
 
	$drwav_ªad_f32__mßdpcm
(
drwav
* 
pWav
, 
drwav_uöt64
 
ßm∂esToRód
, * 
pBuf„rOut
)

3186 
drwav_uöt64
 
tŸÆSam∂esRód
 = 0;

3187 
drwav_öt16
 
ßm∂es16
[2048];

3188 
ßm∂esToRód
 > 0) {

3189 
drwav_uöt64
 
ßm∂esRód
 = 
	`drwav_ªad_s16
(
pWav
, 
	`drwav_mö
(
ßm∂esToRód
, 2048), 
ßm∂es16
);

3190 i‡(
ßm∂esRód
 == 0) {

3194 
	`drwav_s16_to_f32
(
pBuf„rOut
, 
ßm∂es16
, (
size_t
)
ßm∂esRód
);

3196 
pBuf„rOut
 +
ßm∂esRód
;

3197 
ßm∂esToRód
 -
ßm∂esRód
;

3198 
tŸÆSam∂esRód
 +
ßm∂esRód
;

3201  
tŸÆSam∂esRód
;

3202 
	}
}

3204 
drwav_uöt64
 
	$drwav_ªad_f32__ima
(
drwav
* 
pWav
, 
drwav_uöt64
 
ßm∂esToRód
, * 
pBuf„rOut
)

3208 
drwav_uöt64
 
tŸÆSam∂esRód
 = 0;

3209 
drwav_öt16
 
ßm∂es16
[2048];

3210 
ßm∂esToRód
 > 0) {

3211 
drwav_uöt64
 
ßm∂esRód
 = 
	`drwav_ªad_s16
(
pWav
, 
	`drwav_mö
(
ßm∂esToRód
, 2048), 
ßm∂es16
);

3212 i‡(
ßm∂esRód
 == 0) {

3216 
	`drwav_s16_to_f32
(
pBuf„rOut
, 
ßm∂es16
, (
size_t
)
ßm∂esRód
);

3218 
pBuf„rOut
 +
ßm∂esRód
;

3219 
ßm∂esToRód
 -
ßm∂esRód
;

3220 
tŸÆSam∂esRód
 +
ßm∂esRód
;

3223  
tŸÆSam∂esRód
;

3224 
	}
}

3226 
drwav_uöt64
 
	$drwav_ªad_f32__õì
(
drwav
* 
pWav
, 
drwav_uöt64
 
ßm∂esToRód
, * 
pBuf„rOut
)

3228 
drwav_uöt32
 
byãsPîSam∂e
;

3231 i‡(
pWav
->
å™¶©edF‹m©Tag
 =
DR_WAVE_FORMAT_IEEE_FLOAT
 &&ÖWav->
bôsPîSam∂e
 == 32) {

3232  
	`drwav_ªad
(
pWav
, 
ßm∂esToRód
, 
pBuf„rOut
);

3235 
byãsPîSam∂e
 = 
	`drwav_gë_byãs_≥r_ßm∂e
(
pWav
);

3236 i‡(
byãsPîSam∂e
 == 0) {

3240 
drwav_uöt64
 
tŸÆSam∂esRód
 = 0;

3241 
ßm∂eD©a
[4096];

3242 
ßm∂esToRód
 > 0) {

3243 
drwav_uöt64
 
ßm∂esRód
 = 
	`drwav_ªad
(
pWav
, 
	`drwav_mö
(
ßm∂esToRód
, (
ßm∂eD©a
)/
byãsPîSam∂e
), sampleData);

3244 i‡(
ßm∂esRód
 == 0) {

3248 
	`drwav__õì_to_f32
(
pBuf„rOut
, 
ßm∂eD©a
, (
size_t
)
ßm∂esRód
, 
byãsPîSam∂e
);

3250 
pBuf„rOut
 +
ßm∂esRód
;

3251 
ßm∂esToRód
 -
ßm∂esRód
;

3252 
tŸÆSam∂esRód
 +
ßm∂esRód
;

3255  
tŸÆSam∂esRód
;

3256 
	}
}

3258 
drwav_uöt64
 
	$drwav_ªad_f32__Æaw
(
drwav
* 
pWav
, 
drwav_uöt64
 
ßm∂esToRód
, * 
pBuf„rOut
)

3260 
drwav_uöt32
 
byãsPîSam∂e
 = 
	`drwav_gë_byãs_≥r_ßm∂e
(
pWav
);

3261 i‡(
byãsPîSam∂e
 == 0) {

3265 
drwav_uöt64
 
tŸÆSam∂esRód
 = 0;

3266 
ßm∂eD©a
[4096];

3267 
ßm∂esToRód
 > 0) {

3268 
drwav_uöt64
 
ßm∂esRód
 = 
	`drwav_ªad
(
pWav
, 
	`drwav_mö
(
ßm∂esToRód
, (
ßm∂eD©a
)/
byãsPîSam∂e
), sampleData);

3269 i‡(
ßm∂esRód
 == 0) {

3273 
	`drwav_Æaw_to_f32
(
pBuf„rOut
, 
ßm∂eD©a
, (
size_t
)
ßm∂esRód
);

3275 
pBuf„rOut
 +
ßm∂esRód
;

3276 
ßm∂esToRód
 -
ßm∂esRód
;

3277 
tŸÆSam∂esRód
 +
ßm∂esRód
;

3280  
tŸÆSam∂esRód
;

3281 
	}
}

3283 
drwav_uöt64
 
	$drwav_ªad_f32__muœw
(
drwav
* 
pWav
, 
drwav_uöt64
 
ßm∂esToRód
, * 
pBuf„rOut
)

3285 
drwav_uöt32
 
byãsPîSam∂e
 = 
	`drwav_gë_byãs_≥r_ßm∂e
(
pWav
);

3286 i‡(
byãsPîSam∂e
 == 0) {

3290 
drwav_uöt64
 
tŸÆSam∂esRód
 = 0;

3291 
ßm∂eD©a
[4096];

3292 
ßm∂esToRód
 > 0) {

3293 
drwav_uöt64
 
ßm∂esRód
 = 
	`drwav_ªad
(
pWav
, 
	`drwav_mö
(
ßm∂esToRód
, (
ßm∂eD©a
)/
byãsPîSam∂e
), sampleData);

3294 i‡(
ßm∂esRód
 == 0) {

3298 
	`drwav_muœw_to_f32
(
pBuf„rOut
, 
ßm∂eD©a
, (
size_t
)
ßm∂esRód
);

3300 
pBuf„rOut
 +
ßm∂esRód
;

3301 
ßm∂esToRód
 -
ßm∂esRód
;

3302 
tŸÆSam∂esRód
 +
ßm∂esRód
;

3305  
tŸÆSam∂esRód
;

3306 
	}
}

3308 
drwav_uöt64
 
	$drwav_ªad_f32
(
drwav
* 
pWav
, 
drwav_uöt64
 
ßm∂esToRód
, * 
pBuf„rOut
)

3310 i‡(
pWav
 =
NULL
 || 
ßm∂esToRód
 =0 || 
pBuf„rOut
 == NULL) {

3315 i‡(
ßm∂esToRód
 * (Ë> 
DRWAV_SIZE_MAX
) {

3316 
ßm∂esToRód
 = 
DRWAV_SIZE_MAX
 / ();

3319 i‡(
pWav
->
å™¶©edF‹m©Tag
 =
DR_WAVE_FORMAT_PCM
) {

3320  
	`drwav_ªad_f32__pcm
(
pWav
, 
ßm∂esToRód
, 
pBuf„rOut
);

3323 i‡(
pWav
->
å™¶©edF‹m©Tag
 =
DR_WAVE_FORMAT_ADPCM
) {

3324  
	`drwav_ªad_f32__mßdpcm
(
pWav
, 
ßm∂esToRód
, 
pBuf„rOut
);

3327 i‡(
pWav
->
å™¶©edF‹m©Tag
 =
DR_WAVE_FORMAT_IEEE_FLOAT
) {

3328  
	`drwav_ªad_f32__õì
(
pWav
, 
ßm∂esToRód
, 
pBuf„rOut
);

3331 i‡(
pWav
->
å™¶©edF‹m©Tag
 =
DR_WAVE_FORMAT_ALAW
) {

3332  
	`drwav_ªad_f32__Æaw
(
pWav
, 
ßm∂esToRód
, 
pBuf„rOut
);

3335 i‡(
pWav
->
å™¶©edF‹m©Tag
 =
DR_WAVE_FORMAT_MULAW
) {

3336  
	`drwav_ªad_f32__muœw
(
pWav
, 
ßm∂esToRód
, 
pBuf„rOut
);

3339 i‡(
pWav
->
å™¶©edF‹m©Tag
 =
DR_WAVE_FORMAT_DVI_ADPCM
) {

3340  
	`drwav_ªad_f32__ima
(
pWav
, 
ßm∂esToRód
, 
pBuf„rOut
);

3344 
	}
}

3346 
drwav_uöt64
 
	$drwav_ªad_pcm_‰ames_f32
(
drwav
* 
pWav
, 
drwav_uöt64
 
‰amesToRód
, * 
pBuf„rOut
)

3348  
	`drwav_ªad_f32
(
pWav
, 
‰amesToRód
 *ÖWav->
ch™√ls
, 
pBuf„rOut
) /ÖWav->channels;

3349 
	}
}

3351 
	$drwav_u8_to_f32
(* 
pOut
, c⁄° 
drwav_uöt8
* 
pIn
, 
size_t
 
ßm∂eCou¡
)

3353 i‡(
pOut
 =
NULL
 || 
pIn
 == NULL) {

3357 #ifde‡
DR_WAV_LIBSNDFILE_COMPAT


3362 
size_t
 
i
 = 0; i < 
ßm∂eCou¡
; ++i) {

3363 *
pOut
++ = (
pIn
[
i
] / 256.0f) * 2 - 1;

3366 
size_t
 
i
 = 0; i < 
ßm∂eCou¡
; ++i) {

3367 *
pOut
++ = (
pIn
[
i
] / 255.0f) * 2 - 1;

3370 
	}
}

3372 
	$drwav_s16_to_f32
(* 
pOut
, c⁄° 
drwav_öt16
* 
pIn
, 
size_t
 
ßm∂eCou¡
)

3374 i‡(
pOut
 =
NULL
 || 
pIn
 == NULL) {

3378 
size_t
 
i
 = 0; i < 
ßm∂eCou¡
; ++i) {

3379 *
pOut
++ = 
pIn
[
i
] / 32768.0f;

3381 
	}
}

3383 
	$drwav_s24_to_f32
(* 
pOut
, c⁄° 
drwav_uöt8
* 
pIn
, 
size_t
 
ßm∂eCou¡
)

3385 i‡(
pOut
 =
NULL
 || 
pIn
 == NULL) {

3389 
size_t
 
i
 = 0; i < 
ßm∂eCou¡
; ++i) {

3390 
s0
 = 
pIn
[
i
*3 + 0];

3391 
s1
 = 
pIn
[
i
*3 + 1];

3392 
s2
 = 
pIn
[
i
*3 + 2];

3394 
ßm∂e32
 = ()((
s0
 << 8Ë| (
s1
 << 16Ë| (
s2
 << 24));

3395 *
pOut
++ = ()(
ßm∂e32
 / 2147483648.0);

3397 
	}
}

3399 
	$drwav_s32_to_f32
(* 
pOut
, c⁄° 
drwav_öt32
* 
pIn
, 
size_t
 
ßm∂eCou¡
)

3401 i‡(
pOut
 =
NULL
 || 
pIn
 == NULL) {

3405 
size_t
 
i
 = 0; i < 
ßm∂eCou¡
; ++i) {

3406 *
pOut
++ = ()(
pIn
[
i
] / 2147483648.0);

3408 
	}
}

3410 
	$drwav_f64_to_f32
(* 
pOut
, c⁄° * 
pIn
, 
size_t
 
ßm∂eCou¡
)

3412 i‡(
pOut
 =
NULL
 || 
pIn
 == NULL) {

3416 
size_t
 
i
 = 0; i < 
ßm∂eCou¡
; ++i) {

3417 *
pOut
++ = ()
pIn
[
i
];

3419 
	}
}

3421 
	$drwav_Æaw_to_f32
(* 
pOut
, c⁄° 
drwav_uöt8
* 
pIn
, 
size_t
 
ßm∂eCou¡
)

3423 i‡(
pOut
 =
NULL
 || 
pIn
 == NULL) {

3427 
size_t
 
i
 = 0; i < 
ßm∂eCou¡
; ++i) {

3428 *
pOut
++ = 
	`drwav__Æaw_to_s16
(
pIn
[
i
]) / 32768.0f;

3430 
	}
}

3432 
	$drwav_muœw_to_f32
(* 
pOut
, c⁄° 
drwav_uöt8
* 
pIn
, 
size_t
 
ßm∂eCou¡
)

3434 i‡(
pOut
 =
NULL
 || 
pIn
 == NULL) {

3438 
size_t
 
i
 = 0; i < 
ßm∂eCou¡
; ++i) {

3439 *
pOut
++ = 
	`drwav__muœw_to_s16
(
pIn
[
i
]) / 32768.0f;

3441 
	}
}

3445 
	$drwav__pcm_to_s32
(
drwav_öt32
* 
pOut
, c⁄° * 
pIn
, 
size_t
 
tŸÆSam∂eCou¡
, 
byãsPîSam∂e
)

3448 i‡(
byãsPîSam∂e
 == 1) {

3449 
	`drwav_u8_to_s32
(
pOut
, 
pIn
, 
tŸÆSam∂eCou¡
);

3454 i‡(
byãsPîSam∂e
 == 2) {

3455 
	`drwav_s16_to_s32
(
pOut
, (c⁄° 
drwav_öt16
*)
pIn
, 
tŸÆSam∂eCou¡
);

3458 i‡(
byãsPîSam∂e
 == 3) {

3459 
	`drwav_s24_to_s32
(
pOut
, 
pIn
, 
tŸÆSam∂eCou¡
);

3462 i‡(
byãsPîSam∂e
 == 4) {

3463 
i
 = 0; i < 
tŸÆSam∂eCou¡
; ++i) {

3464 *
pOut
++ = ((c⁄° 
drwav_öt32
*)
pIn
)[
i
];

3471 i‡(
byãsPîSam∂e
 > 8) {

3472 
	`drwav_zîo_mem‹y
(
pOut
, 
tŸÆSam∂eCou¡
 * (*pOut));

3478 
i
 = 0; i < 
tŸÆSam∂eCou¡
; ++i) {

3479 
drwav_uöt64
 
ßm∂e
 = 0;

3480 
shi·
 = (8 - 
byãsPîSam∂e
) * 8;

3482 
j
;

3483 
j
 = 0; j < 
byãsPîSam∂e
 && j < 8; j += 1) {

3484 
ßm∂e
 |(
drwav_uöt64
)(
pIn
[
j
]Ë<< 
shi·
;

3485 
shi·
 += 8;

3488 
pIn
 +
j
;

3489 *
pOut
++ = (
drwav_öt32
)((
drwav_öt64
)
ßm∂e
 >> 32);

3491 
	}
}

3493 
	$drwav__õì_to_s32
(
drwav_öt32
* 
pOut
, c⁄° * 
pIn
, 
size_t
 
tŸÆSam∂eCou¡
, 
byãsPîSam∂e
)

3495 i‡(
byãsPîSam∂e
 == 4) {

3496 
	`drwav_f32_to_s32
(
pOut
, (c⁄° *)
pIn
, 
tŸÆSam∂eCou¡
);

3498 } i‡(
byãsPîSam∂e
 == 8) {

3499 
	`drwav_f64_to_s32
(
pOut
, (c⁄° *)
pIn
, 
tŸÆSam∂eCou¡
);

3503 
	`drwav_zîo_mem‹y
(
pOut
, 
tŸÆSam∂eCou¡
 * (*pOut));

3506 
	}
}

3509 
drwav_uöt64
 
	$drwav_ªad_s32__pcm
(
drwav
* 
pWav
, 
drwav_uöt64
 
ßm∂esToRód
, 
drwav_öt32
* 
pBuf„rOut
)

3511 
drwav_uöt32
 
byãsPîSam∂e
;

3514 i‡(
pWav
->
å™¶©edF‹m©Tag
 =
DR_WAVE_FORMAT_PCM
 &&ÖWav->
bôsPîSam∂e
 == 32) {

3515  
	`drwav_ªad
(
pWav
, 
ßm∂esToRód
, 
pBuf„rOut
);

3518 
byãsPîSam∂e
 = 
	`drwav_gë_byãs_≥r_ßm∂e
(
pWav
);

3519 i‡(
byãsPîSam∂e
 == 0) {

3523 
drwav_uöt64
 
tŸÆSam∂esRód
 = 0;

3524 
ßm∂eD©a
[4096];

3525 
ßm∂esToRód
 > 0) {

3526 
drwav_uöt64
 
ßm∂esRód
 = 
	`drwav_ªad
(
pWav
, 
	`drwav_mö
(
ßm∂esToRód
, (
ßm∂eD©a
)/
byãsPîSam∂e
), sampleData);

3527 i‡(
ßm∂esRód
 == 0) {

3531 
	`drwav__pcm_to_s32
(
pBuf„rOut
, 
ßm∂eD©a
, (
size_t
)
ßm∂esRód
, 
byãsPîSam∂e
);

3533 
pBuf„rOut
 +
ßm∂esRód
;

3534 
ßm∂esToRód
 -
ßm∂esRód
;

3535 
tŸÆSam∂esRód
 +
ßm∂esRód
;

3538  
tŸÆSam∂esRód
;

3539 
	}
}

3541 
drwav_uöt64
 
	$drwav_ªad_s32__mßdpcm
(
drwav
* 
pWav
, 
drwav_uöt64
 
ßm∂esToRód
, 
drwav_öt32
* 
pBuf„rOut
)

3545 
drwav_uöt64
 
tŸÆSam∂esRód
 = 0;

3546 
drwav_öt16
 
ßm∂es16
[2048];

3547 
ßm∂esToRód
 > 0) {

3548 
drwav_uöt64
 
ßm∂esRód
 = 
	`drwav_ªad_s16
(
pWav
, 
	`drwav_mö
(
ßm∂esToRód
, 2048), 
ßm∂es16
);

3549 i‡(
ßm∂esRód
 == 0) {

3553 
	`drwav_s16_to_s32
(
pBuf„rOut
, 
ßm∂es16
, (
size_t
)
ßm∂esRód
);

3555 
pBuf„rOut
 +
ßm∂esRód
;

3556 
ßm∂esToRód
 -
ßm∂esRód
;

3557 
tŸÆSam∂esRód
 +
ßm∂esRód
;

3560  
tŸÆSam∂esRód
;

3561 
	}
}

3563 
drwav_uöt64
 
	$drwav_ªad_s32__ima
(
drwav
* 
pWav
, 
drwav_uöt64
 
ßm∂esToRód
, 
drwav_öt32
* 
pBuf„rOut
)

3567 
drwav_uöt64
 
tŸÆSam∂esRód
 = 0;

3568 
drwav_öt16
 
ßm∂es16
[2048];

3569 
ßm∂esToRód
 > 0) {

3570 
drwav_uöt64
 
ßm∂esRód
 = 
	`drwav_ªad_s16
(
pWav
, 
	`drwav_mö
(
ßm∂esToRód
, 2048), 
ßm∂es16
);

3571 i‡(
ßm∂esRód
 == 0) {

3575 
	`drwav_s16_to_s32
(
pBuf„rOut
, 
ßm∂es16
, (
size_t
)
ßm∂esRód
);

3577 
pBuf„rOut
 +
ßm∂esRód
;

3578 
ßm∂esToRód
 -
ßm∂esRód
;

3579 
tŸÆSam∂esRód
 +
ßm∂esRód
;

3582  
tŸÆSam∂esRód
;

3583 
	}
}

3585 
drwav_uöt64
 
	$drwav_ªad_s32__õì
(
drwav
* 
pWav
, 
drwav_uöt64
 
ßm∂esToRód
, 
drwav_öt32
* 
pBuf„rOut
)

3587 
drwav_uöt32
 
byãsPîSam∂e
 = 
	`drwav_gë_byãs_≥r_ßm∂e
(
pWav
);

3588 i‡(
byãsPîSam∂e
 == 0) {

3592 
drwav_uöt64
 
tŸÆSam∂esRód
 = 0;

3593 
ßm∂eD©a
[4096];

3594 
ßm∂esToRód
 > 0) {

3595 
drwav_uöt64
 
ßm∂esRód
 = 
	`drwav_ªad
(
pWav
, 
	`drwav_mö
(
ßm∂esToRód
, (
ßm∂eD©a
)/
byãsPîSam∂e
), sampleData);

3596 i‡(
ßm∂esRód
 == 0) {

3600 
	`drwav__õì_to_s32
(
pBuf„rOut
, 
ßm∂eD©a
, (
size_t
)
ßm∂esRód
, 
byãsPîSam∂e
);

3602 
pBuf„rOut
 +
ßm∂esRód
;

3603 
ßm∂esToRód
 -
ßm∂esRód
;

3604 
tŸÆSam∂esRód
 +
ßm∂esRód
;

3607  
tŸÆSam∂esRód
;

3608 
	}
}

3610 
drwav_uöt64
 
	$drwav_ªad_s32__Æaw
(
drwav
* 
pWav
, 
drwav_uöt64
 
ßm∂esToRód
, 
drwav_öt32
* 
pBuf„rOut
)

3612 
drwav_uöt32
 
byãsPîSam∂e
 = 
	`drwav_gë_byãs_≥r_ßm∂e
(
pWav
);

3613 i‡(
byãsPîSam∂e
 == 0) {

3617 
drwav_uöt64
 
tŸÆSam∂esRód
 = 0;

3618 
ßm∂eD©a
[4096];

3619 
ßm∂esToRód
 > 0) {

3620 
drwav_uöt64
 
ßm∂esRód
 = 
	`drwav_ªad
(
pWav
, 
	`drwav_mö
(
ßm∂esToRód
, (
ßm∂eD©a
)/
byãsPîSam∂e
), sampleData);

3621 i‡(
ßm∂esRód
 == 0) {

3625 
	`drwav_Æaw_to_s32
(
pBuf„rOut
, 
ßm∂eD©a
, (
size_t
)
ßm∂esRód
);

3627 
pBuf„rOut
 +
ßm∂esRód
;

3628 
ßm∂esToRód
 -
ßm∂esRód
;

3629 
tŸÆSam∂esRód
 +
ßm∂esRód
;

3632  
tŸÆSam∂esRód
;

3633 
	}
}

3635 
drwav_uöt64
 
	$drwav_ªad_s32__muœw
(
drwav
* 
pWav
, 
drwav_uöt64
 
ßm∂esToRód
, 
drwav_öt32
* 
pBuf„rOut
)

3637 
drwav_uöt32
 
byãsPîSam∂e
 = 
	`drwav_gë_byãs_≥r_ßm∂e
(
pWav
);

3638 i‡(
byãsPîSam∂e
 == 0) {

3642 
drwav_uöt64
 
tŸÆSam∂esRód
 = 0;

3643 
ßm∂eD©a
[4096];

3644 
ßm∂esToRód
 > 0) {

3645 
drwav_uöt64
 
ßm∂esRód
 = 
	`drwav_ªad
(
pWav
, 
	`drwav_mö
(
ßm∂esToRód
, (
ßm∂eD©a
)/
byãsPîSam∂e
), sampleData);

3646 i‡(
ßm∂esRód
 == 0) {

3650 
	`drwav_muœw_to_s32
(
pBuf„rOut
, 
ßm∂eD©a
, (
size_t
)
ßm∂esRód
);

3652 
pBuf„rOut
 +
ßm∂esRód
;

3653 
ßm∂esToRód
 -
ßm∂esRód
;

3654 
tŸÆSam∂esRód
 +
ßm∂esRód
;

3657  
tŸÆSam∂esRód
;

3658 
	}
}

3660 
drwav_uöt64
 
	$drwav_ªad_s32
(
drwav
* 
pWav
, 
drwav_uöt64
 
ßm∂esToRód
, 
drwav_öt32
* 
pBuf„rOut
)

3662 i‡(
pWav
 =
NULL
 || 
ßm∂esToRód
 =0 || 
pBuf„rOut
 == NULL) {

3667 i‡(
ßm∂esToRód
 * (
drwav_öt32
Ë> 
DRWAV_SIZE_MAX
) {

3668 
ßm∂esToRód
 = 
DRWAV_SIZE_MAX
 / (
drwav_öt32
);

3672 i‡(
pWav
->
å™¶©edF‹m©Tag
 =
DR_WAVE_FORMAT_PCM
) {

3673  
	`drwav_ªad_s32__pcm
(
pWav
, 
ßm∂esToRód
, 
pBuf„rOut
);

3676 i‡(
pWav
->
å™¶©edF‹m©Tag
 =
DR_WAVE_FORMAT_ADPCM
) {

3677  
	`drwav_ªad_s32__mßdpcm
(
pWav
, 
ßm∂esToRód
, 
pBuf„rOut
);

3680 i‡(
pWav
->
å™¶©edF‹m©Tag
 =
DR_WAVE_FORMAT_IEEE_FLOAT
) {

3681  
	`drwav_ªad_s32__õì
(
pWav
, 
ßm∂esToRód
, 
pBuf„rOut
);

3684 i‡(
pWav
->
å™¶©edF‹m©Tag
 =
DR_WAVE_FORMAT_ALAW
) {

3685  
	`drwav_ªad_s32__Æaw
(
pWav
, 
ßm∂esToRód
, 
pBuf„rOut
);

3688 i‡(
pWav
->
å™¶©edF‹m©Tag
 =
DR_WAVE_FORMAT_MULAW
) {

3689  
	`drwav_ªad_s32__muœw
(
pWav
, 
ßm∂esToRód
, 
pBuf„rOut
);

3692 i‡(
pWav
->
å™¶©edF‹m©Tag
 =
DR_WAVE_FORMAT_DVI_ADPCM
) {

3693  
	`drwav_ªad_s32__ima
(
pWav
, 
ßm∂esToRód
, 
pBuf„rOut
);

3697 
	}
}

3699 
drwav_uöt64
 
	$drwav_ªad_pcm_‰ames_s32
(
drwav
* 
pWav
, 
drwav_uöt64
 
‰amesToRód
, 
drwav_öt32
* 
pBuf„rOut
)

3701  
	`drwav_ªad_s32
(
pWav
, 
‰amesToRód
 *ÖWav->
ch™√ls
, 
pBuf„rOut
) /ÖWav->channels;

3702 
	}
}

3704 
	$drwav_u8_to_s32
(
drwav_öt32
* 
pOut
, c⁄° 
drwav_uöt8
* 
pIn
, 
size_t
 
ßm∂eCou¡
)

3706 i‡(
pOut
 =
NULL
 || 
pIn
 == NULL) {

3710 
size_t
 
i
 = 0; i < 
ßm∂eCou¡
; ++i) {

3711 *
pOut
++ = (()
pIn
[
i
] - 128) << 24;

3713 
	}
}

3715 
	$drwav_s16_to_s32
(
drwav_öt32
* 
pOut
, c⁄° 
drwav_öt16
* 
pIn
, 
size_t
 
ßm∂eCou¡
)

3717 i‡(
pOut
 =
NULL
 || 
pIn
 == NULL) {

3721 
size_t
 
i
 = 0; i < 
ßm∂eCou¡
; ++i) {

3722 *
pOut
++ = 
pIn
[
i
] << 16;

3724 
	}
}

3726 
	$drwav_s24_to_s32
(
drwav_öt32
* 
pOut
, c⁄° 
drwav_uöt8
* 
pIn
, 
size_t
 
ßm∂eCou¡
)

3728 i‡(
pOut
 =
NULL
 || 
pIn
 == NULL) {

3732 
size_t
 
i
 = 0; i < 
ßm∂eCou¡
; ++i) {

3733 
s0
 = 
pIn
[
i
*3 + 0];

3734 
s1
 = 
pIn
[
i
*3 + 1];

3735 
s2
 = 
pIn
[
i
*3 + 2];

3737 
drwav_öt32
 
ßm∂e32
 = (drwav_öt32)((
s0
 << 8Ë| (
s1
 << 16Ë| (
s2
 << 24));

3738 *
pOut
++ = 
ßm∂e32
;

3740 
	}
}

3742 
	$drwav_f32_to_s32
(
drwav_öt32
* 
pOut
, c⁄° * 
pIn
, 
size_t
 
ßm∂eCou¡
)

3744 i‡(
pOut
 =
NULL
 || 
pIn
 == NULL) {

3748 
size_t
 
i
 = 0; i < 
ßm∂eCou¡
; ++i) {

3749 *
pOut
++ = (
drwav_öt32
)(2147483648.0 * 
pIn
[
i
]);

3751 
	}
}

3753 
	$drwav_f64_to_s32
(
drwav_öt32
* 
pOut
, c⁄° * 
pIn
, 
size_t
 
ßm∂eCou¡
)

3755 i‡(
pOut
 =
NULL
 || 
pIn
 == NULL) {

3759 
size_t
 
i
 = 0; i < 
ßm∂eCou¡
; ++i) {

3760 *
pOut
++ = (
drwav_öt32
)(2147483648.0 * 
pIn
[
i
]);

3762 
	}
}

3764 
	$drwav_Æaw_to_s32
(
drwav_öt32
* 
pOut
, c⁄° 
drwav_uöt8
* 
pIn
, 
size_t
 
ßm∂eCou¡
)

3766 i‡(
pOut
 =
NULL
 || 
pIn
 == NULL) {

3770 
size_t
 
i
 = 0; i < 
ßm∂eCou¡
; ++i) {

3771 *
pOut
++ = ((
drwav_öt32
)
	`drwav__Æaw_to_s16
(
pIn
[
i
])) << 16;

3773 
	}
}

3775 
	$drwav_muœw_to_s32
(
drwav_öt32
* 
pOut
, c⁄° 
drwav_uöt8
* 
pIn
, 
size_t
 
ßm∂eCou¡
)

3777 i‡(
pOut
 =
NULL
 || 
pIn
 == NULL) {

3781 
size_t
 
i
0; i < 
ßm∂eCou¡
; ++i) {

3782 *
pOut
++ = ((
drwav_öt32
)
	`drwav__muœw_to_s16
(
pIn
[
i
])) << 16;

3784 
	}
}

3788 
drwav_öt16
* 
	$drwav__ªad_™d_˛o£_s16
(
drwav
* 
pWav
, * 
ch™√ls
, * 
ßm∂eR©e
, 
drwav_uöt64
* 
tŸÆSam∂eCou¡
)

3790 
	`drwav_as£π
(
pWav
 !
NULL
);

3792 
drwav_uöt64
 
ßm∂eD©aSize
 = 
pWav
->
tŸÆSam∂eCou¡
 * (
drwav_öt16
);

3793 i‡(
ßm∂eD©aSize
 > 
DRWAV_SIZE_MAX
) {

3794 
	`drwav_unöô
(
pWav
);

3795  
NULL
;

3798 
drwav_öt16
* 
pSam∂eD©a
 = (drwav_öt16*)
	`DRWAV_MALLOC
((
size_t
)
ßm∂eD©aSize
);

3799 i‡(
pSam∂eD©a
 =
NULL
) {

3800 
	`drwav_unöô
(
pWav
);

3801  
NULL
;

3804 
drwav_uöt64
 
ßm∂esRód
 = 
	`drwav_ªad_s16
(
pWav
, (
size_t
ÌWav->
tŸÆSam∂eCou¡
, 
pSam∂eD©a
);

3805 i‡(
ßm∂esRód
 !
pWav
->
tŸÆSam∂eCou¡
) {

3806 
	`DRWAV_FREE
(
pSam∂eD©a
);

3807 
	`drwav_unöô
(
pWav
);

3808  
NULL
;

3811 
	`drwav_unöô
(
pWav
);

3813 i‡(
ßm∂eR©e
Ë*ßm∂eR©ê
pWav
->sampleRate;

3814 i‡(
ch™√ls
Ë*ch™√l†
pWav
->channels;

3815 i‡(
tŸÆSam∂eCou¡
Ë*tŸÆSam∂eCou¡ = 
pWav
->totalSampleCount;

3816  
pSam∂eD©a
;

3817 
	}
}

3819 * 
	$drwav__ªad_™d_˛o£_f32
(
drwav
* 
pWav
, * 
ch™√ls
, * 
ßm∂eR©e
, 
drwav_uöt64
* 
tŸÆSam∂eCou¡
)

3821 
	`drwav_as£π
(
pWav
 !
NULL
);

3823 
drwav_uöt64
 
ßm∂eD©aSize
 = 
pWav
->
tŸÆSam∂eCou¡
 * ();

3824 i‡(
ßm∂eD©aSize
 > 
DRWAV_SIZE_MAX
) {

3825 
	`drwav_unöô
(
pWav
);

3826  
NULL
;

3829 * 
pSam∂eD©a
 = (*)
	`DRWAV_MALLOC
((
size_t
)
ßm∂eD©aSize
);

3830 i‡(
pSam∂eD©a
 =
NULL
) {

3831 
	`drwav_unöô
(
pWav
);

3832  
NULL
;

3835 
drwav_uöt64
 
ßm∂esRód
 = 
	`drwav_ªad_f32
(
pWav
, (
size_t
ÌWav->
tŸÆSam∂eCou¡
, 
pSam∂eD©a
);

3836 i‡(
ßm∂esRód
 !
pWav
->
tŸÆSam∂eCou¡
) {

3837 
	`DRWAV_FREE
(
pSam∂eD©a
);

3838 
	`drwav_unöô
(
pWav
);

3839  
NULL
;

3842 
	`drwav_unöô
(
pWav
);

3844 i‡(
ßm∂eR©e
Ë*ßm∂eR©ê
pWav
->sampleRate;

3845 i‡(
ch™√ls
Ë*ch™√l†
pWav
->channels;

3846 i‡(
tŸÆSam∂eCou¡
Ë*tŸÆSam∂eCou¡ = 
pWav
->totalSampleCount;

3847  
pSam∂eD©a
;

3848 
	}
}

3850 
drwav_öt32
* 
	$drwav__ªad_™d_˛o£_s32
(
drwav
* 
pWav
, * 
ch™√ls
, * 
ßm∂eR©e
, 
drwav_uöt64
* 
tŸÆSam∂eCou¡
)

3852 
	`drwav_as£π
(
pWav
 !
NULL
);

3854 
drwav_uöt64
 
ßm∂eD©aSize
 = 
pWav
->
tŸÆSam∂eCou¡
 * (
drwav_öt32
);

3855 i‡(
ßm∂eD©aSize
 > 
DRWAV_SIZE_MAX
) {

3856 
	`drwav_unöô
(
pWav
);

3857  
NULL
;

3860 
drwav_öt32
* 
pSam∂eD©a
 = (drwav_öt32*)
	`DRWAV_MALLOC
((
size_t
)
ßm∂eD©aSize
);

3861 i‡(
pSam∂eD©a
 =
NULL
) {

3862 
	`drwav_unöô
(
pWav
);

3863  
NULL
;

3866 
drwav_uöt64
 
ßm∂esRód
 = 
	`drwav_ªad_s32
(
pWav
, (
size_t
ÌWav->
tŸÆSam∂eCou¡
, 
pSam∂eD©a
);

3867 i‡(
ßm∂esRód
 !
pWav
->
tŸÆSam∂eCou¡
) {

3868 
	`DRWAV_FREE
(
pSam∂eD©a
);

3869 
	`drwav_unöô
(
pWav
);

3870  
NULL
;

3873 
	`drwav_unöô
(
pWav
);

3875 i‡(
ßm∂eR©e
Ë*ßm∂eR©ê
pWav
->sampleRate;

3876 i‡(
ch™√ls
Ë*ch™√l†
pWav
->channels;

3877 i‡(
tŸÆSam∂eCou¡
Ë*tŸÆSam∂eCou¡ = 
pWav
->totalSampleCount;

3878  
pSam∂eD©a
;

3879 
	}
}

3882 
drwav_öt16
* 
	$drwav_›í_™d_ªad_s16
(
drwav_ªad_¥oc
 
⁄Ród
, 
drwav_£ek_¥oc
 
⁄Sìk
, * 
pU£rD©a
, * 
ch™√ls
, * 
ßm∂eR©e
, 
drwav_uöt64
* 
tŸÆSam∂eCou¡
)

3884 i‡(
ch™√ls
) *channels = 0;

3885 i‡(
ßm∂eR©e
) *sampleRate = 0;

3886 i‡(
tŸÆSam∂eCou¡
) *totalSampleCount = 0;

3888 
drwav
 
wav
;

3889 i‡(!
	`drwav_öô
(&
wav
, 
⁄Ród
, 
⁄Sìk
, 
pU£rD©a
)) {

3890  
NULL
;

3893  
	`drwav__ªad_™d_˛o£_s16
(&
wav
, 
ch™√ls
, 
ßm∂eR©e
, 
tŸÆSam∂eCou¡
);

3894 
	}
}

3896 
drwav_öt16
* 
	$drwav_›í_™d_ªad_pcm_‰ames_s16
(
drwav_ªad_¥oc
 
⁄Ród
, 
drwav_£ek_¥oc
 
⁄Sìk
, * 
pU£rD©a
, * 
ch™√lsOut
, * 
ßm∂eR©eOut
, 
drwav_uöt64
* 
tŸÆFømeCou¡Out
)

3898 i‡(
ch™√lsOut
) *channelsOut = 0;

3899 i‡(
ßm∂eR©eOut
) *sampleRateOut = 0;

3900 i‡(
tŸÆFømeCou¡Out
) *totalFrameCountOut = 0;

3902 
ch™√ls
;

3903 
ßm∂eR©e
;

3904 
drwav_uöt64
 
tŸÆSam∂eCou¡
;

3905 
drwav_öt16
* 
ªsu…
 = 
	`drwav_›í_™d_ªad_s16
(
⁄Ród
, 
⁄Sìk
, 
pU£rD©a
, &
ch™√ls
, &
ßm∂eR©e
, &
tŸÆSam∂eCou¡
);

3906 i‡(
ªsu…
 =
NULL
) {

3907  
NULL
;

3910 i‡(
ch™√lsOut
Ë*ch™√lsOuà
ch™√ls
;

3911 i‡(
ßm∂eR©eOut
Ë*ßm∂eR©eOuà
ßm∂eR©e
;

3912 i‡(
tŸÆFømeCou¡Out
Ë*tŸÆFømeCou¡Ouà
tŸÆSam∂eCou¡
 / 
ch™√ls
;

3914  
ªsu…
;

3915 
	}
}

3917 * 
	$drwav_›í_™d_ªad_f32
(
drwav_ªad_¥oc
 
⁄Ród
, 
drwav_£ek_¥oc
 
⁄Sìk
, * 
pU£rD©a
, * 
ch™√ls
, * 
ßm∂eR©e
, 
drwav_uöt64
* 
tŸÆSam∂eCou¡
)

3919 i‡(
ßm∂eR©e
) *sampleRate = 0;

3920 i‡(
ch™√ls
) *channels = 0;

3921 i‡(
tŸÆSam∂eCou¡
) *totalSampleCount = 0;

3923 
drwav
 
wav
;

3924 i‡(!
	`drwav_öô
(&
wav
, 
⁄Ród
, 
⁄Sìk
, 
pU£rD©a
)) {

3925  
NULL
;

3928  
	`drwav__ªad_™d_˛o£_f32
(&
wav
, 
ch™√ls
, 
ßm∂eR©e
, 
tŸÆSam∂eCou¡
);

3929 
	}
}

3931 * 
	$drwav_›í_™d_ªad_pcm_‰ames_f32
(
drwav_ªad_¥oc
 
⁄Ród
, 
drwav_£ek_¥oc
 
⁄Sìk
, * 
pU£rD©a
, * 
ch™√lsOut
, * 
ßm∂eR©eOut
, 
drwav_uöt64
* 
tŸÆFømeCou¡Out
)

3933 i‡(
ch™√lsOut
) *channelsOut = 0;

3934 i‡(
ßm∂eR©eOut
) *sampleRateOut = 0;

3935 i‡(
tŸÆFømeCou¡Out
) *totalFrameCountOut = 0;

3937 
ch™√ls
;

3938 
ßm∂eR©e
;

3939 
drwav_uöt64
 
tŸÆSam∂eCou¡
;

3940 * 
ªsu…
 = 
	`drwav_›í_™d_ªad_f32
(
⁄Ród
, 
⁄Sìk
, 
pU£rD©a
, &
ch™√ls
, &
ßm∂eR©e
, &
tŸÆSam∂eCou¡
);

3941 i‡(
ªsu…
 =
NULL
) {

3942  
NULL
;

3945 i‡(
ch™√lsOut
Ë*ch™√lsOuà
ch™√ls
;

3946 i‡(
ßm∂eR©eOut
Ë*ßm∂eR©eOuà
ßm∂eR©e
;

3947 i‡(
tŸÆFømeCou¡Out
Ë*tŸÆFømeCou¡Ouà
tŸÆSam∂eCou¡
 / 
ch™√ls
;

3949  
ªsu…
;

3950 
	}
}

3952 
drwav_öt32
* 
	$drwav_›í_™d_ªad_s32
(
drwav_ªad_¥oc
 
⁄Ród
, 
drwav_£ek_¥oc
 
⁄Sìk
, * 
pU£rD©a
, * 
ch™√ls
, * 
ßm∂eR©e
, 
drwav_uöt64
* 
tŸÆSam∂eCou¡
)

3954 i‡(
ßm∂eR©e
) *sampleRate = 0;

3955 i‡(
ch™√ls
) *channels = 0;

3956 i‡(
tŸÆSam∂eCou¡
) *totalSampleCount = 0;

3958 
drwav
 
wav
;

3959 i‡(!
	`drwav_öô
(&
wav
, 
⁄Ród
, 
⁄Sìk
, 
pU£rD©a
)) {

3960  
NULL
;

3963  
	`drwav__ªad_™d_˛o£_s32
(&
wav
, 
ch™√ls
, 
ßm∂eR©e
, 
tŸÆSam∂eCou¡
);

3964 
	}
}

3966 
drwav_öt32
* 
	$drwav_›í_™d_ªad_pcm_‰ames_s32
(
drwav_ªad_¥oc
 
⁄Ród
, 
drwav_£ek_¥oc
 
⁄Sìk
, * 
pU£rD©a
, * 
ch™√lsOut
, * 
ßm∂eR©eOut
, 
drwav_uöt64
* 
tŸÆFømeCou¡Out
)

3968 i‡(
ch™√lsOut
) *channelsOut = 0;

3969 i‡(
ßm∂eR©eOut
) *sampleRateOut = 0;

3970 i‡(
tŸÆFømeCou¡Out
) *totalFrameCountOut = 0;

3972 
ch™√ls
;

3973 
ßm∂eR©e
;

3974 
drwav_uöt64
 
tŸÆSam∂eCou¡
;

3975 
drwav_öt32
* 
ªsu…
 = 
	`drwav_›í_™d_ªad_s32
(
⁄Ród
, 
⁄Sìk
, 
pU£rD©a
, &
ch™√ls
, &
ßm∂eR©e
, &
tŸÆSam∂eCou¡
);

3976 i‡(
ªsu…
 =
NULL
) {

3977  
NULL
;

3980 i‡(
ch™√lsOut
Ë*ch™√lsOuà
ch™√ls
;

3981 i‡(
ßm∂eR©eOut
Ë*ßm∂eR©eOuà
ßm∂eR©e
;

3982 i‡(
tŸÆFømeCou¡Out
Ë*tŸÆFømeCou¡Ouà
tŸÆSam∂eCou¡
 / 
ch™√ls
;

3984  
ªsu…
;

3985 
	}
}

3987 #i‚de‡
DR_WAV_NO_STDIO


3988 
drwav_öt16
* 
	$drwav_›í_fûe_™d_ªad_s16
(c⁄° * 
fûíame
, * 
ch™√ls
, * 
ßm∂eR©e
, 
drwav_uöt64
* 
tŸÆSam∂eCou¡
)

3990 i‡(
ßm∂eR©e
) *sampleRate = 0;

3991 i‡(
ch™√ls
) *channels = 0;

3992 i‡(
tŸÆSam∂eCou¡
) *totalSampleCount = 0;

3994 
drwav
 
wav
;

3995 i‡(!
	`drwav_öô_fûe
(&
wav
, 
fûíame
)) {

3996  
NULL
;

3999  
	`drwav__ªad_™d_˛o£_s16
(&
wav
, 
ch™√ls
, 
ßm∂eR©e
, 
tŸÆSam∂eCou¡
);

4000 
	}
}

4002 
drwav_öt16
* 
	$drwav_›í_fûe_™d_ªad_pcm_‰ames_s16
(c⁄° * 
fûíame
, * 
ch™√lsOut
, * 
ßm∂eR©eOut
, 
drwav_uöt64
* 
tŸÆFømeCou¡Out
)

4004 i‡(
ch™√lsOut
) *channelsOut = 0;

4005 i‡(
ßm∂eR©eOut
) *sampleRateOut = 0;

4006 i‡(
tŸÆFømeCou¡Out
) *totalFrameCountOut = 0;

4008 
ch™√ls
;

4009 
ßm∂eR©e
;

4010 
drwav_uöt64
 
tŸÆSam∂eCou¡
;

4011 
drwav_öt16
* 
ªsu…
 = 
	`drwav_›í_fûe_™d_ªad_s16
(
fûíame
, &
ch™√ls
, &
ßm∂eR©e
, &
tŸÆSam∂eCou¡
);

4012 i‡(
ªsu…
 =
NULL
) {

4013  
NULL
;

4016 i‡(
ch™√lsOut
Ë*ch™√lsOuà
ch™√ls
;

4017 i‡(
ßm∂eR©eOut
Ë*ßm∂eR©eOuà
ßm∂eR©e
;

4018 i‡(
tŸÆFømeCou¡Out
Ë*tŸÆFømeCou¡Ouà
tŸÆSam∂eCou¡
 / 
ch™√ls
;

4020  
ªsu…
;

4021 
	}
}

4023 * 
	$drwav_›í_fûe_™d_ªad_f32
(c⁄° * 
fûíame
, * 
ch™√ls
, * 
ßm∂eR©e
, 
drwav_uöt64
* 
tŸÆSam∂eCou¡
)

4025 i‡(
ßm∂eR©e
) *sampleRate = 0;

4026 i‡(
ch™√ls
) *channels = 0;

4027 i‡(
tŸÆSam∂eCou¡
) *totalSampleCount = 0;

4029 
drwav
 
wav
;

4030 i‡(!
	`drwav_öô_fûe
(&
wav
, 
fûíame
)) {

4031  
NULL
;

4034  
	`drwav__ªad_™d_˛o£_f32
(&
wav
, 
ch™√ls
, 
ßm∂eR©e
, 
tŸÆSam∂eCou¡
);

4035 
	}
}

4037 * 
	$drwav_›í_fûe_™d_ªad_pcm_‰ames_f32
(c⁄° * 
fûíame
, * 
ch™√lsOut
, * 
ßm∂eR©eOut
, 
drwav_uöt64
* 
tŸÆFømeCou¡Out
)

4039 i‡(
ch™√lsOut
) *channelsOut = 0;

4040 i‡(
ßm∂eR©eOut
) *sampleRateOut = 0;

4041 i‡(
tŸÆFømeCou¡Out
) *totalFrameCountOut = 0;

4043 
ch™√ls
;

4044 
ßm∂eR©e
;

4045 
drwav_uöt64
 
tŸÆSam∂eCou¡
;

4046 * 
ªsu…
 = 
	`drwav_›í_fûe_™d_ªad_f32
(
fûíame
, &
ch™√ls
, &
ßm∂eR©e
, &
tŸÆSam∂eCou¡
);

4047 i‡(
ªsu…
 =
NULL
) {

4048  
NULL
;

4051 i‡(
ch™√lsOut
Ë*ch™√lsOuà
ch™√ls
;

4052 i‡(
ßm∂eR©eOut
Ë*ßm∂eR©eOuà
ßm∂eR©e
;

4053 i‡(
tŸÆFømeCou¡Out
Ë*tŸÆFømeCou¡Ouà
tŸÆSam∂eCou¡
 / 
ch™√ls
;

4055  
ªsu…
;

4056 
	}
}

4058 
drwav_öt32
* 
	$drwav_›í_fûe_™d_ªad_s32
(c⁄° * 
fûíame
, * 
ch™√ls
, * 
ßm∂eR©e
, 
drwav_uöt64
* 
tŸÆSam∂eCou¡
)

4060 i‡(
ßm∂eR©e
) *sampleRate = 0;

4061 i‡(
ch™√ls
) *channels = 0;

4062 i‡(
tŸÆSam∂eCou¡
) *totalSampleCount = 0;

4064 
drwav
 
wav
;

4065 i‡(!
	`drwav_öô_fûe
(&
wav
, 
fûíame
)) {

4066  
NULL
;

4069  
	`drwav__ªad_™d_˛o£_s32
(&
wav
, 
ch™√ls
, 
ßm∂eR©e
, 
tŸÆSam∂eCou¡
);

4070 
	}
}

4072 
drwav_öt32
* 
	$drwav_›í_fûe_™d_ªad_pcm_‰ames_s32
(c⁄° * 
fûíame
, * 
ch™√lsOut
, * 
ßm∂eR©eOut
, 
drwav_uöt64
* 
tŸÆFømeCou¡Out
)

4074 i‡(
ch™√lsOut
) *channelsOut = 0;

4075 i‡(
ßm∂eR©eOut
) *sampleRateOut = 0;

4076 i‡(
tŸÆFømeCou¡Out
) *totalFrameCountOut = 0;

4078 
ch™√ls
;

4079 
ßm∂eR©e
;

4080 
drwav_uöt64
 
tŸÆSam∂eCou¡
;

4081 
drwav_öt32
* 
ªsu…
 = 
	`drwav_›í_fûe_™d_ªad_s32
(
fûíame
, &
ch™√ls
, &
ßm∂eR©e
, &
tŸÆSam∂eCou¡
);

4082 i‡(
ªsu…
 =
NULL
) {

4083  
NULL
;

4086 i‡(
ch™√lsOut
Ë*ch™√lsOuà
ch™√ls
;

4087 i‡(
ßm∂eR©eOut
Ë*ßm∂eR©eOuà
ßm∂eR©e
;

4088 i‡(
tŸÆFømeCou¡Out
Ë*tŸÆFømeCou¡Ouà
tŸÆSam∂eCou¡
 / 
ch™√ls
;

4090  
ªsu…
;

4091 
	}
}

4094 
drwav_öt16
* 
	$drwav_›í_mem‹y_™d_ªad_s16
(c⁄° * 
d©a
, 
size_t
 
d©aSize
, * 
ch™√ls
, * 
ßm∂eR©e
, 
drwav_uöt64
* 
tŸÆSam∂eCou¡
)

4096 i‡(
ßm∂eR©e
) *sampleRate = 0;

4097 i‡(
ch™√ls
) *channels = 0;

4098 i‡(
tŸÆSam∂eCou¡
) *totalSampleCount = 0;

4100 
drwav
 
wav
;

4101 i‡(!
	`drwav_öô_mem‹y
(&
wav
, 
d©a
, 
d©aSize
)) {

4102  
NULL
;

4105  
	`drwav__ªad_™d_˛o£_s16
(&
wav
, 
ch™√ls
, 
ßm∂eR©e
, 
tŸÆSam∂eCou¡
);

4106 
	}
}

4108 
drwav_öt16
* 
	$drwav_›í_mem‹y_™d_ªad_pcm_‰ames_s16
(c⁄° * 
d©a
, 
size_t
 
d©aSize
, * 
ch™√lsOut
, * 
ßm∂eR©eOut
, 
drwav_uöt64
* 
tŸÆFømeCou¡Out
)

4110 i‡(
ch™√lsOut
) *channelsOut = 0;

4111 i‡(
ßm∂eR©eOut
) *sampleRateOut = 0;

4112 i‡(
tŸÆFømeCou¡Out
) *totalFrameCountOut = 0;

4114 
ch™√ls
;

4115 
ßm∂eR©e
;

4116 
drwav_uöt64
 
tŸÆSam∂eCou¡
;

4117 
drwav_öt16
* 
ªsu…
 = 
	`drwav_›í_mem‹y_™d_ªad_s16
(
d©a
, 
d©aSize
, &
ch™√ls
, &
ßm∂eR©e
, &
tŸÆSam∂eCou¡
);

4118 i‡(
ªsu…
 =
NULL
) {

4119  
NULL
;

4122 i‡(
ch™√lsOut
Ë*ch™√lsOuà
ch™√ls
;

4123 i‡(
ßm∂eR©eOut
Ë*ßm∂eR©eOuà
ßm∂eR©e
;

4124 i‡(
tŸÆFømeCou¡Out
Ë*tŸÆFømeCou¡Ouà
tŸÆSam∂eCou¡
 / 
ch™√ls
;

4126  
ªsu…
;

4127 
	}
}

4129 * 
	$drwav_›í_mem‹y_™d_ªad_f32
(c⁄° * 
d©a
, 
size_t
 
d©aSize
, * 
ch™√ls
, * 
ßm∂eR©e
, 
drwav_uöt64
* 
tŸÆSam∂eCou¡
)

4131 i‡(
ßm∂eR©e
) *sampleRate = 0;

4132 i‡(
ch™√ls
) *channels = 0;

4133 i‡(
tŸÆSam∂eCou¡
) *totalSampleCount = 0;

4135 
drwav
 
wav
;

4136 i‡(!
	`drwav_öô_mem‹y
(&
wav
, 
d©a
, 
d©aSize
)) {

4137  
NULL
;

4140  
	`drwav__ªad_™d_˛o£_f32
(&
wav
, 
ch™√ls
, 
ßm∂eR©e
, 
tŸÆSam∂eCou¡
);

4141 
	}
}

4143 * 
	$drwav_›í_mem‹y_™d_ªad_pcm_‰ames_f32
(c⁄° * 
d©a
, 
size_t
 
d©aSize
, * 
ch™√lsOut
, * 
ßm∂eR©eOut
, 
drwav_uöt64
* 
tŸÆFømeCou¡Out
)

4145 i‡(
ch™√lsOut
) *channelsOut = 0;

4146 i‡(
ßm∂eR©eOut
) *sampleRateOut = 0;

4147 i‡(
tŸÆFømeCou¡Out
) *totalFrameCountOut = 0;

4149 
ch™√ls
;

4150 
ßm∂eR©e
;

4151 
drwav_uöt64
 
tŸÆSam∂eCou¡
;

4152 * 
ªsu…
 = 
	`drwav_›í_mem‹y_™d_ªad_f32
(
d©a
, 
d©aSize
, &
ch™√ls
, &
ßm∂eR©e
, &
tŸÆSam∂eCou¡
);

4153 i‡(
ªsu…
 =
NULL
) {

4154  
NULL
;

4157 i‡(
ch™√lsOut
Ë*ch™√lsOuà
ch™√ls
;

4158 i‡(
ßm∂eR©eOut
Ë*ßm∂eR©eOuà
ßm∂eR©e
;

4159 i‡(
tŸÆFømeCou¡Out
Ë*tŸÆFømeCou¡Ouà
tŸÆSam∂eCou¡
 / 
ch™√ls
;

4161  
ªsu…
;

4162 
	}
}

4164 
drwav_öt32
* 
	$drwav_›í_mem‹y_™d_ªad_s32
(c⁄° * 
d©a
, 
size_t
 
d©aSize
, * 
ch™√ls
, * 
ßm∂eR©e
, 
drwav_uöt64
* 
tŸÆSam∂eCou¡
)

4166 i‡(
ßm∂eR©e
) *sampleRate = 0;

4167 i‡(
ch™√ls
) *channels = 0;

4168 i‡(
tŸÆSam∂eCou¡
) *totalSampleCount = 0;

4170 
drwav
 
wav
;

4171 i‡(!
	`drwav_öô_mem‹y
(&
wav
, 
d©a
, 
d©aSize
)) {

4172  
NULL
;

4175  
	`drwav__ªad_™d_˛o£_s32
(&
wav
, 
ch™√ls
, 
ßm∂eR©e
, 
tŸÆSam∂eCou¡
);

4176 
	}
}

4178 
drwav_öt32
* 
	$drwav_›í_mem‹y_™d_ªad_pcm_‰ames_s32
(c⁄° * 
d©a
, 
size_t
 
d©aSize
, * 
ch™√lsOut
, * 
ßm∂eR©eOut
, 
drwav_uöt64
* 
tŸÆFømeCou¡Out
)

4180 i‡(
ch™√lsOut
) *channelsOut = 0;

4181 i‡(
ßm∂eR©eOut
) *sampleRateOut = 0;

4182 i‡(
tŸÆFømeCou¡Out
) *totalFrameCountOut = 0;

4184 
ch™√ls
;

4185 
ßm∂eR©e
;

4186 
drwav_uöt64
 
tŸÆSam∂eCou¡
;

4187 
drwav_öt32
* 
ªsu…
 = 
	`drwav_›í_mem‹y_™d_ªad_s32
(
d©a
, 
d©aSize
, &
ch™√ls
, &
ßm∂eR©e
, &
tŸÆSam∂eCou¡
);

4188 i‡(
ªsu…
 =
NULL
) {

4189  
NULL
;

4192 i‡(
ch™√lsOut
Ë*ch™√lsOuà
ch™√ls
;

4193 i‡(
ßm∂eR©eOut
Ë*ßm∂eR©eOuà
ßm∂eR©e
;

4194 i‡(
tŸÆFømeCou¡Out
Ë*tŸÆFømeCou¡Ouà
tŸÆSam∂eCou¡
 / 
ch™√ls
;

4196  
ªsu…
;

4197 
	}
}

4201 
	$drwav_‰ì
(* 
pD©aRëu∫edByO≥nAndRód
)

4203 
	`DRWAV_FREE
(
pD©aRëu∫edByO≥nAndRód
);

4204 
	}
}

	@Examples/rnnoise_demo.c

1 
	~<°dio.h
>

2 
	~<°rög.h
>

3 
	~"∫noi£.h
"

4 
	~<°dlib.h
>

5 
	~<°döt.h
>

6 
	~<ems¸ùãn.h
>

10 
	#_mö
(
a
, 
b
Ë((◊Ë< (b)Ë? (aË: (b))

	)

11 
	#_max
(
a
, 
b
Ë((◊Ë> (b)Ë? (aË: (b))

	)

12 
	#_˛amp
(
x
, 
lo
, 
hi
Ë(
	`_max
(÷o), 
	`_mö
((hi), (x))))

	)

14 #ifde‡
USE_WAV_MP3_LIBRARIES


15 
	#DR_MP3_IMPLEMENTATION


	)

17 
	~"dr_mp3.h
"

19 
	#DR_WAV_IMPLEMENTATION


	)

21 
	~"dr_wav.h
"

24 #i‡ 
deföed
(
__APPLE__
)

25 
	~<mach/mach_time.h
>

26 #ñi‡
deföed
(
_WIN32
)

27 
	#WIN32_LEAN_AND_MEAN


	)

29 
	~<wödows.h
>

33 
	~<time.h
>

35 #i‚de‡ 
CLOCK_MONOTONIC


36 
	#CLOCK_MONOTONIC
 
CLOCK_REALTIME


	)

41 
uöt64_t
 
	$«nŸimî
() {

42 
evî
 = 0;

43 #i‡
	`deföed
(
__APPLE__
)

44 
mach_timeba£_öfo_d©a_t
 
‰equícy
;

45 i‡(!
evî
) {

46 i‡(
	`mach_timeba£_öfo
(&
‰equícy
Ë!
KERN_SUCCESS
) {

49 
evî
 = 1;

51  (
	`mach_absﬁuã_time
(Ë* 
‰equícy
.
numî
 / fªquícy.
díom
);

52 #ñi‡
	`deföed
(
_WIN32
)

53 
LARGE_INTEGER
 
‰equícy
;

54 i‡(!
evî
) {

55 
	`QuîyPîf‹m™˚Fªquícy
(&
‰equícy
);

56 
evî
 = 1;

58 
LARGE_INTEGER
 
t
;

59 
	`QuîyPîf‹m™˚Cou¡î
(&
t
);

60  (
t
.
QuadP¨t
 * (
uöt64_t
Ë1e9Ë/ 
‰equícy
.QuadPart;

62 
time•ec
 
t
 = {0};

63 i‡(!
evî
) {

64 i‡(
	`˛ock_gëtime
(
CLOCK_MONOTONIC
, &
t
) != 0) {

67 
evî
 = 1;

69 
	`˛ock_gëtime
(
CLOCK_MONOTONIC
, &
t
);

70  (
t
.
tv_£c
 * (
uöt64_t
Ë1e9Ë+Å.
tv_n£c
;

72 
	}
}

74 
	$now
() {

75 
uöt64_t
 
ïoch
 = 0;

76 i‡(!
ïoch
) {

77 
ïoch
 = 
	`«nŸimî
();

79  (
	`«nŸimî
(Ë- 
ïoch
) / 1e9;

80 
	}
}

82 
	$ˇlcEœp£d
(
°¨t
, 
íd
) {

83 
took
 = -
°¨t
;

84  
took
 + 
íd
;

85 
	}
}

87 #ifde‡
USE_WAV_MP3_LIBRARIES


89 
	$wavWrôe_s16
(*
fûíame
, *
buf„r
, 
ßm∂eR©e
, 
uöt32_t
 
tŸÆSam∂eCou¡
, uöt32_à
ch™√ls
) {

90 
drwav_d©a_f‹m©
 
f‹m©
;

91 
f‹m©
.
c⁄èöî
 = 
drwav_c⁄èöî_riff
;

92 
f‹m©
.f‹m© = 
DR_WAVE_FORMAT_PCM
;

93 
f‹m©
.
ch™√ls
 = channels;

94 
f‹m©
.
ßm∂eR©e
 = (
drwav_uöt32
) sampleRate;

95 
f‹m©
.
bôsPîSam∂e
 = 16;

96 *
buf„r_16
(*Ë
buf„r
;

97 
öt32_t
 
i
 = 0; i < 
tŸÆSam∂eCou¡
; ++i) {

98 
buf„r_16
[
i
] = 
	`drwav_˛amp
(
buf„r
[i], -32768, 32767);

100 
drwav
 *
pWav
 = 
	`drwav_›í_fûe_wrôe
(
fûíame
, &
f‹m©
);

101 i‡(
pWav
) {

102 
drwav_uöt64
 
ßm∂esWrôãn
 = 
	`drwav_wrôe
(
pWav
, 
tŸÆSam∂eCou¡
, 
buf„r
);

103 
	`drwav_unöô
(
pWav
);

104 i‡(
ßm∂esWrôãn
 !
tŸÆSam∂eCou¡
) {

105 
	`Ârötf
(
°dîr
, "wrôêfûê[%s]Éº‹.\n", 
fûíame
);

106 
	`exô
(1);

109 
	}
}

111 
	$wavWrôe_f32
(*
fûíame
, *
buf„r
, 
ßm∂eR©e
, 
uöt32_t
 
tŸÆSam∂eCou¡
, uöt32_à
ch™√ls
) {

112 
drwav_d©a_f‹m©
 
f‹m©
;

113 
f‹m©
.
c⁄èöî
 = 
drwav_c⁄èöî_riff
;

114 
f‹m©
.f‹m© = 
DR_WAVE_FORMAT_IEEE_FLOAT
;

115 
f‹m©
.
ch™√ls
 = channels;

116 
f‹m©
.
ßm∂eR©e
 = (
drwav_uöt32
) sampleRate;

117 
f‹m©
.
bôsPîSam∂e
 = 32;

118 
öt32_t
 
i
 = 0; i < 
tŸÆSam∂eCou¡
; ++i) {

119 
buf„r
[
i
] = 
	`drwav_˛amp
(buffer[i], -32768, 32767) * (1.0f / 32768.0f);

121 
drwav
 *
pWav
 = 
	`drwav_›í_fûe_wrôe
(
fûíame
, &
f‹m©
);

122 i‡(
pWav
) {

123 
drwav_uöt64
 
ßm∂esWrôãn
 = 
	`drwav_wrôe
(
pWav
, 
tŸÆSam∂eCou¡
, 
buf„r
);

124 
	`drwav_unöô
(
pWav
);

125 i‡(
ßm∂esWrôãn
 !
tŸÆSam∂eCou¡
) {

126 
	`Ârötf
(
°dîr
, "wrôêfûê[%s]Éº‹.\n", 
fûíame
);

127 
	`exô
(1);

130 
	}
}

132 *
	$wavRód_f32
(c⁄° *
fûíame
, 
uöt32_t
 *
ßm∂eR©e
, 
uöt64_t
 *
ßm∂eCou¡
, uöt32_à*
ch™√ls
) {

133 
drwav_uöt64
 
tŸÆSam∂eCou¡
 = 0;

134 *
öput
 = 
	`drwav_›í_fûe_™d_ªad_pcm_‰ames_f32
(
fûíame
, 
ch™√ls
, 
ßm∂eR©e
, &
tŸÆSam∂eCou¡
);

135 i‡(
öput
 =
NULL
) {

136 
drmp3_c⁄fig
 
pC⁄fig
;

137 
öput
 = 
	`drmp3_›í_fûe_™d_ªad_f32
(
fûíame
, &
pC⁄fig
, &
tŸÆSam∂eCou¡
);

138 i‡(
öput
 !
NULL
) {

139 *
ch™√ls
 = 
pC⁄fig
.
ouçutCh™√ls
;

140 *
ßm∂eR©e
 = 
pC⁄fig
.
ouçutSam∂eR©e
;

143 i‡(
öput
 =
NULL
) {

144 
	`Ârötf
(
°dîr
, "ªad fûê[%s]Éº‹.\n", 
fûíame
);

145 
	`exô
(1);

147 *
ßm∂eCou¡
 = 
tŸÆSam∂eCou¡
 * (*
ch™√ls
);

148 
öt32_t
 
i
 = 0; i < *
ßm∂eCou¡
; ++i) {

149 
öput
[
i
] = input[i] * 32768.0f;

151  
öput
;

152 
	}
}

154 *
	$mem_wavRód_f32
(c⁄° * 
d©a
, 
size_t
 
d©aSize
, 
uöt32_t
 *
ßm∂eR©e
, uöt32_à*
ch™√ls
, 
uöt64_t
 *
ßm∂eCou¡
) {

155 
drwav_uöt64
 
tŸÆSam∂eCou¡
 = 0;

156 *
öput
 = 
	`drwav_›í_mem‹y_™d_ªad_pcm_‰ames_f32
(
d©a
, 
d©aSize
, 
ch™√ls
, 
ßm∂eR©e
, &
tŸÆSam∂eCou¡
);

158 *
ßm∂eCou¡
 = 
tŸÆSam∂eCou¡
 * (*
ch™√ls
);

160 
öt32_t
 
i
 = 0; i < *
ßm∂eCou¡
; ++i) {

161 
öput
[
i
] = input[i] * 32768.0f;

163  
öput
;

164 
	}
}

168 
	$•lô∑th
(c⁄° *
∑th
, *
drv
, *
dú
, *
«me
, *
ext
) {

169 c⁄° *
íd
;

170 c⁄° *
p
;

171 c⁄° *
s
;

172 i‡(
∑th
[0] &&Öath[1] == ':') {

173 i‡(
drv
) {

174 *
drv
++ = *
∑th
++;

175 *
drv
++ = *
∑th
++;

176 *
drv
 = '\0';

178 } i‡(
drv
)

179 *
drv
 = '\0';

180 
íd
 = 
∑th
; *end && *end != ':';)

181 
íd
++;

182 
p
 = 
íd
;Ö > 
∑th
 && *--p != '\\' && *p != '/';)

183 i‡(*
p
 == '.') {

184 
íd
 = 
p
;

187 i‡(
ext
)

188 
s
 = 
íd
; (*
ext
 = *s++);)

189 
ext
++;

190 
p
 = 
íd
;Ö > 
∑th
;)

191 i‡(*--
p
 == '\\' || *p == '/') {

192 
p
++;

195 i‡(
«me
) {

196 
s
 = 
p
; s < 
íd
;)

197 *
«me
++ = *
s
++;

198 *
«me
 = '\0';

200 i‡(
dú
) {

201 
s
 = 
∑th
; s < 
p
;)

202 *
dú
++ = *
s
++;

203 *
dú
 = '\0';

205 
	}
}

209 
uöt64_t
 
	$Reßm∂e_f32
(c⁄° *
öput
, *
ouçut
, 
öSam∂eR©e
, 
outSam∂eR©e
, 
uöt64_t
 
öputSize
,

210 
uöt32_t
 
ch™√ls


212 i‡(
öput
 =
NULL
)

214 
uöt64_t
 
ouçutSize
 = 
öputSize
 * 
outSam∂eR©e
 / 
öSam∂eR©e
;

215 i‡(
ouçut
 =
NULL
)

216  
ouçutSize
;

217 
°ïDi°
 = ((Ë
öSam∂eR©e
 / (Ë
outSam∂eR©e
);

218 c⁄° 
uöt64_t
 
fixedFø˘i⁄
 = (1LL << 32);

219 c⁄° 
n‹mFixed
 = (1.0 / (1LL << 32));

220 
uöt64_t
 
°ï
 = ((uöt64_tË(
°ïDi°
 * 
fixedFø˘i⁄
 + 0.5));

221 
uöt64_t
 
curOff£t
 = 0;

222 
uöt32_t
 
i
 = 0; i < 
ouçutSize
; i += 1) {

223 
uöt32_t
 
c
 = 0; c < 
ch™√ls
; c += 1) {

224 *
ouçut
++ = (Ë(
öput
[
c
] + (öput[¯+ 
ch™√ls
] - input[c]) * (

225 (Ë(
curOff£t
 >> 32Ë+ ((curOff£à& (
fixedFø˘i⁄
 - 1)Ë* 
n‹mFixed
)

229 
curOff£t
 +
°ï
;

230 
öput
 +(
curOff£t
 >> 32Ë* 
ch™√ls
;

231 
curOff£t
 &(
fixedFø˘i⁄
 - 1);

233  
ouçutSize
;

234 
	}
}

236 
	$¥öt
(c⁄° * 
buf„r
, c⁄° 
size
, 
°r
) {

237 
	`¥ötf
("\n-------------%c-------------\n\n", 
°r
);

238 
j
=0; j<10; ++j) {

239 
	`¥ötf
("\n");

240 
i
 = 0; i<
size
/10; ++iË
	`¥ötf
("%f, ", *(
buf„r
++));

242 
	`¥ötf
("\n-------------------------\n\n");

243 
	}
}

244 
EMSCRIPTEN_KEEPALIVE


245 
	$díoi£_¥oc
(*
öput
, 
uöt32_t
 
ßm∂eR©e
, uöt32_à
ch™√ls
, 
uöt64_t
 
ßm∂eCou¡
) {

246 
Êag
 = 0;

247 
uöt32_t
 
èrgëFømeSize
 = 480;

248 
uöt32_t
 
èrgëSam∂eR©e
 = 48000;

249 
uöt32_t
 
≥rFømeSize
 = 
ßm∂eR©e
 / 100;

250 *
‰ameBuf„r
 = (*Ë
	`mÆloc
((*‰ameBuf„rË* (
ch™√ls
 + 1Ë* 
èrgëFømeSize
);

251 *
¥o˚ssBuf„r
 = 
‰ameBuf„r
 + 
èrgëFømeSize
 * 
ch™√ls
;

252 
Díoi£Sèã
 **
°s
 = 
	`mÆloc
(
ch™√ls
 * (DenoiseState *));

253 i‡(
°s
 =
NULL
 || 
‰ameBuf„r
 == NULL) {

254 i‡(
°s
)

255 
	`‰ì
(
°s
);

256 i‡(
‰ameBuf„r
)

257 
	`‰ì
(
‰ameBuf„r
);

258 
	`Ârötf
(
°dîr
, "mallocÉrror.\n");

261 
i
 = 0; i < 
ch™√ls
; i++) {

262 
°s
[
i
] = 
	`∫noi£_¸óã
(
NULL
);

263 i‡(
°s
[
i
] =
NULL
) {

264 
x
 = 0; x < 
i
; x++) {

265 i‡(
°s
[
x
]) {

266 
	`∫noi£_de°roy
(
°s
[
x
]);

269 
	`‰ì
(
°s
);

270 
	`‰ì
(
‰ameBuf„r
);

274 
size_t
 
‰ameSãp
 = 
ch™√ls
 * 
≥rFømeSize
;

275 
uöt64_t
 
‰ames
 = 
ßm∂eCou¡
 / 
‰ameSãp
;

276 
uöt64_t
 
œ°FømeSize
 = (
ßm∂eCou¡
 % 
‰ameSãp
Ë/ 
ch™√ls
;

277 
i
 = 0; i < 
‰ames
; ++i) {

278 if(
Êag
Ë
	`¥öt
(
öput
, 480, 'A');

280 
	`Reßm∂e_f32
(
öput
, 
‰ameBuf„r
, 
ßm∂eR©e
, 
èrgëSam∂eR©e
,

281 
≥rFømeSize
, 
ch™√ls
);

282 if(
Êag
Ë
	`¥öt
(
‰ameBuf„r
, 480, 'B');

284 
c
 = 0; c < 
ch™√ls
; c++) {

285 
k
 = 0; k < 
èrgëFømeSize
; k++)

286 
¥o˚ssBuf„r
[
k
] = 
‰ameBuf„r
[k * 
ch™√ls
 + 
c
];

287 
	`∫noi£_¥o˚ss_‰ame
(
°s
[
c
], 
¥o˚ssBuf„r
,ÖrocessBuffer);

288 
k
 = 0; k < 
èrgëFømeSize
; k++)

289 
‰ameBuf„r
[
k
 * 
ch™√ls
 + 
c
] = 
¥o˚ssBuf„r
[k];

291 if(
Êag
Ë
	`¥öt
(
‰ameBuf„r
, 480, 'C');

293 
	`Reßm∂e_f32
(
‰ameBuf„r
, 
öput
, 
èrgëSam∂eR©e
, 
ßm∂eR©e
, 
èrgëFømeSize
, 
ch™√ls
);

294 if(
Êag
Ë{ 
	`¥öt
(
öput
, 480, 'D'); flag = 1; }

296 
öput
 +
‰ameSãp
;

298 i‡(
œ°FømeSize
 != 0) {

299 
	`mem£t
(
‰ameBuf„r
, 0, 
èrgëFømeSize
 * 
ch™√ls
 * ());

300 
uöt64_t
 
œ°Rósm∂eSize
 = 
	`Reßm∂e_f32
(
öput
, 
‰ameBuf„r
, 
ßm∂eR©e
,

301 
èrgëSam∂eR©e
,

302 
œ°FømeSize
, 
ch™√ls
);

303 
c
 = 0; c < 
ch™√ls
; c++) {

304 
k
 = 0; k < 
èrgëFømeSize
; k++)

305 
¥o˚ssBuf„r
[
k
] = 
‰ameBuf„r
[k * 
ch™√ls
 + 
c
];

306 
	`∫noi£_¥o˚ss_‰ame
(
°s
[
c
], 
¥o˚ssBuf„r
,ÖrocessBuffer);

307 
k
 = 0; k < 
èrgëFømeSize
; k++)

308 
‰ameBuf„r
[
k
 * 
ch™√ls
 + 
c
] = 
¥o˚ssBuf„r
[k];

310 
	`Reßm∂e_f32
(
‰ameBuf„r
, 
öput
, 
èrgëSam∂eR©e
, 
ßm∂eR©e
, 
œ°Rósm∂eSize
,

311 
ch™√ls
);

313 
i
 = 0; i < 
ch™√ls
; i++) {

314 i‡(
°s
[
i
]) {

315 
	`∫noi£_de°roy
(
°s
[
i
]);

318 
	`‰ì
(
°s
);

319 
	`‰ì
(
‰ameBuf„r
);

320 
	}
}

322 
	gªsu…
[2];

323 
uöt32_t
 
	gßm∂eR©e
 = 0;

324 
uöt32_t
 
	gch™√ls
 = 0;

325 
uöt64_t
 
	gßm∂eCou¡
 = 0;

326 * 
	gªsu…_buf„r
;

328 #ifde‡
USE_WAV_MP3_LIBRARIES


330 
EMSCRIPTEN_KEEPALIVE


331 * 
	$∫nDíoi£Mem
(* 
audioD©a
, 
size_t
 
audioSize
) {

333 * 
buf„r
 = 
	`mem_wavRód_f32
(
audioD©a
, 
audioSize
, &
ßm∂eR©e
, &
ch™√ls
, &
ßm∂eCou¡
);

337 if(
buf„r
 !
NULL
) {

338 
	`díoi£_¥oc
(
buf„r
, 
ßm∂eR©e
, 
ch™√ls
, 
ßm∂eCou¡
);

340 
ªsu…_buf„r
 = 
buf„r
;

341 
ªsu…
[1] = 
ßm∂eCou¡
;

343  
buf„r
;

344 
	}
}

348 
EMSCRIPTEN_KEEPALIVE


349 * 
	$∫nDíoi£_øwmem
(c⁄° * 
audioD©a
, c⁄° 
uöt32_t
 
ö_ßm∂eR©e
, c⁄° uöt32_à
ö_ch™√ls
, c⁄° uöt32_à
ö_ßm∂eCou¡
) {

351 
ßm∂eCou¡
 = 
ö_ßm∂eCou¡
;

352 
ßm∂eR©e
 = 
ö_ßm∂eR©e
;

353 
ch™√ls
 = 
ö_ch™√ls
;

355 * 
buf„r
 = (*Ë
	`mÆloc
((Ë* 
ßm∂eCou¡
);

358 
i
 = 0; i < 
ßm∂eCou¡
; ++i) {

359 
buf„r
[
i
] = 
audioD©a
[i] * 32768.0f;

363 if(
buf„r
 !
NULL
) {

365 
	`díoi£_¥oc
(
buf„r
, 
ßm∂eR©e
, 
ch™√ls
, 
ßm∂eCou¡
);

369 
i
 = 0; i < 
ßm∂eCou¡
; ++i) {

370 
buf„r
[
i
] = 
	`_˛amp
(buffer[i], -32768, 32767) * (1.0f / 32768.0);

376 
ªsu…_buf„r
 = 
buf„r
;

377 
ªsu…
[1] = 
ßm∂eCou¡
;

379  
buf„r
;

380 
	}
}

382 
	gtime_öãrvÆ
 = 0;

383 
EMSCRIPTEN_KEEPALIVE


384 * 
	$∫nDíoi£_øwmem_≥rf
(c⁄° * 
audioD©a
, c⁄° 
uöt32_t
 
ö_ßm∂eR©e
, c⁄° uöt32_à
ö_ch™√ls
, c⁄° uöt32_à
ö_ßm∂eCou¡
) {

385 *
ªsu…
;

387 
°¨tTime
 = 
	`now
();

388 
ªsu…
 = 
	`∫nDíoi£_øwmem_≥rf
(
audioD©a
, 
ö_ßm∂eR©e
, 
ö_ch™√ls
, 
ö_ßm∂eCou¡
);

389 
time_öãrvÆ
 = 
	`ˇlcEœp£d
(
°¨tTime
, 
	`now
());

390  
ªsu…
;

391 
	}
}

392 
EMSCRIPTEN_KEEPALIVE


393 
	$gë_∫nDíoi£_øwmem_time
(Ë{  
time_öãrvÆ
;
	}
}

396 
EMSCRIPTEN_KEEPALIVE


397 
	$gëResu…Poöãr
(Ë{  
ªsu…
[0];
	}
}

398 
EMSCRIPTEN_KEEPALIVE


399 
	$gëResu…Size
(Ë{  
ªsu…
[1];
	}
}

400 
EMSCRIPTEN_KEEPALIVE


401 
	$gëßm∂eR©e
(Ë{  
ßm∂eR©e
;
	}
}

402 
EMSCRIPTEN_KEEPALIVE


403 
	$gëch™√ls
(Ë{  
ch™√ls
;
	}
}

404 
EMSCRIPTEN_KEEPALIVE


405 
	$gëßm∂eCou¡
(Ë{  (Ë
ßm∂eCou¡
;
	}
}

406 
EMSCRIPTEN_KEEPALIVE


407 
	$‰ìBuf„r
(Ë{ 
	`‰ì
(
ªsu…_buf„r
);
	}
}

409 #ifde‡
USE_WAV_MP3_LIBRARIES


411 
	$∫nDeNoi£
(*
ö_fûe
, *
out_fûe
) {

413 
FILE
 *
Â
 = 
	`f›í
(
ö_fûe
, "rb");

414 
	`f£ek
(
Â
, 0, 
SEEK_END
);

415 
size_t
 
fSize
 = 
	`·ñl
(
Â
);

416 
	`ªwöd
(
Â
);

419 
audioD©a
[
fSize
];

420 
rSèt
 = 
	`‰ód
(
audioD©a
, (), 
fSize
, 
Â
);

421 if(
rSèt
 < 1Ë{
	`¥ötf
("\nFileReadError: %d\n",ÑStat);}

422 
audioD©aSize
 = 
fSize
;

425 
°¨tTime
 = 
	`now
();

426 * 
buf„r
 = 
	`∫nDíoi£Mem
(
audioD©a
, 
audioD©aSize
);

427 
time_öãrvÆ
 = 
	`ˇlcEœp£d
(
°¨tTime
, 
	`now
());

428 
	`¥ötf
("Performance:\n\n");

429 
	`¥ötf
("AudioFûe:\t\t%s\n", 
ö_fûe
);

430 
	`¥ötf
("Sam∂eR©e:\t\t%d\n", 
ßm∂eR©e
);

431 
	`¥ötf
("D©aSizê(byãs):\t%ld\n", 
ßm∂eCou¡
);

433 
	`¥ötf
("TimêöãrvÆ (ms):\t%f\¿", (
time_öãrvÆ
 * 1000));

434 
	`¥ötf
("Kbps:\t\t\t%f\¿",(
ßm∂eCou¡
)/(
time_öãrvÆ
 * 1000));

435 if(
buf„r
) {

436 
	`wavWrôe_s16
(
out_fûe
, 
buf„r
, 
ßm∂eR©e
, (
uöt32_t
Ë
ªsu…
[1], 
ch™√ls
);

437 
	`‰ì
(
buf„r
);

439 
	}
}

444 
	$maö
(
¨gc
, **
¨gv
) {

446 #ifde‡
USE_WAV_MP3_LIBRARIES


447 if(
¨gc
 < 3) {

448 
	`¥ötf
("PleaseÖrovideáudio fileÅoÖrocess. For Example \n");

449 
	`¥ötf
("./rnnoise file.wav outfile.wav\n");

453 *
öFûe
 = 
¨gv
[1];

454 *
outFûe
 = 
¨gv
[2];

456 
	`∫nDeNoi£
(
öFûe
, 
outFûe
);

459 
	}
}

	@rnnoise/config.h

5 
	#HAVE_DLFCN_H
 1

	)

8 
	#HAVE_INTTYPES_H
 1

	)

11 
	#HAVE_MEMORY_H
 1

	)

14 
	#HAVE_STDINT_H
 1

	)

17 
	#HAVE_STDLIB_H
 1

	)

20 
	#HAVE_STRINGS_H
 1

	)

23 
	#HAVE_STRING_H
 1

	)

26 
	#HAVE_SYS_STAT_H
 1

	)

29 
	#HAVE_SYS_TYPES_H
 1

	)

32 
	#HAVE_UNISTD_H
 1

	)

35 
	#LT_OBJDIR
 ".libs/"

	)

41 
	#PACKAGE_BUGREPORT
 "jmvÆö@jmvÆö.ˇ"

	)

44 
	#PACKAGE_NAME
 "∫noi£"

	)

47 
	#PACKAGE_STRING
 "∫noi£ unknown"

	)

50 
	#PACKAGE_TARNAME
 "∫noi£"

	)

53 
	#PACKAGE_URL
 ""

	)

56 
	#PACKAGE_VERSION
 "unknown"

	)

59 
	#RNNOISE_BUILD


	)

62 
	#STDC_HEADERS
 1

	)

67 
	#SUPPORT_ATTRIBUTE_VISIBILITY_DEFAULT
 1

	)

70 
	#SUPPORT_FLAG_VISIBILITY
 1

	)

73 #i‚de‡
_ALL_SOURCE


74 
	#_ALL_SOURCE
 1

	)

77 #i‚de‡
_GNU_SOURCE


78 
	#_GNU_SOURCE
 1

	)

81 #i‚de‡
_POSIX_PTHREAD_SEMANTICS


82 
	#_POSIX_PTHREAD_SEMANTICS
 1

	)

85 #i‚de‡
_TANDEM_SOURCE


86 
	#_TANDEM_SOURCE
 1

	)

89 #i‚de‡
__EXTENSIONS__


90 
	#__EXTENSIONS__
 1

	)

95 #i‚de‡
_DARWIN_USE_64_BIT_INODE


96 
	#_DARWIN_USE_64_BIT_INODE
 1

	)

120 #i‚de‡
__˝lu•lus


	@rnnoise/examples/dr_mp3.h

56 #i‚de‡
dr_mp3_h


57 
	#dr_mp3_h


	)

59 #ifde‡
__˝lu•lus


63 
	~<°ddef.h
>

65 #i‡
deföed
(
_MSC_VER
) && _MSC_VER < 1600

66 sig√d 
	tdrmp3_öt8
;

67 
	tdrmp3_uöt8
;

68 sig√d 
	tdrmp3_öt16
;

69 
	tdrmp3_uöt16
;

70 sig√d 
	tdrmp3_öt32
;

71 
	tdrmp3_uöt32
;

72 sig√d 
	t__öt64
 
	tdrmp3_öt64
;

73 
	t__öt64
 
	tdrmp3_uöt64
;

76 
	~<°döt.h
>

78 
öt8_t
 
	tdrmp3_öt8
;

79 
uöt8_t
 
	tdrmp3_uöt8
;

80 
öt16_t
 
	tdrmp3_öt16
;

81 
uöt16_t
 
	tdrmp3_uöt16
;

82 
öt32_t
 
	tdrmp3_öt32
;

83 
uöt32_t
 
	tdrmp3_uöt32
;

84 
öt64_t
 
	tdrmp3_öt64
;

85 
uöt64_t
 
	tdrmp3_uöt64
;

87 
drmp3_uöt8
 
	tdrmp3_boﬁ8
;

88 
drmp3_uöt32
 
	tdrmp3_boﬁ32
;

89 
	#DRMP3_TRUE
 1

	)

90 
	#DRMP3_FALSE
 0

	)

92 
	#DRMP3_MAX_PCM_FRAMES_PER_MP3_FRAME
 1152

	)

93 
	#DRMP3_MAX_SAMPLES_PER_FRAME
 (
DRMP3_MAX_PCM_FRAMES_PER_MP3_FRAME
*2)

	)

99 
‰ame_byãs
, 
ch™√ls
, 
hz
, 
œyî
, 
bôøã_kbps
;

100 } 
	tdrmp3dec_‰ame_öfo
;

103 
md˘_ovîœp
[2][9 * 32], 
qmf_°©e
[15 * 2 * 32];

104 
ª£rv
, 
‰ì_f‹m©_byãs
;

105 
hódî
[4], 
ª£rv_buf
[511];

106 } 
	tdrmp3dec
;

109 
drmp3dec_öô
(
drmp3dec
 *
dec
);

112 
drmp3dec_decode_‰ame
(
drmp3dec
 *
dec
, c⁄° *
mp3
, 
mp3_byãs
, *
pcm
, 
drmp3dec_‰ame_öfo
 *
öfo
);

115 
drmp3dec_f32_to_s16
(c⁄° *
ö
, 
drmp3_öt16
 *
out
, 
num_ßm∂es
);

123 
drmp3_§c
 
	tdrmp3_§c
;

125 
drmp3_uöt64
 (*
	tdrmp3_§c_ªad_¥oc
)(
	tdrmp3_§c
 *
	tpSRC
, 
	tdrmp3_uöt64
 
	t‰ameCou¡
, *
	tpFømesOut
,

126 *
	tpU£rD©a
);

129 
drmp3_§c_Æg‹ôhm_n⁄e
,

130 
drmp3_§c_Æg‹ôhm_löór


131 } 
	tdrmp3_§c_Æg‹ôhm
;

133 
	#DRMP3_SRC_CACHE_SIZE_IN_FRAMES
 512

	)

135 
drmp3_§c
 *
pSRC
;

136 
pCachedFømes
[2 * 
DRMP3_SRC_CACHE_SIZE_IN_FRAMES
];

137 
drmp3_uöt32
 
ˇchedFømeCou¡
;

138 
drmp3_uöt32
 
iNextFøme
;

139 } 
	tdrmp3_§c_ˇche
;

142 
drmp3_uöt32
 
ßm∂eR©eIn
;

143 
drmp3_uöt32
 
ßm∂eR©eOut
;

144 
drmp3_uöt32
 
ch™√ls
;

145 
drmp3_§c_Æg‹ôhm
 
Æg‹ôhm
;

146 
drmp3_uöt32
 
ˇcheSizeInFømes
;

147 } 
	tdrmp3_§c_c⁄fig
;

149 
	sdrmp3_§c
 {

150 
drmp3_§c_c⁄fig
 
c⁄fig
;

151 
drmp3_§c_ªad_¥oc
 
⁄Ród
;

152 *
pU£rD©a
;

153 
bö
[256];

154 
drmp3_§c_ˇche
 
ˇche
;

157 
Æpha
;

158 
drmp3_boﬁ32
 
isPªvFømesLﬂded
 : 1;

159 
drmp3_boﬁ32
 
isNextFømesLﬂded
 : 1;

160 } 
löór
;

161 } 
Ægo
;

165 
drmp3_£ek_‹igö_°¨t
,

166 
drmp3_£ek_‹igö_cuºít


167 } 
	tdrmp3_£ek_‹igö
;

170 
drmp3_uöt64
 
£ekPosInByãs
;

171 
drmp3_uöt64
 
pcmFømeIndex
;

172 
drmp3_uöt16
 
mp3FømesToDisˇrd
;

173 
drmp3_uöt16
 
pcmFømesToDisˇrd
;

174 } 
	tdrmp3_£ek_poöt
;

186 
size_t
 (*
	tdrmp3_ªad_¥oc
)(*
	tpU£rD©a
, *
	tpBuf„rOut
, 
	tsize_t
 
	tbyãsToRód
);

198 
drmp3_boﬁ32
 (*
	tdrmp3_£ek_¥oc
)(*
	tpU£rD©a
, 
	toff£t
, 
	tdrmp3_£ek_‹igö
 
	t‹igö
);

201 
drmp3_uöt32
 
ouçutCh™√ls
;

202 
drmp3_uöt32
 
ouçutSam∂eR©e
;

203 } 
	tdrmp3_c⁄fig
;

206 
drmp3dec
 
decodî
;

207 
drmp3dec_‰ame_öfo
 
‰ameInfo
;

208 
drmp3_uöt32
 
ch™√ls
;

209 
drmp3_uöt32
 
ßm∂eR©e
;

210 
drmp3_ªad_¥oc
 
⁄Ród
;

211 
drmp3_£ek_¥oc
 
⁄Sìk
;

212 *
pU£rD©a
;

213 
drmp3_uöt32
 
mp3FømeCh™√ls
;

214 
drmp3_uöt32
 
mp3FømeSam∂eR©e
;

215 
drmp3_uöt32
 
pcmFømesC⁄sumedInMP3Føme
;

216 
drmp3_uöt32
 
pcmFømesRemaöögInMP3Føme
;

217 
drmp3_uöt8
 
pcmFømes
[() *

218 
DRMP3_MAX_SAMPLES_PER_FRAME
];

219 
drmp3_uöt64
 
cuºítPCMFøme
;

220 
drmp3_uöt64
 
°ªamCurs‹
;

221 
drmp3_§c
 
§c
;

222 
drmp3_£ek_poöt
 *
pSìkPoöts
;

223 
drmp3_uöt32
 
£ekPoötCou¡
;

224 
size_t
 
d©aSize
;

225 
size_t
 
d©aC≠acôy
;

226 
drmp3_uöt8
 *
pD©a
;

227 
drmp3_boﬁ32
 
©End
 : 1;

229 c⁄° 
drmp3_uöt8
 *
pD©a
;

230 
size_t
 
d©aSize
;

231 
size_t
 
cuºítRódPos
;

232 } 
mem‹y
;

233 } 
	tdrmp3
;

246 
drmp3_boﬁ32


247 
drmp3_öô
(
drmp3
 *
pMP3
, 
drmp3_ªad_¥oc
 
⁄Ród
, 
drmp3_£ek_¥oc
 
⁄Sìk
, *
pU£rD©a
, c⁄° 
drmp3_c⁄fig
 *
pC⁄fig
);

255 
drmp3_boﬁ32
 
drmp3_öô_mem‹y
(
drmp3
 *
pMP3
, c⁄° *
pD©a
, 
size_t
 
d©aSize
, c⁄° 
drmp3_c⁄fig
 *
pC⁄fig
);

257 #i‚de‡
DR_MP3_NO_STDIO


264 
drmp3_boﬁ32
 
drmp3_öô_fûe
(
drmp3
 *
pMP3
, c⁄° *
fûeP©h
, c⁄° 
drmp3_c⁄fig
 *
pC⁄fig
);

269 
drmp3_unöô
(
drmp3
 *
pMP3
);

274 
drmp3_uöt64
 
drmp3_ªad_pcm_‰ames_f32
(
drmp3
 *
pMP3
, drmp3_uöt64 
‰amesToRód
, *
pBuf„rOut
);

279 
drmp3_boﬁ32
 
drmp3_£ek_to_pcm_‰ame
(
drmp3
 *
pMP3
, 
drmp3_uöt64
 
‰ameIndex
);

283 
drmp3_uöt64
 
drmp3_gë_pcm_‰ame_cou¡
(
drmp3
 *
pMP3
);

287 
drmp3_uöt64
 
drmp3_gë_mp3_‰ame_cou¡
(
drmp3
 *
pMP3
);

296 
drmp3_boﬁ32
 
drmp3_ˇlcuœã_£ek_poöts
(
drmp3
 *
pMP3
, 
drmp3_uöt32
 *
pSìkPoötCou¡
, 
drmp3_£ek_poöt
 *
pSìkPoöts
);

304 
drmp3_boﬁ32
 
drmp3_böd_£ek_èbÀ
(
drmp3
 *
pMP3
, 
drmp3_uöt32
 
£ekPoötCou¡
, 
drmp3_£ek_poöt
 *
pSìkPoöts
);

312 *
drmp3_›í_™d_ªad_f32
(
drmp3_ªad_¥oc
 
⁄Ród
, 
drmp3_£ek_¥oc
 
⁄Sìk
, *
pU£rD©a
, 
drmp3_c⁄fig
 *
pC⁄fig
,

313 
drmp3_uöt64
 *
pTŸÆFømeCou¡
);

315 *
drmp3_›í_mem‹y_™d_ªad_f32
(c⁄° *
pD©a
, 
size_t
 
d©aSize
, 
drmp3_c⁄fig
 *
pC⁄fig
,

316 
drmp3_uöt64
 *
pTŸÆFømeCou¡
);

318 #i‚de‡
DR_MP3_NO_STDIO


320 *
drmp3_›í_fûe_™d_ªad_f32
(c⁄° *
fûeP©h
, 
drmp3_c⁄fig
 *
pC⁄fig
, 
drmp3_uöt64
 *
pTŸÆFømeCou¡
);

325 
drmp3_‰ì
(*
p
);

327 #ifde‡
__˝lu•lus


338 #ifde‡
DR_MP3_IMPLEMENTATION


340 
	~<°dlib.h
>

341 
	~<°rög.h
>

342 
	~<°döt.h
>

343 
	~<limôs.h
>

346 #i‡
deföed
(
__TINYC__
)

347 
	#DR_MP3_NO_SIMD


	)

350 
	#DRMP3_OFFSET_PTR
(
p
, 
off£t
Ë((*)((
drmp3_uöt8
*)’Ë+ (off£t)))

	)

352 
	#DRMP3_MAX_FREE_FORMAT_FRAME_SIZE
 2304

	)

353 #i‚de‡
DRMP3_MAX_FRAME_SYNC_MATCHES


354 
	#DRMP3_MAX_FRAME_SYNC_MATCHES
 10

	)

357 
	#DRMP3_MAX_L3_FRAME_PAYLOAD_BYTES
 
DRMP3_MAX_FREE_FORMAT_FRAME_SIZE


	)

359 
	#DRMP3_MAX_BITRESERVOIR_BYTES
 511

	)

360 
	#DRMP3_SHORT_BLOCK_TYPE
 2

	)

361 
	#DRMP3_STOP_BLOCK_TYPE
 3

	)

362 
	#DRMP3_MODE_MONO
 3

	)

363 
	#DRMP3_MODE_JOINT_STEREO
 1

	)

364 
	#DRMP3_HDR_SIZE
 4

	)

365 
	#DRMP3_HDR_IS_MONO
(
h
Ë(((h[3]Ë& 0xC0Ë=0xC0)

	)

366 
	#DRMP3_HDR_IS_MS_STEREO
(
h
Ë(((h[3]Ë& 0xE0Ë=0x60)

	)

367 
	#DRMP3_HDR_IS_FREE_FORMAT
(
h
Ë(((h[2]Ë& 0xF0Ë=0)

	)

368 
	#DRMP3_HDR_IS_CRC
(
h
Ë(!((h[1]Ë& 1))

	)

369 
	#DRMP3_HDR_TEST_PADDING
(
h
Ë((h[2]Ë& 0x2)

	)

370 
	#DRMP3_HDR_TEST_MPEG1
(
h
Ë((h[1]Ë& 0x8)

	)

371 
	#DRMP3_HDR_TEST_NOT_MPEG25
(
h
Ë((h[1]Ë& 0x10)

	)

372 
	#DRMP3_HDR_TEST_I_STEREO
(
h
Ë((h[3]Ë& 0x10)

	)

373 
	#DRMP3_HDR_TEST_MS_STEREO
(
h
Ë((h[3]Ë& 0x20)

	)

374 
	#DRMP3_HDR_GET_STEREO_MODE
(
h
Ë(((h[3]Ë>> 6Ë& 3)

	)

375 
	#DRMP3_HDR_GET_STEREO_MODE_EXT
(
h
Ë(((h[3]Ë>> 4Ë& 3)

	)

376 
	#DRMP3_HDR_GET_LAYER
(
h
Ë(((h[1]Ë>> 1Ë& 3)

	)

377 
	#DRMP3_HDR_GET_BITRATE
(
h
Ë((h[2]Ë>> 4)

	)

378 
	#DRMP3_HDR_GET_SAMPLE_RATE
(
h
Ë(((h[2]Ë>> 2Ë& 3)

	)

379 
	#DRMP3_HDR_GET_MY_SAMPLE_RATE
(
h
Ë(
	`DRMP3_HDR_GET_SAMPLE_RATE
(hË+ (((h[1] >> 3Ë& 1Ë+ ((h[1] >> 4Ë& 1))*3)

	)

380 
	#DRMP3_HDR_IS_FRAME_576
(
h
Ë((h[1] & 14Ë=2)

	)

381 
	#DRMP3_HDR_IS_LAYER_1
(
h
Ë((h[1] & 6Ë=6)

	)

383 
	#DRMP3_BITS_DEQUANTIZER_OUT
 -1

	)

384 
	#DRMP3_MAX_SCF
 (255 + 
DRMP3_BITS_DEQUANTIZER_OUT
*4 - 210)

	)

385 
	#DRMP3_MAX_SCFI
 ((
DRMP3_MAX_SCF
 + 3Ë& ~3)

	)

387 
	#DRMP3_MIN
(
a
, 
b
Ë(◊Ë> (bË? (bË: (a))

	)

388 
	#DRMP3_MAX
(
a
, 
b
Ë(◊Ë< (bË? (bË: (a))

	)

390 #i‡!
deföed
(
DR_MP3_NO_SIMD
)

392 #i‡!
deföed
(
DR_MP3_ONLY_SIMD
Ë&& (deföed(
_M_X64
Ë|| deföed(
_M_ARM64
Ë|| deföed(
__x86_64__
Ë|| deföed(
__Ørch64__
))

394 
	#DR_MP3_ONLY_SIMD


	)

397 #i‡(
deföed
(
_MSC_VER
Ë&& (deföed(
_M_IX86
Ë|| deföed(
_M_X64
))Ë|| ((deföed(
__i386__
Ë|| deföed(
__x86_64__
)Ë&& deföed(
__SSE2__
))

398 #i‡
deföed
(
_MSC_VER
)

399 
	~<öåö.h
>

402 
	~<emmöåö.h
>

404 
	#DRMP3_HAVE_SSE
 1

	)

405 
	#DRMP3_HAVE_SIMD
 1

	)

406 
	#DRMP3_VSTORE
 
_mm_°‹eu_ps


	)

407 
	#DRMP3_VLD
 
_mm_lﬂdu_ps


	)

408 
	#DRMP3_VSET
 
_mm_£t1_ps


	)

409 
	#DRMP3_VADD
 
_mm_add_ps


	)

410 
	#DRMP3_VSUB
 
_mm_sub_ps


	)

411 
	#DRMP3_VMUL
 
_mm_mul_ps


	)

412 
	#DRMP3_VMAC
(
a
, 
x
, 
y
Ë
	`_mm_add_ps
◊, 
	`_mm_mul_ps
(x, y))

	)

413 
	#DRMP3_VMSB
(
a
, 
x
, 
y
Ë
	`_mm_sub_ps
◊, 
	`_mm_mul_ps
(x, y))

	)

414 
	#DRMP3_VMUL_S
(
x
, 
s
Ë
	`_mm_mul_ps
(x, 
	`_mm_£t1_ps
(s))

	)

415 
	#DRMP3_VREV
(
x
Ë
	`_mm_shufÊe_ps
(x, x, 
	`_MM_SHUFFLE
(0, 1, 2, 3))

	)

416 
__m128
 
	tdrmp3_f4
;

417 #i‡
deföed
(
_MSC_VER
Ë|| deföed(
DR_MP3_ONLY_SIMD
)

418 
	#drmp3_˝uid
 
__˝uid


	)

420 
__ölöe__
 
__©åibuã__
((
Æways_ölöe
)Ë
	$drmp3_˝uid
(
CPUInfo
[], c⁄° 
InfoTy≥
)

422 #i‡
	`deföed
(
__PIC__
)

423 
__asm__
 
	`__vﬁ©ûe__
(

424 #i‡
	`deföed
(
__x86_64__
)

434 : "˜" (
CPUInfo
[0]), "=r" (CPUInfo[1]), "=c" (CPUInfo[2]), "=d" (CPUInfo[3])

435 : "a" (
InfoTy≥
));

437 
__asm__
 
	`__vﬁ©ûe__
(

439 : "˜" (
CPUInfo
[0]), "=b" (CPUInfo[1]), "=c" (CPUInfo[2]), "=d" (CPUInfo[3])

440 : "a" (
InfoTy≥
));

442 
	}
}

445 
	$drmp3_have_simd
() {

446 #ifde‡
DR_MP3_ONLY_SIMD


449 
g_have_simd
;

450 
CPUInfo
[4];

451 #ifde‡
MINIMP3_TEST


452 
g_cou¡î
;

453 i‡(
g_cou¡î
++ > 100)

456 i‡(
g_have_simd
)

457 
íd
;

458 
	`drmp3_˝uid
(
CPUInfo
, 0);

459 i‡(
CPUInfo
[0] > 0)

461 
	`drmp3_˝uid
(
CPUInfo
, 1);

462 
g_have_simd
 = (
CPUInfo
[3] & (1 << 26)) + 1;

463  
g_have_simd
 - 1;

466 
íd
:

467  
g_have_simd
 - 1;

469 
	}
}

471 #ñi‡
deföed
(
__ARM_NEON
Ë|| deföed(
__Ørch64__
)

472 
	~<¨m_√⁄.h
>

473 
	#DRMP3_HAVE_SIMD
 1

	)

474 
	#DRMP3_VSTORE
 
v°1q_f32


	)

475 
	#DRMP3_VLD
 
vld1q_f32


	)

476 
	#DRMP3_VSET
 
vmovq_n_f32


	)

477 
	#DRMP3_VADD
 
vaddq_f32


	)

478 
	#DRMP3_VSUB
 
vsubq_f32


	)

479 
	#DRMP3_VMUL
 
vmulq_f32


	)

480 
	#DRMP3_VMAC
(
a
, 
x
, 
y
Ë
	`vmœq_f32
◊, x, y)

	)

481 
	#DRMP3_VMSB
(
a
, 
x
, 
y
Ë
	`vmlsq_f32
◊, x, y)

	)

482 
	#DRMP3_VMUL_S
(
x
, 
s
Ë
	`vmulq_f32
(x, 
	`vmovq_n_f32
(s))

	)

483 
	#DRMP3_VREV
(
x
Ë
	`vcomböe_f32
(
	`vgë_high_f32
(
	`vªv64q_f32
(x)), 
	`vgë_low_f32
(vªv64q_f32(x)))

	)

484 
Êﬂt32x4_t
 
	tdrmp3_f4
;

485 
	$drmp3_have_simd
()

488 
	}
}

490 
	#DRMP3_HAVE_SIMD
 0

	)

491 #ifde‡
DR_MP3_ONLY_SIMD


492 #îr‹ 
DR_MP3_ONLY_SIMD
 
u£d
, 
but
 
SSE
/
NEON
 
nŸ
 
íabÀd


498 
	#DRMP3_HAVE_SIMD
 0

	)

503 c⁄° 
drmp3_uöt8
 *
	mbuf
;

504 
	mpos
, 
	mlimô
;

505 } 
	tdrmp3_bs
;

508 
	mscf
[3 * 64];

509 
drmp3_uöt8
 
	mtŸÆ_b™ds
, 
	m°îeo_b™ds
, 
	mbôÆloc
[64], 
	mscfcod
[64];

510 } 
	tdrmp3_L12_sˇÀ_öfo
;

513 
drmp3_uöt8
 
	mèb_off£t
, 
	mcode_èb_width
, 
	mb™d_cou¡
;

514 } 
	tdrmp3_L12_subb™d_Æloc
;

517 c⁄° 
drmp3_uöt8
 *
	msfbèb
;

518 
drmp3_uöt16
 
	m∑π_23_Àngth
, 
	mbig_vÆues
, 
	msˇÀÁc_com¥ess
;

519 
drmp3_uöt8
 
	mglobÆ_gaö
, 
	mblock_ty≥
, 
	mmixed_block_Êag
, 
	mn_l⁄g_sfb
, 
	mn_sh‹t_sfb
;

520 
drmp3_uöt8
 
	mèbÀ_£À˘
[3], 
	mªgi⁄_cou¡
[3], 
	msubblock_gaö
[3];

521 
drmp3_uöt8
 
	m¥eÊag
, 
	msˇÀÁc_sˇÀ
, 
	mcou¡1_èbÀ
, 
	mscfsi
;

522 } 
	tdrmp3_L3_gr_öfo
;

525 
drmp3_bs
 
	mbs
;

526 
drmp3_uöt8
 
	mmaöd©a
[
DRMP3_MAX_BITRESERVOIR_BYTES
 + 
DRMP3_MAX_L3_FRAME_PAYLOAD_BYTES
];

527 
drmp3_L3_gr_öfo
 
	mgr_öfo
[4];

528 
	mgrbuf
[2][576], 
	mscf
[40], 
	msyn
[18 + 15][2 * 32];

529 
drmp3_uöt8
 
	mi°_pos
[2][39];

530 } 
	tdrmp3dec_s¸©ch
;

532 
	$drmp3_bs_öô
(
drmp3_bs
 *
bs
, c⁄° 
drmp3_uöt8
 *
d©a
, 
byãs
) {

533 
bs
->
buf
 = 
d©a
;

534 
bs
->
pos
 = 0;

535 
bs
->
limô
 = 
byãs
 * 8;

536 
	}
}

538 
drmp3_uöt32
 
	$drmp3_bs_gë_bôs
(
drmp3_bs
 *
bs
, 
n
) {

539 
drmp3_uöt32
 
√xt
, 
ˇche
 = 0, 
s
 = 
bs
->
pos
 & 7;

540 
shl
 = 
n
 + 
s
;

541 c⁄° 
drmp3_uöt8
 *
p
 = 
bs
->
buf
 + (bs->
pos
 >> 3);

542 i‡((
bs
->
pos
 +
n
Ë> bs->
limô
)

544 
√xt
 = *
p
++ & (255 >> 
s
);

545 (
shl
 -= 8) > 0) {

546 
ˇche
 |
√xt
 << 
shl
;

547 
√xt
 = *
p
++;

549  
ˇche
 | (
√xt
 >> -
shl
);

550 
	}
}

552 
	$drmp3_hdr_vÆid
(c⁄° 
drmp3_uöt8
 *
h
) {

553  
h
[0] == 0xff &&

554 ((
h
[1] & 0xF0) == 0xf0 || (h[1] & 0xFE) == 0xe2) &&

555 (
	`DRMP3_HDR_GET_LAYER
(
h
) != 0) &&

556 (
	`DRMP3_HDR_GET_BITRATE
(
h
) != 15) &&

557 (
	`DRMP3_HDR_GET_SAMPLE_RATE
(
h
) != 3);

558 
	}
}

560 
	$drmp3_hdr_com∑ª
(c⁄° 
drmp3_uöt8
 *
h1
, c⁄° drmp3_uöt8 *
h2
) {

561  
	`drmp3_hdr_vÆid
(
h2
) &&

562 ((
h1
[1] ^ 
h2
[1]) & 0xFE) == 0 &&

563 ((
h1
[2] ^ 
h2
[2]) & 0x0C) == 0 &&

564 !(
	`DRMP3_HDR_IS_FREE_FORMAT
(
h1
Ë^ DRMP3_HDR_IS_FREE_FORMAT(
h2
));

565 
	}
}

567 
	$drmp3_hdr_bôøã_kbps
(c⁄° 
drmp3_uöt8
 *
h
) {

568 c⁄° 
drmp3_uöt8
 
hÆ‰©e
[2][3][15] = {

572  2 * 
hÆ‰©e
[!!
	`DRMP3_HDR_TEST_MPEG1
(
h
)][
	`DRMP3_HDR_GET_LAYER
(hË- 1][
	`DRMP3_HDR_GET_BITRATE
(h)];

573 
	}
}

575 
	$drmp3_hdr_ßm∂e_øã_hz
(c⁄° 
drmp3_uöt8
 *
h
) {

576 c⁄° 
g_hz
[3] = {44100, 48000, 32000};

577  
g_hz
[
	`DRMP3_HDR_GET_SAMPLE_RATE
(
h
)] >> (Ë!
	`DRMP3_HDR_TEST_MPEG1
(hË>> (Ë!
	`DRMP3_HDR_TEST_NOT_MPEG25
(h);

578 
	}
}

580 
	$drmp3_hdr_‰ame_ßm∂es
(c⁄° 
drmp3_uöt8
 *
h
) {

581  
	`DRMP3_HDR_IS_LAYER_1
(
h
Ë? 384 : (1152 >> (Ë
	`DRMP3_HDR_IS_FRAME_576
(h));

582 
	}
}

584 
	$drmp3_hdr_‰ame_byãs
(c⁄° 
drmp3_uöt8
 *
h
, 
‰ì_f‹m©_size
) {

585 
‰ame_byãs
 = 
	`drmp3_hdr_‰ame_ßm∂es
(
h
Ë* 
	`drmp3_hdr_bôøã_kbps
(hË* 125 / 
	`drmp3_hdr_ßm∂e_øã_hz
(h);

586 i‡(
	`DRMP3_HDR_IS_LAYER_1
(
h
)) {

587 
‰ame_byãs
 &= ~3;

589  
‰ame_byãs
 ? føme_byã†: 
‰ì_f‹m©_size
;

590 
	}
}

592 
	$drmp3_hdr_∑ddög
(c⁄° 
drmp3_uöt8
 *
h
) {

593  
	`DRMP3_HDR_TEST_PADDING
(
h
Ë? (
	`DRMP3_HDR_IS_LAYER_1
(h) ? 4 : 1) : 0;

594 
	}
}

596 #i‚de‡
DR_MP3_ONLY_MP3


598 c⁄° 
drmp3_L12_subb™d_Æloc
 *
	$drmp3_L12_subb™d_Æloc_èbÀ
(c⁄° 
drmp3_uöt8
 *
hdr
, 
drmp3_L12_sˇÀ_öfo
 *
sci
) {

599 c⁄° 
drmp3_L12_subb™d_Æloc
 *
Æloc
;

600 
mode
 = 
	`DRMP3_HDR_GET_STEREO_MODE
(
hdr
);

601 
nb™ds
, 
°îeo_b™ds
 = (
mode
 =
DRMP3_MODE_MONO
Ë? 0 : (modê=
DRMP3_MODE_JOINT_STEREO
) ?

602 (
	`DRMP3_HDR_GET_STEREO_MODE_EXT
(
hdr
) << 2) + 4 : 32;

604 i‡(
	`DRMP3_HDR_IS_LAYER_1
(
hdr
)) {

605 c⁄° 
drmp3_L12_subb™d_Æloc
 
g_Æloc_L1
[] = {{76, 4, 32}};

606 
Æloc
 = 
g_Æloc_L1
;

607 
nb™ds
 = 32;

608 } i‡(!
	`DRMP3_HDR_TEST_MPEG1
(
hdr
)) {

609 c⁄° 
drmp3_L12_subb™d_Æloc
 
g_Æloc_L2M2
[] = {{60, 4, 4},

612 
Æloc
 = 
g_Æloc_L2M2
;

613 
nb™ds
 = 30;

615 c⁄° 
drmp3_L12_subb™d_Æloc
 
g_Æloc_L2M1
[] = {{0, 4, 3},

619 
ßm∂e_øã_idx
 = 
	`DRMP3_HDR_GET_SAMPLE_RATE
(
hdr
);

620 
kbps
 = 
	`drmp3_hdr_bôøã_kbps
(
hdr
Ë>> (Ë(
mode
 !
DRMP3_MODE_MONO
);

621 i‡(!
kbps
)

623 
kbps
 = 192;

626 
Æloc
 = 
g_Æloc_L2M1
;

627 
nb™ds
 = 27;

628 i‡(
kbps
 < 56) {

629 c⁄° 
drmp3_L12_subb™d_Æloc
 
g_Æloc_L2M1_lowøã
[] = {{44, 4, 2},

631 
Æloc
 = 
g_Æloc_L2M1_lowøã
;

632 
nb™ds
 = 
ßm∂e_øã_idx
 == 2 ? 12 : 8;

633 } i‡(
kbps
 >96 && 
ßm∂e_øã_idx
 != 1) {

634 
nb™ds
 = 30;

638 
sci
->
tŸÆ_b™ds
 = (
drmp3_uöt8
Ë
nb™ds
;

639 
sci
->
°îeo_b™ds
 = (
drmp3_uöt8
Ë
	`DRMP3_MIN
(°îeo_b™ds, 
nb™ds
);

641  
Æloc
;

642 
	}
}

644 
	$drmp3_L12_ªad_sˇÀÁ˘‹s
(
drmp3_bs
 *
bs
, 
drmp3_uöt8
 *
pba
, drmp3_uöt8 *
scfcod
, 
b™ds
, *
scf
) {

645 c⁄° 
g_deq_L12
[18 * 3] = {

646 
	#DRMP3_DQ
(
x
Ë9.53674316e-07f/x, 7.56931807e-07f/x, 6.00777173e-07f/
	)
x

647 
	`DRMP3_DQ
(3), DRMP3_DQ(7), DRMP3_DQ(15), DRMP3_DQ(31), DRMP3_DQ(63), DRMP3_DQ(127), DRMP3_DQ(255),

648 
	`DRMP3_DQ
(511), DRMP3_DQ(1023), DRMP3_DQ(2047), DRMP3_DQ(4095), DRMP3_DQ(8191), DRMP3_DQ(16383),

649 
	`DRMP3_DQ
(32767), DRMP3_DQ(65535), DRMP3_DQ(3), DRMP3_DQ(5), DRMP3_DQ(9)

651 
i
, 
m
;

652 
i
 = 0; i < 
b™ds
; i++) {

653 
s
 = 0;

654 
ba
 = *
pba
++;

655 
mask
 = 
ba
 ? 4 + ((19 >> 
scfcod
[
i
]) & 3) : 0;

656 
m
 = 4; m; m >>= 1) {

657 i‡(
mask
 & 
m
) {

658 
b
 = 
	`drmp3_bs_gë_bôs
(
bs
, 6);

659 
s
 = 
g_deq_L12
[
ba
 * 3 - 6 + 
b
 % 3] * (1 << 21 >> b / 3);

661 *
scf
++ = 
s
;

664 
	}
}

666 
	$drmp3_L12_ªad_sˇÀ_öfo
(c⁄° 
drmp3_uöt8
 *
hdr
, 
drmp3_bs
 *
bs
, 
drmp3_L12_sˇÀ_öfo
 *
sci
) {

667 c⁄° 
drmp3_uöt8
 
g_bôÆloc_code_èb
[] = {

676 c⁄° 
drmp3_L12_subb™d_Æloc
 *
subb™d_Æloc
 = 
	`drmp3_L12_subb™d_Æloc_èbÀ
(
hdr
, 
sci
);

678 
i
, 
k
 = 0, 
ba_bôs
 = 0;

679 c⁄° 
drmp3_uöt8
 *
ba_code_èb
 = 
g_bôÆloc_code_èb
;

681 
i
 = 0; i < 
sci
->
tŸÆ_b™ds
; i++) {

682 
drmp3_uöt8
 
ba
;

683 i‡(
i
 =
k
) {

684 
k
 +
subb™d_Æloc
->
b™d_cou¡
;

685 
ba_bôs
 = 
subb™d_Æloc
->
code_èb_width
;

686 
ba_code_èb
 = 
g_bôÆloc_code_èb
 + 
subb™d_Æloc
->
èb_off£t
;

687 
subb™d_Æloc
++;

689 
ba
 = 
ba_code_èb
[
	`drmp3_bs_gë_bôs
(
bs
, 
ba_bôs
)];

690 
sci
->
bôÆloc
[2 * 
i
] = 
ba
;

691 i‡(
i
 < 
sci
->
°îeo_b™ds
) {

692 
ba
 = 
ba_code_èb
[
	`drmp3_bs_gë_bôs
(
bs
, 
ba_bôs
)];

694 
sci
->
bôÆloc
[2 * 
i
 + 1] = sci->
°îeo_b™ds
 ? 
ba
 : 0;

697 
i
 = 0; i < 2 * 
sci
->
tŸÆ_b™ds
; i++) {

698 
sci
->
scfcod
[
i
] = (
drmp3_uöt8
Ë(sci->
bôÆloc
[i] ? 
	`DRMP3_HDR_IS_LAYER_1
(
hdr
Ë? 2 : 
	`drmp3_bs_gë_bôs
(
bs
, 2)

702 
	`drmp3_L12_ªad_sˇÀÁ˘‹s
(
bs
, 
sci
->
bôÆloc
, sci->
scfcod
, sci->
tŸÆ_b™ds
 * 2, sci->
scf
);

704 
i
 = 
sci
->
°îeo_b™ds
; i < sci->
tŸÆ_b™ds
; i++) {

705 
sci
->
bôÆloc
[2 * 
i
 + 1] = 0;

707 
	}
}

709 
	$drmp3_L12_dequ™tize_gønuÀ
(*
grbuf
, 
drmp3_bs
 *
bs
, 
drmp3_L12_sˇÀ_öfo
 *
sci
, 
group_size
) {

710 
i
, 
j
, 
k
, 
choff
 = 576;

711 
j
 = 0; j < 4; j++) {

712 *
d°
 = 
grbuf
 + 
group_size
 * 
j
;

713 
i
 = 0; i < 2 * 
sci
->
tŸÆ_b™ds
; i++) {

714 
ba
 = 
sci
->
bôÆloc
[
i
];

715 i‡(
ba
 != 0) {

716 i‡(
ba
 < 17) {

717 
hÆf
 = (1 << (
ba
 - 1)) - 1;

718 
k
 = 0; k < 
group_size
; k++) {

719 
d°
[
k
] = (Ë((Ë
	`drmp3_bs_gë_bôs
(
bs
, 
ba
Ë- 
hÆf
);

722 
mod
 = (2 << (
ba
 - 17)) + 1;

723 
code
 = 
	`drmp3_bs_gë_bôs
(
bs
, 
mod
 + 2 - (mod >> 3));

724 
k
 = 0; k < 
group_size
; k++, 
code
 /
mod
) {

725 
d°
[
k
] = (Ë((Ë(
code
 % 
mod
 - mod / 2));

729 
d°
 +
choff
;

730 
choff
 = 18 - choff;

733  
group_size
 * 4;

734 
	}
}

736 
	$drmp3_L12_≠∂y_scf_384
(
drmp3_L12_sˇÀ_öfo
 *
sci
, c⁄° *
scf
, *
d°
) {

737 
i
, 
k
;

738 
	`mem˝y
(
d°
 + 576 + 
sci
->
°îeo_b™ds
 * 18, dst + sci->stereo_bands * 18,

739 (
sci
->
tŸÆ_b™ds
 - sci->
°îeo_b™ds
) * 18 * ());

740 
i
 = 0; i < 
sci
->
tŸÆ_b™ds
; i++, 
d°
 +18, 
scf
 += 6) {

741 
k
 = 0; k < 12; k++) {

742 
d°
[
k
 + 0] *
scf
[0];

743 
d°
[
k
 + 576] *
scf
[3];

746 
	}
}

750 
	$drmp3_L3_ªad_side_öfo
(
drmp3_bs
 *
bs
, 
drmp3_L3_gr_öfo
 *
gr
, c⁄° 
drmp3_uöt8
 *
hdr
) {

751 c⁄° 
drmp3_uöt8
 
g_scf_l⁄g
[8][23] = {

761 c⁄° 
drmp3_uöt8
 
g_scf_sh‹t
[8][40] = {

771 c⁄° 
drmp3_uöt8
 
g_scf_mixed
[8][40] = {

782 
èbÀs
, 
scfsi
 = 0;

783 
maö_d©a_begö
, 
∑π_23_sum
 = 0;

784 
§_idx
 = 
	`DRMP3_HDR_GET_MY_SAMPLE_RATE
(
hdr
);

785 
§_idx
 -= (sr_idx != 0);

786 
gr_cou¡
 = 
	`DRMP3_HDR_IS_MONO
(
hdr
) ? 1 : 2;

788 i‡(
	`DRMP3_HDR_TEST_MPEG1
(
hdr
)) {

789 
gr_cou¡
 *= 2;

790 
maö_d©a_begö
 = 
	`drmp3_bs_gë_bôs
(
bs
, 9);

791 
scfsi
 = 
	`drmp3_bs_gë_bôs
(
bs
, 7 + 
gr_cou¡
);

793 
maö_d©a_begö
 = 
	`drmp3_bs_gë_bôs
(
bs
, 8 + 
gr_cou¡
) >> gr_count;

797 i‡(
	`DRMP3_HDR_IS_MONO
(
hdr
)) {

798 
scfsi
 <<= 4;

800 
gr
->
∑π_23_Àngth
 = (
drmp3_uöt16
Ë
	`drmp3_bs_gë_bôs
(
bs
, 12);

801 
∑π_23_sum
 +
gr
->
∑π_23_Àngth
;

802 
gr
->
big_vÆues
 = (
drmp3_uöt16
Ë
	`drmp3_bs_gë_bôs
(
bs
, 9);

803 i‡(
gr
->
big_vÆues
 > 288) {

806 
gr
->
globÆ_gaö
 = (
drmp3_uöt8
Ë
	`drmp3_bs_gë_bôs
(
bs
, 8);

807 
gr
->
sˇÀÁc_com¥ess
 = (
drmp3_uöt16
Ë
	`drmp3_bs_gë_bôs
(
bs
, 
	`DRMP3_HDR_TEST_MPEG1
(
hdr
) ? 4 : 9);

808 
gr
->
sfbèb
 = 
g_scf_l⁄g
[
§_idx
];

809 
gr
->
n_l⁄g_sfb
 = 22;

810 
gr
->
n_sh‹t_sfb
 = 0;

811 i‡(
	`drmp3_bs_gë_bôs
(
bs
, 1)) {

812 
gr
->
block_ty≥
 = (
drmp3_uöt8
Ë
	`drmp3_bs_gë_bôs
(
bs
, 2);

813 i‡(!
gr
->
block_ty≥
) {

816 
gr
->
mixed_block_Êag
 = (
drmp3_uöt8
Ë
	`drmp3_bs_gë_bôs
(
bs
, 1);

817 
gr
->
ªgi⁄_cou¡
[0] = 7;

818 
gr
->
ªgi⁄_cou¡
[1] = 255;

819 i‡(
gr
->
block_ty≥
 =
DRMP3_SHORT_BLOCK_TYPE
) {

820 
scfsi
 &= 0x0F0F;

821 i‡(!
gr
->
mixed_block_Êag
) {

822 
gr
->
ªgi⁄_cou¡
[0] = 8;

823 
gr
->
sfbèb
 = 
g_scf_sh‹t
[
§_idx
];

824 
gr
->
n_l⁄g_sfb
 = 0;

825 
gr
->
n_sh‹t_sfb
 = 39;

827 
gr
->
sfbèb
 = 
g_scf_mixed
[
§_idx
];

828 
gr
->
n_l⁄g_sfb
 = 
	`DRMP3_HDR_TEST_MPEG1
(
hdr
) ? 8 : 6;

829 
gr
->
n_sh‹t_sfb
 = 30;

832 
èbÀs
 = 
	`drmp3_bs_gë_bôs
(
bs
, 10);

833 
èbÀs
 <<= 5;

834 
gr
->
subblock_gaö
[0] = (
drmp3_uöt8
Ë
	`drmp3_bs_gë_bôs
(
bs
, 3);

835 
gr
->
subblock_gaö
[1] = (
drmp3_uöt8
Ë
	`drmp3_bs_gë_bôs
(
bs
, 3);

836 
gr
->
subblock_gaö
[2] = (
drmp3_uöt8
Ë
	`drmp3_bs_gë_bôs
(
bs
, 3);

838 
gr
->
block_ty≥
 = 0;

839 
gr
->
mixed_block_Êag
 = 0;

840 
èbÀs
 = 
	`drmp3_bs_gë_bôs
(
bs
, 15);

841 
gr
->
ªgi⁄_cou¡
[0] = (
drmp3_uöt8
Ë
	`drmp3_bs_gë_bôs
(
bs
, 4);

842 
gr
->
ªgi⁄_cou¡
[1] = (
drmp3_uöt8
Ë
	`drmp3_bs_gë_bôs
(
bs
, 3);

843 
gr
->
ªgi⁄_cou¡
[2] = 255;

845 
gr
->
èbÀ_£À˘
[0] = (
drmp3_uöt8
Ë(
èbÀs
 >> 10);

846 
gr
->
èbÀ_£À˘
[1] = (
drmp3_uöt8
Ë((
èbÀs
 >> 5) & 31);

847 
gr
->
èbÀ_£À˘
[2] = (
drmp3_uöt8
Ë((
èbÀs
) & 31);

848 
gr
->
¥eÊag
 = (
drmp3_uöt8
Ë(
	`DRMP3_HDR_TEST_MPEG1
(
hdr
Ë? 
	`drmp3_bs_gë_bôs
(
bs
, 1Ë: (gr->
sˇÀÁc_com¥ess
 >=

850 
gr
->
sˇÀÁc_sˇÀ
 = (
drmp3_uöt8
Ë
	`drmp3_bs_gë_bôs
(
bs
, 1);

851 
gr
->
cou¡1_èbÀ
 = (
drmp3_uöt8
Ë
	`drmp3_bs_gë_bôs
(
bs
, 1);

852 
gr
->
scfsi
 = (
drmp3_uöt8
) ((scfsi >> 12) & 15);

853 
scfsi
 <<= 4;

854 
gr
++;

855 } --
gr_cou¡
);

857 i‡(
∑π_23_sum
 + 
bs
->
pos
 > bs->
limô
 + 
maö_d©a_begö
 * 8) {

861  
maö_d©a_begö
;

862 
	}
}

864 
	$drmp3_L3_ªad_sˇÀÁ˘‹s
(
drmp3_uöt8
 *
scf
, drmp3_uöt8 *
i°_pos
, c⁄° drmp3_uöt8 *
scf_size
,

865 c⁄° 
drmp3_uöt8
 *
scf_cou¡
, 
drmp3_bs
 *
bôbuf
, 
scfsi
) {

866 
i
, 
k
;

867 
i
 = 0; i < 4 && 
scf_cou¡
[i]; i++, 
scfsi
 *= 2) {

868 
˙t
 = 
scf_cou¡
[
i
];

869 i‡(
scfsi
 & 8) {

870 
	`mem˝y
(
scf
, 
i°_pos
, 
˙t
);

872 
bôs
 = 
scf_size
[
i
];

873 i‡(!
bôs
) {

874 
	`mem£t
(
scf
, 0, 
˙t
);

875 
	`mem£t
(
i°_pos
, 0, 
˙t
);

877 
max_scf
 = (
scfsi
 < 0Ë? (1 << 
bôs
) - 1 : -1;

878 
k
 = 0; k < 
˙t
; k++) {

879 
s
 = 
	`drmp3_bs_gë_bôs
(
bôbuf
, 
bôs
);

880 
i°_pos
[
k
] = (
drmp3_uöt8
Ë(
s
 =
max_scf
 ? -1 : s);

881 
scf
[
k
] = (
drmp3_uöt8
Ë
s
;

885 
i°_pos
 +
˙t
;

886 
scf
 +
˙t
;

888 
scf
[0] = scf[1] = scf[2] = 0;

889 
	}
}

891 
	$drmp3_L3_ldexp_q2
(
y
, 
exp_q2
) {

892 c⁄° 
g_exp‰ac
[4] = {9.31322575e-10f, 7.83145814e-10f, 6.58544508e-10f, 5.53767716e-10f};

893 
e
;

895 
e
 = 
	`DRMP3_MIN
(30 * 4, 
exp_q2
);

896 
y
 *
g_exp‰ac
[
e
 & 3] * (1 << 30 >> (e >> 2));

897 } (
exp_q2
 -
e
) > 0);

898  
y
;

899 
	}
}

902 
	$drmp3_L3_decode_sˇÀÁ˘‹s
(c⁄° 
drmp3_uöt8
 *
hdr
, drmp3_uöt8 *
i°_pos
, 
drmp3_bs
 *
bs
, c⁄° 
drmp3_L3_gr_öfo
 *
gr
,

903 *
scf
, 
ch
) {

904 c⁄° 
drmp3_uöt8
 
g_scf_∑πôi⁄s
[3][28] = {

909 c⁄° 
drmp3_uöt8
 *
scf_∑πôi⁄
 = 
g_scf_∑πôi⁄s
[!!
gr
->
n_sh‹t_sfb
 + !gr->
n_l⁄g_sfb
];

910 
drmp3_uöt8
 
scf_size
[4], 
iscf
[40];

911 
i
, 
scf_shi·
 = 
gr
->
sˇÀÁc_sˇÀ
 + 1, 
gaö_exp
, 
scfsi
 = gr->scfsi;

912 
gaö
;

914 i‡(
	`DRMP3_HDR_TEST_MPEG1
(
hdr
)) {

915 c⁄° 
drmp3_uöt8
 
g_scfc_decode
[16] = {0, 1, 2, 3, 12, 5, 6, 7, 9, 10, 11, 13, 14, 15, 18, 19};

916 
∑π
 = 
g_scfc_decode
[
gr
->
sˇÀÁc_com¥ess
];

917 
scf_size
[1] = scf_size[0] = (
drmp3_uöt8
Ë(
∑π
 >> 2);

918 
scf_size
[3] = scf_size[2] = (
drmp3_uöt8
Ë(
∑π
 & 3);

920 c⁄° 
drmp3_uöt8
 
g_mod
[

922 
k
, 
mod¥od
, 
sfc
, 
i°
 = 
	`DRMP3_HDR_TEST_I_STEREO
(
hdr
Ë&& 
ch
;

923 
sfc
 = 
gr
->
sˇÀÁc_com¥ess
 >> 
i°
;

924 
k
 = 
i°
 * 3 * 4; 
sfc
 >0; sf¯-
mod¥od
, k += 4) {

925 
mod¥od
 = 1, 
i
 = 3; i >= 0; i--) {

926 
scf_size
[
i
] = (
drmp3_uöt8
Ë(
sfc
 / 
mod¥od
 % 
g_mod
[
k
 + i]);

927 
mod¥od
 *
g_mod
[
k
 + 
i
];

930 
scf_∑πôi⁄
 +
k
;

931 
scfsi
 = -16;

933 
	`drmp3_L3_ªad_sˇÀÁ˘‹s
(
iscf
, 
i°_pos
, 
scf_size
, 
scf_∑πôi⁄
, 
bs
, 
scfsi
);

935 i‡(
gr
->
n_sh‹t_sfb
) {

936 
sh
 = 3 - 
scf_shi·
;

937 
i
 = 0; i < 
gr
->
n_sh‹t_sfb
; i += 3) {

938 
iscf
[
gr
->
n_l⁄g_sfb
 + 
i
 + 0] +gr->
subblock_gaö
[0] << 
sh
;

939 
iscf
[
gr
->
n_l⁄g_sfb
 + 
i
 + 1] +gr->
subblock_gaö
[1] << 
sh
;

940 
iscf
[
gr
->
n_l⁄g_sfb
 + 
i
 + 2] +gr->
subblock_gaö
[2] << 
sh
;

942 } i‡(
gr
->
¥eÊag
) {

943 c⁄° 
drmp3_uöt8
 
g_¥ómp
[10] = {1, 1, 1, 1, 2, 2, 3, 3, 3, 2};

944 
i
 = 0; i < 10; i++) {

945 
iscf
[11 + 
i
] +
g_¥ómp
[i];

949 
gaö_exp
 = 
gr
->
globÆ_gaö
 + 
DRMP3_BITS_DEQUANTIZER_OUT
 * 4 - 210 - (
	`DRMP3_HDR_IS_MS_STEREO
(
hdr
) ? 2 : 0);

950 
gaö
 = 
	`drmp3_L3_ldexp_q2
(1 << (
DRMP3_MAX_SCFI
 / 4), DRMP3_MAX_SCFI - 
gaö_exp
);

951 
i
 = 0; i < (Ë(
gr
->
n_l⁄g_sfb
 + gr->
n_sh‹t_sfb
); i++) {

952 
scf
[
i
] = 
	`drmp3_L3_ldexp_q2
(
gaö
, 
iscf
[i] << 
scf_shi·
);

954 
	}
}

956 c⁄° 
	gg_drmp3_pow43
[129 + 16] = {

977 
	$drmp3_L3_pow_43
(
x
) {

978 
‰ac
;

979 
sign
, 
mu…
 = 256;

981 i‡(
x
 < 129) {

982  
g_drmp3_pow43
[16 + 
x
];

985 i‡(
x
 < 1024) {

986 
mu…
 = 16;

987 
x
 <<= 3;

990 
sign
 = 2 * 
x
 & 64;

991 
‰ac
 = (Ë((
x
 & 63Ë- 
sign
) / ((x & ~63) + sign);

992  
g_drmp3_pow43
[16 + ((
x
 + 
sign
Ë>> 6)] * (1.‡+ 
‰ac
 * ((4.‡/ 3Ë+ fø¯* (2.‡/ 9))Ë* 
mu…
;

993 
	}
}

996 
	$drmp3_L3_huffm™
(*
d°
, 
drmp3_bs
 *
bs
, c⁄° 
drmp3_L3_gr_öfo
 *
gr_öfo
, c⁄° *
scf
, 
œyî3gr_limô
) {

997 c⁄° 
drmp3_öt16
 
èbs
[] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

1155 c⁄° 
drmp3_uöt8
 
èb32
[] = {130, 162, 193, 209, 44, 28, 76, 140, 9, 9, 9, 9, 9, 9, 9, 9, 190, 254, 222, 238,

1157 c⁄° 
drmp3_uöt8
 
èb33
[] = {252, 236, 220, 204, 188, 172, 156, 140, 124, 108, 92, 76, 60, 44, 28, 12};

1158 c⁄° 
drmp3_öt16
 
èbödex
[

1161 c⁄° 
drmp3_uöt8
 
g_löbôs
[] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 8, 10, 13, 4,

1164 
	#DRMP3_PEEK_BITS
(
n
Ë(
bs_ˇche
 >> (32 -Ç))

	)

1165 
	#DRMP3_FLUSH_BITS
(
n
Ë{ 
bs_ˇche
 <<“); 
bs_sh
 +“); }

	)

1166 
	#DRMP3_CHECK_BITS
 
bs_sh
 >0Ë{ 
bs_ˇche
 |(
drmp3_uöt32
)*
bs_√xt_±r
++ << bs_sh; bs_sh -8; }

	)

1167 
	#DRMP3_BSPOS
 ((
bs_√xt_±r
 - 
bs
->
buf
)*8 - 24 + 
bs_sh
)

	)

1169 
⁄e
 = 0.0f;

1170 
úeg
 = 0, 
big_vÆ_˙t
 = 
gr_öfo
->
big_vÆues
;

1171 c⁄° 
drmp3_uöt8
 *
sfb
 = 
gr_öfo
->
sfbèb
;

1172 c⁄° 
drmp3_uöt8
 *
bs_√xt_±r
 = 
bs
->
buf
 + bs->
pos
 / 8;

1173 
drmp3_uöt32
 
bs_ˇche
 = (((
bs_√xt_±r
[0] * 256u + bs_next_ptr[1]) * 256u + bs_next_ptr[2]) * 256u + bs_next_ptr[3])

1174 << (
bs
->
pos
 & 7);

1175 
∑ús_to_decode
, 
≈
, 
bs_sh
 = (
bs
->
pos
 & 7) - 8;

1176 
bs_√xt_±r
 += 4;

1178 
big_vÆ_˙t
 > 0) {

1179 
èb_num
 = 
gr_öfo
->
èbÀ_£À˘
[
úeg
];

1180 
sfb_˙t
 = 
gr_öfo
->
ªgi⁄_cou¡
[
úeg
++];

1181 c⁄° 
drmp3_öt16
 *
codebook
 = 
èbs
 + 
èbödex
[
èb_num
];

1182 
löbôs
 = 
g_löbôs
[
èb_num
];

1184 
≈
 = *
sfb
++ / 2;

1185 
∑ús_to_decode
 = 
	`DRMP3_MIN
(
big_vÆ_˙t
, 
≈
);

1186 
⁄e
 = *
scf
++;

1188 
j
, 
w
 = 5;

1189 
Àaf
 = 
codebook
[
	`DRMP3_PEEK_BITS
(
w
)];

1190 
Àaf
 < 0) {

1191 
	`DRMP3_FLUSH_BITS
(
w
);

1192 
w
 = 
Àaf
 & 7;

1193 
Àaf
 = 
codebook
[
	`DRMP3_PEEK_BITS
(
w
) - (leaf >> 3)];

1195 
	`DRMP3_FLUSH_BITS
(
Àaf
 >> 8);

1197 
j
 = 0; j < 2; j++, 
d°
++, 
Àaf
 >>= 4) {

1198 
lsb
 = 
Àaf
 & 0x0F;

1199 i‡(
lsb
 =15 && 
löbôs
) {

1200 
lsb
 +
	`DRMP3_PEEK_BITS
(
löbôs
);

1201 
	`DRMP3_FLUSH_BITS
(
löbôs
);

1202 
DRMP3_CHECK_BITS
;

1203 *
d°
 = 
⁄e
 * 
	`drmp3_L3_pow_43
(
lsb
Ë* ((
öt32_t
Ë
bs_ˇche
 < 0 ? -1 : 1);

1205 *
d°
 = 
g_drmp3_pow43
[16 + 
lsb
 - 16 * (
bs_ˇche
 >> 31)] * 
⁄e
;

1207 
	`DRMP3_FLUSH_BITS
(
lsb
 ? 1 : 0);

1209 
DRMP3_CHECK_BITS
;

1210 } --
∑ús_to_decode
);

1211 } (
big_vÆ_˙t
 -
≈
Ë> 0 && --
sfb_˙t
 >= 0);

1214 
≈
 = 1 - 
big_vÆ_˙t
;; 
d°
 += 4) {

1215 c⁄° 
drmp3_uöt8
 *
codebook_cou¡1
 = (
gr_öfo
->
cou¡1_èbÀ
Ë? 
èb33
 : 
èb32
;

1216 
Àaf
 = 
codebook_cou¡1
[
	`DRMP3_PEEK_BITS
(4)];

1217 i‡(!(
Àaf
 & 8)) {

1218 
Àaf
 = 
codebook_cou¡1
[÷ó‡>> 3Ë+ (
bs_ˇche
 << 4 >> (32 - (leaf & 3)))];

1220 
	`DRMP3_FLUSH_BITS
(
Àaf
 & 7);

1221 i‡(
DRMP3_BSPOS
 > 
œyî3gr_limô
) {

1224 
	#DRMP3_RELOAD_SCALEFACTOR
 i‡(!--
≈
Ë{Ç∞*
sfb
++/2; i‡(!≈Ë; 
⁄e
 = *
scf
++; }

	)

1225 
	#DRMP3_DEQ_COUNT1
(
s
Ëi‡(
Àaf
 & (128 >> s)Ë{ 
d°
[s] = ((
drmp3_öt32
)
bs_ˇche
 < 0Ë? -
⁄e
 : o√; 
	`DRMP3_FLUSH_BITS
(1Ë}

	)

1226 
DRMP3_RELOAD_SCALEFACTOR
;

1227 
	`DRMP3_DEQ_COUNT1
(0);

1228 
	`DRMP3_DEQ_COUNT1
(1);

1229 
DRMP3_RELOAD_SCALEFACTOR
;

1230 
	`DRMP3_DEQ_COUNT1
(2);

1231 
	`DRMP3_DEQ_COUNT1
(3);

1232 
DRMP3_CHECK_BITS
;

1235 
bs
->
pos
 = 
œyî3gr_limô
;

1236 
	}
}

1238 
	$drmp3_L3_midside_°îeo
(*
À·
, 
n
) {

1239 
i
 = 0;

1240 *
right
 = 
À·
 + 576;

1241 #i‡
DRMP3_HAVE_SIMD


1242 i‡(
	`drmp3_have_simd
())

1243 ; 
i
 < 
n
 - 3; i += 4) {

1244 
drmp3_f4
 
vl
 = 
	`DRMP3_VLD
(
À·
 + 
i
);

1245 
drmp3_f4
 
vr
 = 
	`DRMP3_VLD
(
right
 + 
i
);

1246 
	`DRMP3_VSTORE
(
À·
 + 
i
, 
	`DRMP3_VADD
(
vl
, 
vr
));

1247 
	`DRMP3_VSTORE
(
right
 + 
i
, 
	`DRMP3_VSUB
(
vl
, 
vr
));

1250 ; 
i
 < 
n
; i++) {

1251 
a
 = 
À·
[
i
];

1252 
b
 = 
right
[
i
];

1253 
À·
[
i
] = 
a
 + 
b
;

1254 
right
[
i
] = 
a
 - 
b
;

1256 
	}
}

1258 
	$drmp3_L3_öãnsôy_°îeo_b™d
(*
À·
, 
n
, 
kl
, 
kr
) {

1259 
i
;

1260 
i
 = 0; i < 
n
; i++) {

1261 
À·
[
i
 + 576] =Üe·[i] * 
kr
;

1262 
À·
[
i
] =Üe·[i] * 
kl
;

1264 
	}
}

1266 
	$drmp3_L3_°îeo_t›_b™d
(c⁄° *
right
, c⁄° 
drmp3_uöt8
 *
sfb
, 
nb™ds
, 
max_b™d
[3]) {

1267 
i
, 
k
;

1269 
max_b™d
[0] = max_band[1] = max_band[2] = -1;

1271 
i
 = 0; i < 
nb™ds
; i++) {

1272 
k
 = 0; k < 
sfb
[
i
]; k += 2) {

1273 i‡(
right
[
k
] != 0 ||Ñight[k + 1] != 0) {

1274 
max_b™d
[
i
 % 3] = i;

1278 
right
 +
sfb
[
i
];

1280 
	}
}

1283 
	$drmp3_L3_°îeo_¥o˚ss
(*
À·
, c⁄° 
drmp3_uöt8
 *
i°_pos
, c⁄° drmp3_uöt8 *
sfb
, c⁄° drmp3_uöt8 *
hdr
,

1284 
max_b™d
[3], 
m≥g2_sh
) {

1285 c⁄° 
g_∑n
[

1288 
i
, 
max_pos
 = 
	`DRMP3_HDR_TEST_MPEG1
(
hdr
) ? 7 : 64;

1290 
i
 = 0; 
sfb
[i]; i++) {

1291 
ùos
 = 
i°_pos
[
i
];

1292 i‡((Ë
i
 > 
max_b™d
[ò% 3] && 
ùos
 < 
max_pos
) {

1293 
kl
, 
kr
, 
s
 = 
	`DRMP3_HDR_TEST_MS_STEREO
(
hdr
) ? 1.41421356f : 1;

1294 i‡(
	`DRMP3_HDR_TEST_MPEG1
(
hdr
)) {

1295 
kl
 = 
g_∑n
[2 * 
ùos
];

1296 
kr
 = 
g_∑n
[2 * 
ùos
 + 1];

1298 
kl
 = 1;

1299 
kr
 = 
	`drmp3_L3_ldexp_q2
(1, (
ùos
 + 1Ë>> 1 << 
m≥g2_sh
);

1300 i‡(
ùos
 & 1) {

1301 
kl
 = 
kr
;

1302 
kr
 = 1;

1305 
	`drmp3_L3_öãnsôy_°îeo_b™d
(
À·
, 
sfb
[
i
], 
kl
 * 
s
, 
kr
 * s);

1306 } i‡(
	`DRMP3_HDR_TEST_MS_STEREO
(
hdr
)) {

1307 
	`drmp3_L3_midside_°îeo
(
À·
, 
sfb
[
i
]);

1309 
À·
 +
sfb
[
i
];

1311 
	}
}

1314 
	$drmp3_L3_öãnsôy_°îeo
(*
À·
, 
drmp3_uöt8
 *
i°_pos
, c⁄° 
drmp3_L3_gr_öfo
 *
gr
, c⁄° drmp3_uöt8 *
hdr
) {

1315 
max_b™d
[3], 
n_sfb
 = 
gr
->
n_l⁄g_sfb
 + gr->
n_sh‹t_sfb
;

1316 
i
, 
max_blocks
 = 
gr
->
n_sh‹t_sfb
 ? 3 : 1;

1318 
	`drmp3_L3_°îeo_t›_b™d
(
À·
 + 576, 
gr
->
sfbèb
, 
n_sfb
, 
max_b™d
);

1319 i‡(
gr
->
n_l⁄g_sfb
) {

1320 
max_b™d
[0] = max_b™d[1] = max_b™d[2] = 
	`DRMP3_MAX
(DRMP3_MAX(max_band[0], max_band[1]), max_band[2]);

1322 
i
 = 0; i < 
max_blocks
; i++) {

1323 
deÁu…_pos
 = 
	`DRMP3_HDR_TEST_MPEG1
(
hdr
) ? 3 : 0;

1324 
ô›
 = 
n_sfb
 - 
max_blocks
 + 
i
;

1325 
¥ev
 = 
ô›
 - 
max_blocks
;

1326 
i°_pos
[
ô›
] = (
drmp3_uöt8
Ë(
max_b™d
[
i
] >
¥ev
 ? 
deÁu…_pos
 : ist_pos[prev]);

1328 
	`drmp3_L3_°îeo_¥o˚ss
(
À·
, 
i°_pos
, 
gr
->
sfbèb
, 
hdr
, 
max_b™d
, gr[1].
sˇÀÁc_com¥ess
 & 1);

1329 
	}
}

1331 
	$drmp3_L3_ª‹dî
(*
grbuf
, *
s¸©ch
, c⁄° 
drmp3_uöt8
 *
sfb
) {

1332 
i
, 
Àn
;

1333 *
§c
 = 
grbuf
, *
d°
 = 
s¸©ch
;

1335 ; 0 !(
Àn
 = *
sfb
); sfb +3, 
§c
 += 2 *Üen) {

1336 
i
 = 0; i < 
Àn
; i++, 
§c
++) {

1337 *
d°
++ = 
§c
[0 * 
Àn
];

1338 *
d°
++ = 
§c
[1 * 
Àn
];

1339 *
d°
++ = 
§c
[2 * 
Àn
];

1342 
	`mem˝y
(
grbuf
, 
s¸©ch
, (
d°
 - scratch) * ());

1343 
	}
}

1345 
	$drmp3_L3_™tülüs
(*
grbuf
, 
nb™ds
) {

1346 c⁄° 
g_Ø
[2][8] = {

1351 ; 
nb™ds
 > 0;Çb™ds--, 
grbuf
 += 18) {

1352 
i
 = 0;

1353 #i‡
DRMP3_HAVE_SIMD


1354 i‡(
	`drmp3_have_simd
())

1355 ; 
i
 < 8; i += 4) {

1356 
drmp3_f4
 
vu
 = 
	`DRMP3_VLD
(
grbuf
 + 18 + 
i
);

1357 
drmp3_f4
 
vd
 = 
	`DRMP3_VLD
(
grbuf
 + 14 - 
i
);

1358 
drmp3_f4
 
vc0
 = 
	`DRMP3_VLD
(
g_Ø
[0] + 
i
);

1359 
drmp3_f4
 
vc1
 = 
	`DRMP3_VLD
(
g_Ø
[1] + 
i
);

1360 
vd
 = 
	`DRMP3_VREV
(vd);

1361 
	`DRMP3_VSTORE
(
grbuf
 + 18 + 
i
, 
	`DRMP3_VSUB
(
	`DRMP3_VMUL
(
vu
, 
vc0
), DRMP3_VMUL(
vd
, 
vc1
)));

1362 
vd
 = 
	`DRMP3_VADD
(
	`DRMP3_VMUL
(
vu
, 
vc1
), DRMP3_VMUL(vd, 
vc0
));

1363 
	`DRMP3_VSTORE
(
grbuf
 + 14 - 
i
, 
	`DRMP3_VREV
(
vd
));

1366 #i‚de‡
DR_MP3_ONLY_SIMD


1367 ; 
i
 < 8; i++)

1369 
u
 = 
grbuf
[18 + 
i
];

1370 
d
 = 
grbuf
[17 - 
i
];

1371 
grbuf
[18 + 
i
] = 
u
*
g_Ø
[0][i] - 
d
*g_aa[1][i];

1372 
grbuf
[17 - 
i
] = 
u
*
g_Ø
[1][i] + 
d
*g_aa[0][i];

1376 
	}
}

1378 
	$drmp3_L3_d˘3_9
(*
y
) {

1379 
s0
, 
s1
, 
s2
, 
s3
, 
s4
, 
s5
, 
s6
, 
s7
, 
s8
, 
t0
, 
t2
, 
t4
;

1381 
s0
 = 
y
[0];

1382 
s2
 = 
y
[2];

1383 
s4
 = 
y
[4];

1384 
s6
 = 
y
[6];

1385 
s8
 = 
y
[8];

1386 
t0
 = 
s0
 + 
s6
 * 0.5f;

1387 
s0
 -
s6
;

1388 
t4
 = (
s4
 + 
s2
) * 0.93969262f;

1389 
t2
 = (
s8
 + 
s2
) * 0.76604444f;

1390 
s6
 = (
s4
 - 
s8
) * 0.17364818f;

1391 
s4
 +
s8
 - 
s2
;

1393 
s2
 = 
s0
 - 
s4
 * 0.5f;

1394 
y
[4] = 
s4
 + 
s0
;

1395 
s8
 = 
t0
 - 
t2
 + 
s6
;

1396 
s0
 = 
t0
 - 
t4
 + 
t2
;

1397 
s4
 = 
t0
 + 
t4
 - 
s6
;

1399 
s1
 = 
y
[1];

1400 
s3
 = 
y
[3];

1401 
s5
 = 
y
[5];

1402 
s7
 = 
y
[7];

1404 
s3
 *= 0.86602540f;

1405 
t0
 = (
s5
 + 
s1
) * 0.98480775f;

1406 
t4
 = (
s5
 - 
s7
) * 0.34202014f;

1407 
t2
 = (
s1
 + 
s7
) * 0.64278761f;

1408 
s1
 = (s1 - 
s5
 - 
s7
) * 0.86602540f;

1410 
s5
 = 
t0
 - 
s3
 - 
t2
;

1411 
s7
 = 
t4
 - 
s3
 - 
t0
;

1412 
s3
 = 
t4
 + s3 - 
t2
;

1414 
y
[0] = 
s4
 - 
s7
;

1415 
y
[1] = 
s2
 + 
s1
;

1416 
y
[2] = 
s0
 - 
s3
;

1417 
y
[3] = 
s8
 + 
s5
;

1418 
y
[5] = 
s8
 - 
s5
;

1419 
y
[6] = 
s0
 + 
s3
;

1420 
y
[7] = 
s2
 - 
s1
;

1421 
y
[8] = 
s4
 + 
s7
;

1422 
	}
}

1424 
	$drmp3_L3_imd˘36
(*
grbuf
, *
ovîœp
, c⁄° *
wödow
, 
nb™ds
) {

1425 
i
, 
j
;

1426 c⁄° 
g_twid9
[18] = {

1432 
j
 = 0; j < 
nb™ds
; j++, 
grbuf
 +18, 
ovîœp
 += 9) {

1433 
co
[9], 
si
[9];

1434 
co
[0] = -
grbuf
[0];

1435 
si
[0] = 
grbuf
[17];

1436 
i
 = 0; i < 4; i++) {

1437 
si
[8 - 2 * 
i
] = 
grbuf
[4 * i + 1] - grbuf[4 * i + 2];

1438 
co
[1 + 2 * 
i
] = 
grbuf
[4 * i + 1] + grbuf[4 * i + 2];

1439 
si
[7 - 2 * 
i
] = 
grbuf
[4 * i + 4] - grbuf[4 * i + 3];

1440 
co
[2 + 2 * 
i
] = -(
grbuf
[4 * i + 3] + grbuf[4 * i + 4]);

1442 
	`drmp3_L3_d˘3_9
(
co
);

1443 
	`drmp3_L3_d˘3_9
(
si
);

1445 
si
[1] = -si[1];

1446 
si
[3] = -si[3];

1447 
si
[5] = -si[5];

1448 
si
[7] = -si[7];

1450 
i
 = 0;

1452 #i‡
DRMP3_HAVE_SIMD


1453 i‡(
	`drmp3_have_simd
())

1454 ; 
i
 < 8; i += 4) {

1455 
drmp3_f4
 
vovl
 = 
	`DRMP3_VLD
(
ovîœp
 + 
i
);

1456 
drmp3_f4
 
vc
 = 
	`DRMP3_VLD
(
co
 + 
i
);

1457 
drmp3_f4
 
vs
 = 
	`DRMP3_VLD
(
si
 + 
i
);

1458 
drmp3_f4
 
vr0
 = 
	`DRMP3_VLD
(
g_twid9
 + 
i
);

1459 
drmp3_f4
 
vr1
 = 
	`DRMP3_VLD
(
g_twid9
 + 9 + 
i
);

1460 
drmp3_f4
 
vw0
 = 
	`DRMP3_VLD
(
wödow
 + 
i
);

1461 
drmp3_f4
 
vw1
 = 
	`DRMP3_VLD
(
wödow
 + 9 + 
i
);

1462 
drmp3_f4
 
vsum
 = 
	`DRMP3_VADD
(
	`DRMP3_VMUL
(
vc
, 
vr1
), DRMP3_VMUL(
vs
, 
vr0
));

1463 
	`DRMP3_VSTORE
(
ovîœp
 + 
i
, 
	`DRMP3_VSUB
(
	`DRMP3_VMUL
(
vc
, 
vr0
), DRMP3_VMUL(
vs
, 
vr1
)));

1464 
	`DRMP3_VSTORE
(
grbuf
 + 
i
, 
	`DRMP3_VSUB
(
	`DRMP3_VMUL
(
vovl
, 
vw0
), DRMP3_VMUL(
vsum
, 
vw1
)));

1465 
vsum
 = 
	`DRMP3_VADD
(
	`DRMP3_VMUL
(
vovl
, 
vw1
), DRMP3_VMUL(vsum, 
vw0
));

1466 
	`DRMP3_VSTORE
(
grbuf
 + 14 - 
i
, 
	`DRMP3_VREV
(
vsum
));

1469 ; 
i
 < 9; i++) {

1470 
ovl
 = 
ovîœp
[
i
];

1471 
sum
 = 
co
[
i
] * 
g_twid9
[9 + i] + 
si
[i] * g_twid9[0 + i];

1472 
ovîœp
[
i
] = 
co
[i] * 
g_twid9
[0 + i] - 
si
[i] * g_twid9[9 + i];

1473 
grbuf
[
i
] = 
ovl
 * 
wödow
[0 + i] - 
sum
 * window[9 + i];

1474 
grbuf
[17 - 
i
] = 
ovl
 * 
wödow
[9 + i] + 
sum
 * window[0 + i];

1477 
	}
}

1479 
	$drmp3_L3_id˘3
(
x0
, 
x1
, 
x2
, *
d°
) {

1480 
m1
 = 
x1
 * 0.86602540f;

1481 
a1
 = 
x0
 - 
x2
 * 0.5f;

1482 
d°
[1] = 
x0
 + 
x2
;

1483 
d°
[0] = 
a1
 + 
m1
;

1484 
d°
[2] = 
a1
 - 
m1
;

1485 
	}
}

1487 
	$drmp3_L3_imd˘12
(*
x
, *
d°
, *
ovîœp
) {

1488 c⁄° 
g_twid3
[6] = {0.79335334f, 0.92387953f, 0.99144486f, 0.60876143f, 0.38268343f, 0.13052619f};

1489 
co
[3], 
si
[3];

1490 
i
;

1492 
	`drmp3_L3_id˘3
(-
x
[0], x[6] + x[3], x[12] + x[9], 
co
);

1493 
	`drmp3_L3_id˘3
(
x
[15], x[12] - x[9], x[6] - x[3], 
si
);

1494 
si
[1] = -si[1];

1496 
i
 = 0; i < 3; i++) {

1497 
ovl
 = 
ovîœp
[
i
];

1498 
sum
 = 
co
[
i
] * 
g_twid3
[3 + i] + 
si
[i] * g_twid3[0 + i];

1499 
ovîœp
[
i
] = 
co
[i] * 
g_twid3
[0 + i] - 
si
[i] * g_twid3[3 + i];

1500 
d°
[
i
] = 
ovl
 * 
g_twid3
[2 - i] - 
sum
 * g_twid3[5 - i];

1501 
d°
[5 - 
i
] = 
ovl
 * 
g_twid3
[5 - i] + 
sum
 * g_twid3[2 - i];

1503 
	}
}

1505 
	$drmp3_L3_imd˘_sh‹t
(*
grbuf
, *
ovîœp
, 
nb™ds
) {

1506 ; 
nb™ds
 > 0;Çb™ds--, 
ovîœp
 +9, 
grbuf
 += 18) {

1507 
tmp
[18];

1508 
	`mem˝y
(
tmp
, 
grbuf
, (tmp));

1509 
	`mem˝y
(
grbuf
, 
ovîœp
, 6 * ());

1510 
	`drmp3_L3_imd˘12
(
tmp
, 
grbuf
 + 6, 
ovîœp
 + 6);

1511 
	`drmp3_L3_imd˘12
(
tmp
 + 1, 
grbuf
 + 12, 
ovîœp
 + 6);

1512 
	`drmp3_L3_imd˘12
(
tmp
 + 2, 
ovîœp
, overlap + 6);

1514 
	}
}

1516 
	$drmp3_L3_ch™ge_sign
(*
grbuf
) {

1517 
b
, 
i
;

1518 
b
 = 0, 
grbuf
 += 18; b < 32; b += 2, grbuf += 36)

1519 
i
 = 1; i < 18; i += 2)

1520 
grbuf
[
i
] = -grbuf[i];

1521 
	}
}

1523 
	$drmp3_L3_imd˘_gr
(*
grbuf
, *
ovîœp
, 
block_ty≥
, 
n_l⁄g_b™ds
) {

1524 c⁄° 
g_md˘_wödow
[2][18] = {

1528 i‡(
n_l⁄g_b™ds
) {

1529 
	`drmp3_L3_imd˘36
(
grbuf
, 
ovîœp
, 
g_md˘_wödow
[0], 
n_l⁄g_b™ds
);

1530 
grbuf
 +18 * 
n_l⁄g_b™ds
;

1531 
ovîœp
 +9 * 
n_l⁄g_b™ds
;

1533 i‡(
block_ty≥
 =
DRMP3_SHORT_BLOCK_TYPE
)

1534 
	`drmp3_L3_imd˘_sh‹t
(
grbuf
, 
ovîœp
, 32 - 
n_l⁄g_b™ds
);

1536 
	`drmp3_L3_imd˘36
(
grbuf
, 
ovîœp
, 
g_md˘_wödow
[
block_ty≥
 =
DRMP3_STOP_BLOCK_TYPE
], 32 - 
n_l⁄g_b™ds
);

1537 
	}
}

1539 
	$drmp3_L3_ßve_ª£rvoú
(
drmp3dec
 *
h
, 
drmp3dec_s¸©ch
 *
s
) {

1540 
pos
 = (
s
->
bs
.pos + 7) / 8u;

1541 
ªmaös
 = 
s
->
bs
.
limô
 / 8u - 
pos
;

1542 i‡(
ªmaös
 > 
DRMP3_MAX_BITRESERVOIR_BYTES
) {

1543 
pos
 +
ªmaös
 - 
DRMP3_MAX_BITRESERVOIR_BYTES
;

1544 
ªmaös
 = 
DRMP3_MAX_BITRESERVOIR_BYTES
;

1546 i‡(
ªmaös
 > 0) {

1547 
	`memmove
(
h
->
ª£rv_buf
, 
s
->
maöd©a
 + 
pos
, 
ªmaös
);

1549 
h
->
ª£rv
 = 
ªmaös
;

1550 
	}
}

1552 
	$drmp3_L3_ª°‹e_ª£rvoú
(
drmp3dec
 *
h
, 
drmp3_bs
 *
bs
, 
drmp3dec_s¸©ch
 *
s
, 
maö_d©a_begö
) {

1553 
‰ame_byãs
 = (
bs
->
limô
 - bs->
pos
) / 8;

1554 
byãs_have
 = 
	`DRMP3_MIN
(
h
->
ª£rv
, 
maö_d©a_begö
);

1555 
	`mem˝y
(
s
->
maöd©a
, 
h
->
ª£rv_buf
 + 
	`DRMP3_MAX
(0, h->
ª£rv
 - 
maö_d©a_begö
),

1556 
	`DRMP3_MIN
(
h
->
ª£rv
, 
maö_d©a_begö
));

1557 
	`mem˝y
(
s
->
maöd©a
 + 
byãs_have
, 
bs
->
buf
 + bs->
pos
 / 8, 
‰ame_byãs
);

1558 
	`drmp3_bs_öô
(&
s
->
bs
, s->
maöd©a
, 
byãs_have
 + 
‰ame_byãs
);

1559  
h
->
ª£rv
 >
maö_d©a_begö
;

1560 
	}
}

1562 
	$drmp3_L3_decode
(
drmp3dec
 *
h
, 
drmp3dec_s¸©ch
 *
s
, 
drmp3_L3_gr_öfo
 *
gr_öfo
, 
nch
) {

1563 
ch
;

1565 
ch
 = 0; ch < 
nch
; ch++) {

1566 
œyî3gr_limô
 = 
s
->
bs
.
pos
 + 
gr_öfo
[
ch
].
∑π_23_Àngth
;

1567 
	`drmp3_L3_decode_sˇÀÁ˘‹s
(
h
->
hódî
, 
s
->
i°_pos
[
ch
], &s->
bs
, 
gr_öfo
 + ch, s->
scf
, ch);

1568 
	`drmp3_L3_huffm™
(
s
->
grbuf
[
ch
], &s->
bs
, 
gr_öfo
 + ch, s->
scf
, 
œyî3gr_limô
);

1571 i‡(
	`DRMP3_HDR_TEST_I_STEREO
(
h
->
hódî
)) {

1572 
	`drmp3_L3_öãnsôy_°îeo
(
s
->
grbuf
[0], s->
i°_pos
[1], 
gr_öfo
, 
h
->
hódî
);

1573 } i‡(
	`DRMP3_HDR_IS_MS_STEREO
(
h
->
hódî
)) {

1574 
	`drmp3_L3_midside_°îeo
(
s
->
grbuf
[0], 576);

1577 
ch
 = 0; ch < 
nch
; ch++, 
gr_öfo
++) {

1578 
Ø_b™ds
 = 31;

1579 
n_l⁄g_b™ds
 = (
gr_öfo
->
mixed_block_Êag
 ? 2 : 0Ë<< (Ë(
	`DRMP3_HDR_GET_MY_SAMPLE_RATE
(
h
->
hódî
) == 2);

1581 i‡(
gr_öfo
->
n_sh‹t_sfb
) {

1582 
Ø_b™ds
 = 
n_l⁄g_b™ds
 - 1;

1583 
	`drmp3_L3_ª‹dî
(
s
->
grbuf
[
ch
] + 
n_l⁄g_b™ds
 * 18, s->
syn
[0], 
gr_öfo
->
sfbèb
 + gr_öfo->
n_l⁄g_sfb
);

1586 
	`drmp3_L3_™tülüs
(
s
->
grbuf
[
ch
], 
Ø_b™ds
);

1587 
	`drmp3_L3_imd˘_gr
(
s
->
grbuf
[
ch
], 
h
->
md˘_ovîœp
[ch], 
gr_öfo
->
block_ty≥
, 
n_l⁄g_b™ds
);

1588 
	`drmp3_L3_ch™ge_sign
(
s
->
grbuf
[
ch
]);

1590 
	}
}

1592 
	$drmp3d_DCT_II
(*
grbuf
, 
n
) {

1593 c⁄° 
g_£c
[24] = {

1598 
i
, 
k
 = 0;

1599 #i‡
DRMP3_HAVE_SIMD


1600 i‡(
	`drmp3_have_simd
())

1601 ; 
k
 < 
n
; k += 4) {

1602 
drmp3_f4
 
t
[4][8], *
x
;

1603 *
y
 = 
grbuf
 + 
k
;

1605 
x
 = 
t
[0], 
i
 = 0; i < 8; i++, x++) {

1606 
drmp3_f4
 
x0
 = 
	`DRMP3_VLD
(&
y
[
i
 * 18]);

1607 
drmp3_f4
 
x1
 = 
	`DRMP3_VLD
(&
y
[(15 - 
i
) * 18]);

1608 
drmp3_f4
 
x2
 = 
	`DRMP3_VLD
(&
y
[(16 + 
i
) * 18]);

1609 
drmp3_f4
 
x3
 = 
	`DRMP3_VLD
(&
y
[(31 - 
i
) * 18]);

1610 
drmp3_f4
 
t0
 = 
	`DRMP3_VADD
(
x0
, 
x3
);

1611 
drmp3_f4
 
t1
 = 
	`DRMP3_VADD
(
x1
, 
x2
);

1612 
drmp3_f4
 
t2
 = 
	`DRMP3_VMUL_S
(
	`DRMP3_VSUB
(
x1
, 
x2
), 
g_£c
[3 * 
i
 + 0]);

1613 
drmp3_f4
 
t3
 = 
	`DRMP3_VMUL_S
(
	`DRMP3_VSUB
(
x0
, 
x3
), 
g_£c
[3 * 
i
 + 1]);

1614 
x
[0] = 
	`DRMP3_VADD
(
t0
, 
t1
);

1615 
x
[8] = 
	`DRMP3_VMUL_S
(
	`DRMP3_VSUB
(
t0
, 
t1
), 
g_£c
[3 * 
i
 + 2]);

1616 
x
[16] = 
	`DRMP3_VADD
(
t3
, 
t2
);

1617 
x
[24] = 
	`DRMP3_VMUL_S
(
	`DRMP3_VSUB
(
t3
, 
t2
), 
g_£c
[3 * 
i
 + 2]);

1619 
x
 = 
t
[0], 
i
 = 0; i < 4; i++, x += 8) {

1620 
drmp3_f4
 
x0
 = 
x
[0], 
x1
 = x[1], 
x2
 = x[2], 
x3
 = x[3], 
x4
 = x[4], 
x5
 = x[5], 
x6
 = x[6], 
x7
 = x[7], 
xt
;

1621 
xt
 = 
	`DRMP3_VSUB
(
x0
, 
x7
);

1622 
x0
 = 
	`DRMP3_VADD
(x0, 
x7
);

1623 
x7
 = 
	`DRMP3_VSUB
(
x1
, 
x6
);

1624 
x1
 = 
	`DRMP3_VADD
(x1, 
x6
);

1625 
x6
 = 
	`DRMP3_VSUB
(
x2
, 
x5
);

1626 
x2
 = 
	`DRMP3_VADD
(x2, 
x5
);

1627 
x5
 = 
	`DRMP3_VSUB
(
x3
, 
x4
);

1628 
x3
 = 
	`DRMP3_VADD
(x3, 
x4
);

1629 
x4
 = 
	`DRMP3_VSUB
(
x0
, 
x3
);

1630 
x0
 = 
	`DRMP3_VADD
(x0, 
x3
);

1631 
x3
 = 
	`DRMP3_VSUB
(
x1
, 
x2
);

1632 
x1
 = 
	`DRMP3_VADD
(x1, 
x2
);

1633 
x
[0] = 
	`DRMP3_VADD
(
x0
, 
x1
);

1634 
x
[4] = 
	`DRMP3_VMUL_S
(
	`DRMP3_VSUB
(
x0
, 
x1
), 0.70710677f);

1635 
x5
 = 
	`DRMP3_VADD
(x5, 
x6
);

1636 
x6
 = 
	`DRMP3_VMUL_S
(
	`DRMP3_VADD
(x6, 
x7
), 0.70710677f);

1637 
x7
 = 
	`DRMP3_VADD
(x7, 
xt
);

1638 
x3
 = 
	`DRMP3_VMUL_S
(
	`DRMP3_VADD
(x3, 
x4
), 0.70710677f);

1639 
x5
 = 
	`DRMP3_VSUB
(x5, 
	`DRMP3_VMUL_S
(
x7
, 0.198912367f));

1640 
x7
 = 
	`DRMP3_VADD
(x7, 
	`DRMP3_VMUL_S
(
x5
, 0.382683432f));

1641 
x5
 = 
	`DRMP3_VSUB
(x5, 
	`DRMP3_VMUL_S
(
x7
, 0.198912367f));

1642 
x0
 = 
	`DRMP3_VSUB
(
xt
, 
x6
);

1643 
xt
 = 
	`DRMP3_VADD
(xt, 
x6
);

1644 
x
[1] = 
	`DRMP3_VMUL_S
(
	`DRMP3_VADD
(
xt
, 
x7
), 0.50979561f);

1645 
x
[2] = 
	`DRMP3_VMUL_S
(
	`DRMP3_VADD
(
x4
, 
x3
), 0.54119611f);

1646 
x
[3] = 
	`DRMP3_VMUL_S
(
	`DRMP3_VSUB
(
x0
, 
x5
), 0.60134488f);

1647 
x
[5] = 
	`DRMP3_VMUL_S
(
	`DRMP3_VADD
(
x0
, 
x5
), 0.89997619f);

1648 
x
[6] = 
	`DRMP3_VMUL_S
(
	`DRMP3_VSUB
(
x4
, 
x3
), 1.30656302f);

1649 
x
[7] = 
	`DRMP3_VMUL_S
(
	`DRMP3_VSUB
(
xt
, 
x7
), 2.56291556f);

1652 i‡(
k
 > 
n
 - 3) {

1653 #i‡
DRMP3_HAVE_SSE


1654 
	#DRMP3_VSAVE2
(
i
, 
v
Ë
	`_mm_°‹ñ_pi
((
__m64
 *)(*)&
y
[i*18], v)

	)

1656 
	#DRMP3_VSAVE2
(
i
, 
v
Ë
	`v°1_f32
((
Êﬂt32_t
 *)&
y
[i*18], 
	`vgë_low_f32
(v))

	)

1658 
i
 = 0; i < 7; i++, 
y
 += 4 * 18) {

1659 
drmp3_f4
 
s
 = 
	`DRMP3_VADD
(
t
[3][
i
],Å[3][i + 1]);

1660 
	`DRMP3_VSAVE2
(0, 
t
[0][
i
]);

1661 
	`DRMP3_VSAVE2
(1, 
	`DRMP3_VADD
(
t
[2][
i
], 
s
));

1662 
	`DRMP3_VSAVE2
(2, 
	`DRMP3_VADD
(
t
[1][
i
],Å[1][i + 1]));

1663 
	`DRMP3_VSAVE2
(3, 
	`DRMP3_VADD
(
t
[2][1 + 
i
], 
s
));

1665 
	`DRMP3_VSAVE2
(0, 
t
[0][7]);

1666 
	`DRMP3_VSAVE2
(1, 
	`DRMP3_VADD
(
t
[2][7],Å[3][7]));

1667 
	`DRMP3_VSAVE2
(2, 
t
[1][7]);

1668 
	`DRMP3_VSAVE2
(3, 
t
[3][7]);

1670 
	#DRMP3_VSAVE4
(
i
, 
v
Ë
	`DRMP3_VSTORE
(&
y
[i*18], v)

	)

1671 
i
 = 0; i < 7; i++, 
y
 += 4 * 18) {

1672 
drmp3_f4
 
s
 = 
	`DRMP3_VADD
(
t
[3][
i
],Å[3][i + 1]);

1673 
	`DRMP3_VSAVE4
(0, 
t
[0][
i
]);

1674 
	`DRMP3_VSAVE4
(1, 
	`DRMP3_VADD
(
t
[2][
i
], 
s
));

1675 
	`DRMP3_VSAVE4
(2, 
	`DRMP3_VADD
(
t
[1][
i
],Å[1][i + 1]));

1676 
	`DRMP3_VSAVE4
(3, 
	`DRMP3_VADD
(
t
[2][1 + 
i
], 
s
));

1678 
	`DRMP3_VSAVE4
(0, 
t
[0][7]);

1679 
	`DRMP3_VSAVE4
(1, 
	`DRMP3_VADD
(
t
[2][7],Å[3][7]));

1680 
	`DRMP3_VSAVE4
(2, 
t
[1][7]);

1681 
	`DRMP3_VSAVE4
(3, 
t
[3][7]);

1686 #ifde‡
DR_MP3_ONLY_SIMD


1689 ; 
k
 < 
n
; k++)

1691 
t
[4][8], *
x
, *
y
 = 
grbuf
 + 
k
;

1693 
x
 = 
t
[0], 
i
 = 0; i < 8; i++, x++)

1695 
x0
 = 
y
[
i
*18];

1696 
x1
 = 
y
[(15 - 
i
)*18];

1697 
x2
 = 
y
[(16 + 
i
)*18];

1698 
x3
 = 
y
[(31 - 
i
)*18];

1699 
t0
 = 
x0
 + 
x3
;

1700 
t1
 = 
x1
 + 
x2
;

1701 
t2
 = (
x1
 - 
x2
)*
g_£c
[3*
i
 + 0];

1702 
t3
 = (
x0
 - 
x3
)*
g_£c
[3*
i
 + 1];

1703 
x
[0] = 
t0
 + 
t1
;

1704 
x
[8] = (
t0
 - 
t1
)*
g_£c
[3*
i
 + 2];

1705 
x
[16] = 
t3
 + 
t2
;

1706 
x
[24] = (
t3
 - 
t2
)*
g_£c
[3*
i
 + 2];

1708 
x
 = 
t
[0], 
i
 = 0; i < 4; i++, x += 8)

1710 
x0
 = 
x
[0], 
x1
 = x[1], 
x2
 = x[2], 
x3
 = x[3], 
x4
 = x[4], 
x5
 = x[5], 
x6
 = x[6], 
x7
 = x[7], 
xt
;

1711 
xt
 = 
x0
 - 
x7
; x0 += x7;

1712 
x7
 = 
x1
 - 
x6
; x1 += x6;

1713 
x6
 = 
x2
 - 
x5
; x2 += x5;

1714 
x5
 = 
x3
 - 
x4
; x3 += x4;

1715 
x4
 = 
x0
 - 
x3
; x0 += x3;

1716 
x3
 = 
x1
 - 
x2
; x1 += x2;

1717 
x
[0] = 
x0
 + 
x1
;

1718 
x
[4] = (
x0
 - 
x1
)*0.70710677f;

1719 
x5
 = x5 + 
x6
;

1720 
x6
 = (x6 + 
x7
)*0.70710677f;

1721 
x7
 = x7 + 
xt
;

1722 
x3
 = (x3 + 
x4
)*0.70710677f;

1723 
x5
 -
x7
*0.198912367f;

1724 
x7
 +
x5
*0.382683432f;

1725 
x5
 -
x7
*0.198912367f;

1726 
x0
 = 
xt
 - 
x6
; xt += x6;

1727 
x
[1] = (
xt
 + 
x7
)*0.50979561f;

1728 
x
[2] = (
x4
 + 
x3
)*0.54119611f;

1729 
x
[3] = (
x0
 - 
x5
)*0.60134488f;

1730 
x
[5] = (
x0
 + 
x5
)*0.89997619f;

1731 
x
[6] = (
x4
 - 
x3
)*1.30656302f;

1732 
x
[7] = (
xt
 - 
x7
)*2.56291556f;

1735 
i
 = 0; i < 7; i++, 
y
 += 4*18)

1737 
y
[0*18] = 
t
[0][
i
];

1738 
y
[1*18] = 
t
[2][
i
] +Å[3][i] +Å[3][i + 1];

1739 
y
[2*18] = 
t
[1][
i
] +Å[1][i + 1];

1740 
y
[3*18] = 
t
[2][
i
 + 1] +Å[3][i] +Å[3][i + 1];

1742 
y
[0*18] = 
t
[0][7];

1743 
y
[1*18] = 
t
[2][7] +Å[3][7];

1744 
y
[2*18] = 
t
[1][7];

1745 
y
[3*18] = 
t
[3][7];

1748 
	}
}

1750 #i‚de‡
DR_MP3_FLOAT_OUTPUT


1751 
drmp3_öt16
 
	tdrmp3d_ßm∂e_t
;

1753 
drmp3_öt16
 
	$drmp3d_sˇÀ_pcm
(
ßm∂e
) {

1754 i‡(
ßm∂e
 >32766.5Ë (
drmp3_öt16
) 32767;

1755 i‡(
ßm∂e
 <-32767.5Ë (
drmp3_öt16
) -32768;

1756 
drmp3_öt16
 
s
 = (drmp3_öt16Ë(
ßm∂e
 + .5f);

1757 
s
 -= (s < 0);

1758  (
drmp3_öt16
Ë
s
;

1759 
	}
}

1762 
	tdrmp3d_ßm∂e_t
;

1764 
	$drmp3d_sˇÀ_pcm
(
ßm∂e
)

1766  
ßm∂e
*(1.f/32768.f);

1767 
	}
}

1770 
	$drmp3d_sy¡h_∑ú
(
drmp3d_ßm∂e_t
 *
pcm
, 
nch
, c⁄° *
z
) {

1771 
a
;

1772 
a
 = (
z
[14 * 64] - z[0]) * 29;

1773 
a
 +(
z
[1 * 64] + z[13 * 64]) * 213;

1774 
a
 +(
z
[12 * 64] - z[2 * 64]) * 459;

1775 
a
 +(
z
[3 * 64] + z[11 * 64]) * 2037;

1776 
a
 +(
z
[10 * 64] - z[4 * 64]) * 5153;

1777 
a
 +(
z
[5 * 64] + z[9 * 64]) * 6574;

1778 
a
 +(
z
[8 * 64] - z[6 * 64]) * 37489;

1779 
a
 +
z
[7 * 64] * 75038;

1780 
pcm
[0] = 
	`drmp3d_sˇÀ_pcm
(
a
);

1782 
z
 += 2;

1783 
a
 = 
z
[14 * 64] * 104;

1784 
a
 +
z
[12 * 64] * 1567;

1785 
a
 +
z
[10 * 64] * 9727;

1786 
a
 +
z
[8 * 64] * 64019;

1787 
a
 +
z
[6 * 64] * -9975;

1788 
a
 +
z
[4 * 64] * -45;

1789 
a
 +
z
[2 * 64] * 146;

1790 
a
 +
z
[0 * 64] * -5;

1791 
pcm
[16 * 
nch
] = 
	`drmp3d_sˇÀ_pcm
(
a
);

1792 
	}
}

1794 
	$drmp3d_sy¡h
(*
xl
, 
drmp3d_ßm∂e_t
 *
d°l
, 
nch
, *
lös
) {

1795 
i
;

1796 *
xr
 = 
xl
 + 576 * (
nch
 - 1);

1797 
drmp3d_ßm∂e_t
 *
d°r
 = 
d°l
 + (
nch
 - 1);

1799 c⁄° 
g_wö
[] = {

1816 *
zlö
 = 
lös
 + 15 * 64;

1817 c⁄° *
w
 = 
g_wö
;

1819 
zlö
[4 * 15] = 
xl
[18 * 16];

1820 
zlö
[4 * 15 + 1] = 
xr
[18 * 16];

1821 
zlö
[4 * 15 + 2] = 
xl
[0];

1822 
zlö
[4 * 15 + 3] = 
xr
[0];

1824 
zlö
[4 * 31] = 
xl
[1 + 18 * 16];

1825 
zlö
[4 * 31 + 1] = 
xr
[1 + 18 * 16];

1826 
zlö
[4 * 31 + 2] = 
xl
[1];

1827 
zlö
[4 * 31 + 3] = 
xr
[1];

1829 
	`drmp3d_sy¡h_∑ú
(
d°r
, 
nch
, 
lös
 + 4 * 15 + 1);

1830 
	`drmp3d_sy¡h_∑ú
(
d°r
 + 32 * 
nch
,Çch, 
lös
 + 4 * 15 + 64 + 1);

1831 
	`drmp3d_sy¡h_∑ú
(
d°l
, 
nch
, 
lös
 + 4 * 15);

1832 
	`drmp3d_sy¡h_∑ú
(
d°l
 + 32 * 
nch
,Çch, 
lös
 + 4 * 15 + 64);

1834 #i‡
DRMP3_HAVE_SIMD


1835 i‡(
	`drmp3_have_simd
())

1836 
i
 = 14; i >= 0; i--) {

1837 
	#DRMP3_VLOAD
(
k
Ë
drmp3_f4
 
w0
 = 
	`DRMP3_VSET
(*
w
++); drmp3_f4 
w1
 = DRMP3_VSET(*w++); drmp3_f4 
vz
 = 
	`DRMP3_VLD
(&
zlö
[4*
i
 - 64*k]); drmp3_f4 
vy
 = DRMP3_VLD(&zlö[4*ò- 64*(15 - k)]);

	)

1838 
	#DRMP3_V0
(
k
Ë{ 
	`DRMP3_VLOAD
(kË
b
 = 
	`DRMP3_VADD
(
	`DRMP3_VMUL
(
vz
, 
w1
), DRMP3_VMUL(
vy
, 
w0
)Ë; 
a
 = 
	`DRMP3_VSUB
(DRMP3_VMUL(vz, w0), DRMP3_VMUL(vy, w1)); }

	)

1839 
	#DRMP3_V1
(
k
Ë{ 
	`DRMP3_VLOAD
(kË
b
 = 
	`DRMP3_VADD
(b, DRMP3_VADD(
	`DRMP3_VMUL
(
vz
, 
w1
), DRMP3_VMUL(
vy
, 
w0
))); 
a
 = DRMP3_VADD◊, 
	`DRMP3_VSUB
(DRMP3_VMUL(vz, w0), DRMP3_VMUL(vy, w1))); }

	)

1840 
	#DRMP3_V2
(
k
Ë{ 
	`DRMP3_VLOAD
(kË
b
 = 
	`DRMP3_VADD
(b, DRMP3_VADD(
	`DRMP3_VMUL
(
vz
, 
w1
), DRMP3_VMUL(
vy
, 
w0
))); 
a
 = DRMP3_VADD◊, 
	`DRMP3_VSUB
(DRMP3_VMUL(vy, w1), DRMP3_VMUL(vz, w0))); }

	)

1841 
drmp3_f4
 
a
, 
b
;

1842 
zlö
[4 * 
i
] = 
xl
[18 * (31 - i)];

1843 
zlö
[4 * 
i
 + 1] = 
xr
[18 * (31 - i)];

1844 
zlö
[4 * 
i
 + 2] = 
xl
[1 + 18 * (31 - i)];

1845 
zlö
[4 * 
i
 + 3] = 
xr
[1 + 18 * (31 - i)];

1846 
zlö
[4 * 
i
 + 64] = 
xl
[1 + 18 * (1 + i)];

1847 
zlö
[4 * 
i
 + 64 + 1] = 
xr
[1 + 18 * (1 + i)];

1848 
zlö
[4 * 
i
 - 64 + 2] = 
xl
[18 * (1 + i)];

1849 
zlö
[4 * 
i
 - 64 + 3] = 
xr
[18 * (1 + i)];

1851 
	`DRMP3_V0
(0)

1852 
	`DRMP3_V2
(1)

1853 
	`DRMP3_V1
(2)

1854 
	`DRMP3_V2
(3)

1855 
	`DRMP3_V1
(4)

1856 
	`DRMP3_V2
(5)

1857 
	`DRMP3_V1
(6)

1858 
	`DRMP3_V2
(7)

1861 #i‚de‡
DR_MP3_FLOAT_OUTPUT


1862 #i‡
DRMP3_HAVE_SSE


1863 c⁄° 
drmp3_f4
 
g_max
 = {32767.0f, 32767.0f, 32767.0f, 32767.0f};

1864 c⁄° 
drmp3_f4
 
g_mö
 = {-32768.0f, -32768.0f, -32768.0f, -32768.0f};

1865 
__m128i
 
pcm8
 = 
	`_mm_∑cks_ïi32
(
	`_mm_cvçs_ïi32
(
	`_mm_max_ps
(
	`_mm_mö_ps
(
a
, 
g_max
), 
g_mö
)),

1866 
	`_mm_cvçs_ïi32
(
	`_mm_max_ps
(
	`_mm_mö_ps
(
b
, 
g_max
), 
g_mö
)));

1867 
d°r
[(15 - 
i
Ë* 
nch
] = (
drmp3_öt16
Ë
	`_mm_exåa˘_ïi16
(
pcm8
, 1);

1868 
d°r
[(17 + 
i
Ë* 
nch
] = (
drmp3_öt16
Ë
	`_mm_exåa˘_ïi16
(
pcm8
, 5);

1869 
d°l
[(15 - 
i
Ë* 
nch
] = (
drmp3_öt16
Ë
	`_mm_exåa˘_ïi16
(
pcm8
, 0);

1870 
d°l
[(17 + 
i
Ë* 
nch
] = (
drmp3_öt16
Ë
	`_mm_exåa˘_ïi16
(
pcm8
, 4);

1871 
d°r
[(47 - 
i
Ë* 
nch
] = (
drmp3_öt16
Ë
	`_mm_exåa˘_ïi16
(
pcm8
, 3);

1872 
d°r
[(49 + 
i
Ë* 
nch
] = (
drmp3_öt16
Ë
	`_mm_exåa˘_ïi16
(
pcm8
, 7);

1873 
d°l
[(47 - 
i
Ë* 
nch
] = (
drmp3_öt16
Ë
	`_mm_exåa˘_ïi16
(
pcm8
, 2);

1874 
d°l
[(49 + 
i
Ë* 
nch
] = (
drmp3_öt16
Ë
	`_mm_exåa˘_ïi16
(
pcm8
, 6);

1876 
öt16x4_t
 
pcma
, 
pcmb
;

1877 
a
 = 
	`DRMP3_VADD
◊, 
	`DRMP3_VSET
(0.5f));

1878 
b
 = 
	`DRMP3_VADD
(b, 
	`DRMP3_VSET
(0.5f));

1879 
pcma
 = 
	`vqmovn_s32
(
	`vqaddq_s32
(
	`vcvtq_s32_f32
(
a
), 
	`vªöãΩªtq_s32_u32
(
	`v˛tq_f32
◊, 
	`DRMP3_VSET
(0)))));

1880 
pcmb
 = 
	`vqmovn_s32
(
	`vqaddq_s32
(
	`vcvtq_s32_f32
(
b
), 
	`vªöãΩªtq_s32_u32
(
	`v˛tq_f32
(b, 
	`DRMP3_VSET
(0)))));

1881 
	`v°1_œ√_s16
(
d°r
 + (15 - 
i
)*
nch
, 
pcma
, 1);

1882 
	`v°1_œ√_s16
(
d°r
 + (17 + 
i
)*
nch
, 
pcmb
, 1);

1883 
	`v°1_œ√_s16
(
d°l
 + (15 - 
i
)*
nch
, 
pcma
, 0);

1884 
	`v°1_œ√_s16
(
d°l
 + (17 + 
i
)*
nch
, 
pcmb
, 0);

1885 
	`v°1_œ√_s16
(
d°r
 + (47 - 
i
)*
nch
, 
pcma
, 3);

1886 
	`v°1_œ√_s16
(
d°r
 + (49 + 
i
)*
nch
, 
pcmb
, 3);

1887 
	`v°1_œ√_s16
(
d°l
 + (47 - 
i
)*
nch
, 
pcma
, 2);

1888 
	`v°1_œ√_s16
(
d°l
 + (49 + 
i
)*
nch
, 
pcmb
, 2);

1891 c⁄° 
drmp3_f4
 
g_sˇÀ
 = { 1.0f/32768.0f, 1.0f/32768.0f, 1.0f/32768.0f, 1.0f/32768.0f };

1892 
a
 = 
	`DRMP3_VMUL
◊, 
g_sˇÀ
);

1893 
b
 = 
	`DRMP3_VMUL
(b, 
g_sˇÀ
);

1894 #i‡
DRMP3_HAVE_SSE


1895 
	`_mm_°‹e_ss
(
d°r
 + (15 - 
i
)*
nch
, 
	`_mm_shufÊe_ps
(
a
,á, 
	`_MM_SHUFFLE
(1, 1, 1, 1)));

1896 
	`_mm_°‹e_ss
(
d°r
 + (17 + 
i
)*
nch
, 
	`_mm_shufÊe_ps
(
b
, b, 
	`_MM_SHUFFLE
(1, 1, 1, 1)));

1897 
	`_mm_°‹e_ss
(
d°l
 + (15 - 
i
)*
nch
, 
	`_mm_shufÊe_ps
(
a
,á, 
	`_MM_SHUFFLE
(0, 0, 0, 0)));

1898 
	`_mm_°‹e_ss
(
d°l
 + (17 + 
i
)*
nch
, 
	`_mm_shufÊe_ps
(
b
, b, 
	`_MM_SHUFFLE
(0, 0, 0, 0)));

1899 
	`_mm_°‹e_ss
(
d°r
 + (47 - 
i
)*
nch
, 
	`_mm_shufÊe_ps
(
a
,á, 
	`_MM_SHUFFLE
(3, 3, 3, 3)));

1900 
	`_mm_°‹e_ss
(
d°r
 + (49 + 
i
)*
nch
, 
	`_mm_shufÊe_ps
(
b
, b, 
	`_MM_SHUFFLE
(3, 3, 3, 3)));

1901 
	`_mm_°‹e_ss
(
d°l
 + (47 - 
i
)*
nch
, 
	`_mm_shufÊe_ps
(
a
,á, 
	`_MM_SHUFFLE
(2, 2, 2, 2)));

1902 
	`_mm_°‹e_ss
(
d°l
 + (49 + 
i
)*
nch
, 
	`_mm_shufÊe_ps
(
b
, b, 
	`_MM_SHUFFLE
(2, 2, 2, 2)));

1904 
	`v°1q_œ√_f32
(
d°r
 + (15 - 
i
)*
nch
, 
a
, 1);

1905 
	`v°1q_œ√_f32
(
d°r
 + (17 + 
i
)*
nch
, 
b
, 1);

1906 
	`v°1q_œ√_f32
(
d°l
 + (15 - 
i
)*
nch
, 
a
, 0);

1907 
	`v°1q_œ√_f32
(
d°l
 + (17 + 
i
)*
nch
, 
b
, 0);

1908 
	`v°1q_œ√_f32
(
d°r
 + (47 - 
i
)*
nch
, 
a
, 3);

1909 
	`v°1q_œ√_f32
(
d°r
 + (49 + 
i
)*
nch
, 
b
, 3);

1910 
	`v°1q_œ√_f32
(
d°l
 + (47 - 
i
)*
nch
, 
a
, 2);

1911 
	`v°1q_œ√_f32
(
d°l
 + (49 + 
i
)*
nch
, 
b
, 2);

1918 #ifde‡
DR_MP3_ONLY_SIMD


1921 
i
 = 14; i >= 0; i--)

1923 
	#DRMP3_LOAD
(
k
Ë
w0
 = *
w
++; 
w1
 = *w++; *
vz
 = &
zlö
[4*
i
 - k*64]; *
vy
 = &zlö[4*ò- (15 - k)*64];

	)

1924 
	#DRMP3_S0
(
k
Ë{ 
j
; 
	`DRMP3_LOAD
(k); j = 0; j < 4; j++Ë
b
[j] = 
vz
[j]*
w1
 + 
vy
[j]*
w0
, 
a
[j] = vz[j]*w0 - vy[j]*w1; }

	)

1925 
	#DRMP3_S1
(
k
Ë{ 
j
; 
	`DRMP3_LOAD
(k); j = 0; j < 4; j++Ë
b
[j] +
vz
[j]*
w1
 + 
vy
[j]*
w0
, 
a
[j] +vz[j]*w0 - vy[j]*w1; }

	)

1926 
	#DRMP3_S2
(
k
Ë{ 
j
; 
	`DRMP3_LOAD
(k); j = 0; j < 4; j++Ë
b
[j] +
vz
[j]*
w1
 + 
vy
[j]*
w0
, 
a
[j] +vy[j]*w1 - vz[j]*w0; }

	)

1927 
a
[4], 
b
[4];

1929 
zlö
[4*
i
] = 
xl
[18*(31 - i)];

1930 
zlö
[4*
i
 + 1] = 
xr
[18*(31 - i)];

1931 
zlö
[4*
i
 + 2] = 
xl
[1 + 18*(31 - i)];

1932 
zlö
[4*
i
 + 3] = 
xr
[1 + 18*(31 - i)];

1933 
zlö
[4*(
i
 + 16)] = 
xl
[1 + 18*(1 + i)];

1934 
zlö
[4*(
i
 + 16Ë+ 1] = 
xr
[1 + 18*(1 + i)];

1935 
zlö
[4*(
i
 - 16Ë+ 2] = 
xl
[18*(1 + i)];

1936 
zlö
[4*(
i
 - 16Ë+ 3] = 
xr
[18*(1 + i)];

1938 
	`DRMP3_S0
(0Ë
	`DRMP3_S2
(1Ë
	`DRMP3_S1
(2) DRMP3_S2(3) DRMP3_S1(4) DRMP3_S2(5) DRMP3_S1(6) DRMP3_S2(7)

1940 
d°r
[(15 - 
i
)*
nch
] = 
	`drmp3d_sˇÀ_pcm
(
a
[1]);

1941 
d°r
[(17 + 
i
)*
nch
] = 
	`drmp3d_sˇÀ_pcm
(
b
[1]);

1942 
d°l
[(15 - 
i
)*
nch
] = 
	`drmp3d_sˇÀ_pcm
(
a
[0]);

1943 
d°l
[(17 + 
i
)*
nch
] = 
	`drmp3d_sˇÀ_pcm
(
b
[0]);

1944 
d°r
[(47 - 
i
)*
nch
] = 
	`drmp3d_sˇÀ_pcm
(
a
[3]);

1945 
d°r
[(49 + 
i
)*
nch
] = 
	`drmp3d_sˇÀ_pcm
(
b
[3]);

1946 
d°l
[(47 - 
i
)*
nch
] = 
	`drmp3d_sˇÀ_pcm
(
a
[2]);

1947 
d°l
[(49 + 
i
)*
nch
] = 
	`drmp3d_sˇÀ_pcm
(
b
[2]);

1950 
	}
}

1953 
	$drmp3d_sy¡h_gønuÀ
(*
qmf_°©e
, *
grbuf
, 
nb™ds
, 
nch
, 
drmp3d_ßm∂e_t
 *
pcm
, *
lös
) {

1954 
i
;

1955 
i
 = 0; i < 
nch
; i++) {

1956 
	`drmp3d_DCT_II
(
grbuf
 + 576 * 
i
, 
nb™ds
);

1959 
	`mem˝y
(
lös
, 
qmf_°©e
, () * 15 * 64);

1961 
i
 = 0; i < 
nb™ds
; i += 2) {

1962 
	`drmp3d_sy¡h
(
grbuf
 + 
i
, 
pcm
 + 32 * 
nch
 * i,Çch, 
lös
 + i * 64);

1964 #i‚de‡
DR_MP3_NONSTANDARD_BUT_LOGICAL


1965 i‡(
nch
 == 1) {

1966 
i
 = 0; i < 15 * 64; i += 2) {

1967 
qmf_°©e
[
i
] = 
lös
[
nb™ds
 * 64 + i];

1972 
	`mem˝y
(
qmf_°©e
, 
lös
 + 
nb™ds
 * 64, () * 15 * 64);

1974 
	}
}

1976 
	$drmp3d_m©ch_‰ame
(c⁄° 
drmp3_uöt8
 *
hdr
, 
mp3_byãs
, 
‰ame_byãs
) {

1977 
i
, 
nm©ch
;

1978 
i
 = 0, 
nm©ch
 = 0;Çm©ch < 
DRMP3_MAX_FRAME_SYNC_MATCHES
;Çmatch++) {

1979 
i
 +
	`drmp3_hdr_‰ame_byãs
(
hdr
 + i, 
‰ame_byãs
Ë+ 
	`drmp3_hdr_∑ddög
(hdr + i);

1980 i‡(
i
 + 
DRMP3_HDR_SIZE
 > 
mp3_byãs
)

1981  
nm©ch
 > 0;

1982 i‡(!
	`drmp3_hdr_com∑ª
(
hdr
, hd∏+ 
i
))

1986 
	}
}

1988 
	$drmp3d_föd_‰ame
(c⁄° 
drmp3_uöt8
 *
mp3
, 
mp3_byãs
, *
‰ì_f‹m©_byãs
, *
±r_‰ame_byãs
) {

1989 
i
, 
k
;

1990 
i
 = 0; i < 
mp3_byãs
 - 
DRMP3_HDR_SIZE
; i++, 
mp3
++) {

1991 i‡(
	`drmp3_hdr_vÆid
(
mp3
)) {

1992 
‰ame_byãs
 = 
	`drmp3_hdr_‰ame_byãs
(
mp3
, *
‰ì_f‹m©_byãs
);

1993 
‰ame_™d_∑ddög
 = 
‰ame_byãs
 + 
	`drmp3_hdr_∑ddög
(
mp3
);

1995 
k
 = 
DRMP3_HDR_SIZE
;

1996 !
‰ame_byãs
 && 
k
 < 
DRMP3_MAX_FREE_FORMAT_FRAME_SIZE
 && 
i
 + 2 * k < 
mp3_byãs
 - 
DRMP3_HDR_SIZE
; k++) {

1997 i‡(
	`drmp3_hdr_com∑ª
(
mp3
, mp3 + 
k
)) {

1998 
fb
 = 
k
 - 
	`drmp3_hdr_∑ddög
(
mp3
);

1999 
√xtfb
 = 
fb
 + 
	`drmp3_hdr_∑ddög
(
mp3
 + 
k
);

2000 i‡(
i
 + 
k
 + 
√xtfb
 + 
DRMP3_HDR_SIZE
 > 
mp3_byãs
 || !
	`drmp3_hdr_com∑ª
(
mp3
, mp3 + k +Çextfb))

2002 
‰ame_™d_∑ddög
 = 
k
;

2003 
‰ame_byãs
 = 
fb
;

2004 *
‰ì_f‹m©_byãs
 = 
fb
;

2008 i‡((
‰ame_byãs
 && 
i
 + 
‰ame_™d_∑ddög
 <
mp3_byãs
 &&

2009 
	`drmp3d_m©ch_‰ame
(
mp3
, 
mp3_byãs
 - 
i
, 
‰ame_byãs
)) ||

2010 (!
i
 && 
‰ame_™d_∑ddög
 =
mp3_byãs
)) {

2011 *
±r_‰ame_byãs
 = 
‰ame_™d_∑ddög
;

2012  
i
;

2014 *
‰ì_f‹m©_byãs
 = 0;

2017 *
±r_‰ame_byãs
 = 0;

2018  
i
;

2019 
	}
}

2021 
	$drmp3dec_öô
(
drmp3dec
 *
dec
) {

2022 
dec
->
hódî
[0] = 0;

2023 
	}
}

2026 
	$drmp3dec_decode_‰ame
(
drmp3dec
 *
dec
, c⁄° *
mp3
, 
mp3_byãs
, *
pcm
, 
drmp3dec_‰ame_öfo
 *
öfo
) {

2027 
i
 = 0, 
igr
, 
‰ame_size
 = 0, 
suc˚ss
 = 1;

2028 c⁄° 
drmp3_uöt8
 *
hdr
;

2029 
drmp3_bs
 
bs_‰ame
[1];

2030 
drmp3dec_s¸©ch
 
s¸©ch
;

2032 i‡(
mp3_byãs
 > 4 && 
dec
->
hódî
[0] =0xf‡&& 
	`drmp3_hdr_com∑ª
(dec->hódî, 
mp3
)) {

2033 
‰ame_size
 = 
	`drmp3_hdr_‰ame_byãs
(
mp3
, 
dec
->
‰ì_f‹m©_byãs
Ë+ 
	`drmp3_hdr_∑ddög
(mp3);

2034 i‡(
‰ame_size
 !
mp3_byãs
 &&

2035 (
‰ame_size
 + 
DRMP3_HDR_SIZE
 > 
mp3_byãs
 || !
	`drmp3_hdr_com∑ª
(
mp3
, mp3 + frame_size))) {

2036 
‰ame_size
 = 0;

2039 i‡(!
‰ame_size
) {

2040 
	`mem£t
(
dec
, 0, (
drmp3dec
));

2041 
i
 = 
	`drmp3d_föd_‰ame
(
mp3
, 
mp3_byãs
, &
dec
->
‰ì_f‹m©_byãs
, &
‰ame_size
);

2042 i‡(!
‰ame_size
 || 
i
 + føme_sizê> 
mp3_byãs
) {

2043 
öfo
->
‰ame_byãs
 = 
i
;

2048 
hdr
 = 
mp3
 + 
i
;

2049 
	`mem˝y
(
dec
->
hódî
, 
hdr
, 
DRMP3_HDR_SIZE
);

2050 
öfo
->
‰ame_byãs
 = 
i
 + 
‰ame_size
;

2051 
öfo
->
ch™√ls
 = 
	`DRMP3_HDR_IS_MONO
(
hdr
) ? 1 : 2;

2052 
öfo
->
hz
 = 
	`drmp3_hdr_ßm∂e_øã_hz
(
hdr
);

2053 
öfo
->
œyî
 = 4 - 
	`DRMP3_HDR_GET_LAYER
(
hdr
);

2054 
öfo
->
bôøã_kbps
 = 
	`drmp3_hdr_bôøã_kbps
(
hdr
);

2056 
	`drmp3_bs_öô
(
bs_‰ame
, 
hdr
 + 
DRMP3_HDR_SIZE
, 
‰ame_size
 - DRMP3_HDR_SIZE);

2057 i‡(
	`DRMP3_HDR_IS_CRC
(
hdr
)) {

2058 
	`drmp3_bs_gë_bôs
(
bs_‰ame
, 16);

2061 i‡(
öfo
->
œyî
 == 3) {

2062 
maö_d©a_begö
 = 
	`drmp3_L3_ªad_side_öfo
(
bs_‰ame
, 
s¸©ch
.
gr_öfo
, 
hdr
);

2063 i‡(
maö_d©a_begö
 < 0 || 
bs_‰ame
->
pos
 > bs_‰ame->
limô
) {

2064 
	`drmp3dec_öô
(
dec
);

2067 
suc˚ss
 = 
	`drmp3_L3_ª°‹e_ª£rvoú
(
dec
, 
bs_‰ame
, &
s¸©ch
, 
maö_d©a_begö
);

2068 i‡(
suc˚ss
 && 
pcm
 !
NULL
) {

2069 
igr
 = 0; ig∏< (
	`DRMP3_HDR_TEST_MPEG1
(
hdr
Ë? 2 : 1); igr++, 
pcm
 = 
	`DRMP3_OFFSET_PTR
(pcm,

2070 (
drmp3d_ßm∂e_t
) *

2072 
öfo
->
ch™√ls
)) {

2073 
	`mem£t
(
s¸©ch
.
grbuf
[0], 0, 576 * 2 * ());

2074 
	`drmp3_L3_decode
(
dec
, &
s¸©ch
, s¸©ch.
gr_öfo
 + 
igr
 * 
öfo
->
ch™√ls
, info->channels);

2075 
	`drmp3d_sy¡h_gønuÀ
(
dec
->
qmf_°©e
, 
s¸©ch
.
grbuf
[0], 18, 
öfo
->
ch™√ls
, (
drmp3d_ßm∂e_t
 *Ë
pcm
,

2076 
s¸©ch
.
syn
[0]);

2079 
	`drmp3_L3_ßve_ª£rvoú
(
dec
, &
s¸©ch
);

2081 #ifde‡
DR_MP3_ONLY_MP3


2084 i‡(
pcm
 =
NULL
) {

2085  
	`drmp3_hdr_‰ame_ßm∂es
(
hdr
);

2088 
drmp3_L12_sˇÀ_öfo
 
sci
[1];

2089 
	`drmp3_L12_ªad_sˇÀ_öfo
(
hdr
, 
bs_‰ame
, 
sci
);

2091 
	`mem£t
(
s¸©ch
.
grbuf
[0], 0, 576 * 2 * ());

2092 
i
 = 0, 
igr
 = 0; igr < 3; igr++) {

2093 i‡(12 =(
i
 +
	`drmp3_L12_dequ™tize_gønuÀ
(
s¸©ch
.
grbuf
[0] + i, 
bs_‰ame
, 
sci
, 
öfo
->
œyî
 | 1))) {

2094 
i
 = 0;

2095 
	`drmp3_L12_≠∂y_scf_384
(
sci
, sci->
scf
 + 
igr
, 
s¸©ch
.
grbuf
[0]);

2096 
	`drmp3d_sy¡h_gønuÀ
(
dec
->
qmf_°©e
, 
s¸©ch
.
grbuf
[0], 12, 
öfo
->
ch™√ls
, (
drmp3d_ßm∂e_t
 *Ë
pcm
,

2097 
s¸©ch
.
syn
[0]);

2098 
	`mem£t
(
s¸©ch
.
grbuf
[0], 0, 576 * 2 * ());

2099 
pcm
 = 
	`DRMP3_OFFSET_PTR
’cm, (
drmp3d_ßm∂e_t
Ë* 384 * 
öfo
->
ch™√ls
);

2101 i‡(
bs_‰ame
->
pos
 > bs_‰ame->
limô
) {

2102 
	`drmp3dec_öô
(
dec
);

2109  
suc˚ss
 * 
	`drmp3_hdr_‰ame_ßm∂es
(
dec
->
hódî
);

2110 
	}
}

2112 
	$drmp3dec_f32_to_s16
(c⁄° *
ö
, 
drmp3_öt16
 *
out
, 
num_ßm∂es
) {

2113 i‡(
num_ßm∂es
 > 0) {

2114 
i
 = 0;

2115 #i‡
DRMP3_HAVE_SIMD


2116 
Æig√d_cou¡
 = 
num_ßm∂es
 & ~7;

2117 ; 
i
 < 
Æig√d_cou¡
; i += 8) {

2118 c⁄° 
drmp3_f4
 
g_sˇÀ
 = {32768.0f, 32768.0f, 32768.0f, 32768.0f};

2119 
drmp3_f4
 
a
 = 
	`DRMP3_VMUL
(
	`DRMP3_VLD
(&
ö
[
i
]), 
g_sˇÀ
);

2120 
drmp3_f4
 
b
 = 
	`DRMP3_VMUL
(
	`DRMP3_VLD
(&
ö
[
i
 + 4]), 
g_sˇÀ
);

2121 #i‡
DRMP3_HAVE_SSE


2122 c⁄° 
drmp3_f4
 
g_max
 = {32767.0f, 32767.0f, 32767.0f, 32767.0f};

2123 c⁄° 
drmp3_f4
 
g_mö
 = {-32768.0f, -32768.0f, -32768.0f, -32768.0f};

2124 
__m128i
 
pcm8
 = 
	`_mm_∑cks_ïi32
(
	`_mm_cvçs_ïi32
(
	`_mm_max_ps
(
	`_mm_mö_ps
(
a
, 
g_max
), 
g_mö
)),

2125 
	`_mm_cvçs_ïi32
(
	`_mm_max_ps
(
	`_mm_mö_ps
(
b
, 
g_max
), 
g_mö
)));

2126 
out
[
i
] = (
drmp3_öt16
Ë
	`_mm_exåa˘_ïi16
(
pcm8
, 0);

2127 
out
[
i
 + 1] = (
drmp3_öt16
Ë
	`_mm_exåa˘_ïi16
(
pcm8
, 1);

2128 
out
[
i
 + 2] = (
drmp3_öt16
Ë
	`_mm_exåa˘_ïi16
(
pcm8
, 2);

2129 
out
[
i
 + 3] = (
drmp3_öt16
Ë
	`_mm_exåa˘_ïi16
(
pcm8
, 3);

2130 
out
[
i
 + 4] = (
drmp3_öt16
Ë
	`_mm_exåa˘_ïi16
(
pcm8
, 4);

2131 
out
[
i
 + 5] = (
drmp3_öt16
Ë
	`_mm_exåa˘_ïi16
(
pcm8
, 5);

2132 
out
[
i
 + 6] = (
drmp3_öt16
Ë
	`_mm_exåa˘_ïi16
(
pcm8
, 6);

2133 
out
[
i
 + 7] = (
drmp3_öt16
Ë
	`_mm_exåa˘_ïi16
(
pcm8
, 7);

2135 
öt16x4_t
 
pcma
, 
pcmb
;

2136 
a
 = 
	`DRMP3_VADD
◊, 
	`DRMP3_VSET
(0.5f));

2137 
b
 = 
	`DRMP3_VADD
(b, 
	`DRMP3_VSET
(0.5f));

2138 
pcma
 = 
	`vqmovn_s32
(
	`vqaddq_s32
(
	`vcvtq_s32_f32
(
a
), 
	`vªöãΩªtq_s32_u32
(
	`v˛tq_f32
◊, 
	`DRMP3_VSET
(0)))));

2139 
pcmb
 = 
	`vqmovn_s32
(
	`vqaddq_s32
(
	`vcvtq_s32_f32
(
b
), 
	`vªöãΩªtq_s32_u32
(
	`v˛tq_f32
(b, 
	`DRMP3_VSET
(0)))));

2140 
	`v°1_œ√_s16
(
out
+
i
 , 
pcma
, 0);

2141 
	`v°1_œ√_s16
(
out
+
i
+1, 
pcma
, 1);

2142 
	`v°1_œ√_s16
(
out
+
i
+2, 
pcma
, 2);

2143 
	`v°1_œ√_s16
(
out
+
i
+3, 
pcma
, 3);

2144 
	`v°1_œ√_s16
(
out
+
i
+4, 
pcmb
, 0);

2145 
	`v°1_œ√_s16
(
out
+
i
+5, 
pcmb
, 1);

2146 
	`v°1_œ√_s16
(
out
+
i
+6, 
pcmb
, 2);

2147 
	`v°1_œ√_s16
(
out
+
i
+7, 
pcmb
, 3);

2151 ; 
i
 < 
num_ßm∂es
; i++) {

2152 
ßm∂e
 = 
ö
[
i
] * 32768.0f;

2153 i‡(
ßm∂e
 >= 32766.5)

2154 
out
[
i
] = (
drmp3_öt16
) 32767;

2155 i‡(
ßm∂e
 <= -32767.5)

2156 
out
[
i
] = (
drmp3_öt16
) -32768;

2158 
s
 = (
drmp3_öt16
Ë(
ßm∂e
 + .5f);

2159 
s
 -= (s < 0);

2160 
out
[
i
] = 
s
;

2164 
	}
}

2174 #i‡
deföed
(
SIZE_MAX
)

2175 
	#DRMP3_SIZE_MAX
 
SIZE_MAX


	)

2177 #i‡
deföed
(
_WIN64
Ë|| deföed(
_LP64
Ë|| deföed(
__LP64__
)

2178 
	#DRMP3_SIZE_MAX
 ((
drmp3_uöt64
)0xFFFFFFFFFFFFFFFF)

	)

2180 
	#DRMP3_SIZE_MAX
 0xFFFFFFFF

	)

2185 #i‚de‡
DR_MP3_DEFAULT_CHANNELS


2186 
	#DR_MP3_DEFAULT_CHANNELS
 2

	)

2188 #i‚de‡
DR_MP3_DEFAULT_SAMPLE_RATE


2189 
	#DR_MP3_DEFAULT_SAMPLE_RATE
 44100

	)

2191 #i‚de‡
DRMP3_SEEK_LEADING_MP3_FRAMES


2192 
	#DRMP3_SEEK_LEADING_MP3_FRAMES
 2

	)

2197 #i‚de‡
DRMP3_ASSERT


2199 
	~<as£π.h
>

2201 
	#DRMP3_ASSERT
(
ex¥essi⁄
Ë
	`as£π
”x¥essi⁄)

	)

2203 #i‚de‡
DRMP3_COPY_MEMORY


2204 
	#DRMP3_COPY_MEMORY
(
d°
, 
§c
, 
sz
Ë
	`mem˝y
((d°), (§c), (sz))

	)

2206 #i‚de‡
DRMP3_ZERO_MEMORY


2207 
	#DRMP3_ZERO_MEMORY
(
p
, 
sz
Ë
	`mem£t
(’), 0, (sz))

	)

2209 
	#DRMP3_ZERO_OBJECT
(
p
Ë
	`DRMP3_ZERO_MEMORY
(’), (*’)))

	)

2210 #i‚de‡
DRMP3_MALLOC


2211 
	#DRMP3_MALLOC
(
sz
Ë
	`mÆloc
((sz))

	)

2213 #i‚de‡
DRMP3_REALLOC


2214 
	#DRMP3_REALLOC
(
p
, 
sz
Ë
	`ªÆloc
(’), (sz))

	)

2216 #i‚de‡
DRMP3_FREE


2217 
	#DRMP3_FREE
(
p
Ë
	`‰ì
(’))

	)

2220 
	#drmp3_as£π
 
DRMP3_ASSERT


	)

2221 
	#drmp3_c›y_mem‹y
 
DRMP3_COPY_MEMORY


	)

2222 
	#drmp3_zîo_mem‹y
 
DRMP3_ZERO_MEMORY


	)

2223 
	#drmp3_zîo_obje˘
 
DRMP3_ZERO_OBJECT


	)

2224 
	#drmp3_mÆloc
 
DRMP3_MALLOC


	)

2225 
	#drmp3_ªÆloc
 
DRMP3_REALLOC


	)

2227 
	#drmp3_cou¡of
(
x
Ë((xË/ (x[0]))

	)

2228 
	#drmp3_max
(
x
, 
y
Ë(((xË> (y)Ë? (xË: (y))

	)

2229 
	#drmp3_mö
(
x
, 
y
Ë(((xË< (y)Ë? (xË: (y))

	)

2231 
	#DRMP3_DATA_CHUNK_SIZE
 16384

2232 

	)

2233 
ölöe
 
	$drmp3_mix_f32
(
x
, 
y
, 
a
) {

2234  
x
 * (1 - 
a
Ë+ 
y
 *á;

2235 
	}
}

2237 
	$drmp3_bÀnd_f32
(*
pOut
, *
pInA
, *
pInB
, 
Á˘‹
, 
drmp3_uöt32
 
ch™√ls
) {

2238 
drmp3_uöt32
 
i
 = 0; i < 
ch™√ls
; ++i) {

2239 
pOut
[
i
] = 
	`drmp3_mix_f32
(
pInA
[i], 
pInB
[i], 
Á˘‹
);

2241 
	}
}

2243 
	$drmp3_§c_ˇche_öô
(
drmp3_§c
 *
pSRC
, 
drmp3_§c_ˇche
 *
pCache
) {

2244 
	`drmp3_as£π
(
pSRC
 !
NULL
);

2245 
	`drmp3_as£π
(
pCache
 !
NULL
);

2247 
pCache
->
pSRC
 =ÖSRC;

2248 
pCache
->
ˇchedFømeCou¡
 = 0;

2249 
pCache
->
iNextFøme
 = 0;

2250 
	}
}

2252 
drmp3_uöt64
 
	$drmp3_§c_ˇche_ªad_‰ames
(
drmp3_§c_ˇche
 *
pCache
, 
drmp3_uöt64
 
‰ameCou¡
, *
pFømesOut
) {

2253 
	`drmp3_as£π
(
pCache
 !
NULL
);

2254 
	`drmp3_as£π
(
pCache
->
pSRC
 !
NULL
);

2255 
	`drmp3_as£π
(
pCache
->
pSRC
->
⁄Ród
 !
NULL
);

2256 
	`drmp3_as£π
(
‰ameCou¡
 > 0);

2257 
	`drmp3_as£π
(
pFømesOut
 !
NULL
);

2259 
drmp3_uöt32
 
ch™√ls
 = 
pCache
->
pSRC
->
c⁄fig
.channels;

2261 
drmp3_uöt64
 
tŸÆFømesRód
 = 0;

2262 
‰ameCou¡
 > 0) {

2264 
drmp3_uöt64
 
‰amesRemaöögInMem‹y
 = 
pCache
->
ˇchedFømeCou¡
 -ÖCache->
iNextFøme
;

2265 
drmp3_uöt64
 
‰amesToRódFromMem‹y
 = 
‰ameCou¡
;

2266 i‡(
‰amesToRódFromMem‹y
 > 
‰amesRemaöögInMem‹y
) {

2267 
‰amesToRódFromMem‹y
 = 
‰amesRemaöögInMem‹y
;

2270 
	`drmp3_c›y_mem‹y
(
pFømesOut
, 
pCache
->
pCachedFømes
 +ÖCache->
iNextFøme
 * 
ch™√ls
,

2271 (
drmp3_uöt32
Ë(
‰amesToRódFromMem‹y
 * 
ch™√ls
 * ()));

2272 
pCache
->
iNextFøme
 +(
drmp3_uöt32
Ë
‰amesToRódFromMem‹y
;

2274 
tŸÆFømesRód
 +
‰amesToRódFromMem‹y
;

2275 
‰ameCou¡
 -
‰amesToRódFromMem‹y
;

2276 i‡(
‰ameCou¡
 == 0) {

2282 
	`drmp3_as£π
(
‰ameCou¡
 > 0);

2283 
pFømesOut
 +
‰amesToRódFromMem‹y
 * 
ch™√ls
;

2285 
pCache
->
iNextFøme
 = 0;

2286 
pCache
->
ˇchedFømeCou¡
 = 0;

2288 
drmp3_uöt32
 
‰amesToRódFromClõ¡
 = 
	`drmp3_cou¡of
(
pCache
->
pCachedFømes
Ë/ÖCache->
pSRC
->
c⁄fig
.
ch™√ls
;

2289 i‡(
‰amesToRódFromClõ¡
 > 
pCache
->
pSRC
->
c⁄fig
.
ˇcheSizeInFømes
) {

2290 
‰amesToRódFromClõ¡
 = 
pCache
->
pSRC
->
c⁄fig
.
ˇcheSizeInFømes
;

2293 
pCache
->
ˇchedFømeCou¡
 = (
drmp3_uöt32
ËpCache->
pSRC
->
	`⁄Ród
’Cache->pSRC, 
‰amesToRódFromClõ¡
,

2294 
pCache
->
pCachedFømes
,ÖCache->
pSRC
->
pU£rD©a
);

2298 i‡(
pCache
->
ˇchedFømeCou¡
 == 0) {

2303  
tŸÆFømesRód
;

2304 
	}
}

2307 
drmp3_uöt64


2308 
drmp3_§c_ªad_‰ames_∑s°hrough
(
drmp3_§c
 *
pSRC
, 
drmp3_uöt64
 
‰ameCou¡
, *
pFømesOut
, 
drmp3_boﬁ32
 
Êush
);

2310 
drmp3_uöt64


2311 
drmp3_§c_ªad_‰ames_löór
(
drmp3_§c
 *
pSRC
, 
drmp3_uöt64
 
‰ameCou¡
, *
pFømesOut
, 
drmp3_boﬁ32
 
Êush
);

2313 
drmp3_boﬁ32


2314 
	$drmp3_§c_öô
(c⁄° 
drmp3_§c_c⁄fig
 *
pC⁄fig
, 
drmp3_§c_ªad_¥oc
 
⁄Ród
, *
pU£rD©a
, 
drmp3_§c
 *
pSRC
) {

2315 i‡(
pSRC
 =
NULL
Ë 
DRMP3_FALSE
;

2316 
	`drmp3_zîo_obje˘
(
pSRC
);

2318 i‡(
pC⁄fig
 =
NULL
 || 
⁄Ród
 =NULLË 
DRMP3_FALSE
;

2319 i‡(
pC⁄fig
->
ch™√ls
 =0 ||ÖC⁄fig->ch™√l†> 2Ë 
DRMP3_FALSE
;

2321 
pSRC
->
c⁄fig
 = *
pC⁄fig
;

2322 
pSRC
->
⁄Ród
 = onRead;

2323 
pSRC
->
pU£rD©a
 =ÖUserData;

2325 i‡(
pSRC
->
c⁄fig
.
ˇcheSizeInFømes
 > 
DRMP3_SRC_CACHE_SIZE_IN_FRAMES
 ||ÖSRC->config.cacheSizeInFrames == 0) {

2326 
pSRC
->
c⁄fig
.
ˇcheSizeInFømes
 = 
DRMP3_SRC_CACHE_SIZE_IN_FRAMES
;

2329 
	`drmp3_§c_ˇche_öô
(
pSRC
, &pSRC->
ˇche
);

2330  
DRMP3_TRUE
;

2331 
	}
}

2333 
drmp3_boﬁ32
 
	$drmp3_§c_£t_öput_ßm∂e_øã
(
drmp3_§c
 *
pSRC
, 
drmp3_uöt32
 
ßm∂eR©eIn
) {

2334 i‡(
pSRC
 =
NULL
Ë 
DRMP3_FALSE
;

2337 i‡(
ßm∂eR©eIn
 == 0) {

2338  
DRMP3_FALSE
;

2341 
pSRC
->
c⁄fig
.
ßm∂eR©eIn
 = sampleRateIn;

2342  
DRMP3_TRUE
;

2343 
	}
}

2345 
drmp3_boﬁ32
 
	$drmp3_§c_£t_ouçut_ßm∂e_øã
(
drmp3_§c
 *
pSRC
, 
drmp3_uöt32
 
ßm∂eR©eOut
) {

2346 i‡(
pSRC
 =
NULL
Ë 
DRMP3_FALSE
;

2349 i‡(
ßm∂eR©eOut
 == 0) {

2350  
DRMP3_FALSE
;

2353 
pSRC
->
c⁄fig
.
ßm∂eR©eOut
 = sampleRateOut;

2354  
DRMP3_TRUE
;

2355 
	}
}

2357 
drmp3_uöt64
 
	$drmp3_§c_ªad_‰ames_ex
(
drmp3_§c
 *
pSRC
, 
drmp3_uöt64
 
‰ameCou¡
, *
pFømesOut
, 
drmp3_boﬁ32
 
Êush
) {

2358 i‡(
pSRC
 =
NULL
 || 
‰ameCou¡
 =0 || 
pFømesOut
 == NULL)  0;

2360 
drmp3_§c_Æg‹ôhm
 
Æg‹ôhm
 = 
pSRC
->
c⁄fig
.algorithm;

2363 i‡(
pSRC
->
c⁄fig
.
ßm∂eR©eIn
 =pSRC->c⁄fig.
ßm∂eR©eOut
) {

2364 
Æg‹ôhm
 = 
drmp3_§c_Æg‹ôhm_n⁄e
;

2368 
Æg‹ôhm
) {

2369 
drmp3_§c_Æg‹ôhm_n⁄e
:

2370  
	`drmp3_§c_ªad_‰ames_∑s°hrough
(
pSRC
, 
‰ameCou¡
, 
pFømesOut
, 
Êush
);

2371 
drmp3_§c_Æg‹ôhm_löór
:

2372  
	`drmp3_§c_ªad_‰ames_löór
(
pSRC
, 
‰ameCou¡
, 
pFømesOut
, 
Êush
);

2376 
	}
}

2378 
drmp3_uöt64
 
	$drmp3_§c_ªad_‰ames
(
drmp3_§c
 *
pSRC
, 
drmp3_uöt64
 
‰ameCou¡
, *
pFømesOut
) {

2379  
	`drmp3_§c_ªad_‰ames_ex
(
pSRC
, 
‰ameCou¡
, 
pFømesOut
, 
DRMP3_FALSE
);

2380 
	}
}

2382 
drmp3_uöt64


2383 
	$drmp3_§c_ªad_‰ames_∑s°hrough
(
drmp3_§c
 *
pSRC
, 
drmp3_uöt64
 
‰ameCou¡
, *
pFømesOut
, 
drmp3_boﬁ32
 
Êush
) {

2384 
	`drmp3_as£π
(
pSRC
 !
NULL
);

2385 
	`drmp3_as£π
(
‰ameCou¡
 > 0);

2386 
	`drmp3_as£π
(
pFømesOut
 !
NULL
);

2388 (Ë
Êush
;

2389  
pSRC
->
	`⁄Ród
’SRC, 
‰ameCou¡
, 
pFømesOut
,ÖSRC->
pU£rD©a
);

2390 
	}
}

2392 
drmp3_uöt64


2393 
	$drmp3_§c_ªad_‰ames_löór
(
drmp3_§c
 *
pSRC
, 
drmp3_uöt64
 
‰ameCou¡
, *
pFømesOut
, 
drmp3_boﬁ32
 
Êush
) {

2394 
	`drmp3_as£π
(
pSRC
 !
NULL
);

2395 
	`drmp3_as£π
(
‰ameCou¡
 > 0);

2396 
	`drmp3_as£π
(
pFømesOut
 !
NULL
);

2401 i‡(!
pSRC
->
Ægo
.
löór
.
isPªvFømesLﬂded
) {

2402 
drmp3_uöt64
 
‰amesRód
 = 
	`drmp3_§c_ˇche_ªad_‰ames
(&
pSRC
->
ˇche
, 1,ÖSRC->
bö
);

2403 i‡(
‰amesRód
 == 0) {

2406 
pSRC
->
Ægo
.
löór
.
isPªvFømesLﬂded
 = 
DRMP3_TRUE
;

2408 i‡(!
pSRC
->
Ægo
.
löór
.
isNextFømesLﬂded
) {

2409 
drmp3_uöt64
 
‰amesRód
 = 
	`drmp3_§c_ˇche_ªad_‰ames
(&
pSRC
->
ˇche
, 1,ÖSRC->
bö
 +ÖSRC->
c⁄fig
.
ch™√ls
);

2410 i‡(
‰amesRód
 == 0) {

2413 
pSRC
->
Ægo
.
löór
.
isNextFømesLﬂded
 = 
DRMP3_TRUE
;

2416 
Á˘‹
 = (Ë
pSRC
->
c⁄fig
.
ßm∂eR©eIn
 /ÖSRC->c⁄fig.
ßm∂eR©eOut
;

2418 
drmp3_uöt64
 
tŸÆFømesRód
 = 0;

2419 
‰ameCou¡
 > 0) {

2421 *
pPªvFøme
 = 
pSRC
->
bö
;

2422 *
pNextFøme
 = 
pSRC
->
bö
 +ÖSRC->
c⁄fig
.
ch™√ls
;

2424 
	`drmp3_bÀnd_f32
((*Ë
pFømesOut
, 
pPªvFøme
, 
pNextFøme
, (Ë
pSRC
->
Ægo
.
löór
.
Æpha
,

2425 
pSRC
->
c⁄fig
.
ch™√ls
);

2427 
pSRC
->
Ægo
.
löór
.
Æpha
 +
Á˘‹
;

2430 
drmp3_uöt32
 
‰amesToRódFromClõ¡
 = (drmp3_uöt32Ë
pSRC
->
Ægo
.
löór
.
Æpha
;

2431 
pSRC
->
Ægo
.
löór
.
Æpha
 =ÖSRC->Ægo.löór.Æph®- 
‰amesToRódFromClõ¡
;

2433 
drmp3_uöt32
 
i
 = 0; i < 
‰amesToRódFromClõ¡
; ++i) {

2434 
drmp3_uöt32
 
j
 = 0; j < 
pSRC
->
c⁄fig
.
ch™√ls
; ++j) {

2435 
pPªvFøme
[
j
] = 
pNextFøme
[j];

2438 
drmp3_uöt64
 
‰amesRód
 = 
	`drmp3_§c_ˇche_ªad_‰ames
(&
pSRC
->
ˇche
, 1, 
pNextFøme
);

2439 i‡(
‰amesRód
 == 0) {

2440 
drmp3_uöt32
 
j
 = 0; j < 
pSRC
->
c⁄fig
.
ch™√ls
; ++j) {

2441 
pNextFøme
[
j
] = 0;

2444 i‡(
pSRC
->
Ægo
.
löór
.
isNextFømesLﬂded
) {

2445 
pSRC
->
Ægo
.
löór
.
isNextFømesLﬂded
 = 
DRMP3_FALSE
;

2447 i‡(
Êush
) {

2448 
pSRC
->
Ægo
.
löór
.
isPªvFømesLﬂded
 = 
DRMP3_FALSE
;

2456 
pFømesOut
 = (
drmp3_uöt8
 *ËpFømesOuà+ (1 * 
pSRC
->
c⁄fig
.
ch™√ls
 * ());

2457 
‰ameCou¡
 -= 1;

2458 
tŸÆFømesRód
 += 1;

2461 i‡(!
pSRC
->
Ægo
.
löór
.
isNextFømesLﬂded
 && (!
Êush
 || !pSRC->Ægo.löór.
isPªvFømesLﬂded
)) {

2466  
tŸÆFømesRód
;

2467 
	}
}

2470 
size_t
 
	$drmp3__⁄_ªad
(
drmp3
 *
pMP3
, *
pBuf„rOut
, 
size_t
 
byãsToRód
) {

2471 
size_t
 
byãsRód
 = 
pMP3
->
	`⁄Ród
’MP3->
pU£rD©a
, 
pBuf„rOut
, 
byãsToRód
);

2472 
pMP3
->
°ªamCurs‹
 +
byãsRód
;

2473  
byãsRód
;

2474 
	}
}

2476 
drmp3_boﬁ32
 
	$drmp3__⁄_£ek
(
drmp3
 *
pMP3
, 
off£t
, 
drmp3_£ek_‹igö
 
‹igö
) {

2477 
	`drmp3_as£π
(
off£t
 >= 0);

2479 i‡(!
pMP3
->
	`⁄Sìk
’MP3->
pU£rD©a
, 
off£t
, 
‹igö
)) {

2480  
DRMP3_FALSE
;

2483 i‡(
‹igö
 =
drmp3_£ek_‹igö_°¨t
) {

2484 
pMP3
->
°ªamCurs‹
 = (
drmp3_uöt64
Ë
off£t
;

2486 
pMP3
->
°ªamCurs‹
 +
off£t
;

2489  
DRMP3_TRUE
;

2490 
	}
}

2492 
drmp3_boﬁ32
 
	$drmp3__⁄_£ek_64
(
drmp3
 *
pMP3
, 
drmp3_uöt64
 
off£t
, 
drmp3_£ek_‹igö
 
‹igö
) {

2493 i‡(
off£t
 <= 0x7FFFFFFF) {

2494  
	`drmp3__⁄_£ek
(
pMP3
, (Ë
off£t
, 
‹igö
);

2499 i‡(!
	`drmp3__⁄_£ek
(
pMP3
, 0x7FFFFFFF, 
drmp3_£ek_‹igö_°¨t
)) {

2500  
DRMP3_FALSE
;

2503 
off£t
 -= 0x7FFFFFFF;

2504 
off£t
 > 0) {

2505 i‡(
off£t
 <= 0x7FFFFFFF) {

2506 i‡(!
	`drmp3__⁄_£ek
(
pMP3
, (Ë
off£t
, 
drmp3_£ek_‹igö_cuºít
)) {

2507  
DRMP3_FALSE
;

2509 
off£t
 = 0;

2511 i‡(!
	`drmp3__⁄_£ek
(
pMP3
, 0x7FFFFFFF, 
drmp3_£ek_‹igö_cuºít
)) {

2512  
DRMP3_FALSE
;

2514 
off£t
 -= 0x7FFFFFFF;

2518  
DRMP3_TRUE
;

2519 
	}
}

2522 
drmp3_uöt32
 
	$drmp3_decode_√xt_‰ame_ex
(
drmp3
 *
pMP3
, 
drmp3d_ßm∂e_t
 *
pPCMFømes
, 
drmp3_boﬁ32
 
disˇrd
) {

2523 
	`drmp3_as£π
(
pMP3
 !
NULL
);

2524 
	`drmp3_as£π
(
pMP3
->
⁄Ród
 !
NULL
);

2526 i‡(
pMP3
->
©End
) {

2530 
drmp3_uöt32
 
pcmFømesRód
 = 0;

2533 i‡(
pMP3
->
d©aSize
 < 
DRMP3_DATA_CHUNK_SIZE
) {

2534 i‡(
pMP3
->
d©aC≠acôy
 < 
DRMP3_DATA_CHUNK_SIZE
) {

2535 
pMP3
->
d©aC≠acôy
 = 
DRMP3_DATA_CHUNK_SIZE
;

2536 
drmp3_uöt8
 *
pNewD©a
 = (drmp3_uöt8 *Ë
	`drmp3_ªÆloc
(
pMP3
->
pD©a
,ÖMP3->
d©aC≠acôy
);

2537 i‡(
pNewD©a
 =
NULL
) {

2541 
pMP3
->
pD©a
 = 
pNewD©a
;

2544 
size_t
 
byãsRód
 = 
	`drmp3__⁄_ªad
(
pMP3
,ÖMP3->
pD©a
 +ÖMP3->
d©aSize
,

2545 (
pMP3
->
d©aC≠acôy
 -ÖMP3->
d©aSize
));

2546 i‡(
byãsRód
 == 0) {

2547 i‡(
pMP3
->
d©aSize
 == 0) {

2548 
pMP3
->
©End
 = 
DRMP3_TRUE
;

2553 
pMP3
->
d©aSize
 +
byãsRód
;

2556 i‡(
pMP3
->
d©aSize
 > 
INT_MAX
) {

2557 
pMP3
->
©End
 = 
DRMP3_TRUE
;

2561 
drmp3dec_‰ame_öfo
 
öfo
;

2562 
pcmFømesRód
 = 
	`drmp3dec_decode_‰ame
(&
pMP3
->
decodî
,ÖMP3->
pD©a
, (ËpMP3->
d©aSize
, 
pPCMFømes
,

2563 &
öfo
);

2566 
size_t
 
À·ovîD©aSize
 = (
pMP3
->
d©aSize
 - (size_tË
öfo
.
‰ame_byãs
);

2567 i‡(
öfo
.
‰ame_byãs
 > 0) {

2568 
	`memmove
(
pMP3
->
pD©a
,ÖMP3->pD©®+ 
öfo
.
‰ame_byãs
, 
À·ovîD©aSize
);

2569 
pMP3
->
d©aSize
 = 
À·ovîD©aSize
;

2574 i‡(
pcmFømesRód
 > 0 || (
öfo
.
‰ame_byãs
 > 0 && 
disˇrd
)) {

2575 
pcmFømesRód
 = 
	`drmp3_hdr_‰ame_ßm∂es
(
pMP3
->
decodî
.
hódî
);

2576 
pMP3
->
pcmFømesC⁄sumedInMP3Føme
 = 0;

2577 
pMP3
->
pcmFømesRemaöögInMP3Føme
 = 
pcmFømesRód
;

2578 
pMP3
->
mp3FømeCh™√ls
 = 
öfo
.
ch™√ls
;

2579 
pMP3
->
mp3FømeSam∂eR©e
 = 
öfo
.
hz
;

2580 
	`drmp3_§c_£t_öput_ßm∂e_øã
(&
pMP3
->
§c
,ÖMP3->
mp3FømeSam∂eR©e
);

2582 } i‡(
öfo
.
‰ame_byãs
 == 0) {

2584 i‡(
pMP3
->
d©aC≠acôy
 =pMP3->
d©aSize
) {

2586 
pMP3
->
d©aC≠acôy
 +
DRMP3_DATA_CHUNK_SIZE
;

2587 
drmp3_uöt8
 *
pNewD©a
 = (drmp3_uöt8 *Ë
	`drmp3_ªÆloc
(
pMP3
->
pD©a
,ÖMP3->
d©aC≠acôy
);

2588 i‡(
pNewD©a
 =
NULL
) {

2592 
pMP3
->
pD©a
 = 
pNewD©a
;

2596 
size_t
 
byãsRód
 = 
	`drmp3__⁄_ªad
(
pMP3
,ÖMP3->
pD©a
 +ÖMP3->
d©aSize
,

2597 (
pMP3
->
d©aC≠acôy
 -ÖMP3->
d©aSize
));

2598 i‡(
byãsRód
 == 0) {

2599 
pMP3
->
©End
 = 
DRMP3_TRUE
;

2603 
pMP3
->
d©aSize
 +
byãsRód
;

2605 } 
DRMP3_TRUE
);

2607  
pcmFømesRód
;

2608 
	}
}

2610 
drmp3_uöt32
 
	$drmp3_decode_√xt_‰ame
(
drmp3
 *
pMP3
) {

2611 
	`drmp3_as£π
(
pMP3
 !
NULL
);

2612  
	`drmp3_decode_√xt_‰ame_ex
(
pMP3
, (
drmp3d_ßm∂e_t
 *ËpMP3->
pcmFømes
, 
DRMP3_FALSE
);

2613 
	}
}

2616 
drmp3_uöt32
 
	$drmp3_£ek_√xt_‰ame
(
drmp3
* 
pMP3
)

2618 
	`drmp3_as£π
(
pMP3
 !
NULL
);

2620 
drmp3_uöt32
 
pcmFømeCou¡
 = 
	`drmp3_decode_√xt_‰ame_ex
(
pMP3
, 
NULL
);

2621 i‡(
pcmFømeCou¡
 == 0) {

2626 
pMP3
->
cuºítPCMFøme
 +
pcmFømeCou¡
;

2627 
pMP3
->
pcmFømesC⁄sumedInMP3Føme
 = 
pcmFømeCou¡
;

2628 
pMP3
->
pcmFømesRemaöögInMP3Føme
 = 0;

2630  
pcmFømeCou¡
;

2631 
	}
}

2634 
drmp3_uöt64
 
	$drmp3_ªad_§c
(
drmp3_§c
 *
pSRC
, 
drmp3_uöt64
 
‰ameCou¡
, *
pFømesOut
, *
pU£rD©a
) {

2635 
drmp3
 *
pMP3
 = (drmp3 *Ë
pU£rD©a
;

2636 
	`drmp3_as£π
(
pMP3
 !
NULL
);

2637 
	`drmp3_as£π
(
pMP3
->
⁄Ród
 !
NULL
);

2639 *
pFømesOutF
 = (*Ë
pFømesOut
;

2640 
drmp3_uöt64
 
tŸÆFømesRód
 = 0;

2642 
‰ameCou¡
 > 0) {

2644 
pMP3
->
pcmFømesRemaöögInMP3Føme
 > 0 && 
‰ameCou¡
 > 0) {

2645 
drmp3d_ßm∂e_t
 *
‰ames
 = (drmp3d_ßm∂e_à*Ë
pMP3
->
pcmFømes
;

2646 #i‚de‡
DR_MP3_FLOAT_OUTPUT


2647 i‡(
pMP3
->
mp3FømeCh™√ls
 == 1) {

2648 i‡(
pMP3
->
ch™√ls
 == 1) {

2650 
pFømesOutF
[0] = 
‰ames
[
pMP3
->
pcmFømesC⁄sumedInMP3Føme
] / 32768.0f;

2653 
pFømesOutF
[0] = 
‰ames
[
pMP3
->
pcmFømesC⁄sumedInMP3Føme
] / 32768.0f;

2654 
pFømesOutF
[1] = 
‰ames
[
pMP3
->
pcmFømesC⁄sumedInMP3Føme
] / 32768.0f;

2657 i‡(
pMP3
->
ch™√ls
 == 1) {

2659 
ßm∂e
 = 0;

2660 
ßm∂e
 +
‰ames
[(
pMP3
->
pcmFømesC⁄sumedInMP3Føme
 *ÖMP3->
mp3FømeCh™√ls
) + 0] / 32768.0f;

2661 
ßm∂e
 +
‰ames
[(
pMP3
->
pcmFømesC⁄sumedInMP3Føme
 *ÖMP3->
mp3FømeCh™√ls
) + 1] / 32768.0f;

2662 
pFømesOutF
[0] = 
ßm∂e
 * 0.5f;

2665 
pFømesOutF
[0] =

2666 
‰ames
[(
pMP3
->
pcmFømesC⁄sumedInMP3Føme
 *ÖMP3->
mp3FømeCh™√ls
) + 0] / 32768.0f;

2667 
pFømesOutF
[1] =

2668 
‰ames
[(
pMP3
->
pcmFømesC⁄sumedInMP3Føme
 *ÖMP3->
mp3FømeCh™√ls
) + 1] / 32768.0f;

2672 i‡(
pMP3
->
mp3FømeCh™√ls
 == 1) {

2673 i‡(
pMP3
->
ch™√ls
 == 1) {

2675 
pFømesOutF
[0] = 
‰ames
[
pMP3
->
pcmFømesC⁄sumedInMP3Føme
];

2678 
pFømesOutF
[0] = 
‰ames
[
pMP3
->
pcmFømesC⁄sumedInMP3Føme
];

2679 
pFømesOutF
[1] = 
‰ames
[
pMP3
->
pcmFømesC⁄sumedInMP3Føme
];

2682 i‡(
pMP3
->
ch™√ls
 == 1) {

2684 
ßm∂e
 = 0;

2685 
ßm∂e
 +
‰ames
[(
pMP3
->
pcmFømesC⁄sumedInMP3Føme
*pMP3->
mp3FømeCh™√ls
)+0];

2686 
ßm∂e
 +
‰ames
[(
pMP3
->
pcmFømesC⁄sumedInMP3Føme
*pMP3->
mp3FømeCh™√ls
)+1];

2687 
pFømesOutF
[0] = 
ßm∂e
 * 0.5f;

2690 
pFømesOutF
[0] = 
‰ames
[(
pMP3
->
pcmFømesC⁄sumedInMP3Føme
*pMP3->
mp3FømeCh™√ls
)+0];

2691 
pFømesOutF
[1] = 
‰ames
[(
pMP3
->
pcmFømesC⁄sumedInMP3Føme
*pMP3->
mp3FømeCh™√ls
)+1];

2696 
pMP3
->
pcmFømesC⁄sumedInMP3Føme
 += 1;

2697 
pMP3
->
pcmFømesRemaöögInMP3Føme
 -= 1;

2698 
tŸÆFømesRód
 += 1;

2699 
‰ameCou¡
 -= 1;

2700 
pFømesOutF
 +
pSRC
->
c⁄fig
.
ch™√ls
;

2703 i‡(
‰ameCou¡
 == 0) {

2707 
	`drmp3_as£π
(
pMP3
->
pcmFømesRemaöögInMP3Føme
 == 0);

2711 i‡(
	`drmp3_decode_√xt_‰ame
(
pMP3
) == 0) {

2716  
tŸÆFømesRód
;

2717 
	}
}

2719 
drmp3_boﬁ32
 
	$drmp3_öô_öã∫Æ
(
drmp3
 *
pMP3
, 
drmp3_ªad_¥oc
 
⁄Ród
, 
drmp3_£ek_¥oc
 
⁄Sìk
, *
pU£rD©a
,

2720 c⁄° 
drmp3_c⁄fig
 *
pC⁄fig
) {

2721 
	`drmp3_as£π
(
pMP3
 !
NULL
);

2722 
	`drmp3_as£π
(
⁄Ród
 !
NULL
);

2725 
	`drmp3dec_öô
(&
pMP3
->
decodî
);

2728 
drmp3_c⁄fig
 
c⁄fig
;

2729 i‡(
pC⁄fig
 !
NULL
) {

2730 
c⁄fig
 = *
pC⁄fig
;

2732 
	`drmp3_zîo_obje˘
(&
c⁄fig
);

2735 
pMP3
->
ch™√ls
 = 
c⁄fig
.
ouçutCh™√ls
;

2736 i‡(
pMP3
->
ch™√ls
 == 0) {

2737 
pMP3
->
ch™√ls
 = 
DR_MP3_DEFAULT_CHANNELS
;

2741 i‡(
pMP3
->
ch™√ls
 > 2) {

2742 
pMP3
->
ch™√ls
 = 2;

2745 
pMP3
->
ßm∂eR©e
 = 
c⁄fig
.
ouçutSam∂eR©e
;

2746 i‡(
pMP3
->
ßm∂eR©e
 == 0) {

2747 
pMP3
->
ßm∂eR©e
 = 
DR_MP3_DEFAULT_SAMPLE_RATE
;

2750 
pMP3
->
⁄Ród
 = onRead;

2751 
pMP3
->
⁄Sìk
 = onSeek;

2752 
pMP3
->
pU£rD©a
 =ÖUserData;

2755 
drmp3_§c_c⁄fig
 
§cC⁄fig
;

2756 
	`drmp3_zîo_obje˘
(&
§cC⁄fig
);

2757 
§cC⁄fig
.
ßm∂eR©eIn
 = 
DR_MP3_DEFAULT_SAMPLE_RATE
;

2758 
§cC⁄fig
.
ßm∂eR©eOut
 = 
pMP3
->
ßm∂eR©e
;

2759 
§cC⁄fig
.
ch™√ls
 = 
pMP3
->channels;

2760 
§cC⁄fig
.
Æg‹ôhm
 = 
drmp3_§c_Æg‹ôhm_löór
;

2761 i‡(!
	`drmp3_§c_öô
(&
§cC⁄fig
, 
drmp3_ªad_§c
, 
pMP3
, &pMP3->
§c
)) {

2762 
	`drmp3_unöô
(
pMP3
);

2763  
DRMP3_FALSE
;

2767 i‡(!
	`drmp3_decode_√xt_‰ame
(
pMP3
)) {

2768 
	`drmp3_unöô
(
pMP3
);

2769  
DRMP3_FALSE
;

2772  
DRMP3_TRUE
;

2773 
	}
}

2775 
drmp3_boﬁ32


2776 
	$drmp3_öô
(
drmp3
 *
pMP3
, 
drmp3_ªad_¥oc
 
⁄Ród
, 
drmp3_£ek_¥oc
 
⁄Sìk
, *
pU£rD©a
, c⁄° 
drmp3_c⁄fig
 *
pC⁄fig
) {

2777 i‡(
pMP3
 =
NULL
 || 
⁄Ród
 == NULL) {

2778  
DRMP3_FALSE
;

2781 
	`drmp3_zîo_obje˘
(
pMP3
);

2782  
	`drmp3_öô_öã∫Æ
(
pMP3
, 
⁄Ród
, 
⁄Sìk
, 
pU£rD©a
, 
pC⁄fig
);

2783 
	}
}

2786 
size_t
 
	$drmp3__⁄_ªad_mem‹y
(*
pU£rD©a
, *
pBuf„rOut
, 
size_t
 
byãsToRód
) {

2787 
drmp3
 *
pMP3
 = (drmp3 *Ë
pU£rD©a
;

2788 
	`drmp3_as£π
(
pMP3
 !
NULL
);

2789 
	`drmp3_as£π
(
pMP3
->
mem‹y
.
d©aSize
 >pMP3->mem‹y.
cuºítRódPos
);

2791 
size_t
 
byãsRemaöög
 = 
pMP3
->
mem‹y
.
d©aSize
 -ÖMP3->mem‹y.
cuºítRódPos
;

2792 i‡(
byãsToRód
 > 
byãsRemaöög
) {

2793 
byãsToRód
 = 
byãsRemaöög
;

2796 i‡(
byãsToRód
 > 0) {

2797 
	`drmp3_c›y_mem‹y
(
pBuf„rOut
, 
pMP3
->
mem‹y
.
pD©a
 +ÖMP3->mem‹y.
cuºítRódPos
, 
byãsToRód
);

2798 
pMP3
->
mem‹y
.
cuºítRódPos
 +
byãsToRód
;

2801  
byãsToRód
;

2802 
	}
}

2804 
drmp3_boﬁ32
 
	$drmp3__⁄_£ek_mem‹y
(*
pU£rD©a
, 
byãOff£t
, 
drmp3_£ek_‹igö
 
‹igö
) {

2805 
drmp3
 *
pMP3
 = (drmp3 *Ë
pU£rD©a
;

2806 
	`drmp3_as£π
(
pMP3
 !
NULL
);

2808 i‡(
‹igö
 =
drmp3_£ek_‹igö_cuºít
) {

2809 i‡(
byãOff£t
 > 0) {

2810 i‡(
pMP3
->
mem‹y
.
cuºítRódPos
 + 
byãOff£t
 >ÖMP3->mem‹y.
d©aSize
) {

2811 
byãOff£t
 = (Ë(
pMP3
->
mem‹y
.
d©aSize
 -

2812 
pMP3
->
mem‹y
.
cuºítRódPos
);

2815 i‡(
pMP3
->
mem‹y
.
cuºítRódPos
 < (
size_t
Ë-
byãOff£t
) {

2816 
byãOff£t
 = -(Ë
pMP3
->
mem‹y
.
cuºítRódPos
;

2821 
pMP3
->
mem‹y
.
cuºítRódPos
 +
byãOff£t
;

2823 i‡((
drmp3_uöt32
Ë
byãOff£t
 <
pMP3
->
mem‹y
.
d©aSize
) {

2824 
pMP3
->
mem‹y
.
cuºítRódPos
 = 
byãOff£t
;

2826 
pMP3
->
mem‹y
.
cuºítRódPos
 =ÖMP3->mem‹y.
d©aSize
;

2830  
DRMP3_TRUE
;

2831 
	}
}

2833 
drmp3_boﬁ32
 
	$drmp3_öô_mem‹y
(
drmp3
 *
pMP3
, c⁄° *
pD©a
, 
size_t
 
d©aSize
, c⁄° 
drmp3_c⁄fig
 *
pC⁄fig
) {

2834 i‡(
pMP3
 =
NULL
) {

2835  
DRMP3_FALSE
;

2838 
	`drmp3_zîo_obje˘
(
pMP3
);

2840 i‡(
pD©a
 =
NULL
 || 
d©aSize
 == 0) {

2841  
DRMP3_FALSE
;

2844 
pMP3
->
mem‹y
.
pD©a
 = (c⁄° 
drmp3_uöt8
 *)ÖData;

2845 
pMP3
->
mem‹y
.
d©aSize
 = dataSize;

2846 
pMP3
->
mem‹y
.
cuºítRódPos
 = 0;

2848  
	`drmp3_öô_öã∫Æ
(
pMP3
, 
drmp3__⁄_ªad_mem‹y
, 
drmp3__⁄_£ek_mem‹y
,ÖMP3, 
pC⁄fig
);

2849 
	}
}

2852 #i‚de‡
DR_MP3_NO_STDIO


2854 
	~<°dio.h
>

2856 
size_t
 
	$drmp3__⁄_ªad_°dio
(*
pU£rD©a
, *
pBuf„rOut
, 
size_t
 
byãsToRód
) {

2857  
	`‰ód
(
pBuf„rOut
, 1, 
byãsToRód
, (
FILE
 *Ë
pU£rD©a
);

2858 
	}
}

2860 
drmp3_boﬁ32
 
	$drmp3__⁄_£ek_°dio
(*
pU£rD©a
, 
off£t
, 
drmp3_£ek_‹igö
 
‹igö
) {

2861  
	`f£ek
((
FILE
 *Ë
pU£rD©a
, 
off£t
, (
‹igö
 =
drmp3_£ek_‹igö_cuºít
Ë? 
SEEK_CUR
 : 
SEEK_SET
) == 0;

2862 
	}
}

2864 
drmp3_boﬁ32
 
	$drmp3_öô_fûe
(
drmp3
 *
pMP3
, c⁄° *
fûeP©h
, c⁄° 
drmp3_c⁄fig
 *
pC⁄fig
) {

2865 
FILE
 *
pFûe
;

2866 #i‡
	`deföed
(
_MSC_VER
) && _MSC_VER >= 1400

2867 i‡(
	`f›í_s
(&
pFûe
, 
fûeP©h
, "rb") != 0) {

2868  
DRMP3_FALSE
;

2871 
pFûe
 = 
	`f›í
(
fûeP©h
, "rb");

2872 i‡(
pFûe
 =
NULL
) {

2873  
DRMP3_FALSE
;

2877  
	`drmp3_öô
(
pMP3
, 
drmp3__⁄_ªad_°dio
, 
drmp3__⁄_£ek_°dio
, (*Ë
pFûe
, 
pC⁄fig
);

2878 
	}
}

2882 
	$drmp3_unöô
(
drmp3
 *
pMP3
) {

2883 i‡(
pMP3
 =
NULL
) {

2887 #i‚de‡
DR_MP3_NO_STDIO


2888 i‡(
pMP3
->
⁄Ród
 =
drmp3__⁄_ªad_°dio
) {

2889 
	`f˛o£
((
FILE
 *Ë
pMP3
->
pU£rD©a
);

2893 
	`drmp3_‰ì
(
pMP3
->
pD©a
);

2894 
	}
}

2896 
drmp3_uöt64
 
	$drmp3_ªad_pcm_‰ames_f32
(
drmp3
 *
pMP3
, 
drmp3_uöt64
 
‰amesToRód
, *
pBuf„rOut
) {

2897 i‡(
pMP3
 =
NULL
 ||ÖMP3->
⁄Ród
 == NULL) {

2901 
drmp3_uöt64
 
tŸÆFømesRód
 = 0;

2903 i‡(
pBuf„rOut
 =
NULL
) {

2904 
ãmp
[4096];

2905 
‰amesToRód
 > 0) {

2906 
drmp3_uöt64
 
‰amesToRódRightNow
 = (
ãmp
Ë/ —emp[0]Ë/ 
pMP3
->
ch™√ls
;

2907 i‡(
‰amesToRódRightNow
 > 
‰amesToRód
) {

2908 
‰amesToRódRightNow
 = 
‰amesToRód
;

2911 
drmp3_uöt64
 
‰amesJu°Ród
 = 
	`drmp3_ªad_pcm_‰ames_f32
(
pMP3
, 
‰amesToRódRightNow
, 
ãmp
);

2912 i‡(
‰amesJu°Ród
 == 0) {

2916 
‰amesToRód
 -
‰amesJu°Ród
;

2917 
tŸÆFømesRód
 +
‰amesJu°Ród
;

2920 
tŸÆFømesRód
 = 
	`drmp3_§c_ªad_‰ames_ex
(&
pMP3
->
§c
, 
‰amesToRód
, 
pBuf„rOut
, 
DRMP3_TRUE
);

2921 
pMP3
->
cuºítPCMFøme
 +
tŸÆFømesRód
;

2924  
tŸÆFømesRód
;

2925 
	}
}

2927 
	$drmp3_ª£t
(
drmp3
 *
pMP3
) {

2928 
	`drmp3_as£π
(
pMP3
 !
NULL
);

2930 
pMP3
->
pcmFømesC⁄sumedInMP3Føme
 = 0;

2931 
pMP3
->
pcmFømesRemaöögInMP3Føme
 = 0;

2932 
pMP3
->
cuºítPCMFøme
 = 0;

2933 
pMP3
->
d©aSize
 = 0;

2934 
pMP3
->
©End
 = 
DRMP3_FALSE
;

2935 
pMP3
->
§c
.
bö
[0] = 0;

2936 
pMP3
->
§c
.
bö
[1] = 0;

2937 
pMP3
->
§c
.
bö
[2] = 0;

2938 
pMP3
->
§c
.
bö
[3] = 0;

2939 
pMP3
->
§c
.
ˇche
.
ˇchedFømeCou¡
 = 0;

2940 
pMP3
->
§c
.
ˇche
.
iNextFøme
 = 0;

2941 
pMP3
->
§c
.
Ægo
.
löór
.
Æpha
 = 0;

2942 
pMP3
->
§c
.
Ægo
.
löór
.
isNextFømesLﬂded
 = 0;

2943 
pMP3
->
§c
.
Ægo
.
löór
.
isPªvFømesLﬂded
 = 0;

2945 
	`drmp3dec_öô
(&
pMP3
->
decodî
);

2946 
	}
}

2948 
drmp3_boﬁ32
 
	$drmp3_£ek_to_°¨t_of_°ªam
(
drmp3
 *
pMP3
) {

2949 
	`drmp3_as£π
(
pMP3
 !
NULL
);

2950 
	`drmp3_as£π
(
pMP3
->
⁄Sìk
 !
NULL
);

2953 i‡(!
	`drmp3__⁄_£ek
(
pMP3
, 0, 
drmp3_£ek_‹igö_°¨t
)) {

2954  
DRMP3_FALSE
;

2958 
	`drmp3_ª£t
(
pMP3
);

2959  
DRMP3_TRUE
;

2960 
	}
}

2962 
	$drmp3_gë_ˇched_pcm_‰ame_cou¡_‰om_§c
(
drmp3
 *
pMP3
) {

2963  (
pMP3
->
§c
.
ˇche
.
ˇchedFømeCou¡
 -ÖMP3->§c.ˇche.
iNextFøme
Ë+ (ËpMP3->§c.
Ægo
.
löór
.
Æpha
;

2964 
	}
}

2966 
	$drmp3_gë_pcm_‰ames_ªmaöög_ö_mp3_‰ame
(
drmp3
 *
pMP3
) {

2967 
Á˘‹
 = (Ë
pMP3
->
§c
.
c⁄fig
.
ßm∂eR©eOut
 / (ËpMP3->§c.c⁄fig.
ßm∂eR©eIn
;

2968 
‰ameCou¡PªSRC
 = 
	`drmp3_gë_ˇched_pcm_‰ame_cou¡_‰om_§c
(
pMP3
Ë+ÖMP3->
pcmFømesRemaöögInMP3Føme
;

2969  
‰ameCou¡PªSRC
 * 
Á˘‹
;

2970 
	}
}

2982 
drmp3_boﬁ32
 
	$drmp3_£ek_f‹w¨d_by_pcm_‰ames__bruã_f‹˚
(
drmp3
 *
pMP3
, 
drmp3_uöt64
 
‰ameOff£t
) {

2988 
drmp3_uöt64
 
maxFømesToRódAndDisˇrd
 = (drmp3_uöt64)(
DRMP3_MAX_PCM_FRAMES_PER_MP3_FRAME
 * 3 * (()
pMP3
->
§c
.
c⁄fig
.
ßm∂eR©eOut
 / (ÌMP3->§c.c⁄fig.
ßm∂eR©eIn
));

2991 
‰ameOff£t
 > 
maxFømesToRódAndDisˇrd
) {

2992 
pcmFømesRemaöögInCuºítMP3FømeF
 = 
	`drmp3_gë_pcm_‰ames_ªmaöög_ö_mp3_‰ame
(
pMP3
);

2993 
drmp3_uöt32
 
pcmFømesRemaöögInCuºítMP3Føme
 = (drmp3_uöt32)
pcmFømesRemaöögInCuºítMP3FømeF
;

2994 i‡(
‰ameOff£t
 > 
pcmFømesRemaöögInCuºítMP3Føme
) {

2995 
‰ameOff£t
 -
pcmFømesRemaöögInCuºítMP3Føme
;

2996 
pMP3
->
cuºítPCMFøme
 +
pcmFømesRemaöögInCuºítMP3Føme
;

2997 
pMP3
->
pcmFømesC⁄sumedInMP3Føme
 +pMP3->
pcmFømesRemaöögInMP3Føme
;

2998 
pMP3
->
pcmFømesRemaöögInMP3Føme
 = 0;

3003 
drmp3_uöt32
 
pcmFømeCou¡
 = 
	`drmp3_decode_√xt_‰ame_ex
(
pMP3
,ÖMP3->
pcmFømes
, 
DRMP3_FALSE
);

3004 i‡(
pcmFømeCou¡
 == 0) {

3010 
drmp3_uöt64
 
‰amesRód
 = 
	`drmp3_ªad_pcm_‰ames_f32
(
pMP3
, 
‰ameOff£t
, 
NULL
);

3011 i‡(
‰amesRód
 !
‰ameOff£t
) {

3012  
DRMP3_FALSE
;

3016 
drmp3_uöt64
 
‰amesRód
 = 
	`drmp3_ªad_pcm_‰ames_f32
(
pMP3
, 
‰ameOff£t
, 
NULL
);

3017 i‡(
‰amesRód
 !
‰ameOff£t
) {

3018  
DRMP3_FALSE
;

3022  
DRMP3_TRUE
;

3023 
	}
}

3025 
drmp3_boﬁ32
 
	$drmp3_£ek_to_pcm_‰ame__bruã_f‹˚
(
drmp3
 *
pMP3
, 
drmp3_uöt64
 
‰ameIndex
) {

3026 
	`drmp3_as£π
(
pMP3
 !
NULL
);

3028 i‡(
‰ameIndex
 =
pMP3
->
cuºítPCMFøme
) {

3029  
DRMP3_TRUE
;

3035 i‡(
‰ameIndex
 < 
pMP3
->
cuºítPCMFøme
) {

3037 i‡(!
	`drmp3_£ek_to_°¨t_of_°ªam
(
pMP3
)) {

3038  
DRMP3_FALSE
;

3042 
	`drmp3_as£π
(
‰ameIndex
 >
pMP3
->
cuºítPCMFøme
);

3043  
	`drmp3_£ek_f‹w¨d_by_pcm_‰ames__bruã_f‹˚
(
pMP3
, (
‰ameIndex
 -ÖMP3->
cuºítPCMFøme
));

3044 
	}
}

3046 
drmp3_boﬁ32
 
	$drmp3_föd_˛o£°_£ek_poöt
(
drmp3
 *
pMP3
, 
drmp3_uöt64
 
‰ameIndex
, 
drmp3_uöt32
 *
pSìkPoötIndex
) {

3047 
	`drmp3_as£π
(
pSìkPoötIndex
 !
NULL
);

3049 i‡(
‰ameIndex
 < 
pMP3
->
pSìkPoöts
[0].
pcmFømeIndex
) {

3050  
DRMP3_FALSE
;

3054 
drmp3_uöt32
 
iSìkPoöt
 = 0; iSìkPoöà< 
pMP3
->
£ekPoötCou¡
; ++iSeekPoint) {

3055 i‡(
pMP3
->
pSìkPoöts
[
iSìkPoöt
].
pcmFømeIndex
 > 
‰ameIndex
) {

3059 *
pSìkPoötIndex
 = 
iSìkPoöt
;

3062  
DRMP3_TRUE
;

3063 
	}
}

3065 
drmp3_boﬁ32
 
	$drmp3_£ek_to_pcm_‰ame__£ek_èbÀ
(
drmp3
 *
pMP3
, 
drmp3_uöt64
 
‰ameIndex
) {

3066 
	`drmp3_as£π
(
pMP3
 !
NULL
);

3067 
	`drmp3_as£π
(
pMP3
->
pSìkPoöts
 !
NULL
);

3068 
	`drmp3_as£π
(
pMP3
->
£ekPoötCou¡
 > 0);

3070 
drmp3_£ek_poöt
 
£ekPoöt
;

3073 
drmp3_uöt32
 
¥i‹SìkPoötIndex
;

3074 i‡(
	`drmp3_föd_˛o£°_£ek_poöt
(
pMP3
, 
‰ameIndex
, &
¥i‹SìkPoötIndex
)) {

3075 
£ekPoöt
 = 
pMP3
->
pSìkPoöts
[
¥i‹SìkPoötIndex
];

3077 
£ekPoöt
.
£ekPosInByãs
 = 0;

3078 
£ekPoöt
.
pcmFømeIndex
 = 0;

3079 
£ekPoöt
.
mp3FømesToDisˇrd
 = 0;

3080 
£ekPoöt
.
pcmFømesToDisˇrd
 = 0;

3084 i‡(!
	`drmp3__⁄_£ek_64
(
pMP3
, 
£ekPoöt
.
£ekPosInByãs
, 
drmp3_£ek_‹igö_°¨t
)) {

3085  
DRMP3_FALSE
;

3089 
	`drmp3_ª£t
(
pMP3
);

3092 
drmp3_uöt16
 
iMP3Føme
 = 0; iMP3Fømê< 
£ekPoöt
.
mp3FømesToDisˇrd
; ++iMP3Frame) {

3094 
drmp3d_ßm∂e_t
 *
pPCMFømes
 = 
NULL
;

3095 i‡(
iMP3Føme
 =
£ekPoöt
.
mp3FømesToDisˇrd
 - 1) {

3096 
pPCMFømes
 = (
drmp3d_ßm∂e_t
 *Ë
pMP3
->
pcmFømes
;

3100 
drmp3_uöt32
 
pcmFømesRódPªSRC
 = 
	`drmp3_decode_√xt_‰ame_ex
(
pMP3
, 
pPCMFømes
, 
DRMP3_TRUE
);

3101 i‡(
pcmFømesRódPªSRC
 == 0) {

3102  
DRMP3_FALSE
;

3107 
pMP3
->
cuºítPCMFøme
 = 
£ekPoöt
.
pcmFømeIndex
 - sìkPoöt.
pcmFømesToDisˇrd
;

3112 
pMP3
->
§c
.
Ægo
.
löór
.
Æpha
 =

3113 
pMP3
->
cuºítPCMFøme
 * ((ËpMP3->
§c
.
c⁄fig
.
ßm∂eR©eIn
 /ÖMP3->§c.c⁄fig.
ßm∂eR©eOut
);

3114 
pMP3
->
§c
.
Ægo
.
löór
.
Æpha
 =ÖMP3->§c.Ægo.löór.Æph®- (
drmp3_uöt32
) (pMP3->src.algo.linear.alpha);

3115 i‡(
pMP3
->
§c
.
Ægo
.
löór
.
Æpha
 > 0) {

3116 
pMP3
->
§c
.
Ægo
.
löór
.
isPªvFømesLﬂded
 = 1;

3121 
drmp3_uöt64
 
À·ovîFømes
 = 
‰ameIndex
 - 
pMP3
->
cuºítPCMFøme
;

3122  
	`drmp3_£ek_f‹w¨d_by_pcm_‰ames__bruã_f‹˚
(
pMP3
, 
À·ovîFømes
);

3123 
	}
}

3125 
drmp3_boﬁ32
 
	$drmp3_£ek_to_pcm_‰ame
(
drmp3
 *
pMP3
, 
drmp3_uöt64
 
‰ameIndex
) {

3126 i‡(
pMP3
 =
NULL
 ||ÖMP3->
⁄Sìk
 == NULL) {

3127  
DRMP3_FALSE
;

3130 i‡(
‰ameIndex
 == 0) {

3131  
	`drmp3_£ek_to_°¨t_of_°ªam
(
pMP3
);

3135 i‡(
pMP3
->
pSìkPoöts
 !
NULL
 &&ÖMP3->
£ekPoötCou¡
 > 0) {

3136  
	`drmp3_£ek_to_pcm_‰ame__£ek_èbÀ
(
pMP3
, 
‰ameIndex
);

3138  
	`drmp3_£ek_to_pcm_‰ame__bruã_f‹˚
(
pMP3
, 
‰ameIndex
);

3140 
	}
}

3142 
drmp3_boﬁ32


3143 
	$drmp3_gë_mp3_™d_pcm_‰ame_cou¡
(
drmp3
 *
pMP3
, 
drmp3_uöt64
 *
pMP3FømeCou¡
, drmp3_uöt64 *
pPCMFømeCou¡
) {

3144 i‡(
pMP3
 =
NULL
) {

3145  
DRMP3_FALSE
;

3152 i‡(
pMP3
->
⁄Sìk
 =
NULL
) {

3153  
DRMP3_FALSE
;

3157 
drmp3_uöt64
 
cuºítPCMFøme
 = 
pMP3
->currentPCMFrame;

3159 i‡(!
	`drmp3_£ek_to_°¨t_of_°ªam
(
pMP3
)) {

3160  
DRMP3_FALSE
;

3163 
drmp3_uöt64
 
tŸÆPCMFømeCou¡
 = 0;

3164 
drmp3_uöt64
 
tŸÆMP3FømeCou¡
 = 0;

3166 
tŸÆPCMFømeCou¡Fø˘i⁄ÆP¨t
 = 0;

3168 
drmp3_uöt32
 
pcmFømesInCuºítMP3FømeIn
 = 
	`drmp3_decode_√xt_‰ame_ex
(
pMP3
, 
NULL
, 
DRMP3_FALSE
);

3169 i‡(
pcmFømesInCuºítMP3FømeIn
 == 0) {

3173 
§cR©io
 = (Ë
pMP3
->
mp3FømeSam∂eR©e
 / (ËpMP3->
ßm∂eR©e
;

3174 
	`drmp3_as£π
(
§cR©io
 > 0);

3176 
pcmFømesInCuºítMP3FømeOutF
 =

3177 
tŸÆPCMFømeCou¡Fø˘i⁄ÆP¨t
 + (
pcmFømesInCuºítMP3FømeIn
 / 
§cR©io
);

3178 
drmp3_uöt32
 
pcmFømesInCuºítMP3FømeOut
 = (drmp3_uöt32Ë
pcmFømesInCuºítMP3FømeOutF
;

3179 
tŸÆPCMFømeCou¡Fø˘i⁄ÆP¨t
 = 
pcmFømesInCuºítMP3FømeOutF
 - 
pcmFømesInCuºítMP3FømeOut
;

3180 
tŸÆPCMFømeCou¡
 +
pcmFømesInCuºítMP3FømeOut
;

3181 
tŸÆMP3FømeCou¡
 += 1;

3185 i‡(!
	`drmp3_£ek_to_°¨t_of_°ªam
(
pMP3
)) {

3186  
DRMP3_FALSE
;

3189 i‡(!
	`drmp3_£ek_to_pcm_‰ame
(
pMP3
, 
cuºítPCMFøme
)) {

3190  
DRMP3_FALSE
;

3193 i‡(
pMP3FømeCou¡
 !
NULL
) {

3194 *
pMP3FømeCou¡
 = 
tŸÆMP3FømeCou¡
;

3196 i‡(
pPCMFømeCou¡
 !
NULL
) {

3197 *
pPCMFømeCou¡
 = 
tŸÆPCMFømeCou¡
;

3200  
DRMP3_TRUE
;

3201 
	}
}

3203 
drmp3_uöt64
 
	$drmp3_gë_pcm_‰ame_cou¡
(
drmp3
 *
pMP3
) {

3204 
drmp3_uöt64
 
tŸÆPCMFømeCou¡
;

3205 i‡(!
	`drmp3_gë_mp3_™d_pcm_‰ame_cou¡
(
pMP3
, 
NULL
, &
tŸÆPCMFømeCou¡
)) {

3209  
tŸÆPCMFømeCou¡
;

3210 
	}
}

3212 
drmp3_uöt64
 
	$drmp3_gë_mp3_‰ame_cou¡
(
drmp3
 *
pMP3
) {

3213 
drmp3_uöt64
 
tŸÆMP3FømeCou¡
;

3214 i‡(!
	`drmp3_gë_mp3_™d_pcm_‰ame_cou¡
(
pMP3
, &
tŸÆMP3FømeCou¡
, 
NULL
)) {

3218  
tŸÆMP3FømeCou¡
;

3219 
	}
}

3221 
	$drmp3__accumuœã_ru¬ög_pcm_‰ame_cou¡
(
drmp3
 *
pMP3
, 
drmp3_uöt32
 
pcmFømeCou¡In
,

3222 
drmp3_uöt64
 *
pRu¬ögPCMFømeCou¡
,

3223 *
pRu¬ögPCMFømeCou¡Fø˘i⁄ÆP¨t
) {

3224 
§cR©io
 = (Ë
pMP3
->
mp3FømeSam∂eR©e
 / (ËpMP3->
ßm∂eR©e
;

3225 
	`drmp3_as£π
(
§cR©io
 > 0);

3227 
pcmFømeCou¡OutF
 = *
pRu¬ögPCMFømeCou¡Fø˘i⁄ÆP¨t
 + (
pcmFømeCou¡In
 / 
§cR©io
);

3228 
drmp3_uöt32
 
pcmFømeCou¡Out
 = (drmp3_uöt32Ë
pcmFømeCou¡OutF
;

3229 *
pRu¬ögPCMFømeCou¡Fø˘i⁄ÆP¨t
 = 
pcmFømeCou¡OutF
 - 
pcmFømeCou¡Out
;

3230 *
pRu¬ögPCMFømeCou¡
 +
pcmFømeCou¡Out
;

3231 
	}
}

3234 
drmp3_uöt64
 
	mbyãPos
;

3235 
drmp3_uöt64
 
	mpcmFømeIndex
;

3236 } 
	tdrmp3__£ekög_mp3_‰ame_öfo
;

3238 
drmp3_boﬁ32
 
	$drmp3_ˇlcuœã_£ek_poöts
(
drmp3
 *
pMP3
, 
drmp3_uöt32
 *
pSìkPoötCou¡
, 
drmp3_£ek_poöt
 *
pSìkPoöts
) {

3239 i‡(
pMP3
 =
NULL
 || 
pSìkPoötCou¡
 =NULL || 
pSìkPoöts
 == NULL) {

3240  
DRMP3_FALSE
;

3243 
drmp3_uöt32
 
£ekPoötCou¡
 = *
pSìkPoötCou¡
;

3244 i‡(
£ekPoötCou¡
 == 0) {

3245  
DRMP3_FALSE
;

3249 
drmp3_uöt64
 
cuºítPCMFøme
 = 
pMP3
->currentPCMFrame;

3252 
drmp3_uöt64
 
tŸÆMP3FømeCou¡
;

3253 
drmp3_uöt64
 
tŸÆPCMFømeCou¡
;

3254 i‡(!
	`drmp3_gë_mp3_™d_pcm_‰ame_cou¡
(
pMP3
, &
tŸÆMP3FømeCou¡
, &
tŸÆPCMFømeCou¡
)) {

3255  
DRMP3_FALSE
;

3259 i‡(
tŸÆMP3FømeCou¡
 < 
DRMP3_SEEK_LEADING_MP3_FRAMES
 + 1) {

3260 
£ekPoötCou¡
 = 1;

3261 
pSìkPoöts
[0].
£ekPosInByãs
 = 0;

3262 
pSìkPoöts
[0].
pcmFømeIndex
 = 0;

3263 
pSìkPoöts
[0].
mp3FømesToDisˇrd
 = 0;

3264 
pSìkPoöts
[0].
pcmFømesToDisˇrd
 = 0;

3266 i‡(
£ekPoötCou¡
 > 
tŸÆMP3FømeCou¡
 - 1) {

3267 
£ekPoötCou¡
 = (
drmp3_uöt32
Ë
tŸÆMP3FømeCou¡
 - 1;

3270 
drmp3_uöt64
 
pcmFømesBëwìnSìkPoöts
 = 
tŸÆPCMFømeCou¡
 / (
£ekPoötCou¡
 + 1);

3274 i‡(!
	`drmp3_£ek_to_°¨t_of_°ªam
(
pMP3
)) {

3275  
DRMP3_FALSE
;

3280 
drmp3__£ekög_mp3_‰ame_öfo
 
mp3FømeInfo
[
DRMP3_SEEK_LEADING_MP3_FRAMES
 + 1];

3282 
drmp3_uöt64
 
ru¬ögPCMFømeCou¡
 = 0;

3283 
ru¬ögPCMFømeCou¡Fø˘i⁄ÆP¨t
 = 0;

3286 
iMP3Føme
 = 0; iMP3Fømê< 
DRMP3_SEEK_LEADING_MP3_FRAMES
 + 1; ++iMP3Frame) {

3288 
	`drmp3_as£π
(
pMP3
->
°ªamCurs‹
 >pMP3->
d©aSize
);

3289 
mp3FømeInfo
[
iMP3Føme
].
byãPos
 = 
pMP3
->
°ªamCurs‹
 -ÖMP3->
d©aSize
;

3290 
mp3FømeInfo
[
iMP3Føme
].
pcmFømeIndex
 = 
ru¬ögPCMFømeCou¡
;

3293 
drmp3_uöt32
 
pcmFømesInCuºítMP3FømeIn
 = 
	`drmp3_decode_√xt_‰ame_ex
(
pMP3
, 
NULL
, 
DRMP3_FALSE
);

3294 i‡(
pcmFømesInCuºítMP3FømeIn
 == 0) {

3295  
DRMP3_FALSE
;

3298 
	`drmp3__accumuœã_ru¬ög_pcm_‰ame_cou¡
(
pMP3
, 
pcmFømesInCuºítMP3FømeIn
, &
ru¬ögPCMFømeCou¡
,

3299 &
ru¬ögPCMFømeCou¡Fø˘i⁄ÆP¨t
);

3304 
drmp3_uöt64
 
√xtT¨gëPCMFøme
 = 0;

3305 
drmp3_uöt32
 
iSìkPoöt
 = 0; iSìkPoöà< 
£ekPoötCou¡
; ++iSeekPoint) {

3306 
√xtT¨gëPCMFøme
 +
pcmFømesBëwìnSìkPoöts
;

3309 i‡(
√xtT¨gëPCMFøme
 < 
ru¬ögPCMFømeCou¡
) {

3311 
pSìkPoöts
[
iSìkPoöt
].
£ekPosInByãs
 = 
mp3FømeInfo
[0].
byãPos
;

3312 
pSìkPoöts
[
iSìkPoöt
].
pcmFømeIndex
 = 
√xtT¨gëPCMFøme
;

3313 
pSìkPoöts
[
iSìkPoöt
].
mp3FømesToDisˇrd
 = 
DRMP3_SEEK_LEADING_MP3_FRAMES
;

3314 
pSìkPoöts
[
iSìkPoöt
].
pcmFømesToDisˇrd
 = (
drmp3_uöt16
Ë(
√xtT¨gëPCMFøme
 - 
mp3FømeInfo
[

3315 
DRMP3_SEEK_LEADING_MP3_FRAMES
 - 1].
pcmFømeIndex
);

3320 
size_t
 
i
 = 0; i < 
	`drmp3_cou¡of
(
mp3FømeInfo
) - 1; ++i) {

3321 
mp3FømeInfo
[
i
] = mp3FrameInfo[i + 1];

3325 
mp3FømeInfo
[
	`drmp3_cou¡of
(mp3FømeInfoË- 1].
byãPos
 = 
pMP3
->
°ªamCurs‹
 -ÖMP3->
d©aSize
;

3326 
mp3FømeInfo
[
	`drmp3_cou¡of
(mp3FømeInfoË- 1].
pcmFømeIndex
 = 
ru¬ögPCMFømeCou¡
;

3330 
drmp3_uöt32
 
pcmFømesInCuºítMP3FømeIn
 = 
	`drmp3_decode_√xt_‰ame_ex
(
pMP3
, 
NULL
, 
DRMP3_TRUE
);

3331 i‡(
pcmFømesInCuºítMP3FømeIn
 == 0) {

3332 
pSìkPoöts
[
iSìkPoöt
].
£ekPosInByãs
 = 
mp3FømeInfo
[0].
byãPos
;

3333 
pSìkPoöts
[
iSìkPoöt
].
pcmFømeIndex
 = 
√xtT¨gëPCMFøme
;

3334 
pSìkPoöts
[
iSìkPoöt
].
mp3FømesToDisˇrd
 = 
DRMP3_SEEK_LEADING_MP3_FRAMES
;

3335 
pSìkPoöts
[
iSìkPoöt
].
pcmFømesToDisˇrd
 = (
drmp3_uöt16
Ë(
√xtT¨gëPCMFøme
 - 
mp3FømeInfo
[

3336 
DRMP3_SEEK_LEADING_MP3_FRAMES
 - 1].
pcmFømeIndex
);

3340 
	`drmp3__accumuœã_ru¬ög_pcm_‰ame_cou¡
(
pMP3
, 
pcmFømesInCuºítMP3FømeIn
, &
ru¬ögPCMFømeCou¡
,

3341 &
ru¬ögPCMFømeCou¡Fø˘i⁄ÆP¨t
);

3347 i‡(!
	`drmp3_£ek_to_°¨t_of_°ªam
(
pMP3
)) {

3348  
DRMP3_FALSE
;

3350 i‡(!
	`drmp3_£ek_to_pcm_‰ame
(
pMP3
, 
cuºítPCMFøme
)) {

3351  
DRMP3_FALSE
;

3355 *
pSìkPoötCou¡
 = 
£ekPoötCou¡
;

3356  
DRMP3_TRUE
;

3357 
	}
}

3359 
drmp3_boﬁ32
 
	$drmp3_böd_£ek_èbÀ
(
drmp3
 *
pMP3
, 
drmp3_uöt32
 
£ekPoötCou¡
, 
drmp3_£ek_poöt
 *
pSìkPoöts
) {

3360 i‡(
pMP3
 =
NULL
) {

3361  
DRMP3_FALSE
;

3364 i‡(
£ekPoötCou¡
 =0 || 
pSìkPoöts
 =
NULL
) {

3366 
pMP3
->
£ekPoötCou¡
 = 0;

3367 
pMP3
->
pSìkPoöts
 = 
NULL
;

3370 
pMP3
->
£ekPoötCou¡
 = seekPointCount;

3371 
pMP3
->
pSìkPoöts
 =ÖSeekPoints;

3374  
DRMP3_TRUE
;

3375 
	}
}

3378 *
	$drmp3__fuŒ_ªad_™d_˛o£_f32
(
drmp3
 *
pMP3
, 
drmp3_c⁄fig
 *
pC⁄fig
, 
drmp3_uöt64
 *
pTŸÆFømeCou¡
) {

3379 
	`drmp3_as£π
(
pMP3
 !
NULL
);

3381 
drmp3_uöt64
 
tŸÆFømesRód
 = 0;

3382 
drmp3_uöt64
 
‰amesC≠acôy
 = 0;

3383 *
pFømes
 = 
NULL
;

3385 
ãmp
[4096];

3387 
drmp3_uöt64
 
‰amesToRódRightNow
 = 
	`drmp3_cou¡of
(
ãmp
Ë/ 
pMP3
->
ch™√ls
;

3388 
drmp3_uöt64
 
‰amesJu°Ród
 = 
	`drmp3_ªad_pcm_‰ames_f32
(
pMP3
, 
‰amesToRódRightNow
, 
ãmp
);

3389 i‡(
‰amesJu°Ród
 == 0) {

3394 i‡(
‰amesC≠acôy
 < 
tŸÆFømesRód
 + 
‰amesJu°Ród
) {

3395 
‰amesC≠acôy
 *= 2;

3396 i‡(
‰amesC≠acôy
 < 
tŸÆFømesRód
 + 
‰amesJu°Ród
) {

3397 
‰amesC≠acôy
 = 
tŸÆFømesRód
 + 
‰amesJu°Ród
;

3400 
drmp3_uöt64
 
√wFømesBuf„rSize
 = 
‰amesC≠acôy
 * 
pMP3
->
ch™√ls
 * ();

3401 i‡(
√wFømesBuf„rSize
 > 
DRMP3_SIZE_MAX
) {

3405 *
pNewFømes
 = (*Ë
	`drmp3_ªÆloc
(
pFømes
, (
size_t
Ë
√wFømesBuf„rSize
);

3406 i‡(
pNewFømes
 =
NULL
) {

3407 
	`drmp3_‰ì
(
pFømes
);

3411 
pFømes
 = 
pNewFømes
;

3414 
	`drmp3_c›y_mem‹y
(
pFømes
 + 
tŸÆFømesRód
 * 
pMP3
->
ch™√ls
, 
ãmp
,

3415 (
size_t
Ë(
‰amesJu°Ród
 * 
pMP3
->
ch™√ls
 * ()));

3416 
tŸÆFømesRód
 +
‰amesJu°Ród
;

3419 i‡(
‰amesJu°Ród
 !
‰amesToRódRightNow
) {

3424 i‡(
pC⁄fig
 !
NULL
) {

3425 
pC⁄fig
->
ouçutCh™√ls
 = 
pMP3
->
ch™√ls
;

3426 
pC⁄fig
->
ouçutSam∂eR©e
 = 
pMP3
->
ßm∂eR©e
;

3429 
	`drmp3_unöô
(
pMP3
);

3431 i‡(
pTŸÆFømeCou¡
Ë*pTŸÆFømeCou¡ = 
tŸÆFømesRód
;

3432  
pFømes
;

3433 
	}
}

3435 *
	$drmp3_›í_™d_ªad_f32
(
drmp3_ªad_¥oc
 
⁄Ród
, 
drmp3_£ek_¥oc
 
⁄Sìk
, *
pU£rD©a
, 
drmp3_c⁄fig
 *
pC⁄fig
,

3436 
drmp3_uöt64
 *
pTŸÆFømeCou¡
) {

3437 
drmp3
 
mp3
;

3438 i‡(!
	`drmp3_öô
(&
mp3
, 
⁄Ród
, 
⁄Sìk
, 
pU£rD©a
, 
pC⁄fig
)) {

3439  
NULL
;

3442  
	`drmp3__fuŒ_ªad_™d_˛o£_f32
(&
mp3
, 
pC⁄fig
, 
pTŸÆFømeCou¡
);

3443 
	}
}

3445 *
	$drmp3_›í_mem‹y_™d_ªad_f32
(c⁄° *
pD©a
, 
size_t
 
d©aSize
, 
drmp3_c⁄fig
 *
pC⁄fig
,

3446 
drmp3_uöt64
 *
pTŸÆFømeCou¡
) {

3447 
drmp3
 
mp3
;

3448 i‡(!
	`drmp3_öô_mem‹y
(&
mp3
, 
pD©a
, 
d©aSize
, 
pC⁄fig
)) {

3449  
NULL
;

3452  
	`drmp3__fuŒ_ªad_™d_˛o£_f32
(&
mp3
, 
pC⁄fig
, 
pTŸÆFømeCou¡
);

3453 
	}
}

3455 #i‚de‡
DR_MP3_NO_STDIO


3457 *
	$drmp3_›í_fûe_™d_ªad_f32
(c⁄° *
fûeP©h
, 
drmp3_c⁄fig
 *
pC⁄fig
, 
drmp3_uöt64
 *
pTŸÆFømeCou¡
) {

3458 
drmp3
 
mp3
;

3459 i‡(!
	`drmp3_öô_fûe
(&
mp3
, 
fûeP©h
, 
pC⁄fig
)) {

3460  
NULL
;

3463  
	`drmp3__fuŒ_ªad_™d_˛o£_f32
(&
mp3
, 
pC⁄fig
, 
pTŸÆFømeCou¡
);

3464 
	}
}

3468 
	$drmp3_‰ì
(*
p
) {

3469 
	`DRMP3_FREE
(
p
);

3470 
	}
}

	@rnnoise/examples/dr_wav.h

148 #i‚de‡
dr_wav_h


149 
	#dr_wav_h


	)

151 
	~<°ddef.h
>

153 #i‡
deföed
(
_MSC_VER
) && _MSC_VER < 1600

154 sig√d 
	tdrwav_öt8
;

155 
	tdrwav_uöt8
;

156 sig√d 
	tdrwav_öt16
;

157 
	tdrwav_uöt16
;

158 sig√d 
	tdrwav_öt32
;

159 
	tdrwav_uöt32
;

160 sig√d 
	t__öt64
 
	tdrwav_öt64
;

161 
	t__öt64
 
	tdrwav_uöt64
;

163 
	~<°döt.h
>

164 
öt8_t
 
	tdrwav_öt8
;

165 
uöt8_t
 
	tdrwav_uöt8
;

166 
öt16_t
 
	tdrwav_öt16
;

167 
uöt16_t
 
	tdrwav_uöt16
;

168 
öt32_t
 
	tdrwav_öt32
;

169 
uöt32_t
 
	tdrwav_uöt32
;

170 
öt64_t
 
	tdrwav_öt64
;

171 
uöt64_t
 
	tdrwav_uöt64
;

173 
drwav_uöt8
 
	tdrwav_boﬁ8
;

174 
drwav_uöt32
 
	tdrwav_boﬁ32
;

175 
	#DRWAV_TRUE
 1

	)

176 
	#DRWAV_FALSE
 0

	)

178 #ifde‡
__˝lu•lus


183 
	#DR_WAVE_FORMAT_PCM
 0x1

	)

184 
	#DR_WAVE_FORMAT_ADPCM
 0x2

	)

185 
	#DR_WAVE_FORMAT_IEEE_FLOAT
 0x3

	)

186 
	#DR_WAVE_FORMAT_ALAW
 0x6

	)

187 
	#DR_WAVE_FORMAT_MULAW
 0x7

	)

188 
	#DR_WAVE_FORMAT_DVI_ADPCM
 0x11

	)

189 
	#DR_WAVE_FORMAT_EXTENSIBLE
 0xFFFE

	)

192 #i‚de‡
DRWAV_MAX_SMPL_LOOPS


193 
	#DRWAV_MAX_SMPL_LOOPS
 1

	)

197 
	#DRWAV_SEQUENTIAL
 0x00000001

	)

201 
drwav_£ek_‹igö_°¨t
,

202 
drwav_£ek_‹igö_cuºít


203 } 
	tdrwav_£ek_‹igö
;

207 
drwav_c⁄èöî_riff
,

208 
drwav_c⁄èöî_w64


209 } 
	tdrwav_c⁄èöî
;

215 
drwav_uöt8
 
fourcc
[4];

216 
drwav_uöt8
 
guid
[16];

217 } 
id
;

220 
drwav_uöt64
 
sizeInByãs
;

224 
∑ddögSize
;

225 } 
	tdrwav_chunk_hódî
;

237 
size_t
 (* 
	tdrwav_ªad_¥oc
)(* 
	tpU£rD©a
, * 
	tpBuf„rOut
, 
	tsize_t
 
	tbyãsToRód
);

248 
size_t
 (* 
	tdrwav_wrôe_¥oc
)(* 
	tpU£rD©a
, c⁄° * 
	tpD©a
, 
	tsize_t
 
	tbyãsToWrôe
);

260 
drwav_boﬁ32
 (* 
	tdrwav_£ek_¥oc
)(* 
	tpU£rD©a
, 
	toff£t
, 
	tdrwav_£ek_‹igö
 
	t‹igö
);

276 
drwav_uöt64
 (* 
	tdrwav_chunk_¥oc
)(* 
	tpChunkU£rD©a
, 
	tdrwav_ªad_¥oc
 
	t⁄Ród
, 
	tdrwav_£ek_¥oc
 
	t⁄Sìk
, * 
	tpRódSìkU£rD©a
, c⁄° 
	tdrwav_chunk_hódî
* 
	tpChunkHódî
);

281 c⁄° 
drwav_uöt8
* 
d©a
;

282 
size_t
 
d©aSize
;

283 
size_t
 
cuºítRódPos
;

284 } 
	tdrwav__mem‹y_°ªam
;

289 ** 
µD©a
;

290 
size_t
* 
pD©aSize
;

291 
size_t
 
d©aSize
;

292 
size_t
 
d©aC≠acôy
;

293 
size_t
 
cuºítWrôePos
;

294 } 
	tdrwav__mem‹y_°ªam_wrôe
;

298 
drwav_c⁄èöî
 
c⁄èöî
;

299 
drwav_uöt32
 
f‹m©
;

300 
drwav_uöt32
 
ch™√ls
;

301 
drwav_uöt32
 
ßm∂eR©e
;

302 
drwav_uöt32
 
bôsPîSam∂e
;

303 } 
	tdrwav_d©a_f‹m©
;

309 
drwav_uöt16
 
f‹m©Tag
;

312 
drwav_uöt16
 
ch™√ls
;

315 
drwav_uöt32
 
ßm∂eR©e
;

318 
drwav_uöt32
 
avgByãsPîSec
;

321 
drwav_uöt16
 
blockAlign
;

324 
drwav_uöt16
 
bôsPîSam∂e
;

327 
drwav_uöt16
 
exãndedSize
;

332 
drwav_uöt16
 
vÆidBôsPîSam∂e
;

335 
drwav_uöt32
 
ch™√lMask
;

338 
drwav_uöt8
 
subF‹m©
[16];

339 } 
	tdrwav_fmt
;

343 
drwav_uöt32
 
cuePoötId
;

344 
drwav_uöt32
 
ty≥
;

345 
drwav_uöt32
 
°¨t
;

346 
drwav_uöt32
 
íd
;

347 
drwav_uöt32
 
‰a˘i⁄
;

348 
drwav_uöt32
 
∂ayCou¡
;

349 } 
	tdrwav_sm∂_lo›
;

353 
drwav_uöt32
 
m™uÁ˘uªr
;

354 
drwav_uöt32
 
¥odu˘
;

355 
drwav_uöt32
 
ßm∂ePîiod
;

356 
drwav_uöt32
 
midiUnôyNŸes
;

357 
drwav_uöt32
 
midiPôchFø˘i⁄
;

358 
drwav_uöt32
 
sm±eF‹m©
;

359 
drwav_uöt32
 
sm±eOff£t
;

360 
drwav_uöt32
 
numSam∂eLo›s
;

361 
drwav_uöt32
 
ßm∂îD©a
;

362 
drwav_sm∂_lo›
 
lo›s
[
DRWAV_MAX_SMPL_LOOPS
];

363 } 
	tdrwav_sm∂
;

368 
drwav_ªad_¥oc
 
⁄Ród
;

371 
drwav_wrôe_¥oc
 
⁄Wrôe
;

374 
drwav_£ek_¥oc
 
⁄Sìk
;

377 * 
pU£rD©a
;

381 
drwav_c⁄èöî
 
c⁄èöî
;

385 
drwav_fmt
 
fmt
;

388 
drwav_uöt32
 
ßm∂eR©e
;

391 
drwav_uöt16
 
ch™√ls
;

394 
drwav_uöt16
 
bôsPîSam∂e
;

397 
drwav_uöt16
 
å™¶©edF‹m©Tag
;

400 
drwav_uöt64
 
tŸÆPCMFømeCou¡
;

404 
drwav_uöt64
 
d©aChunkD©aSize
;

407 
drwav_uöt64
 
d©aChunkD©aPos
;

410 
drwav_uöt64
 
byãsRemaöög
;

415 
drwav_uöt64
 
d©aChunkD©aSizeT¨gëWrôe
;

418 
drwav_boﬁ32
 
isSequítülWrôe
;

422 
drwav_sm∂
 
sm∂
;

426 
drwav__mem‹y_°ªam
 
mem‹ySåóm
;

427 
drwav__mem‹y_°ªam_wrôe
 
mem‹ySåómWrôe
;

432 
drwav_uöt64
 
iCuºítSam∂e
;

433 } 
com¥es£d
;

438 
drwav_uöt32
 
byãsRemaöögInBlock
;

439 
drwav_uöt16
 
¥edi˘‹
[2];

440 
drwav_öt32
 
dñè
[2];

441 
drwav_öt32
 
ˇchedSam∂es
[4];

442 
drwav_uöt32
 
ˇchedSam∂eCou¡
;

443 
drwav_öt32
 
¥evSam∂es
[2][2];

444 } 
mßdpcm
;

449 
drwav_uöt32
 
byãsRemaöögInBlock
;

450 
drwav_öt32
 
¥edi˘‹
[2];

451 
drwav_öt32
 
°ïIndex
[2];

452 
drwav_öt32
 
ˇchedSam∂es
[16];

453 
drwav_uöt32
 
ˇchedSam∂eCou¡
;

454 } 
ima
;

457 
drwav_uöt64
 
tŸÆSam∂eCou¡
;

458 } 
	tdrwav
;

491 
drwav_boﬁ32
 
drwav_öô
(
drwav
* 
pWav
, 
drwav_ªad_¥oc
 
⁄Ród
, 
drwav_£ek_¥oc
 
⁄Sìk
, * 
pU£rD©a
);

492 
drwav_boﬁ32
 
drwav_öô_ex
(
drwav
* 
pWav
, 
drwav_ªad_¥oc
 
⁄Ród
, 
drwav_£ek_¥oc
 
⁄Sìk
, 
drwav_chunk_¥oc
 
⁄Chunk
, * 
pRódSìkU£rD©a
, * 
pChunkU£rD©a
, 
drwav_uöt32
 
Êags
);

514 
drwav_boﬁ32
 
drwav_öô_wrôe
(
drwav
* 
pWav
, c⁄° 
drwav_d©a_f‹m©
* 
pF‹m©
, 
drwav_wrôe_¥oc
 
⁄Wrôe
, 
drwav_£ek_¥oc
 
⁄Sìk
, * 
pU£rD©a
);

515 
drwav_boﬁ32
 
drwav_öô_wrôe_£quítül
(
drwav
* 
pWav
, c⁄° 
drwav_d©a_f‹m©
* 
pF‹m©
, 
drwav_uöt64
 
tŸÆSam∂eCou¡
, 
drwav_wrôe_¥oc
 
⁄Wrôe
, * 
pU£rD©a
);

520 
drwav_unöô
(
drwav
* 
pWav
);

540 
drwav
* 
drwav_›í
(
drwav_ªad_¥oc
 
⁄Ród
, 
drwav_£ek_¥oc
 
⁄Sìk
, * 
pU£rD©a
);

541 
drwav
* 
drwav_›í_ex
(
drwav_ªad_¥oc
 
⁄Ród
, 
drwav_£ek_¥oc
 
⁄Sìk
, 
drwav_chunk_¥oc
 
⁄Chunk
, * 
pRódSìkU£rD©a
, * 
pChunkU£rD©a
, 
drwav_uöt32
 
Êags
);

560 
drwav
* 
drwav_›í_wrôe
(c⁄° 
drwav_d©a_f‹m©
* 
pF‹m©
, 
drwav_wrôe_¥oc
 
⁄Wrôe
, 
drwav_£ek_¥oc
 
⁄Sìk
, * 
pU£rD©a
);

561 
drwav
* 
drwav_›í_wrôe_£quítül
(c⁄° 
drwav_d©a_f‹m©
* 
pF‹m©
, 
drwav_uöt64
 
tŸÆSam∂eCou¡
, 
drwav_wrôe_¥oc
 
⁄Wrôe
, * 
pU£rD©a
);

566 
drwav_˛o£
(
drwav
* 
pWav
);

578 
size_t
 
drwav_ªad_øw
(
drwav
* 
pWav
, size_à
byãsToRód
, * 
pBuf„rOut
);

590 
drwav_uöt64
 
drwav_ªad_pcm_‰ames
(
drwav
* 
pWav
, drwav_uöt64 
‰amesToRód
, * 
pBuf„rOut
);

595 
drwav_boﬁ32
 
drwav_£ek_to_pcm_‰ame
(
drwav
* 
pWav
, 
drwav_uöt64
 
èrgëFømeIndex
);

601 
size_t
 
drwav_wrôe_øw
(
drwav
* 
pWav
, size_à
byãsToWrôe
, c⁄° * 
pD©a
);

606 
drwav_uöt64
 
drwav_wrôe_pcm_‰ames
(
drwav
* 
pWav
, drwav_uöt64 
‰amesToWrôe
, c⁄° * 
pD©a
);

610 #i‚de‡
DR_WAV_NO_CONVERSION_API


617 
drwav_uöt64
 
drwav_ªad_pcm_‰ames_s16
(
drwav
* 
pWav
, drwav_uöt64 
‰amesToRód
, 
drwav_öt16
* 
pBuf„rOut
);

620 
drwav_u8_to_s16
(
drwav_öt16
* 
pOut
, c⁄° 
drwav_uöt8
* 
pIn
, 
size_t
 
ßm∂eCou¡
);

623 
drwav_s24_to_s16
(
drwav_öt16
* 
pOut
, c⁄° 
drwav_uöt8
* 
pIn
, 
size_t
 
ßm∂eCou¡
);

626 
drwav_s32_to_s16
(
drwav_öt16
* 
pOut
, c⁄° 
drwav_öt32
* 
pIn
, 
size_t
 
ßm∂eCou¡
);

629 
drwav_f32_to_s16
(
drwav_öt16
* 
pOut
, c⁄° * 
pIn
, 
size_t
 
ßm∂eCou¡
);

632 
drwav_f64_to_s16
(
drwav_öt16
* 
pOut
, c⁄° * 
pIn
, 
size_t
 
ßm∂eCou¡
);

635 
drwav_Æaw_to_s16
(
drwav_öt16
* 
pOut
, c⁄° 
drwav_uöt8
* 
pIn
, 
size_t
 
ßm∂eCou¡
);

638 
drwav_muœw_to_s16
(
drwav_öt16
* 
pOut
, c⁄° 
drwav_uöt8
* 
pIn
, 
size_t
 
ßm∂eCou¡
);

647 
drwav_uöt64
 
drwav_ªad_pcm_‰ames_f32
(
drwav
* 
pWav
, drwav_uöt64 
‰amesToRód
, * 
pBuf„rOut
);

650 
drwav_u8_to_f32
(* 
pOut
, c⁄° 
drwav_uöt8
* 
pIn
, 
size_t
 
ßm∂eCou¡
);

653 
drwav_s16_to_f32
(* 
pOut
, c⁄° 
drwav_öt16
* 
pIn
, 
size_t
 
ßm∂eCou¡
);

656 
drwav_s24_to_f32
(* 
pOut
, c⁄° 
drwav_uöt8
* 
pIn
, 
size_t
 
ßm∂eCou¡
);

659 
drwav_s32_to_f32
(* 
pOut
, c⁄° 
drwav_öt32
* 
pIn
, 
size_t
 
ßm∂eCou¡
);

662 
drwav_f64_to_f32
(* 
pOut
, c⁄° * 
pIn
, 
size_t
 
ßm∂eCou¡
);

665 
drwav_Æaw_to_f32
(* 
pOut
, c⁄° 
drwav_uöt8
* 
pIn
, 
size_t
 
ßm∂eCou¡
);

668 
drwav_muœw_to_f32
(* 
pOut
, c⁄° 
drwav_uöt8
* 
pIn
, 
size_t
 
ßm∂eCou¡
);

677 
drwav_uöt64
 
drwav_ªad_pcm_‰ames_s32
(
drwav
* 
pWav
, drwav_uöt64 
‰amesToRód
, 
drwav_öt32
* 
pBuf„rOut
);

680 
drwav_u8_to_s32
(
drwav_öt32
* 
pOut
, c⁄° 
drwav_uöt8
* 
pIn
, 
size_t
 
ßm∂eCou¡
);

683 
drwav_s16_to_s32
(
drwav_öt32
* 
pOut
, c⁄° 
drwav_öt16
* 
pIn
, 
size_t
 
ßm∂eCou¡
);

686 
drwav_s24_to_s32
(
drwav_öt32
* 
pOut
, c⁄° 
drwav_uöt8
* 
pIn
, 
size_t
 
ßm∂eCou¡
);

689 
drwav_f32_to_s32
(
drwav_öt32
* 
pOut
, c⁄° * 
pIn
, 
size_t
 
ßm∂eCou¡
);

692 
drwav_f64_to_s32
(
drwav_öt32
* 
pOut
, c⁄° * 
pIn
, 
size_t
 
ßm∂eCou¡
);

695 
drwav_Æaw_to_s32
(
drwav_öt32
* 
pOut
, c⁄° 
drwav_uöt8
* 
pIn
, 
size_t
 
ßm∂eCou¡
);

698 
drwav_muœw_to_s32
(
drwav_öt32
* 
pOut
, c⁄° 
drwav_uöt8
* 
pIn
, 
size_t
 
ßm∂eCou¡
);

705 #i‚de‡
DR_WAV_NO_STDIO


712 
drwav_boﬁ32
 
drwav_öô_fûe
(
drwav
* 
pWav
, c⁄° * 
fûíame
);

713 
drwav_boﬁ32
 
drwav_öô_fûe_ex
(
drwav
* 
pWav
, c⁄° * 
fûíame
, 
drwav_chunk_¥oc
 
⁄Chunk
, * 
pChunkU£rD©a
, 
drwav_uöt32
 
Êags
);

720 
drwav_boﬁ32
 
drwav_öô_fûe_wrôe
(
drwav
* 
pWav
, c⁄° * 
fûíame
, c⁄° 
drwav_d©a_f‹m©
* 
pF‹m©
);

721 
drwav_boﬁ32
 
drwav_öô_fûe_wrôe_£quítül
(
drwav
* 
pWav
, c⁄° * 
fûíame
, c⁄° 
drwav_d©a_f‹m©
* 
pF‹m©
, 
drwav_uöt64
 
tŸÆSam∂eCou¡
);

728 
drwav
* 
drwav_›í_fûe
(c⁄° * 
fûíame
);

729 
drwav
* 
drwav_›í_fûe_ex
(c⁄° * 
fûíame
, 
drwav_chunk_¥oc
 
⁄Chunk
, * 
pChunkU£rD©a
, 
drwav_uöt32
 
Êags
);

736 
drwav
* 
drwav_›í_fûe_wrôe
(c⁄° * 
fûíame
, c⁄° 
drwav_d©a_f‹m©
* 
pF‹m©
);

737 
drwav
* 
drwav_›í_fûe_wrôe_£quítül
(c⁄° * 
fûíame
, c⁄° 
drwav_d©a_f‹m©
* 
pF‹m©
, 
drwav_uöt64
 
tŸÆSam∂eCou¡
);

747 
drwav_boﬁ32
 
drwav_öô_mem‹y
(
drwav
* 
pWav
, c⁄° * 
d©a
, 
size_t
 
d©aSize
);

748 
drwav_boﬁ32
 
drwav_öô_mem‹y_ex
(
drwav
* 
pWav
, c⁄° * 
d©a
, 
size_t
 
d©aSize
, 
drwav_chunk_¥oc
 
⁄Chunk
, * 
pChunkU£rD©a
, 
drwav_uöt32
 
Êags
);

756 
drwav_boﬁ32
 
drwav_öô_mem‹y_wrôe
(
drwav
* 
pWav
, ** 
µD©a
, 
size_t
* 
pD©aSize
, c⁄° 
drwav_d©a_f‹m©
* 
pF‹m©
);

757 
drwav_boﬁ32
 
drwav_öô_mem‹y_wrôe_£quítül
(
drwav
* 
pWav
, ** 
µD©a
, 
size_t
* 
pD©aSize
, c⁄° 
drwav_d©a_f‹m©
* 
pF‹m©
, 
drwav_uöt64
 
tŸÆSam∂eCou¡
);

765 
drwav
* 
drwav_›í_mem‹y
(c⁄° * 
d©a
, 
size_t
 
d©aSize
);

766 
drwav
* 
drwav_›í_mem‹y_ex
(c⁄° * 
d©a
, 
size_t
 
d©aSize
, 
drwav_chunk_¥oc
 
⁄Chunk
, * 
pChunkU£rD©a
, 
drwav_uöt32
 
Êags
);

774 
drwav
* 
drwav_›í_mem‹y_wrôe
(** 
µD©a
, 
size_t
* 
pD©aSize
, c⁄° 
drwav_d©a_f‹m©
* 
pF‹m©
);

775 
drwav
* 
drwav_›í_mem‹y_wrôe_£quítül
(** 
µD©a
, 
size_t
* 
pD©aSize
, c⁄° 
drwav_d©a_f‹m©
* 
pF‹m©
, 
drwav_uöt64
 
tŸÆSam∂eCou¡
);

778 #i‚de‡
DR_WAV_NO_CONVERSION_API


780 
drwav_öt16
* 
drwav_›í_™d_ªad_pcm_‰ames_s16
(
drwav_ªad_¥oc
 
⁄Ród
, 
drwav_£ek_¥oc
 
⁄Sìk
, * 
pU£rD©a
, * 
ch™√ls
, * 
ßm∂eR©e
, 
drwav_uöt64
* 
tŸÆFømeCou¡
);

781 * 
drwav_›í_™d_ªad_pcm_‰ames_f32
(
drwav_ªad_¥oc
 
⁄Ród
, 
drwav_£ek_¥oc
 
⁄Sìk
, * 
pU£rD©a
, * 
ch™√ls
, * 
ßm∂eR©e
, 
drwav_uöt64
* 
tŸÆFømeCou¡
);

782 
drwav_öt32
* 
drwav_›í_™d_ªad_pcm_‰ames_s32
(
drwav_ªad_¥oc
 
⁄Ród
, 
drwav_£ek_¥oc
 
⁄Sìk
, * 
pU£rD©a
, * 
ch™√ls
, * 
ßm∂eR©e
, 
drwav_uöt64
* 
tŸÆFømeCou¡
);

783 #i‚de‡
DR_WAV_NO_STDIO


785 
drwav_öt16
* 
drwav_›í_fûe_™d_ªad_pcm_‰ames_s16
(c⁄° * 
fûíame
, * 
ch™√ls
, * 
ßm∂eR©e
, 
drwav_uöt64
* 
tŸÆFømeCou¡
);

786 * 
drwav_›í_fûe_™d_ªad_pcm_‰ames_f32
(c⁄° * 
fûíame
, * 
ch™√ls
, * 
ßm∂eR©e
, 
drwav_uöt64
* 
tŸÆFømeCou¡
);

787 
drwav_öt32
* 
drwav_›í_fûe_™d_ªad_pcm_‰ames_s32
(c⁄° * 
fûíame
, * 
ch™√ls
, * 
ßm∂eR©e
, 
drwav_uöt64
* 
tŸÆFømeCou¡
);

791 
drwav_öt16
* 
drwav_›í_mem‹y_™d_ªad_pcm_‰ames_s16
(c⁄° * 
d©a
, 
size_t
 
d©aSize
, * 
ch™√ls
, * 
ßm∂eR©e
, 
drwav_uöt64
* 
tŸÆFømeCou¡
);

792 * 
drwav_›í_mem‹y_™d_ªad_pcm_‰ames_f32
(c⁄° * 
d©a
, 
size_t
 
d©aSize
, * 
ch™√ls
, * 
ßm∂eR©e
, 
drwav_uöt64
* 
tŸÆFømeCou¡
);

793 
drwav_öt32
* 
drwav_›í_mem‹y_™d_ªad_pcm_‰ames_s32
(c⁄° * 
d©a
, 
size_t
 
d©aSize
, * 
ch™√ls
, * 
ßm∂eR©e
, 
drwav_uöt64
* 
tŸÆFømeCou¡
);

797 
drwav_‰ì
(* 
pD©aRëu∫edByO≥nAndRód
);

802 
drwav_uöt64
 
drwav_ªad
(
drwav
* 
pWav
, drwav_uöt64 
ßm∂esToRód
, * 
pBuf„rOut
);

803 
drwav_uöt64
 
drwav_ªad_s16
(
drwav
* 
pWav
, drwav_uöt64 
ßm∂esToRód
, 
drwav_öt16
* 
pBuf„rOut
);

804 
drwav_uöt64
 
drwav_ªad_f32
(
drwav
* 
pWav
, drwav_uöt64 
ßm∂esToRód
, * 
pBuf„rOut
);

805 
drwav_uöt64
 
drwav_ªad_s32
(
drwav
* 
pWav
, drwav_uöt64 
ßm∂esToRód
, 
drwav_öt32
* 
pBuf„rOut
);

806 
drwav_boﬁ32
 
drwav_£ek_to_ßm∂e
(
drwav
* 
pWav
, 
drwav_uöt64
 
ßm∂e
);

807 
drwav_uöt64
 
drwav_wrôe
(
drwav
* 
pWav
, drwav_uöt64 
ßm∂esToWrôe
, c⁄° * 
pD©a
);

808 #i‚de‡
DR_WAV_NO_CONVERSION_API


809 
drwav_öt16
* 
drwav_›í_™d_ªad_s16
(
drwav_ªad_¥oc
 
⁄Ród
, 
drwav_£ek_¥oc
 
⁄Sìk
, * 
pU£rD©a
, * 
ch™√ls
, * 
ßm∂eR©e
, 
drwav_uöt64
* 
tŸÆSam∂eCou¡
);

810 * 
drwav_›í_™d_ªad_f32
(
drwav_ªad_¥oc
 
⁄Ród
, 
drwav_£ek_¥oc
 
⁄Sìk
, * 
pU£rD©a
, * 
ch™√ls
, * 
ßm∂eR©e
, 
drwav_uöt64
* 
tŸÆSam∂eCou¡
);

811 
drwav_öt32
* 
drwav_›í_™d_ªad_s32
(
drwav_ªad_¥oc
 
⁄Ród
, 
drwav_£ek_¥oc
 
⁄Sìk
, * 
pU£rD©a
, * 
ch™√ls
, * 
ßm∂eR©e
, 
drwav_uöt64
* 
tŸÆSam∂eCou¡
);

812 #i‚de‡
DR_WAV_NO_STDIO


813 
drwav_öt16
* 
drwav_›í_mem‹y_™d_ªad_s16
(c⁄° * 
d©a
, 
size_t
 
d©aSize
, * 
ch™√ls
, * 
ßm∂eR©e
, 
drwav_uöt64
* 
tŸÆSam∂eCou¡
);

814 * 
drwav_›í_fûe_™d_ªad_f32
(c⁄° * 
fûíame
, * 
ch™√ls
, * 
ßm∂eR©e
, 
drwav_uöt64
* 
tŸÆSam∂eCou¡
);

815 
drwav_öt32
* 
drwav_›í_fûe_™d_ªad_s32
(c⁄° * 
fûíame
, * 
ch™√ls
, * 
ßm∂eR©e
, 
drwav_uöt64
* 
tŸÆSam∂eCou¡
);

817 
drwav_öt16
* 
drwav_›í_mem‹y_™d_ªad_s16
(c⁄° * 
d©a
, 
size_t
 
d©aSize
, * 
ch™√ls
, * 
ßm∂eR©e
, 
drwav_uöt64
* 
tŸÆSam∂eCou¡
);

818 * 
drwav_›í_mem‹y_™d_ªad_f32
(c⁄° * 
d©a
, 
size_t
 
d©aSize
, * 
ch™√ls
, * 
ßm∂eR©e
, 
drwav_uöt64
* 
tŸÆSam∂eCou¡
);

819 
drwav_öt32
* 
drwav_›í_mem‹y_™d_ªad_s32
(c⁄° * 
d©a
, 
size_t
 
d©aSize
, * 
ch™√ls
, * 
ßm∂eR©e
, 
drwav_uöt64
* 
tŸÆSam∂eCou¡
);

823 #ifde‡
__˝lu•lus


835 #ifde‡
DR_WAV_IMPLEMENTATION


836 
	~<°dlib.h
>

837 
	~<°rög.h
>

838 
	~<limôs.h
>

840 #i‚de‡
DR_WAV_NO_STDIO


841 
	~<°dio.h
>

845 #i‚de‡
DRWAV_ASSERT


846 
	~<as£π.h
>

847 
	#DRWAV_ASSERT
(
ex¥essi⁄
Ë
	`as£π
”x¥essi⁄)

	)

849 #i‚de‡
DRWAV_MALLOC


850 
	#DRWAV_MALLOC
(
sz
Ë
	`mÆloc
((sz))

	)

852 #i‚de‡
DRWAV_REALLOC


853 
	#DRWAV_REALLOC
(
p
, 
sz
Ë
	`ªÆloc
(’), (sz))

	)

855 #i‚de‡
DRWAV_FREE


856 
	#DRWAV_FREE
(
p
Ë
	`‰ì
(’))

	)

858 #i‚de‡
DRWAV_COPY_MEMORY


859 
	#DRWAV_COPY_MEMORY
(
d°
, 
§c
, 
sz
Ë
	`mem˝y
((d°), (§c), (sz))

	)

861 #i‚de‡
DRWAV_ZERO_MEMORY


862 
	#DRWAV_ZERO_MEMORY
(
p
, 
sz
Ë
	`mem£t
(’), 0, (sz))

	)

865 
	#drwav_cou¡of
(
x
Ë((xË/ (x[0]))

	)

866 
	#drwav_Æign
(
x
, 
a
Ë((((xË+ (aË- 1Ë/ (a)Ë* (a))

	)

867 
	#drwav_mö
(
a
, 
b
Ë((◊Ë< (b)Ë? (aË: (b))

	)

868 
	#drwav_max
(
a
, 
b
Ë((◊Ë> (b)Ë? (aË: (b))

	)

869 
	#drwav_˛amp
(
x
, 
lo
, 
hi
Ë(
	`drwav_max
(÷o), 
	`drwav_mö
((hi), (x))))

	)

871 
	#drwav_as£π
 
DRWAV_ASSERT


	)

872 
	#drwav_c›y_mem‹y
 
DRWAV_COPY_MEMORY


	)

873 
	#drwav_zîo_mem‹y
 
DRWAV_ZERO_MEMORY


	)

875 
drwav_öt32
 
	tdrwav_ªsu…
;

876 
	#DRWAV_SUCCESS
 0

	)

877 
	#DRWAV_ERROR
 -1

	)

878 
	#DRWAV_INVALID_ARGS
 -2

	)

879 
	#DRWAV_INVALID_OPERATION
 -3

	)

880 
	#DRWAV_INVALID_FILE
 -100

	)

881 
	#DRWAV_EOF
 -101

	)

883 
	#DRWAV_MAX_SIMD_VECTOR_SIZE
 64

884 

	)

885 #ifde‡
_MSC_VER


886 
	#DRWAV_INLINE
 
__f‹˚ölöe


	)

888 #ifde‡
__GNUC__


889 
	#DRWAV_INLINE
 
ölöe
 
	`__©åibuã__
((
Æways_ölöe
))

	)

891 
	#DRWAV_INLINE
 
ölöe


	)

895 #i‡
deföed
(
SIZE_MAX
)

896 
	#DRWAV_SIZE_MAX
 
SIZE_MAX


	)

898 #i‡
deföed
(
_WIN64
Ë|| deföed(
_LP64
Ë|| deföed(
__LP64__
)

899 
	#DRWAV_SIZE_MAX
 ((
drwav_uöt64
)0xFFFFFFFFFFFFFFFF)

	)

901 
	#DRWAV_SIZE_MAX
 0xFFFFFFFF

	)

905 c⁄° 
drwav_uöt8
 
	gdrwavGUID_W64_RIFF
[16] = {0x72,0x69,0x66,0x66, 0x2E,0x91, 0xCF,0x11, 0xA5,0xD6, 0x28,0xDB,0x04,0xC1,0x00,0x00};

906 c⁄° 
drwav_uöt8
 
	gdrwavGUID_W64_WAVE
[16] = {0x77,0x61,0x76,0x65, 0xF3,0xAC, 0xD3,0x11, 0x8C,0xD1, 0x00,0xC0,0x4F,0x8E,0xDB,0x8A};

907 c⁄° 
drwav_uöt8
 
	gdrwavGUID_W64_JUNK
[16] = {0x6A,0x75,0x6E,0x6B, 0xF3,0xAC, 0xD3,0x11, 0x8C,0xD1, 0x00,0xC0,0x4F,0x8E,0xDB,0x8A};

908 c⁄° 
drwav_uöt8
 
	gdrwavGUID_W64_FMT
 [16] = {0x66,0x6D,0x74,0x20, 0xF3,0xAC, 0xD3,0x11, 0x8C,0xD1, 0x00,0xC0,0x4F,0x8E,0xDB,0x8A};

909 c⁄° 
drwav_uöt8
 
	gdrwavGUID_W64_FACT
[16] = {0x66,0x61,0x63,0x74, 0xF3,0xAC, 0xD3,0x11, 0x8C,0xD1, 0x00,0xC0,0x4F,0x8E,0xDB,0x8A};

910 c⁄° 
drwav_uöt8
 
	gdrwavGUID_W64_DATA
[16] = {0x64,0x61,0x74,0x61, 0xF3,0xAC, 0xD3,0x11, 0x8C,0xD1, 0x00,0xC0,0x4F,0x8E,0xDB,0x8A};

911 c⁄° 
drwav_uöt8
 
	gdrwavGUID_W64_SMPL
[16] = {0x73,0x6D,0x70,0x6C, 0xF3,0xAC, 0xD3,0x11, 0x8C,0xD1, 0x00,0xC0,0x4F,0x8E,0xDB,0x8A};

913 
DRWAV_INLINE
 
drwav_boﬁ32
 
	$drwav__guid_equÆ
(c⁄° 
drwav_uöt8
 
a
[16], c⁄° drwav_uöt8 
b
[16])

915 c⁄° 
drwav_uöt32
* 
a32
 = (c⁄° drwav_uöt32*)
a
;

916 c⁄° 
drwav_uöt32
* 
b32
 = (c⁄° drwav_uöt32*)
b
;

919 
a32
[0] =
b32
[0] &&

920 
a32
[1] =
b32
[1] &&

921 
a32
[2] =
b32
[2] &&

922 
a32
[3] =
b32
[3];

923 
	}
}

925 
DRWAV_INLINE
 
drwav_boﬁ32
 
	$drwav__fourcc_equÆ
(c⁄° * 
a
, c⁄° * 
b
)

928 
a
[0] =
b
[0] &&

929 
a
[1] =
b
[1] &&

930 
a
[2] =
b
[2] &&

931 
a
[3] =
b
[3];

932 
	}
}

936 
DRWAV_INLINE
 
	$drwav__is_lôée_ídün
()

938 
n
 = 1;

939  (*(*)&
n
) == 1;

940 
	}
}

942 
DRWAV_INLINE
 
	$drwav__byãs_to_u16
(c⁄° * 
d©a
)

944  (
d©a
[0] << 0) | (data[1] << 8);

945 
	}
}

947 
DRWAV_INLINE
 
	$drwav__byãs_to_s16
(c⁄° * 
d©a
)

949  ()
	`drwav__byãs_to_u16
(
d©a
);

950 
	}
}

952 
DRWAV_INLINE
 
	$drwav__byãs_to_u32
(c⁄° * 
d©a
)

954  (
d©a
[0] << 0) | (data[1] << 8) | (data[2] << 16) | (data[3] << 24);

955 
	}
}

957 
DRWAV_INLINE
 
drwav_uöt64
 
	$drwav__byãs_to_u64
(c⁄° * 
d©a
)

960 ((
drwav_uöt64
)
d©a
[0] << 0) | ((drwav_uint64)data[1] << 8) | ((drwav_uint64)data[2] << 16) | ((drwav_uint64)data[3] << 24) |

961 ((
drwav_uöt64
)
d©a
[4] << 32) | ((drwav_uint64)data[5] << 40) | ((drwav_uint64)data[6] << 48) | ((drwav_uint64)data[7] << 56);

962 
	}
}

964 
DRWAV_INLINE
 
	$drwav__byãs_to_guid
(c⁄° * 
d©a
, 
drwav_uöt8
* 
guid
)

966 
i
 = 0; i < 16; ++i) {

967 
guid
[
i
] = 
d©a
[i];

969 
	}
}

972 
DRWAV_INLINE
 
drwav_boﬁ32
 
	$drwav__is_com¥es£d_f‹m©_èg
(
drwav_uöt16
 
f‹m©Tag
)

975 
f‹m©Tag
 =
DR_WAVE_FORMAT_ADPCM
 ||

976 
f‹m©Tag
 =
DR_WAVE_FORMAT_DVI_ADPCM
;

977 
	}
}

979 
drwav_uöt64
 
drwav_ªad_s16__mßdpcm
(
drwav
* 
pWav
, drwav_uöt64 
ßm∂esToRód
, 
drwav_öt16
* 
pBuf„rOut
);

980 
drwav_uöt64
 
drwav_ªad_s16__ima
(
drwav
* 
pWav
, drwav_uöt64 
ßm∂esToRód
, 
drwav_öt16
* 
pBuf„rOut
);

981 
drwav_boﬁ32
 
drwav_öô_wrôe__öã∫Æ
(
drwav
* 
pWav
, c⁄° 
drwav_d©a_f‹m©
* 
pF‹m©
, 
drwav_uöt64
 
tŸÆSam∂eCou¡
, drwav_boﬁ32 
isSequítül
, 
drwav_wrôe_¥oc
 
⁄Wrôe
, 
drwav_£ek_¥oc
 
⁄Sìk
, * 
pU£rD©a
);

982 
drwav
* 
drwav_›í_wrôe__öã∫Æ
(c⁄° 
drwav_d©a_f‹m©
* 
pF‹m©
, 
drwav_uöt64
 
tŸÆSam∂eCou¡
, 
drwav_boﬁ32
 
isSequítül
, 
drwav_wrôe_¥oc
 
⁄Wrôe
, 
drwav_£ek_¥oc
 
⁄Sìk
, * 
pU£rD©a
);

984 
drwav_ªsu…
 
	$drwav__ªad_chunk_hódî
(
drwav_ªad_¥oc
 
⁄Ród
, * 
pU£rD©a
, 
drwav_c⁄èöî
 
c⁄èöî
, 
drwav_uöt64
* 
pRu¬ögByãsRódOut
, 
drwav_chunk_hódî
* 
pHódîOut
)

986 i‡(
c⁄èöî
 =
drwav_c⁄èöî_riff
) {

987 i‡(
	`⁄Ród
(
pU£rD©a
, 
pHódîOut
->
id
.
fourcc
, 4) != 4) {

988  
DRWAV_EOF
;

991 
sizeInByãs
[4];

992 i‡(
	`⁄Ród
(
pU£rD©a
, 
sizeInByãs
, 4) != 4) {

993  
DRWAV_INVALID_FILE
;

996 
pHódîOut
->
sizeInByãs
 = 
	`drwav__byãs_to_u32
(sizeInBytes);

997 
pHódîOut
->
∑ddögSize
 = ()’HódîOut->
sizeInByãs
 % 2);

998 *
pRu¬ögByãsRódOut
 += 8;

1000 i‡(
	`⁄Ród
(
pU£rD©a
, 
pHódîOut
->
id
.
guid
, 16) != 16) {

1001  
DRWAV_EOF
;

1004 
sizeInByãs
[8];

1005 i‡(
	`⁄Ród
(
pU£rD©a
, 
sizeInByãs
, 8) != 8) {

1006  
DRWAV_INVALID_FILE
;

1009 
pHódîOut
->
sizeInByãs
 = 
	`drwav__byãs_to_u64
(sizeInBytes) - 24;

1010 
pHódîOut
->
∑ddögSize
 = ()’HódîOut->
sizeInByãs
 % 8);

1011 *
pRu¬ögByãsRódOut
 += 24;

1014  
DRWAV_SUCCESS
;

1015 
	}
}

1017 
drwav_boﬁ32
 
	$drwav__£ek_f‹w¨d
(
drwav_£ek_¥oc
 
⁄Sìk
, 
drwav_uöt64
 
off£t
, * 
pU£rD©a
)

1019 
drwav_uöt64
 
byãsRemaöögToSìk
 = 
off£t
;

1020 
byãsRemaöögToSìk
 > 0) {

1021 i‡(
byãsRemaöögToSìk
 > 0x7FFFFFFF) {

1022 i‡(!
	`⁄Sìk
(
pU£rD©a
, 0x7FFFFFFF, 
drwav_£ek_‹igö_cuºít
)) {

1023  
DRWAV_FALSE
;

1025 
byãsRemaöögToSìk
 -= 0x7FFFFFFF;

1027 i‡(!
	`⁄Sìk
(
pU£rD©a
, ()
byãsRemaöögToSìk
, 
drwav_£ek_‹igö_cuºít
)) {

1028  
DRWAV_FALSE
;

1030 
byãsRemaöögToSìk
 = 0;

1034  
DRWAV_TRUE
;

1035 
	}
}

1037 
drwav_boﬁ32
 
	$drwav__£ek_‰om_°¨t
(
drwav_£ek_¥oc
 
⁄Sìk
, 
drwav_uöt64
 
off£t
, * 
pU£rD©a
)

1039 i‡(
off£t
 <= 0x7FFFFFFF) {

1040  
	`⁄Sìk
(
pU£rD©a
, ()
off£t
, 
drwav_£ek_‹igö_°¨t
);

1044 i‡(!
	`⁄Sìk
(
pU£rD©a
, 0x7FFFFFFF, 
drwav_£ek_‹igö_°¨t
)) {

1045  
DRWAV_FALSE
;

1047 
off£t
 -= 0x7FFFFFFF;

1050 i‡(
off£t
 <= 0x7FFFFFFF) {

1051  
	`⁄Sìk
(
pU£rD©a
, ()
off£t
, 
drwav_£ek_‹igö_cuºít
);

1054 i‡(!
	`⁄Sìk
(
pU£rD©a
, 0x7FFFFFFF, 
drwav_£ek_‹igö_cuºít
)) {

1055  
DRWAV_FALSE
;

1057 
off£t
 -= 0x7FFFFFFF;

1062 
	}
}

1065 
drwav_boﬁ32
 
	$drwav__ªad_fmt
(
drwav_ªad_¥oc
 
⁄Ród
, 
drwav_£ek_¥oc
 
⁄Sìk
, * 
pU£rD©a
, 
drwav_c⁄èöî
 
c⁄èöî
, 
drwav_uöt64
* 
pRu¬ögByãsRódOut
, 
drwav_fmt
* 
fmtOut
)

1067 
drwav_chunk_hódî
 
hódî
;

1068 i‡(
	`drwav__ªad_chunk_hódî
(
⁄Ród
, 
pU£rD©a
, 
c⁄èöî
, 
pRu¬ögByãsRódOut
, &
hódî
Ë!
DRWAV_SUCCESS
) {

1069  
DRWAV_FALSE
;

1074 (
c⁄èöî
 =
drwav_c⁄èöî_riff
 && !
	`drwav__fourcc_equÆ
(
hódî
.
id
.
fourcc
, "fmà")Ë|| (c⁄èöî =
drwav_c⁄èöî_w64
 && !
	`drwav__guid_equÆ
(hódî.id.
guid
, 
drwavGUID_W64_FMT
))) {

1075 i‡(!
	`drwav__£ek_f‹w¨d
(
⁄Sìk
, 
hódî
.
sizeInByãs
 + hódî.
∑ddögSize
, 
pU£rD©a
)) {

1076  
DRWAV_FALSE
;

1078 *
pRu¬ögByãsRódOut
 +
hódî
.
sizeInByãs
 + hódî.
∑ddögSize
;

1081 i‡(
	`drwav__ªad_chunk_hódî
(
⁄Ród
, 
pU£rD©a
, 
c⁄èöî
, 
pRu¬ögByãsRódOut
, &
hódî
Ë!
DRWAV_SUCCESS
) {

1082  
DRWAV_FALSE
;

1088 i‡(
c⁄èöî
 =
drwav_c⁄èöî_riff
) {

1089 i‡(!
	`drwav__fourcc_equÆ
(
hódî
.
id
.
fourcc
, "fmt ")) {

1090  
DRWAV_FALSE
;

1093 i‡(!
	`drwav__guid_equÆ
(
hódî
.
id
.
guid
, 
drwavGUID_W64_FMT
)) {

1094  
DRWAV_FALSE
;

1099 
fmt
[16];

1100 i‡(
	`⁄Ród
(
pU£rD©a
, 
fmt
, (fmt)) != (fmt)) {

1101  
DRWAV_FALSE
;

1103 *
pRu¬ögByãsRódOut
 +(
fmt
);

1105 
fmtOut
->
f‹m©Tag
 = 
	`drwav__byãs_to_u16
(
fmt
 + 0);

1106 
fmtOut
->
ch™√ls
 = 
	`drwav__byãs_to_u16
(
fmt
 + 2);

1107 
fmtOut
->
ßm∂eR©e
 = 
	`drwav__byãs_to_u32
(
fmt
 + 4);

1108 
fmtOut
->
avgByãsPîSec
 = 
	`drwav__byãs_to_u32
(
fmt
 + 8);

1109 
fmtOut
->
blockAlign
 = 
	`drwav__byãs_to_u16
(
fmt
 + 12);

1110 
fmtOut
->
bôsPîSam∂e
 = 
	`drwav__byãs_to_u16
(
fmt
 + 14);

1112 
fmtOut
->
exãndedSize
 = 0;

1113 
fmtOut
->
vÆidBôsPîSam∂e
 = 0;

1114 
fmtOut
->
ch™√lMask
 = 0;

1115 
	`mem£t
(
fmtOut
->
subF‹m©
, 0, (fmtOut->subFormat));

1117 i‡(
hódî
.
sizeInByãs
 > 16) {

1118 
fmt_cbSize
[2];

1119 i‡(
	`⁄Ród
(
pU£rD©a
, 
fmt_cbSize
, (fmt_cbSize)) != (fmt_cbSize)) {

1120  
DRWAV_FALSE
;

1122 *
pRu¬ögByãsRódOut
 +(
fmt_cbSize
);

1124 
byãsRódSoF¨
 = 18;

1126 
fmtOut
->
exãndedSize
 = 
	`drwav__byãs_to_u16
(
fmt_cbSize
);

1127 i‡(
fmtOut
->
exãndedSize
 > 0) {

1129 i‡(
fmtOut
->
f‹m©Tag
 =
DR_WAVE_FORMAT_EXTENSIBLE
) {

1130 i‡(
fmtOut
->
exãndedSize
 != 22) {

1131  
DRWAV_FALSE
;

1135 i‡(
fmtOut
->
f‹m©Tag
 =
DR_WAVE_FORMAT_EXTENSIBLE
) {

1136 
fmãxt
[22];

1137 i‡(
	`⁄Ród
(
pU£rD©a
, 
fmãxt
, 
fmtOut
->
exãndedSize
) != fmtOut->extendedSize) {

1138  
DRWAV_FALSE
;

1141 
fmtOut
->
vÆidBôsPîSam∂e
 = 
	`drwav__byãs_to_u16
(
fmãxt
 + 0);

1142 
fmtOut
->
ch™√lMask
 = 
	`drwav__byãs_to_u32
(
fmãxt
 + 2);

1143 
	`drwav__byãs_to_guid
(
fmãxt
 + 6, 
fmtOut
->
subF‹m©
);

1145 i‡(!
	`⁄Sìk
(
pU£rD©a
, 
fmtOut
->
exãndedSize
, 
drwav_£ek_‹igö_cuºít
)) {

1146  
DRWAV_FALSE
;

1149 *
pRu¬ögByãsRódOut
 +
fmtOut
->
exãndedSize
;

1151 
byãsRódSoF¨
 +
fmtOut
->
exãndedSize
;

1155 i‡(!
	`⁄Sìk
(
pU£rD©a
, ()(
hódî
.
sizeInByãs
 - 
byãsRódSoF¨
), 
drwav_£ek_‹igö_cuºít
)) {

1156  
DRWAV_FALSE
;

1158 *
pRu¬ögByãsRódOut
 +(
hódî
.
sizeInByãs
 - 
byãsRódSoF¨
);

1161 i‡(
hódî
.
∑ddögSize
 > 0) {

1162 i‡(!
	`⁄Sìk
(
pU£rD©a
, 
hódî
.
∑ddögSize
, 
drwav_£ek_‹igö_cuºít
)) {

1163  
DRWAV_FALSE
;

1165 *
pRu¬ögByãsRódOut
 +
hódî
.
∑ddögSize
;

1168  
DRWAV_TRUE
;

1169 
	}
}

1172 #i‚de‡
DR_WAV_NO_STDIO


1173 
FILE
* 
	$drwav_f›í
(c⁄° * 
fûeP©h
, c⁄° * 
›íMode
)

1175 
FILE
* 
pFûe
;

1176 #i‡
	`deföed
(
_MSC_VER
) && _MSC_VER >= 1400

1177 i‡(
	`f›í_s
(&
pFûe
, 
fûeP©h
, 
›íMode
) != 0) {

1178  
DRWAV_FALSE
;

1181 
pFûe
 = 
	`f›í
(
fûeP©h
, 
›íMode
);

1182 i‡(
pFûe
 =
NULL
) {

1183  
DRWAV_FALSE
;

1187  
pFûe
;

1188 
	}
}

1190 
size_t
 
	$drwav__⁄_ªad_°dio
(* 
pU£rD©a
, * 
pBuf„rOut
, 
size_t
 
byãsToRód
)

1192  
	`‰ód
(
pBuf„rOut
, 1, 
byãsToRód
, (
FILE
*)
pU£rD©a
);

1193 
	}
}

1195 
size_t
 
	$drwav__⁄_wrôe_°dio
(* 
pU£rD©a
, c⁄° * 
pD©a
, 
size_t
 
byãsToWrôe
)

1197  
	`fwrôe
(
pD©a
, 1, 
byãsToWrôe
, (
FILE
*)
pU£rD©a
);

1198 
	}
}

1200 
drwav_boﬁ32
 
	$drwav__⁄_£ek_°dio
(* 
pU£rD©a
, 
off£t
, 
drwav_£ek_‹igö
 
‹igö
)

1202  
	`f£ek
((
FILE
*)
pU£rD©a
, 
off£t
, (
‹igö
 =
drwav_£ek_‹igö_cuºít
Ë? 
SEEK_CUR
 : 
SEEK_SET
) == 0;

1203 
	}
}

1205 
drwav_boﬁ32
 
	$drwav_öô_fûe
(
drwav
* 
pWav
, c⁄° * 
fûíame
)

1207  
	`drwav_öô_fûe_ex
(
pWav
, 
fûíame
, 
NULL
, NULL, 0);

1208 
	}
}

1210 
drwav_boﬁ32
 
	$drwav_öô_fûe_ex
(
drwav
* 
pWav
, c⁄° * 
fûíame
, 
drwav_chunk_¥oc
 
⁄Chunk
, * 
pChunkU£rD©a
, 
drwav_uöt32
 
Êags
)

1212 
FILE
* 
pFûe
 = 
	`drwav_f›í
(
fûíame
, "rb");

1213 i‡(
pFûe
 =
NULL
) {

1214  
DRWAV_FALSE
;

1217  
	`drwav_öô_ex
(
pWav
, 
drwav__⁄_ªad_°dio
, 
drwav__⁄_£ek_°dio
, 
⁄Chunk
, (*)
pFûe
, 
pChunkU£rD©a
, 
Êags
);

1218 
	}
}

1221 
drwav_boﬁ32
 
	$drwav_öô_fûe_wrôe__öã∫Æ
(
drwav
* 
pWav
, c⁄° * 
fûíame
, c⁄° 
drwav_d©a_f‹m©
* 
pF‹m©
, 
drwav_uöt64
 
tŸÆSam∂eCou¡
, 
drwav_boﬁ32
 
isSequítül
)

1223 
FILE
* 
pFûe
 = 
	`drwav_f›í
(
fûíame
, "wb");

1224 i‡(
pFûe
 =
NULL
) {

1225  
DRWAV_FALSE
;

1228  
	`drwav_öô_wrôe__öã∫Æ
(
pWav
, 
pF‹m©
, 
tŸÆSam∂eCou¡
, 
isSequítül
, 
drwav__⁄_wrôe_°dio
, 
drwav__⁄_£ek_°dio
, (*)
pFûe
);

1229 
	}
}

1231 
drwav_boﬁ32
 
	$drwav_öô_fûe_wrôe
(
drwav
* 
pWav
, c⁄° * 
fûíame
, c⁄° 
drwav_d©a_f‹m©
* 
pF‹m©
)

1233  
	`drwav_öô_fûe_wrôe__öã∫Æ
(
pWav
, 
fûíame
, 
pF‹m©
, 0, 
DRWAV_FALSE
);

1234 
	}
}

1236 
drwav_boﬁ32
 
	$drwav_öô_fûe_wrôe_£quítül
(
drwav
* 
pWav
, c⁄° * 
fûíame
, c⁄° 
drwav_d©a_f‹m©
* 
pF‹m©
, 
drwav_uöt64
 
tŸÆSam∂eCou¡
)

1238  
	`drwav_öô_fûe_wrôe__öã∫Æ
(
pWav
, 
fûíame
, 
pF‹m©
, 
tŸÆSam∂eCou¡
, 
DRWAV_TRUE
);

1239 
	}
}

1241 
drwav
* 
	$drwav_›í_fûe
(c⁄° * 
fûíame
)

1243  
	`drwav_›í_fûe_ex
(
fûíame
, 
NULL
, NULL, 0);

1244 
	}
}

1246 
drwav
* 
	$drwav_›í_fûe_ex
(c⁄° * 
fûíame
, 
drwav_chunk_¥oc
 
⁄Chunk
, * 
pChunkU£rD©a
, 
drwav_uöt32
 
Êags
)

1248 
FILE
* 
pFûe
 = 
	`drwav_f›í
(
fûíame
, "rb");

1249 i‡(
pFûe
 =
NULL
) {

1250  
DRWAV_FALSE
;

1253 
drwav
* 
pWav
 = 
	`drwav_›í_ex
(
drwav__⁄_ªad_°dio
, 
drwav__⁄_£ek_°dio
, 
⁄Chunk
, (*)
pFûe
, 
pChunkU£rD©a
, 
Êags
);

1254 i‡(
pWav
 =
NULL
) {

1255 
	`f˛o£
(
pFûe
);

1256  
NULL
;

1259  
pWav
;

1260 
	}
}

1263 
drwav
* 
	$drwav_›í_fûe_wrôe__öã∫Æ
(c⁄° * 
fûíame
, c⁄° 
drwav_d©a_f‹m©
* 
pF‹m©
, 
drwav_uöt64
 
tŸÆSam∂eCou¡
, 
drwav_boﬁ32
 
isSequítül
)

1265 
FILE
* 
pFûe
 = 
	`drwav_f›í
(
fûíame
, "wb");

1266 i‡(
pFûe
 =
NULL
) {

1267  
DRWAV_FALSE
;

1270 
drwav
* 
pWav
 = 
	`drwav_›í_wrôe__öã∫Æ
(
pF‹m©
, 
tŸÆSam∂eCou¡
, 
isSequítül
, 
drwav__⁄_wrôe_°dio
, 
drwav__⁄_£ek_°dio
, (*)
pFûe
);

1271 i‡(
pWav
 =
NULL
) {

1272 
	`f˛o£
(
pFûe
);

1273  
NULL
;

1276  
pWav
;

1277 
	}
}

1279 
drwav
* 
	$drwav_›í_fûe_wrôe
(c⁄° * 
fûíame
, c⁄° 
drwav_d©a_f‹m©
* 
pF‹m©
)

1281  
	`drwav_›í_fûe_wrôe__öã∫Æ
(
fûíame
, 
pF‹m©
, 0, 
DRWAV_FALSE
);

1282 
	}
}

1284 
drwav
* 
	$drwav_›í_fûe_wrôe_£quítül
(c⁄° * 
fûíame
, c⁄° 
drwav_d©a_f‹m©
* 
pF‹m©
, 
drwav_uöt64
 
tŸÆSam∂eCou¡
)

1286  
	`drwav_›í_fûe_wrôe__öã∫Æ
(
fûíame
, 
pF‹m©
, 
tŸÆSam∂eCou¡
, 
DRWAV_TRUE
);

1287 
	}
}

1291 
size_t
 
	$drwav__⁄_ªad_mem‹y
(* 
pU£rD©a
, * 
pBuf„rOut
, 
size_t
 
byãsToRód
)

1293 
drwav__mem‹y_°ªam
* 
mem‹y
 = (drwav__mem‹y_°ªam*)
pU£rD©a
;

1294 
	`drwav_as£π
(
mem‹y
 !
NULL
);

1295 
	`drwav_as£π
(
mem‹y
->
d©aSize
 >mem‹y->
cuºítRódPos
);

1297 
size_t
 
byãsRemaöög
 = 
mem‹y
->
d©aSize
 - mem‹y->
cuºítRódPos
;

1298 i‡(
byãsToRód
 > 
byãsRemaöög
) {

1299 
byãsToRód
 = 
byãsRemaöög
;

1302 i‡(
byãsToRód
 > 0) {

1303 
	`DRWAV_COPY_MEMORY
(
pBuf„rOut
, 
mem‹y
->
d©a
 + mem‹y->
cuºítRódPos
, 
byãsToRód
);

1304 
mem‹y
->
cuºítRódPos
 +
byãsToRód
;

1307  
byãsToRód
;

1308 
	}
}

1310 
drwav_boﬁ32
 
	$drwav__⁄_£ek_mem‹y
(* 
pU£rD©a
, 
off£t
, 
drwav_£ek_‹igö
 
‹igö
)

1312 
drwav__mem‹y_°ªam
* 
mem‹y
 = (drwav__mem‹y_°ªam*)
pU£rD©a
;

1313 
	`drwav_as£π
(
mem‹y
 !
NULL
);

1315 i‡(
‹igö
 =
drwav_£ek_‹igö_cuºít
) {

1316 i‡(
off£t
 > 0) {

1317 i‡(
mem‹y
->
cuºítRódPos
 + 
off£t
 > mem‹y->
d©aSize
) {

1318  
DRWAV_FALSE
;

1321 i‡(
mem‹y
->
cuºítRódPos
 < (
size_t
)-
off£t
) {

1322  
DRWAV_FALSE
;

1327 
mem‹y
->
cuºítRódPos
 +
off£t
;

1329 i‡((
drwav_uöt32
)
off£t
 <
mem‹y
->
d©aSize
) {

1330 
mem‹y
->
cuºítRódPos
 = 
off£t
;

1332  
DRWAV_FALSE
;

1336  
DRWAV_TRUE
;

1337 
	}
}

1339 
size_t
 
	$drwav__⁄_wrôe_mem‹y
(* 
pU£rD©a
, c⁄° * 
pD©aIn
, 
size_t
 
byãsToWrôe
)

1341 
drwav__mem‹y_°ªam_wrôe
* 
mem‹y
 = (drwav__mem‹y_°ªam_wrôe*)
pU£rD©a
;

1342 
	`drwav_as£π
(
mem‹y
 !
NULL
);

1343 
	`drwav_as£π
(
mem‹y
->
d©aC≠acôy
 >mem‹y->
cuºítWrôePos
);

1345 
size_t
 
byãsRemaöög
 = 
mem‹y
->
d©aC≠acôy
 - mem‹y->
cuºítWrôePos
;

1346 i‡(
byãsRemaöög
 < 
byãsToWrôe
) {

1348 
size_t
 
√wD©aC≠acôy
 = (
mem‹y
->
d©aC≠acôy
 == 0) ? 256 : memory->dataCapacity * 2;

1351 i‡((
√wD©aC≠acôy
 - 
mem‹y
->
cuºítWrôePos
Ë< 
byãsToWrôe
) {

1352 
√wD©aC≠acôy
 = 
mem‹y
->
cuºítWrôePos
 + 
byãsToWrôe
;

1355 * 
pNewD©a
 = 
	`DRWAV_REALLOC
(*
mem‹y
->
µD©a
, 
√wD©aC≠acôy
);

1356 i‡(
pNewD©a
 =
NULL
) {

1360 *
mem‹y
->
µD©a
 = 
pNewD©a
;

1361 
mem‹y
->
d©aC≠acôy
 = 
√wD©aC≠acôy
;

1364 
drwav_uöt8
* 
pD©aOut
 = (drwav_uöt8*)(*
mem‹y
->
µD©a
);

1365 
	`DRWAV_COPY_MEMORY
(
pD©aOut
 + 
mem‹y
->
cuºítWrôePos
, 
pD©aIn
, 
byãsToWrôe
);

1367 
mem‹y
->
cuºítWrôePos
 +
byãsToWrôe
;

1368 i‡(
mem‹y
->
d©aSize
 < mem‹y->
cuºítWrôePos
) {

1369 
mem‹y
->
d©aSize
 = mem‹y->
cuºítWrôePos
;

1372 *
mem‹y
->
pD©aSize
 = mem‹y->
d©aSize
;

1374  
byãsToWrôe
;

1375 
	}
}

1377 
drwav_boﬁ32
 
	$drwav__⁄_£ek_mem‹y_wrôe
(* 
pU£rD©a
, 
off£t
, 
drwav_£ek_‹igö
 
‹igö
)

1379 
drwav__mem‹y_°ªam_wrôe
* 
mem‹y
 = (drwav__mem‹y_°ªam_wrôe*)
pU£rD©a
;

1380 
	`drwav_as£π
(
mem‹y
 !
NULL
);

1382 i‡(
‹igö
 =
drwav_£ek_‹igö_cuºít
) {

1383 i‡(
off£t
 > 0) {

1384 i‡(
mem‹y
->
cuºítWrôePos
 + 
off£t
 > mem‹y->
d©aSize
) {

1385 
off£t
 = ()(
mem‹y
->
d©aSize
 - mem‹y->
cuºítWrôePos
);

1388 i‡(
mem‹y
->
cuºítWrôePos
 < (
size_t
)-
off£t
) {

1389 
off£t
 = -()
mem‹y
->
cuºítWrôePos
;

1394 
mem‹y
->
cuºítWrôePos
 +
off£t
;

1396 i‡((
drwav_uöt32
)
off£t
 <
mem‹y
->
d©aSize
) {

1397 
mem‹y
->
cuºítWrôePos
 = 
off£t
;

1399 
mem‹y
->
cuºítWrôePos
 = mem‹y->
d©aSize
;

1403  
DRWAV_TRUE
;

1404 
	}
}

1406 
drwav_boﬁ32
 
	$drwav_öô_mem‹y
(
drwav
* 
pWav
, c⁄° * 
d©a
, 
size_t
 
d©aSize
)

1408  
	`drwav_öô_mem‹y_ex
(
pWav
, 
d©a
, 
d©aSize
, 
NULL
, NULL, 0);

1409 
	}
}

1411 
drwav_boﬁ32
 
	$drwav_öô_mem‹y_ex
(
drwav
* 
pWav
, c⁄° * 
d©a
, 
size_t
 
d©aSize
, 
drwav_chunk_¥oc
 
⁄Chunk
, * 
pChunkU£rD©a
, 
drwav_uöt32
 
Êags
)

1413 i‡(
d©a
 =
NULL
 || 
d©aSize
 == 0) {

1414  
DRWAV_FALSE
;

1417 
drwav__mem‹y_°ªam
 
mem‹ySåóm
;

1418 
	`drwav_zîo_mem‹y
(&
mem‹ySåóm
, (memoryStream));

1419 
mem‹ySåóm
.
d©a
 = (const *)data;

1420 
mem‹ySåóm
.
d©aSize
 = dataSize;

1421 
mem‹ySåóm
.
cuºítRódPos
 = 0;

1423 i‡(!
	`drwav_öô_ex
(
pWav
, 
drwav__⁄_ªad_mem‹y
, 
drwav__⁄_£ek_mem‹y
, 
⁄Chunk
, (*)&
mem‹ySåóm
, 
pChunkU£rD©a
, 
Êags
)) {

1424  
DRWAV_FALSE
;

1427 
pWav
->
mem‹ySåóm
 = memoryStream;

1428 
pWav
->
pU£rD©a
 = &pWav->
mem‹ySåóm
;

1429  
DRWAV_TRUE
;

1430 
	}
}

1433 
drwav_boﬁ32
 
	$drwav_öô_mem‹y_wrôe__öã∫Æ
(
drwav
* 
pWav
, ** 
µD©a
, 
size_t
* 
pD©aSize
, c⁄° 
drwav_d©a_f‹m©
* 
pF‹m©
, 
drwav_uöt64
 
tŸÆSam∂eCou¡
, 
drwav_boﬁ32
 
isSequítül
)

1435 i‡(
µD©a
 =
NULL
) {

1436  
DRWAV_FALSE
;

1439 *
µD©a
 = 
NULL
;

1440 *
pD©aSize
 = 0;

1442 
drwav__mem‹y_°ªam_wrôe
 
mem‹ySåómWrôe
;

1443 
	`drwav_zîo_mem‹y
(&
mem‹ySåómWrôe
, (memoryStreamWrite));

1444 
mem‹ySåómWrôe
.
µD©a
 =ÖpData;

1445 
mem‹ySåómWrôe
.
pD©aSize
 =ÖDataSize;

1446 
mem‹ySåómWrôe
.
d©aSize
 = 0;

1447 
mem‹ySåómWrôe
.
d©aC≠acôy
 = 0;

1448 
mem‹ySåómWrôe
.
cuºítWrôePos
 = 0;

1450 i‡(!
	`drwav_öô_wrôe__öã∫Æ
(
pWav
, 
pF‹m©
, 
tŸÆSam∂eCou¡
, 
isSequítül
, 
drwav__⁄_wrôe_mem‹y
, 
drwav__⁄_£ek_mem‹y_wrôe
, (*)&
mem‹ySåómWrôe
)) {

1451  
DRWAV_FALSE
;

1454 
pWav
->
mem‹ySåómWrôe
 = memoryStreamWrite;

1455 
pWav
->
pU£rD©a
 = &pWav->
mem‹ySåómWrôe
;

1456  
DRWAV_TRUE
;

1457 
	}
}

1459 
drwav_boﬁ32
 
	$drwav_öô_mem‹y_wrôe
(
drwav
* 
pWav
, ** 
µD©a
, 
size_t
* 
pD©aSize
, c⁄° 
drwav_d©a_f‹m©
* 
pF‹m©
)

1461  
	`drwav_öô_mem‹y_wrôe__öã∫Æ
(
pWav
, 
µD©a
, 
pD©aSize
, 
pF‹m©
, 0, 
DRWAV_FALSE
);

1462 
	}
}

1464 
drwav_boﬁ32
 
	$drwav_öô_mem‹y_wrôe_£quítül
(
drwav
* 
pWav
, ** 
µD©a
, 
size_t
* 
pD©aSize
, c⁄° 
drwav_d©a_f‹m©
* 
pF‹m©
, 
drwav_uöt64
 
tŸÆSam∂eCou¡
)

1466  
	`drwav_öô_mem‹y_wrôe__öã∫Æ
(
pWav
, 
µD©a
, 
pD©aSize
, 
pF‹m©
, 
tŸÆSam∂eCou¡
, 
DRWAV_TRUE
);

1467 
	}
}

1470 
drwav
* 
	$drwav_›í_mem‹y
(c⁄° * 
d©a
, 
size_t
 
d©aSize
)

1472  
	`drwav_›í_mem‹y_ex
(
d©a
, 
d©aSize
, 
NULL
, NULL, 0);

1473 
	}
}

1475 
drwav
* 
	$drwav_›í_mem‹y_ex
(c⁄° * 
d©a
, 
size_t
 
d©aSize
, 
drwav_chunk_¥oc
 
⁄Chunk
, * 
pChunkU£rD©a
, 
drwav_uöt32
 
Êags
)

1477 i‡(
d©a
 =
NULL
 || 
d©aSize
 == 0) {

1478  
NULL
;

1481 
drwav__mem‹y_°ªam
 
mem‹ySåóm
;

1482 
	`drwav_zîo_mem‹y
(&
mem‹ySåóm
, (memoryStream));

1483 
mem‹ySåóm
.
d©a
 = (const *)data;

1484 
mem‹ySåóm
.
d©aSize
 = dataSize;

1485 
mem‹ySåóm
.
cuºítRódPos
 = 0;

1487 
drwav
* 
pWav
 = 
	`drwav_›í_ex
(
drwav__⁄_ªad_mem‹y
, 
drwav__⁄_£ek_mem‹y
, 
⁄Chunk
, (*)&
mem‹ySåóm
, 
pChunkU£rD©a
, 
Êags
);

1488 i‡(
pWav
 =
NULL
) {

1489  
NULL
;

1492 
pWav
->
mem‹ySåóm
 = memoryStream;

1493 
pWav
->
pU£rD©a
 = &pWav->
mem‹ySåóm
;

1494  
pWav
;

1495 
	}
}

1498 
drwav
* 
	$drwav_›í_mem‹y_wrôe__öã∫Æ
(** 
µD©a
, 
size_t
* 
pD©aSize
, c⁄° 
drwav_d©a_f‹m©
* 
pF‹m©
, 
drwav_uöt64
 
tŸÆSam∂eCou¡
, 
drwav_boﬁ32
 
isSequítül
)

1500 i‡(
µD©a
 =
NULL
) {

1501  
NULL
;

1504 *
µD©a
 = 
NULL
;

1505 *
pD©aSize
 = 0;

1507 
drwav__mem‹y_°ªam_wrôe
 
mem‹ySåómWrôe
;

1508 
	`drwav_zîo_mem‹y
(&
mem‹ySåómWrôe
, (memoryStreamWrite));

1509 
mem‹ySåómWrôe
.
µD©a
 =ÖpData;

1510 
mem‹ySåómWrôe
.
pD©aSize
 =ÖDataSize;

1511 
mem‹ySåómWrôe
.
d©aSize
 = 0;

1512 
mem‹ySåómWrôe
.
d©aC≠acôy
 = 0;

1513 
mem‹ySåómWrôe
.
cuºítWrôePos
 = 0;

1515 
drwav
* 
pWav
 = 
	`drwav_›í_wrôe__öã∫Æ
(
pF‹m©
, 
tŸÆSam∂eCou¡
, 
isSequítül
, 
drwav__⁄_wrôe_mem‹y
, 
drwav__⁄_£ek_mem‹y_wrôe
, (*)&
mem‹ySåómWrôe
);

1516 i‡(
pWav
 =
NULL
) {

1517  
NULL
;

1520 
pWav
->
mem‹ySåómWrôe
 = memoryStreamWrite;

1521 
pWav
->
pU£rD©a
 = &pWav->
mem‹ySåómWrôe
;

1522  
pWav
;

1523 
	}
}

1525 
drwav
* 
	$drwav_›í_mem‹y_wrôe
(** 
µD©a
, 
size_t
* 
pD©aSize
, c⁄° 
drwav_d©a_f‹m©
* 
pF‹m©
)

1527  
	`drwav_›í_mem‹y_wrôe__öã∫Æ
(
µD©a
, 
pD©aSize
, 
pF‹m©
, 0, 
DRWAV_FALSE
);

1528 
	}
}

1530 
drwav
* 
	$drwav_›í_mem‹y_wrôe_£quítül
(** 
µD©a
, 
size_t
* 
pD©aSize
, c⁄° 
drwav_d©a_f‹m©
* 
pF‹m©
, 
drwav_uöt64
 
tŸÆSam∂eCou¡
)

1532  
	`drwav_›í_mem‹y_wrôe__öã∫Æ
(
µD©a
, 
pD©aSize
, 
pF‹m©
, 
tŸÆSam∂eCou¡
, 
DRWAV_TRUE
);

1533 
	}
}

1536 
size_t
 
	$drwav__⁄_ªad
(
drwav_ªad_¥oc
 
⁄Ród
, * 
pU£rD©a
, * 
pBuf„rOut
, 
size_t
 
byãsToRód
, 
drwav_uöt64
* 
pCurs‹
)

1538 
	`drwav_as£π
(
⁄Ród
 !
NULL
);

1539 
	`drwav_as£π
(
pCurs‹
 !
NULL
);

1541 
size_t
 
byãsRód
 = 
	`⁄Ród
(
pU£rD©a
, 
pBuf„rOut
, 
byãsToRód
);

1542 *
pCurs‹
 +
byãsRód
;

1543  
byãsRód
;

1544 
	}
}

1546 
drwav_boﬁ32
 
	$drwav__⁄_£ek
(
drwav_£ek_¥oc
 
⁄Sìk
, * 
pU£rD©a
, 
off£t
, 
drwav_£ek_‹igö
 
‹igö
, 
drwav_uöt64
* 
pCurs‹
)

1548 
	`drwav_as£π
(
⁄Sìk
 !
NULL
);

1549 
	`drwav_as£π
(
pCurs‹
 !
NULL
);

1551 i‡(!
	`⁄Sìk
(
pU£rD©a
, 
off£t
, 
‹igö
)) {

1552  
DRWAV_FALSE
;

1555 i‡(
‹igö
 =
drwav_£ek_‹igö_°¨t
) {

1556 *
pCurs‹
 = 
off£t
;

1558 *
pCurs‹
 +
off£t
;

1561  
DRWAV_TRUE
;

1562 
	}
}

1565 
drwav_uöt32
 
	$drwav_gë_byãs_≥r_ßm∂e
(
drwav
* 
pWav
)

1569 
drwav_uöt32
 
byãsPîSam∂e
 = 
pWav
->
bôsPîSam∂e
 >> 3;

1570 i‡(
byãsPîSam∂e
 =0 || (
pWav
->
bôsPîSam∂e
 & 0x7) != 0) {

1571 
byãsPîSam∂e
 = 
pWav
->
fmt
.
blockAlign
/pWav->fmt.
ch™√ls
;

1574  
byãsPîSam∂e
;

1575 
	}
}

1577 
drwav_uöt32
 
	$drwav_gë_byãs_≥r_pcm_‰ame
(
drwav
* 
pWav
)

1581 
drwav_uöt32
 
bôsPîFøme
 = 
pWav
->
bôsPîSam∂e
 *ÖWav->
fmt
.
ch™√ls
;

1582 
drwav_uöt32
 
byãsPîFøme
 = 
bôsPîFøme
 >> 3;

1583 i‡(
byãsPîFøme
 =0 || (
bôsPîFøme
 & 0x7) != 0) {

1584 
byãsPîFøme
 = 
pWav
->
fmt
.
blockAlign
;

1587  
byãsPîFøme
;

1588 
	}
}

1591 
drwav_boﬁ32
 
	$drwav_öô
(
drwav
* 
pWav
, 
drwav_ªad_¥oc
 
⁄Ród
, 
drwav_£ek_¥oc
 
⁄Sìk
, * 
pU£rD©a
)

1593  
	`drwav_öô_ex
(
pWav
, 
⁄Ród
, 
⁄Sìk
, 
NULL
, 
pU£rD©a
, NULL, 0);

1594 
	}
}

1596 
drwav_boﬁ32
 
	$drwav_öô_ex
(
drwav
* 
pWav
, 
drwav_ªad_¥oc
 
⁄Ród
, 
drwav_£ek_¥oc
 
⁄Sìk
, 
drwav_chunk_¥oc
 
⁄Chunk
, * 
pRódSìkU£rD©a
, * 
pChunkU£rD©a
, 
drwav_uöt32
 
Êags
)

1598 i‡(
⁄Ród
 =
NULL
 || 
⁄Sìk
 == NULL) {

1599  
DRWAV_FALSE
;

1602 
drwav_uöt64
 
curs‹
 = 0;

1603 
drwav_boﬁ32
 
£quítül
 = (
Êags
 & 
DRWAV_SEQUENTIAL
) != 0;

1605 
	`drwav_zîo_mem‹y
(
pWav
, (*pWav));

1606 
pWav
->
⁄Ród
 = onRead;

1607 
pWav
->
⁄Sìk
 = onSeek;

1608 
pWav
->
pU£rD©a
 = 
pRódSìkU£rD©a
;

1611 
riff
[4];

1612 i‡(
	`drwav__⁄_ªad
(
⁄Ród
, 
pRódSìkU£rD©a
, 
riff
, ‘iff), &
curs‹
) != (riff)) {

1613  
DRWAV_FALSE
;

1618 i‡(
	`drwav__fourcc_equÆ
(
riff
, "RIFF")) {

1619 
pWav
->
c⁄èöî
 = 
drwav_c⁄èöî_riff
;

1620 } i‡(
	`drwav__fourcc_equÆ
(
riff
, "riff")) {

1621 
pWav
->
c⁄èöî
 = 
drwav_c⁄èöî_w64
;

1624 
drwav_uöt8
 
riff2
[12];

1625 i‡(
	`drwav__⁄_ªad
(
⁄Ród
, 
pRódSìkU£rD©a
, 
riff2
, ‘iff2), &
curs‹
) != (riff2)) {

1626  
DRWAV_FALSE
;

1629 
i
 = 0; i < 12; ++i) {

1630 i‡(
riff2
[
i
] !
drwavGUID_W64_RIFF
[i+4]) {

1631  
DRWAV_FALSE
;

1635  
DRWAV_FALSE
;

1639 i‡(
pWav
->
c⁄èöî
 =
drwav_c⁄èöî_riff
) {

1641 
chunkSizeByãs
[4];

1642 i‡(
	`drwav__⁄_ªad
(
⁄Ród
, 
pRódSìkU£rD©a
, 
chunkSizeByãs
, (chunkSizeByãs), &
curs‹
) != (chunkSizeBytes)) {

1643  
DRWAV_FALSE
;

1646 
chunkSize
 = 
	`drwav__byãs_to_u32
(
chunkSizeByãs
);

1647 i‡(
chunkSize
 < 36) {

1648  
DRWAV_FALSE
;

1651 
wave
[4];

1652 i‡(
	`drwav__⁄_ªad
(
⁄Ród
, 
pRódSìkU£rD©a
, 
wave
, (wave), &
curs‹
) != (wave)) {

1653  
DRWAV_FALSE
;

1656 i‡(!
	`drwav__fourcc_equÆ
(
wave
, "WAVE")) {

1657  
DRWAV_FALSE
;

1661 
chunkSize
[8];

1662 i‡(
	`drwav__⁄_ªad
(
⁄Ród
, 
pRódSìkU£rD©a
, 
chunkSize
, (chunkSize), &
curs‹
) != (chunkSize)) {

1663  
DRWAV_FALSE
;

1666 i‡(
	`drwav__byãs_to_u64
(
chunkSize
) < 80) {

1667  
DRWAV_FALSE
;

1670 
drwav_uöt8
 
wave
[16];

1671 i‡(
	`drwav__⁄_ªad
(
⁄Ród
, 
pRódSìkU£rD©a
, 
wave
, (wave), &
curs‹
) != (wave)) {

1672  
DRWAV_FALSE
;

1675 i‡(!
	`drwav__guid_equÆ
(
wave
, 
drwavGUID_W64_WAVE
)) {

1676  
DRWAV_FALSE
;

1682 
drwav_fmt
 
fmt
;

1683 i‡(!
	`drwav__ªad_fmt
(
⁄Ród
, 
⁄Sìk
, 
pRódSìkU£rD©a
, 
pWav
->
c⁄èöî
, &
curs‹
, &
fmt
)) {

1684  
DRWAV_FALSE
;

1688 i‡(
fmt
.
ßm∂eR©e
 =0 || fmt.
ch™√ls
 =0 || fmt.
bôsPîSam∂e
 =0 || fmt.
blockAlign
 == 0) {

1689  
DRWAV_FALSE
;

1694 
å™¶©edF‹m©Tag
 = 
fmt
.
f‹m©Tag
;

1695 i‡(
å™¶©edF‹m©Tag
 =
DR_WAVE_FORMAT_EXTENSIBLE
) {

1696 
å™¶©edF‹m©Tag
 = 
	`drwav__byãs_to_u16
(
fmt
.
subF‹m©
 + 0);

1701 
drwav_uöt64
 
ßm∂eCou¡FromFa˘Chunk
 = 0;

1708 
drwav_boﬁ32
 
foundD©aChunk
 = 
DRWAV_FALSE
;

1709 
drwav_uöt64
 
d©aChunkSize
 = 0;

1712 
drwav_uöt64
 
chunkSize
 = 0;

1715 
drwav_chunk_hódî
 
hódî
;

1716 
drwav_ªsu…
 
ªsu…
 = 
	`drwav__ªad_chunk_hódî
(
⁄Ród
, 
pRódSìkU£rD©a
, 
pWav
->
c⁄èöî
, &
curs‹
, &
hódî
);

1717 i‡(
ªsu…
 !
DRWAV_SUCCESS
) {

1718 i‡(!
foundD©aChunk
) {

1719  
DRWAV_FALSE
;

1726 i‡(!
£quítül
 && 
⁄Chunk
 !
NULL
) {

1727 
drwav_uöt64
 
ˇŒbackByãsRód
 = 
	`⁄Chunk
(
pChunkU£rD©a
, 
⁄Ród
, 
⁄Sìk
, 
pRódSìkU£rD©a
, &
hódî
);

1731 i‡(
ˇŒbackByãsRód
 > 0) {

1732 i‡(!
	`drwav__£ek_‰om_°¨t
(
⁄Sìk
, 
curs‹
, 
pRódSìkU£rD©a
)) {

1733  
DRWAV_FALSE
;

1739 i‡(!
foundD©aChunk
) {

1740 
pWav
->
d©aChunkD©aPos
 = 
curs‹
;

1743 
chunkSize
 = 
hódî
.
sizeInByãs
;

1744 i‡(
pWav
->
c⁄èöî
 =
drwav_c⁄èöî_riff
) {

1745 i‡(
	`drwav__fourcc_equÆ
(
hódî
.
id
.
fourcc
, "data")) {

1746 
foundD©aChunk
 = 
DRWAV_TRUE
;

1747 
d©aChunkSize
 = 
chunkSize
;

1750 i‡(
	`drwav__guid_equÆ
(
hódî
.
id
.
guid
, 
drwavGUID_W64_DATA
)) {

1751 
foundD©aChunk
 = 
DRWAV_TRUE
;

1752 
d©aChunkSize
 = 
chunkSize
;

1758 i‡(
foundD©aChunk
 && 
£quítül
) {

1763 i‡(
pWav
->
c⁄èöî
 =
drwav_c⁄èöî_riff
) {

1764 i‡(
	`drwav__fourcc_equÆ
(
hódî
.
id
.
fourcc
, "fact")) {

1765 
drwav_uöt32
 
ßm∂eCou¡
;

1766 i‡(
	`drwav__⁄_ªad
(
⁄Ród
, 
pRódSìkU£rD©a
, &
ßm∂eCou¡
, 4, &
curs‹
) != 4) {

1767  
DRWAV_FALSE
;

1769 
chunkSize
 -= 4;

1771 i‡(!
foundD©aChunk
) {

1772 
pWav
->
d©aChunkD©aPos
 = 
curs‹
;

1777 i‡(
pWav
->
å™¶©edF‹m©Tag
 =
DR_WAVE_FORMAT_ADPCM
) {

1778 
ßm∂eCou¡FromFa˘Chunk
 = 
ßm∂eCou¡
;

1780 
ßm∂eCou¡FromFa˘Chunk
 = 0;

1784 i‡(
	`drwav__guid_equÆ
(
hódî
.
id
.
guid
, 
drwavGUID_W64_FACT
)) {

1785 i‡(
	`drwav__⁄_ªad
(
⁄Ród
, 
pRódSìkU£rD©a
, &
ßm∂eCou¡FromFa˘Chunk
, 8, &
curs‹
) != 8) {

1786  
DRWAV_FALSE
;

1788 
chunkSize
 -= 8;

1790 i‡(!
foundD©aChunk
) {

1791 
pWav
->
d©aChunkD©aPos
 = 
curs‹
;

1797 i‡(
pWav
->
c⁄èöî
 =
drwav_c⁄èöî_riff
) {

1798 i‡(
	`drwav__fourcc_equÆ
(
hódî
.
id
.
fourcc
, "smpl")) {

1799 
sm∂HódîD©a
[36];

1800 i‡(
chunkSize
 >(
sm∂HódîD©a
)) {

1801 
drwav_uöt64
 
byãsJu°Ród
 = 
	`drwav__⁄_ªad
(
⁄Ród
, 
pRódSìkU£rD©a
, 
sm∂HódîD©a
, (sm∂HódîD©a), &
curs‹
);

1802 
chunkSize
 -
byãsJu°Ród
;

1804 i‡(
byãsJu°Ród
 =(
sm∂HódîD©a
)) {

1805 
pWav
->
sm∂
.
m™uÁ˘uªr
 = 
	`drwav__byãs_to_u32
(
sm∂HódîD©a
+0);

1806 
pWav
->
sm∂
.
¥odu˘
 = 
	`drwav__byãs_to_u32
(
sm∂HódîD©a
+4);

1807 
pWav
->
sm∂
.
ßm∂ePîiod
 = 
	`drwav__byãs_to_u32
(
sm∂HódîD©a
+8);

1808 
pWav
->
sm∂
.
midiUnôyNŸes
 = 
	`drwav__byãs_to_u32
(
sm∂HódîD©a
+12);

1809 
pWav
->
sm∂
.
midiPôchFø˘i⁄
 = 
	`drwav__byãs_to_u32
(
sm∂HódîD©a
+16);

1810 
pWav
->
sm∂
.
sm±eF‹m©
 = 
	`drwav__byãs_to_u32
(
sm∂HódîD©a
+20);

1811 
pWav
->
sm∂
.
sm±eOff£t
 = 
	`drwav__byãs_to_u32
(
sm∂HódîD©a
+24);

1812 
pWav
->
sm∂
.
numSam∂eLo›s
 = 
	`drwav__byãs_to_u32
(
sm∂HódîD©a
+28);

1813 
pWav
->
sm∂
.
ßm∂îD©a
 = 
	`drwav__byãs_to_u32
(
sm∂HódîD©a
+32);

1815 
drwav_uöt32
 
iLo›
 = 0; iLo› < 
pWav
->
sm∂
.
numSam∂eLo›s
 && iLo› < 
	`drwav_cou¡of
’Wav->sm∂.
lo›s
); ++iLoop) {

1816 
sm∂Lo›D©a
[24];

1817 
byãsJu°Ród
 = 
	`drwav__⁄_ªad
(
⁄Ród
, 
pRódSìkU£rD©a
, 
sm∂Lo›D©a
, (sm∂Lo›D©a), &
curs‹
);

1818 
chunkSize
 -
byãsJu°Ród
;

1820 i‡(
byãsJu°Ród
 =(
sm∂Lo›D©a
)) {

1821 
pWav
->
sm∂
.
lo›s
[
iLo›
].
cuePoötId
 = 
	`drwav__byãs_to_u32
(
sm∂Lo›D©a
+0);

1822 
pWav
->
sm∂
.
lo›s
[
iLo›
].
ty≥
 = 
	`drwav__byãs_to_u32
(
sm∂Lo›D©a
+4);

1823 
pWav
->
sm∂
.
lo›s
[
iLo›
].
°¨t
 = 
	`drwav__byãs_to_u32
(
sm∂Lo›D©a
+8);

1824 
pWav
->
sm∂
.
lo›s
[
iLo›
].
íd
 = 
	`drwav__byãs_to_u32
(
sm∂Lo›D©a
+12);

1825 
pWav
->
sm∂
.
lo›s
[
iLo›
].
‰a˘i⁄
 = 
	`drwav__byãs_to_u32
(
sm∂Lo›D©a
+16);

1826 
pWav
->
sm∂
.
lo›s
[
iLo›
].
∂ayCou¡
 = 
	`drwav__byãs_to_u32
(
sm∂Lo›D©a
+20);

1837 i‡(
	`drwav__guid_equÆ
(
hódî
.
id
.
guid
, 
drwavGUID_W64_SMPL
)) {

1844 
chunkSize
 +
hódî
.
∑ddögSize
;

1845 i‡(!
	`drwav__£ek_f‹w¨d
(
⁄Sìk
, 
chunkSize
, 
pRódSìkU£rD©a
)) {

1848 
curs‹
 +
chunkSize
;

1850 i‡(!
foundD©aChunk
) {

1851 
pWav
->
d©aChunkD©aPos
 = 
curs‹
;

1856 i‡(!
foundD©aChunk
) {

1857  
DRWAV_FALSE
;

1861 i‡(!
£quítül
) {

1862 i‡(!
	`drwav__£ek_‰om_°¨t
(
⁄Sìk
, 
pWav
->
d©aChunkD©aPos
, 
pRódSìkU£rD©a
)) {

1863  
DRWAV_FALSE
;

1865 
curs‹
 = 
pWav
->
d©aChunkD©aPos
;

1871 
pWav
->
fmt
 = fmt;

1872 
pWav
->
ßm∂eR©e
 = 
fmt
.sampleRate;

1873 
pWav
->
ch™√ls
 = 
fmt
.channels;

1874 
pWav
->
bôsPîSam∂e
 = 
fmt
.bitsPerSample;

1875 
pWav
->
byãsRemaöög
 = 
d©aChunkSize
;

1876 
pWav
->
å™¶©edF‹m©Tag
 =ÅranslatedFormatTag;

1877 
pWav
->
d©aChunkD©aSize
 = 
d©aChunkSize
;

1879 i‡(
ßm∂eCou¡FromFa˘Chunk
 != 0) {

1880 
pWav
->
tŸÆPCMFømeCou¡
 = 
ßm∂eCou¡FromFa˘Chunk
;

1882 
pWav
->
tŸÆPCMFømeCou¡
 = 
d©aChunkSize
 / 
	`drwav_gë_byãs_≥r_pcm_‰ame
(pWav);

1884 i‡(
pWav
->
å™¶©edF‹m©Tag
 =
DR_WAVE_FORMAT_ADPCM
) {

1885 
drwav_uöt64
 
blockCou¡
 = 
d©aChunkSize
 / 
fmt
.
blockAlign
;

1886 
pWav
->
tŸÆPCMFømeCou¡
 = (((
blockCou¡
 * (
fmt
.
blockAlign
 - (6*pWav->
ch™√ls
))) * 2)) / fmt.channels;

1888 i‡(
pWav
->
å™¶©edF‹m©Tag
 =
DR_WAVE_FORMAT_DVI_ADPCM
) {

1889 
drwav_uöt64
 
blockCou¡
 = 
d©aChunkSize
 / 
fmt
.
blockAlign
;

1890 
pWav
->
tŸÆPCMFømeCou¡
 = (((
blockCou¡
 * (
fmt
.
blockAlign
 - (4*pWav->
ch™√ls
))) * 2) + (blockCount *ÖWav->channels)) / fmt.channels;

1895 i‡(
pWav
->
å™¶©edF‹m©Tag
 =
DR_WAVE_FORMAT_ADPCM
 ||ÖWav->å™¶©edF‹m©Tag =
DR_WAVE_FORMAT_DVI_ADPCM
) {

1896 i‡(
pWav
->
ch™√ls
 > 2) {

1897  
DRWAV_FALSE
;

1901 #ifde‡
DR_WAV_LIBSNDFILE_COMPAT


1908 i‡(
pWav
->
å™¶©edF‹m©Tag
 =
DR_WAVE_FORMAT_ADPCM
) {

1909 
drwav_uöt64
 
blockCou¡
 = 
d©aChunkSize
 / 
fmt
.
blockAlign
;

1910 
pWav
->
tŸÆPCMFømeCou¡
 = (((
blockCou¡
 * (
fmt
.
blockAlign
 - (6*pWav->
ch™√ls
))) * 2)) / fmt.channels;

1912 i‡(
pWav
->
å™¶©edF‹m©Tag
 =
DR_WAVE_FORMAT_DVI_ADPCM
) {

1913 
drwav_uöt64
 
blockCou¡
 = 
d©aChunkSize
 / 
fmt
.
blockAlign
;

1914 
pWav
->
tŸÆPCMFømeCou¡
 = (((
blockCou¡
 * (
fmt
.
blockAlign
 - (4*pWav->
ch™√ls
))) * 2) + (blockCount *ÖWav->channels)) / fmt.channels;

1918 
pWav
->
tŸÆSam∂eCou¡
 =ÖWav->
tŸÆPCMFømeCou¡
 *ÖWav->
ch™√ls
;

1920  
DRWAV_TRUE
;

1921 
	}
}

1924 
drwav_uöt32
 
	$drwav_riff_chunk_size_riff
(
drwav_uöt64
 
d©aChunkSize
)

1926 i‡(
d©aChunkSize
 <= (0xFFFFFFFF - 36)) {

1927  36 + (
drwav_uöt32
)
d©aChunkSize
;

1931 
	}
}

1933 
drwav_uöt32
 
	$drwav_d©a_chunk_size_riff
(
drwav_uöt64
 
d©aChunkSize
)

1935 i‡(
d©aChunkSize
 <= 0xFFFFFFFF) {

1936  (
drwav_uöt32
)
d©aChunkSize
;

1940 
	}
}

1942 
drwav_uöt64
 
	$drwav_riff_chunk_size_w64
(
drwav_uöt64
 
d©aChunkSize
)

1944  80 + 24 + 
d©aChunkSize
;

1945 
	}
}

1947 
drwav_uöt64
 
	$drwav_d©a_chunk_size_w64
(
drwav_uöt64
 
d©aChunkSize
)

1949  24 + 
d©aChunkSize
;

1950 
	}
}

1953 
drwav_boﬁ32
 
	$drwav_öô_wrôe__öã∫Æ
(
drwav
* 
pWav
, c⁄° 
drwav_d©a_f‹m©
* 
pF‹m©
, 
drwav_uöt64
 
tŸÆSam∂eCou¡
, 
drwav_boﬁ32
 
isSequítül
, 
drwav_wrôe_¥oc
 
⁄Wrôe
, 
drwav_£ek_¥oc
 
⁄Sìk
, * 
pU£rD©a
)

1955 i‡(
pWav
 =
NULL
) {

1956  
DRWAV_FALSE
;

1959 i‡(
⁄Wrôe
 =
NULL
) {

1960  
DRWAV_FALSE
;

1963 i‡(!
isSequítül
 && 
⁄Sìk
 =
NULL
) {

1964  
DRWAV_FALSE
;

1969 i‡(
pF‹m©
->
f‹m©
 =
DR_WAVE_FORMAT_EXTENSIBLE
) {

1970  
DRWAV_FALSE
;

1972 i‡(
pF‹m©
->
f‹m©
 =
DR_WAVE_FORMAT_ADPCM
 ||ÖF‹m©->f‹m© =
DR_WAVE_FORMAT_DVI_ADPCM
) {

1973  
DRWAV_FALSE
;

1977 
	`drwav_zîo_mem‹y
(
pWav
, (*pWav));

1978 
pWav
->
⁄Wrôe
 = onWrite;

1979 
pWav
->
⁄Sìk
 = onSeek;

1980 
pWav
->
pU£rD©a
 =ÖUserData;

1981 
pWav
->
fmt
.
f‹m©Tag
 = (
drwav_uöt16
)
pF‹m©
->
f‹m©
;

1982 
pWav
->
fmt
.
ch™√ls
 = (
drwav_uöt16
)
pF‹m©
->channels;

1983 
pWav
->
fmt
.
ßm∂eR©e
 = 
pF‹m©
->sampleRate;

1984 
pWav
->
fmt
.
avgByãsPîSec
 = (
drwav_uöt32
)((
pF‹m©
->
bôsPîSam∂e
 *ÖF‹m©->
ßm∂eR©e
 *ÖF‹m©->
ch™√ls
) / 8);

1985 
pWav
->
fmt
.
blockAlign
 = (
drwav_uöt16
)((
pF‹m©
->
ch™√ls
 *ÖF‹m©->
bôsPîSam∂e
) / 8);

1986 
pWav
->
fmt
.
bôsPîSam∂e
 = (
drwav_uöt16
)
pF‹m©
->bitsPerSample;

1987 
pWav
->
fmt
.
exãndedSize
 = 0;

1988 
pWav
->
isSequítülWrôe
 = 
isSequítül
;

1991 
size_t
 
ru¬ögPos
 = 0;

1996 
drwav_uöt64
 
öôülD©aChunkSize
 = 0;

1997 i‡(
isSequítül
) {

1998 
öôülD©aChunkSize
 = (
tŸÆSam∂eCou¡
 * 
pWav
->
fmt
.
bôsPîSam∂e
) / 8;

2002 i‡(
pF‹m©
->
c⁄èöî
 =
drwav_c⁄èöî_riff
) {

2003 i‡(
öôülD©aChunkSize
 > (0xFFFFFFFF - 36)) {

2004  
DRWAV_FALSE
;

2009 
pWav
->
d©aChunkD©aSizeT¨gëWrôe
 = 
öôülD©aChunkSize
;

2013 i‡(
pF‹m©
->
c⁄èöî
 =
drwav_c⁄èöî_riff
) {

2014 
drwav_uöt32
 
chunkSizeRIFF
 = 36 + (drwav_uöt32)
öôülD©aChunkSize
;

2015 
ru¬ögPos
 +
pWav
->
	`⁄Wrôe
(
pU£rD©a
, "RIFF", 4);

2016 
ru¬ögPos
 +
pWav
->
	`⁄Wrôe
(
pU£rD©a
, &
chunkSizeRIFF
, 4);

2017 
ru¬ögPos
 +
pWav
->
	`⁄Wrôe
(
pU£rD©a
, "WAVE", 4);

2019 
drwav_uöt64
 
chunkSizeRIFF
 = 80 + 24 + 
öôülD©aChunkSize
;

2020 
ru¬ögPos
 +
pWav
->
	`⁄Wrôe
(
pU£rD©a
, 
drwavGUID_W64_RIFF
, 16);

2021 
ru¬ögPos
 +
pWav
->
	`⁄Wrôe
(
pU£rD©a
, &
chunkSizeRIFF
, 8);

2022 
ru¬ögPos
 +
pWav
->
	`⁄Wrôe
(
pU£rD©a
, 
drwavGUID_W64_WAVE
, 16);

2026 
drwav_uöt64
 
chunkSizeFMT
;

2027 i‡(
pF‹m©
->
c⁄èöî
 =
drwav_c⁄èöî_riff
) {

2028 
chunkSizeFMT
 = 16;

2029 
ru¬ögPos
 +
pWav
->
	`⁄Wrôe
(
pU£rD©a
, "fmt ", 4);

2030 
ru¬ögPos
 +
pWav
->
	`⁄Wrôe
(
pU£rD©a
, &
chunkSizeFMT
, 4);

2032 
chunkSizeFMT
 = 40;

2033 
ru¬ögPos
 +
pWav
->
	`⁄Wrôe
(
pU£rD©a
, 
drwavGUID_W64_FMT
, 16);

2034 
ru¬ögPos
 +
pWav
->
	`⁄Wrôe
(
pU£rD©a
, &
chunkSizeFMT
, 8);

2037 
ru¬ögPos
 +
pWav
->
	`⁄Wrôe
(
pU£rD©a
, &pWav->
fmt
.
f‹m©Tag
, 2);

2038 
ru¬ögPos
 +
pWav
->
	`⁄Wrôe
(
pU£rD©a
, &pWav->
fmt
.
ch™√ls
, 2);

2039 
ru¬ögPos
 +
pWav
->
	`⁄Wrôe
(
pU£rD©a
, &pWav->
fmt
.
ßm∂eR©e
, 4);

2040 
ru¬ögPos
 +
pWav
->
	`⁄Wrôe
(
pU£rD©a
, &pWav->
fmt
.
avgByãsPîSec
, 4);

2041 
ru¬ögPos
 +
pWav
->
	`⁄Wrôe
(
pU£rD©a
, &pWav->
fmt
.
blockAlign
, 2);

2042 
ru¬ögPos
 +
pWav
->
	`⁄Wrôe
(
pU£rD©a
, &pWav->
fmt
.
bôsPîSam∂e
, 2);

2044 
pWav
->
d©aChunkD©aPos
 = 
ru¬ögPos
;

2047 i‡(
pF‹m©
->
c⁄èöî
 =
drwav_c⁄èöî_riff
) {

2048 
drwav_uöt32
 
chunkSizeDATA
 = (drwav_uöt32)
öôülD©aChunkSize
;

2049 
ru¬ögPos
 +
pWav
->
	`⁄Wrôe
(
pU£rD©a
, "data", 4);

2050 
ru¬ögPos
 +
pWav
->
	`⁄Wrôe
(
pU£rD©a
, &
chunkSizeDATA
, 4);

2052 
drwav_uöt64
 
chunkSizeDATA
 = 24 + 
öôülD©aChunkSize
;

2053 
ru¬ögPos
 +
pWav
->
	`⁄Wrôe
(
pU£rD©a
, 
drwavGUID_W64_DATA
, 16);

2054 
ru¬ögPos
 +
pWav
->
	`⁄Wrôe
(
pU£rD©a
, &
chunkSizeDATA
, 8);

2059 i‡(
pF‹m©
->
c⁄èöî
 =
drwav_c⁄èöî_riff
) {

2060 i‡(
ru¬ögPos
 !20 + 
chunkSizeFMT
 + 8) {

2061  
DRWAV_FALSE
;

2064 i‡(
ru¬ögPos
 !40 + 
chunkSizeFMT
 + 24) {

2065  
DRWAV_FALSE
;

2072 
pWav
->
c⁄èöî
 = 
pF‹m©
->container;

2073 
pWav
->
ch™√ls
 = (
drwav_uöt16
)
pF‹m©
->channels;

2074 
pWav
->
ßm∂eR©e
 = 
pF‹m©
->sampleRate;

2075 
pWav
->
bôsPîSam∂e
 = (
drwav_uöt16
)
pF‹m©
->bitsPerSample;

2076 
pWav
->
å™¶©edF‹m©Tag
 = (
drwav_uöt16
)
pF‹m©
->
f‹m©
;

2078  
DRWAV_TRUE
;

2079 
	}
}

2082 
drwav_boﬁ32
 
	$drwav_öô_wrôe
(
drwav
* 
pWav
, c⁄° 
drwav_d©a_f‹m©
* 
pF‹m©
, 
drwav_wrôe_¥oc
 
⁄Wrôe
, 
drwav_£ek_¥oc
 
⁄Sìk
, * 
pU£rD©a
)

2084  
	`drwav_öô_wrôe__öã∫Æ
(
pWav
, 
pF‹m©
, 0, 
DRWAV_FALSE
, 
⁄Wrôe
, 
⁄Sìk
, 
pU£rD©a
);

2085 
	}
}

2087 
drwav_boﬁ32
 
	$drwav_öô_wrôe_£quítül
(
drwav
* 
pWav
, c⁄° 
drwav_d©a_f‹m©
* 
pF‹m©
, 
drwav_uöt64
 
tŸÆSam∂eCou¡
, 
drwav_wrôe_¥oc
 
⁄Wrôe
, * 
pU£rD©a
)

2089  
	`drwav_öô_wrôe__öã∫Æ
(
pWav
, 
pF‹m©
, 
tŸÆSam∂eCou¡
, 
DRWAV_TRUE
, 
⁄Wrôe
, 
NULL
, 
pU£rD©a
);

2090 
	}
}

2092 
	$drwav_unöô
(
drwav
* 
pWav
)

2094 i‡(
pWav
 =
NULL
) {

2101 i‡(
pWav
->
⁄Wrôe
 !
NULL
) {

2103 i‡(
pWav
->
isSequítülWrôe
) {

2104 
	`drwav_as£π
(
pWav
->
d©aChunkD©aSize
 =pWav->
d©aChunkD©aSizeT¨gëWrôe
);

2108 
drwav_uöt32
 
∑ddögSize
 = 0;

2109 i‡(
pWav
->
c⁄èöî
 =
drwav_c⁄èöî_riff
) {

2110 
∑ddögSize
 = (
drwav_uöt32
)(
pWav
->
d©aChunkD©aSize
 % 2);

2112 
∑ddögSize
 = (
drwav_uöt32
)(
pWav
->
d©aChunkD©aSize
 % 8);

2115 i‡(
∑ddögSize
 > 0) {

2116 
drwav_uöt64
 
∑ddögD©a
 = 0;

2117 
pWav
->
	`⁄Wrôe
’Wav->
pU£rD©a
, &
∑ddögD©a
, 
∑ddögSize
);

2123 i‡(
pWav
->
⁄Sìk
 && !pWav->
isSequítülWrôe
) {

2124 i‡(
pWav
->
c⁄èöî
 =
drwav_c⁄èöî_riff
) {

2126 i‡(
pWav
->
	`⁄Sìk
’Wav->
pU£rD©a
, 4, 
drwav_£ek_‹igö_°¨t
)) {

2127 
drwav_uöt32
 
riffChunkSize
 = 
	`drwav_riff_chunk_size_riff
(
pWav
->
d©aChunkD©aSize
);

2128 
pWav
->
	`⁄Wrôe
’Wav->
pU£rD©a
, &
riffChunkSize
, 4);

2132 i‡(
pWav
->
	`⁄Sìk
’Wav->
pU£rD©a
, (ÌWav->
d©aChunkD©aPos
 + 4, 
drwav_£ek_‹igö_°¨t
)) {

2133 
drwav_uöt32
 
d©aChunkSize
 = 
	`drwav_d©a_chunk_size_riff
(
pWav
->
d©aChunkD©aSize
);

2134 
pWav
->
	`⁄Wrôe
’Wav->
pU£rD©a
, &
d©aChunkSize
, 4);

2138 i‡(
pWav
->
	`⁄Sìk
’Wav->
pU£rD©a
, 16, 
drwav_£ek_‹igö_°¨t
)) {

2139 
drwav_uöt64
 
riffChunkSize
 = 
	`drwav_riff_chunk_size_w64
(
pWav
->
d©aChunkD©aSize
);

2140 
pWav
->
	`⁄Wrôe
’Wav->
pU£rD©a
, &
riffChunkSize
, 8);

2144 i‡(
pWav
->
	`⁄Sìk
’Wav->
pU£rD©a
, (ÌWav->
d©aChunkD©aPos
 + 16, 
drwav_£ek_‹igö_°¨t
)) {

2145 
drwav_uöt64
 
d©aChunkSize
 = 
	`drwav_d©a_chunk_size_w64
(
pWav
->
d©aChunkD©aSize
);

2146 
pWav
->
	`⁄Wrôe
’Wav->
pU£rD©a
, &
d©aChunkSize
, 8);

2152 #i‚de‡
DR_WAV_NO_STDIO


2155 i‡(
pWav
->
⁄Ród
 =
drwav__⁄_ªad_°dio
 ||ÖWav->
⁄Wrôe
 =
drwav__⁄_wrôe_°dio
) {

2156 
	`f˛o£
((
FILE
*)
pWav
->
pU£rD©a
);

2159 
	}
}

2162 
drwav
* 
	$drwav_›í
(
drwav_ªad_¥oc
 
⁄Ród
, 
drwav_£ek_¥oc
 
⁄Sìk
, * 
pU£rD©a
)

2164  
	`drwav_›í_ex
(
⁄Ród
, 
⁄Sìk
, 
NULL
, 
pU£rD©a
, NULL, 0);

2165 
	}
}

2167 
drwav
* 
	$drwav_›í_ex
(
drwav_ªad_¥oc
 
⁄Ród
, 
drwav_£ek_¥oc
 
⁄Sìk
, 
drwav_chunk_¥oc
 
⁄Chunk
, * 
pRódSìkU£rD©a
, * 
pChunkU£rD©a
, 
drwav_uöt32
 
Êags
)

2169 
drwav
* 
pWav
 = (drwav*)
	`DRWAV_MALLOC
((*pWav));

2170 i‡(
pWav
 =
NULL
) {

2171  
NULL
;

2174 i‡(!
	`drwav_öô_ex
(
pWav
, 
⁄Ród
, 
⁄Sìk
, 
⁄Chunk
, 
pRódSìkU£rD©a
, 
pChunkU£rD©a
, 
Êags
)) {

2175 
	`DRWAV_FREE
(
pWav
);

2176  
NULL
;

2179  
pWav
;

2180 
	}
}

2183 
drwav
* 
	$drwav_›í_wrôe__öã∫Æ
(c⁄° 
drwav_d©a_f‹m©
* 
pF‹m©
, 
drwav_uöt64
 
tŸÆSam∂eCou¡
, 
drwav_boﬁ32
 
isSequítül
, 
drwav_wrôe_¥oc
 
⁄Wrôe
, 
drwav_£ek_¥oc
 
⁄Sìk
, * 
pU£rD©a
)

2185 
drwav
* 
pWav
 = (drwav*)
	`DRWAV_MALLOC
((*pWav));

2186 i‡(
pWav
 =
NULL
) {

2187  
NULL
;

2190 i‡(!
	`drwav_öô_wrôe__öã∫Æ
(
pWav
, 
pF‹m©
, 
tŸÆSam∂eCou¡
, 
isSequítül
, 
⁄Wrôe
, 
⁄Sìk
, 
pU£rD©a
)) {

2191 
	`DRWAV_FREE
(
pWav
);

2192  
NULL
;

2195  
pWav
;

2196 
	}
}

2198 
drwav
* 
	$drwav_›í_wrôe
(c⁄° 
drwav_d©a_f‹m©
* 
pF‹m©
, 
drwav_wrôe_¥oc
 
⁄Wrôe
, 
drwav_£ek_¥oc
 
⁄Sìk
, * 
pU£rD©a
)

2200  
	`drwav_›í_wrôe__öã∫Æ
(
pF‹m©
, 0, 
DRWAV_FALSE
, 
⁄Wrôe
, 
⁄Sìk
, 
pU£rD©a
);

2201 
	}
}

2203 
drwav
* 
	$drwav_›í_wrôe_£quítül
(c⁄° 
drwav_d©a_f‹m©
* 
pF‹m©
, 
drwav_uöt64
 
tŸÆSam∂eCou¡
, 
drwav_wrôe_¥oc
 
⁄Wrôe
, * 
pU£rD©a
)

2205  
	`drwav_›í_wrôe__öã∫Æ
(
pF‹m©
, 
tŸÆSam∂eCou¡
, 
DRWAV_TRUE
, 
⁄Wrôe
, 
NULL
, 
pU£rD©a
);

2206 
	}
}

2208 
	$drwav_˛o£
(
drwav
* 
pWav
)

2210 
	`drwav_unöô
(
pWav
);

2211 
	`DRWAV_FREE
(
pWav
);

2212 
	}
}

2215 
size_t
 
	$drwav_ªad_øw
(
drwav
* 
pWav
, 
size_t
 
byãsToRód
, * 
pBuf„rOut
)

2217 i‡(
pWav
 =
NULL
 || 
byãsToRód
 =0 || 
pBuf„rOut
 == NULL) {

2221 i‡(
byãsToRód
 > 
pWav
->
byãsRemaöög
) {

2222 
byãsToRód
 = (
size_t
)
pWav
->
byãsRemaöög
;

2225 
size_t
 
byãsRód
 = 
pWav
->
	`⁄Ród
’Wav->
pU£rD©a
, 
pBuf„rOut
, 
byãsToRód
);

2227 
pWav
->
byãsRemaöög
 -
byãsRód
;

2228  
byãsRód
;

2229 
	}
}

2231 
drwav_uöt64
 
	$drwav_ªad
(
drwav
* 
pWav
, 
drwav_uöt64
 
ßm∂esToRód
, * 
pBuf„rOut
)

2233 i‡(
pWav
 =
NULL
 || 
ßm∂esToRód
 =0 || 
pBuf„rOut
 == NULL) {

2238 i‡(
	`drwav__is_com¥es£d_f‹m©_èg
(
pWav
->
å™¶©edF‹m©Tag
)) {

2242 
drwav_uöt32
 
byãsPîSam∂e
 = 
	`drwav_gë_byãs_≥r_ßm∂e
(
pWav
);

2243 i‡(
byãsPîSam∂e
 == 0) {

2248 i‡(
ßm∂esToRód
 * 
byãsPîSam∂e
 > 
DRWAV_SIZE_MAX
) {

2249 
ßm∂esToRód
 = 
DRWAV_SIZE_MAX
 / 
byãsPîSam∂e
;

2252 
size_t
 
byãsRód
 = 
	`drwav_ªad_øw
(
pWav
, (size_t)(
ßm∂esToRód
 * 
byãsPîSam∂e
), 
pBuf„rOut
);

2253  
byãsRód
 / 
byãsPîSam∂e
;

2254 
	}
}

2256 
drwav_uöt64
 
	$drwav_ªad_pcm_‰ames
(
drwav
* 
pWav
, 
drwav_uöt64
 
‰amesToRód
, * 
pBuf„rOut
)

2258 i‡(
pWav
 =
NULL
 || 
‰amesToRód
 =0 || 
pBuf„rOut
 == NULL) {

2263 i‡(
	`drwav__is_com¥es£d_f‹m©_èg
(
pWav
->
å™¶©edF‹m©Tag
)) {

2267 
drwav_uöt32
 
byãsPîFøme
 = 
	`drwav_gë_byãs_≥r_pcm_‰ame
(
pWav
);

2268 i‡(
byãsPîFøme
 == 0) {

2273 i‡(
‰amesToRód
 * 
byãsPîFøme
 > 
DRWAV_SIZE_MAX
) {

2274 
‰amesToRód
 = 
DRWAV_SIZE_MAX
 / 
byãsPîFøme
;

2277 
size_t
 
byãsRód
 = 
	`drwav_ªad_øw
(
pWav
, (size_t)(
‰amesToRód
 * 
byãsPîFøme
), 
pBuf„rOut
);

2278  
byãsRód
 / 
byãsPîFøme
;

2279 
	}
}

2281 
drwav_boﬁ32
 
	$drwav_£ek_to_fú°_pcm_‰ame
(
drwav
* 
pWav
)

2283 i‡(
pWav
->
⁄Wrôe
 !
NULL
) {

2284  
DRWAV_FALSE
;

2287 i‡(!
pWav
->
	`⁄Sìk
’Wav->
pU£rD©a
, (ÌWav->
d©aChunkD©aPos
, 
drwav_£ek_‹igö_°¨t
)) {

2288  
DRWAV_FALSE
;

2291 i‡(
	`drwav__is_com¥es£d_f‹m©_èg
(
pWav
->
å™¶©edF‹m©Tag
)) {

2292 
pWav
->
com¥es£d
.
iCuºítSam∂e
 = 0;

2295 
pWav
->
byãsRemaöög
 =ÖWav->
d©aChunkD©aSize
;

2296  
DRWAV_TRUE
;

2297 
	}
}

2299 
drwav_boﬁ32
 
	$drwav_£ek_to_ßm∂e
(
drwav
* 
pWav
, 
drwav_uöt64
 
ßm∂e
)

2303 i‡(
pWav
->
⁄Wrôe
 !
NULL
) {

2304  
DRWAV_FALSE
;

2307 i‡(
pWav
 =
NULL
 ||ÖWav->
⁄Sìk
 == NULL) {

2308  
DRWAV_FALSE
;

2312 i‡(
pWav
->
tŸÆSam∂eCou¡
 == 0) {

2313  
DRWAV_TRUE
;

2317 i‡(
ßm∂e
 >
pWav
->
tŸÆSam∂eCou¡
) {

2318 
ßm∂e
 = 
pWav
->
tŸÆSam∂eCou¡
 - 1;

2324 i‡(
	`drwav__is_com¥es£d_f‹m©_èg
(
pWav
->
å™¶©edF‹m©Tag
)) {

2329 i‡(
ßm∂e
 < 
pWav
->
com¥es£d
.
iCuºítSam∂e
) {

2330 i‡(!
	`drwav_£ek_to_fú°_pcm_‰ame
(
pWav
)) {

2331  
DRWAV_FALSE
;

2335 i‡(
ßm∂e
 > 
pWav
->
com¥es£d
.
iCuºítSam∂e
) {

2336 
drwav_uöt64
 
off£t
 = 
ßm∂e
 - 
pWav
->
com¥es£d
.
iCuºítSam∂e
;

2338 
drwav_öt16
 
devnuŒ
[2048];

2339 
off£t
 > 0) {

2340 
drwav_uöt64
 
ßm∂esToRód
 = 
off£t
;

2341 i‡(
ßm∂esToRód
 > 2048) {

2342 
ßm∂esToRód
 = 2048;

2345 
drwav_uöt64
 
ßm∂esRód
 = 0;

2346 i‡(
pWav
->
å™¶©edF‹m©Tag
 =
DR_WAVE_FORMAT_ADPCM
) {

2347 
ßm∂esRód
 = 
	`drwav_ªad_s16__mßdpcm
(
pWav
, 
ßm∂esToRód
, 
devnuŒ
);

2348 } i‡(
pWav
->
å™¶©edF‹m©Tag
 =
DR_WAVE_FORMAT_DVI_ADPCM
) {

2349 
ßm∂esRód
 = 
	`drwav_ªad_s16__ima
(
pWav
, 
ßm∂esToRód
, 
devnuŒ
);

2351 
	`as£π
(
DRWAV_FALSE
);

2354 i‡(
ßm∂esRód
 !
ßm∂esToRód
) {

2355  
DRWAV_FALSE
;

2358 
off£t
 -
ßm∂esRód
;

2362 
drwav_uöt64
 
tŸÆSizeInByãs
 = 
pWav
->
tŸÆPCMFømeCou¡
 * 
	`drwav_gë_byãs_≥r_pcm_‰ame
(pWav);

2363 
	`drwav_as£π
(
tŸÆSizeInByãs
 >
pWav
->
byãsRemaöög
);

2365 
drwav_uöt64
 
cuºítByãPos
 = 
tŸÆSizeInByãs
 - 
pWav
->
byãsRemaöög
;

2366 
drwav_uöt64
 
èrgëByãPos
 = 
ßm∂e
 * 
	`drwav_gë_byãs_≥r_ßm∂e
(
pWav
);

2368 
drwav_uöt64
 
off£t
;

2369 i‡(
cuºítByãPos
 < 
èrgëByãPos
) {

2371 
off£t
 = (
èrgëByãPos
 - 
cuºítByãPos
);

2374 i‡(!
	`drwav_£ek_to_fú°_pcm_‰ame
(
pWav
)) {

2375  
DRWAV_FALSE
;

2377 
off£t
 = 
èrgëByãPos
;

2380 
off£t
 > 0) {

2381 
off£t32
 = ((
off£t
 > 
INT_MAX
) ? INT_MAX : ()offset);

2382 i‡(!
pWav
->
	`⁄Sìk
’Wav->
pU£rD©a
, 
off£t32
, 
drwav_£ek_‹igö_cuºít
)) {

2383  
DRWAV_FALSE
;

2386 
pWav
->
byãsRemaöög
 -
off£t32
;

2387 
off£t
 -
off£t32
;

2391  
DRWAV_TRUE
;

2392 
	}
}

2394 
drwav_boﬁ32
 
	$drwav_£ek_to_pcm_‰ame
(
drwav
* 
pWav
, 
drwav_uöt64
 
èrgëFømeIndex
)

2396  
	`drwav_£ek_to_ßm∂e
(
pWav
, 
èrgëFømeIndex
 *ÖWav->
ch™√ls
);

2397 
	}
}

2400 
size_t
 
	$drwav_wrôe_øw
(
drwav
* 
pWav
, 
size_t
 
byãsToWrôe
, c⁄° * 
pD©a
)

2402 i‡(
pWav
 =
NULL
 || 
byãsToWrôe
 =0 || 
pD©a
 == NULL) {

2406 
size_t
 
byãsWrôãn
 = 
pWav
->
	`⁄Wrôe
’Wav->
pU£rD©a
, 
pD©a
, 
byãsToWrôe
);

2407 
pWav
->
d©aChunkD©aSize
 +
byãsWrôãn
;

2409  
byãsWrôãn
;

2410 
	}
}

2412 
drwav_uöt64
 
	$drwav_wrôe
(
drwav
* 
pWav
, 
drwav_uöt64
 
ßm∂esToWrôe
, c⁄° * 
pD©a
)

2414 i‡(
pWav
 =
NULL
 || 
ßm∂esToWrôe
 =0 || 
pD©a
 == NULL) {

2418 
drwav_uöt64
 
byãsToWrôe
 = ((
ßm∂esToWrôe
 * 
pWav
->
bôsPîSam∂e
) / 8);

2419 i‡(
byãsToWrôe
 > 
DRWAV_SIZE_MAX
) {

2423 
drwav_uöt64
 
byãsWrôãn
 = 0;

2424 c⁄° 
drwav_uöt8
* 
pRu¬ögD©a
 = (c⁄° drwav_uöt8*)
pD©a
;

2425 
byãsToWrôe
 > 0) {

2426 
drwav_uöt64
 
byãsToWrôeThisIãøti⁄
 = 
byãsToWrôe
;

2427 i‡(
byãsToWrôeThisIãøti⁄
 > 
DRWAV_SIZE_MAX
) {

2428 
byãsToWrôeThisIãøti⁄
 = 
DRWAV_SIZE_MAX
;

2431 
size_t
 
byãsJu°Wrôãn
 = 
	`drwav_wrôe_øw
(
pWav
, (size_t)
byãsToWrôeThisIãøti⁄
, 
pRu¬ögD©a
);

2432 i‡(
byãsJu°Wrôãn
 == 0) {

2436 
byãsToWrôe
 -
byãsJu°Wrôãn
;

2437 
byãsWrôãn
 +
byãsJu°Wrôãn
;

2438 
pRu¬ögD©a
 +
byãsJu°Wrôãn
;

2441  (
byãsWrôãn
 * 8Ë/ 
pWav
->
bôsPîSam∂e
;

2442 
	}
}

2444 
drwav_uöt64
 
	$drwav_wrôe_pcm_‰ames
(
drwav
* 
pWav
, 
drwav_uöt64
 
‰amesToWrôe
, c⁄° * 
pD©a
)

2446  
	`drwav_wrôe
(
pWav
, 
‰amesToWrôe
 *ÖWav->
ch™√ls
, 
pD©a
) /ÖWav->channels;

2447 
	}
}

2451 
drwav_uöt64
 
	$drwav_ªad_s16__mßdpcm
(
drwav
* 
pWav
, 
drwav_uöt64
 
ßm∂esToRód
, 
drwav_öt16
* 
pBuf„rOut
)

2453 
	`drwav_as£π
(
pWav
 !
NULL
);

2454 
	`drwav_as£π
(
ßm∂esToRód
 > 0);

2455 
	`drwav_as£π
(
pBuf„rOut
 !
NULL
);

2459 
drwav_uöt64
 
tŸÆSam∂esRód
 = 0;

2461 
ßm∂esToRód
 > 0 && 
pWav
->
com¥es£d
.
iCuºítSam∂e
 <ÖWav->
tŸÆSam∂eCou¡
) {

2463 i‡(
pWav
->
mßdpcm
.
ˇchedSam∂eCou¡
 =0 &&ÖWav->mßdpcm.
byãsRemaöögInBlock
 == 0) {

2464 i‡(
pWav
->
ch™√ls
 == 1) {

2466 
drwav_uöt8
 
hódî
[7];

2467 i‡(
pWav
->
	`⁄Ród
’Wav->
pU£rD©a
, 
hódî
, (header)) != (header)) {

2468  
tŸÆSam∂esRód
;

2470 
pWav
->
mßdpcm
.
byãsRemaöögInBlock
 =ÖWav->
fmt
.
blockAlign
 - (
hódî
);

2472 
pWav
->
mßdpcm
.
¥edi˘‹
[0] = 
hódî
[0];

2473 
pWav
->
mßdpcm
.
dñè
[0] = 
	`drwav__byãs_to_s16
(
hódî
 + 1);

2474 
pWav
->
mßdpcm
.
¥evSam∂es
[0][1] = (
drwav_öt32
)
	`drwav__byãs_to_s16
(
hódî
 + 3);

2475 
pWav
->
mßdpcm
.
¥evSam∂es
[0][0] = (
drwav_öt32
)
	`drwav__byãs_to_s16
(
hódî
 + 5);

2476 
pWav
->
mßdpcm
.
ˇchedSam∂es
[2] =ÖWav->mßdpcm.
¥evSam∂es
[0][0];

2477 
pWav
->
mßdpcm
.
ˇchedSam∂es
[3] =ÖWav->mßdpcm.
¥evSam∂es
[0][1];

2478 
pWav
->
mßdpcm
.
ˇchedSam∂eCou¡
 = 2;

2481 
drwav_uöt8
 
hódî
[14];

2482 i‡(
pWav
->
	`⁄Ród
’Wav->
pU£rD©a
, 
hódî
, (header)) != (header)) {

2483  
tŸÆSam∂esRód
;

2485 
pWav
->
mßdpcm
.
byãsRemaöögInBlock
 =ÖWav->
fmt
.
blockAlign
 - (
hódî
);

2487 
pWav
->
mßdpcm
.
¥edi˘‹
[0] = 
hódî
[0];

2488 
pWav
->
mßdpcm
.
¥edi˘‹
[1] = 
hódî
[1];

2489 
pWav
->
mßdpcm
.
dñè
[0] = 
	`drwav__byãs_to_s16
(
hódî
 + 2);

2490 
pWav
->
mßdpcm
.
dñè
[1] = 
	`drwav__byãs_to_s16
(
hódî
 + 4);

2491 
pWav
->
mßdpcm
.
¥evSam∂es
[0][1] = (
drwav_öt32
)
	`drwav__byãs_to_s16
(
hódî
 + 6);

2492 
pWav
->
mßdpcm
.
¥evSam∂es
[1][1] = (
drwav_öt32
)
	`drwav__byãs_to_s16
(
hódî
 + 8);

2493 
pWav
->
mßdpcm
.
¥evSam∂es
[0][0] = (
drwav_öt32
)
	`drwav__byãs_to_s16
(
hódî
 + 10);

2494 
pWav
->
mßdpcm
.
¥evSam∂es
[1][0] = (
drwav_öt32
)
	`drwav__byãs_to_s16
(
hódî
 + 12);

2496 
pWav
->
mßdpcm
.
ˇchedSam∂es
[0] =ÖWav->mßdpcm.
¥evSam∂es
[0][0];

2497 
pWav
->
mßdpcm
.
ˇchedSam∂es
[1] =ÖWav->mßdpcm.
¥evSam∂es
[1][0];

2498 
pWav
->
mßdpcm
.
ˇchedSam∂es
[2] =ÖWav->mßdpcm.
¥evSam∂es
[0][1];

2499 
pWav
->
mßdpcm
.
ˇchedSam∂es
[3] =ÖWav->mßdpcm.
¥evSam∂es
[1][1];

2500 
pWav
->
mßdpcm
.
ˇchedSam∂eCou¡
 = 4;

2505 
ßm∂esToRód
 > 0 && 
pWav
->
mßdpcm
.
ˇchedSam∂eCou¡
 > 0 &&ÖWav->
com¥es£d
.
iCuºítSam∂e
 <ÖWav->
tŸÆSam∂eCou¡
) {

2506 
pBuf„rOut
[0] = (
drwav_öt16
)
pWav
->
mßdpcm
.
ˇchedSam∂es
[
	`drwav_cou¡of
’Wav->mßdpcm.ˇchedSam∂esË-ÖWav->mßdpcm.
ˇchedSam∂eCou¡
];

2507 
pWav
->
mßdpcm
.
ˇchedSam∂eCou¡
 -= 1;

2509 
pBuf„rOut
 += 1;

2510 
ßm∂esToRód
 -= 1;

2511 
tŸÆSam∂esRód
 += 1;

2512 
pWav
->
com¥es£d
.
iCuºítSam∂e
 += 1;

2515 i‡(
ßm∂esToRód
 == 0) {

2516  
tŸÆSam∂esRód
;

2522 i‡(
pWav
->
mßdpcm
.
ˇchedSam∂eCou¡
 == 0) {

2523 i‡(
pWav
->
mßdpcm
.
byãsRemaöögInBlock
 == 0) {

2526 
drwav_uöt8
 
nibbÀs
;

2527 i‡(
pWav
->
	`⁄Ród
’Wav->
pU£rD©a
, &
nibbÀs
, 1) != 1) {

2528  
tŸÆSam∂esRód
;

2530 
pWav
->
mßdpcm
.
byãsRemaöögInBlock
 -= 1;

2533 
drwav_öt32
 
nibbÀ0
 = ((
nibbÀs
 & 0xF0) >> 4); if ((nibbles & 0x80)) {Çibble0 |= 0xFFFFFFF0UL; }

2534 
drwav_öt32
 
nibbÀ1
 = ((
nibbÀs
 & 0x0F) >> 0); if ((nibbles & 0x08)) {Çibble1 |= 0xFFFFFFF0UL; }

2536 
drwav_öt32
 
ad≠èti⁄TabÀ
[] = {

2540 
drwav_öt32
 
c€ff1TabÀ
[] = { 256, 512, 0, 192, 240, 460, 392 };

2541 
drwav_öt32
 
c€ff2TabÀ
[] = { 0, -256, 0, 64, 0, -208, -232 };

2543 i‡(
pWav
->
ch™√ls
 == 1) {

2545 
drwav_öt32
 
√wSam∂e0
;

2546 
√wSam∂e0
 = ((
pWav
->
mßdpcm
.
¥evSam∂es
[0][1] * 
c€ff1TabÀ
[pWav->mßdpcm.
¥edi˘‹
[0]]Ë+ (pWav->mßdpcm.¥evSam∂es[0][0] * 
c€ff2TabÀ
[pWav->msadpcm.predictor[0]])) >> 8;

2547 
√wSam∂e0
 +
nibbÀ0
 * 
pWav
->
mßdpcm
.
dñè
[0];

2548 
√wSam∂e0
 = 
	`drwav_˛amp
(newSample0, -32768, 32767);

2550 
pWav
->
mßdpcm
.
dñè
[0] = (
ad≠èti⁄TabÀ
[((
nibbÀs
 & 0xF0) >> 4)] *ÖWav->msadpcm.delta[0]) >> 8;

2551 i‡(
pWav
->
mßdpcm
.
dñè
[0] < 16) {

2552 
pWav
->
mßdpcm
.
dñè
[0] = 16;

2555 
pWav
->
mßdpcm
.
¥evSam∂es
[0][0] =ÖWav->msadpcm.prevSamples[0][1];

2556 
pWav
->
mßdpcm
.
¥evSam∂es
[0][1] = 
√wSam∂e0
;

2559 
drwav_öt32
 
√wSam∂e1
;

2560 
√wSam∂e1
 = ((
pWav
->
mßdpcm
.
¥evSam∂es
[0][1] * 
c€ff1TabÀ
[pWav->mßdpcm.
¥edi˘‹
[0]]Ë+ (pWav->mßdpcm.¥evSam∂es[0][0] * 
c€ff2TabÀ
[pWav->msadpcm.predictor[0]])) >> 8;

2561 
√wSam∂e1
 +
nibbÀ1
 * 
pWav
->
mßdpcm
.
dñè
[0];

2562 
√wSam∂e1
 = 
	`drwav_˛amp
(newSample1, -32768, 32767);

2564 
pWav
->
mßdpcm
.
dñè
[0] = (
ad≠èti⁄TabÀ
[((
nibbÀs
 & 0x0F) >> 0)] *ÖWav->msadpcm.delta[0]) >> 8;

2565 i‡(
pWav
->
mßdpcm
.
dñè
[0] < 16) {

2566 
pWav
->
mßdpcm
.
dñè
[0] = 16;

2569 
pWav
->
mßdpcm
.
¥evSam∂es
[0][0] =ÖWav->msadpcm.prevSamples[0][1];

2570 
pWav
->
mßdpcm
.
¥evSam∂es
[0][1] = 
√wSam∂e1
;

2573 
pWav
->
mßdpcm
.
ˇchedSam∂es
[2] = 
√wSam∂e0
;

2574 
pWav
->
mßdpcm
.
ˇchedSam∂es
[3] = 
√wSam∂e1
;

2575 
pWav
->
mßdpcm
.
ˇchedSam∂eCou¡
 = 2;

2580 
drwav_öt32
 
√wSam∂e0
;

2581 
√wSam∂e0
 = ((
pWav
->
mßdpcm
.
¥evSam∂es
[0][1] * 
c€ff1TabÀ
[pWav->mßdpcm.
¥edi˘‹
[0]]Ë+ (pWav->mßdpcm.¥evSam∂es[0][0] * 
c€ff2TabÀ
[pWav->msadpcm.predictor[0]])) >> 8;

2582 
√wSam∂e0
 +
nibbÀ0
 * 
pWav
->
mßdpcm
.
dñè
[0];

2583 
√wSam∂e0
 = 
	`drwav_˛amp
(newSample0, -32768, 32767);

2585 
pWav
->
mßdpcm
.
dñè
[0] = (
ad≠èti⁄TabÀ
[((
nibbÀs
 & 0xF0) >> 4)] *ÖWav->msadpcm.delta[0]) >> 8;

2586 i‡(
pWav
->
mßdpcm
.
dñè
[0] < 16) {

2587 
pWav
->
mßdpcm
.
dñè
[0] = 16;

2590 
pWav
->
mßdpcm
.
¥evSam∂es
[0][0] =ÖWav->msadpcm.prevSamples[0][1];

2591 
pWav
->
mßdpcm
.
¥evSam∂es
[0][1] = 
√wSam∂e0
;

2595 
drwav_öt32
 
√wSam∂e1
;

2596 
√wSam∂e1
 = ((
pWav
->
mßdpcm
.
¥evSam∂es
[1][1] * 
c€ff1TabÀ
[pWav->mßdpcm.
¥edi˘‹
[1]]Ë+ (pWav->mßdpcm.¥evSam∂es[1][0] * 
c€ff2TabÀ
[pWav->msadpcm.predictor[1]])) >> 8;

2597 
√wSam∂e1
 +
nibbÀ1
 * 
pWav
->
mßdpcm
.
dñè
[1];

2598 
√wSam∂e1
 = 
	`drwav_˛amp
(newSample1, -32768, 32767);

2600 
pWav
->
mßdpcm
.
dñè
[1] = (
ad≠èti⁄TabÀ
[((
nibbÀs
 & 0x0F) >> 0)] *ÖWav->msadpcm.delta[1]) >> 8;

2601 i‡(
pWav
->
mßdpcm
.
dñè
[1] < 16) {

2602 
pWav
->
mßdpcm
.
dñè
[1] = 16;

2605 
pWav
->
mßdpcm
.
¥evSam∂es
[1][0] =ÖWav->msadpcm.prevSamples[1][1];

2606 
pWav
->
mßdpcm
.
¥evSam∂es
[1][1] = 
√wSam∂e1
;

2608 
pWav
->
mßdpcm
.
ˇchedSam∂es
[2] = 
√wSam∂e0
;

2609 
pWav
->
mßdpcm
.
ˇchedSam∂es
[3] = 
√wSam∂e1
;

2610 
pWav
->
mßdpcm
.
ˇchedSam∂eCou¡
 = 2;

2616  
tŸÆSam∂esRód
;

2617 
	}
}

2619 
drwav_uöt64
 
	$drwav_ªad_s16__ima
(
drwav
* 
pWav
, 
drwav_uöt64
 
ßm∂esToRód
, 
drwav_öt16
* 
pBuf„rOut
)

2621 
	`drwav_as£π
(
pWav
 !
NULL
);

2622 
	`drwav_as£π
(
ßm∂esToRód
 > 0);

2623 
	`drwav_as£π
(
pBuf„rOut
 !
NULL
);

2627 
drwav_uöt64
 
tŸÆSam∂esRód
 = 0;

2629 
ßm∂esToRód
 > 0 && 
pWav
->
com¥es£d
.
iCuºítSam∂e
 <ÖWav->
tŸÆSam∂eCou¡
) {

2631 i‡(
pWav
->
ima
.
ˇchedSam∂eCou¡
 =0 &&ÖWav->ima.
byãsRemaöögInBlock
 == 0) {

2632 i‡(
pWav
->
ch™√ls
 == 1) {

2634 
drwav_uöt8
 
hódî
[4];

2635 i‡(
pWav
->
	`⁄Ród
’Wav->
pU£rD©a
, 
hódî
, (header)) != (header)) {

2636  
tŸÆSam∂esRód
;

2638 
pWav
->
ima
.
byãsRemaöögInBlock
 =ÖWav->
fmt
.
blockAlign
 - (
hódî
);

2640 
pWav
->
ima
.
¥edi˘‹
[0] = 
	`drwav__byãs_to_s16
(
hódî
 + 0);

2641 
pWav
->
ima
.
°ïIndex
[0] = 
hódî
[2];

2642 
pWav
->
ima
.
ˇchedSam∂es
[
	`drwav_cou¡of
’Wav->ima.ˇchedSam∂esË- 1] =ÖWav->ima.
¥edi˘‹
[0];

2643 
pWav
->
ima
.
ˇchedSam∂eCou¡
 = 1;

2646 
drwav_uöt8
 
hódî
[8];

2647 i‡(
pWav
->
	`⁄Ród
’Wav->
pU£rD©a
, 
hódî
, (header)) != (header)) {

2648  
tŸÆSam∂esRód
;

2650 
pWav
->
ima
.
byãsRemaöögInBlock
 =ÖWav->
fmt
.
blockAlign
 - (
hódî
);

2652 
pWav
->
ima
.
¥edi˘‹
[0] = 
	`drwav__byãs_to_s16
(
hódî
 + 0);

2653 
pWav
->
ima
.
°ïIndex
[0] = 
hódî
[2];

2654 
pWav
->
ima
.
¥edi˘‹
[1] = 
	`drwav__byãs_to_s16
(
hódî
 + 4);

2655 
pWav
->
ima
.
°ïIndex
[1] = 
hódî
[6];

2657 
pWav
->
ima
.
ˇchedSam∂es
[
	`drwav_cou¡of
’Wav->ima.ˇchedSam∂esË- 2] =ÖWav->ima.
¥edi˘‹
[0];

2658 
pWav
->
ima
.
ˇchedSam∂es
[
	`drwav_cou¡of
’Wav->ima.ˇchedSam∂esË- 1] =ÖWav->ima.
¥edi˘‹
[1];

2659 
pWav
->
ima
.
ˇchedSam∂eCou¡
 = 2;

2664 
ßm∂esToRód
 > 0 && 
pWav
->
ima
.
ˇchedSam∂eCou¡
 > 0 &&ÖWav->
com¥es£d
.
iCuºítSam∂e
 <ÖWav->
tŸÆSam∂eCou¡
) {

2665 
pBuf„rOut
[0] = (
drwav_öt16
)
pWav
->
ima
.
ˇchedSam∂es
[
	`drwav_cou¡of
’Wav->ima.ˇchedSam∂esË-ÖWav->ima.
ˇchedSam∂eCou¡
];

2666 
pWav
->
ima
.
ˇchedSam∂eCou¡
 -= 1;

2668 
pBuf„rOut
 += 1;

2669 
ßm∂esToRód
 -= 1;

2670 
tŸÆSam∂esRód
 += 1;

2671 
pWav
->
com¥es£d
.
iCuºítSam∂e
 += 1;

2674 i‡(
ßm∂esToRód
 == 0) {

2675  
tŸÆSam∂esRód
;

2680 i‡(
pWav
->
ima
.
ˇchedSam∂eCou¡
 == 0) {

2681 i‡(
pWav
->
ima
.
byãsRemaöögInBlock
 == 0) {

2684 
drwav_öt32
 
ödexTabÀ
[16] = {

2689 
drwav_öt32
 
°ïTabÀ
[89] = {

2703 
pWav
->
ima
.
ˇchedSam∂eCou¡
 = 8 *ÖWav->
ch™√ls
;

2704 
drwav_uöt32
 
iCh™√l
 = 0; iCh™√»< 
pWav
->
ch™√ls
; ++iChannel) {

2705 
drwav_uöt8
 
nibbÀs
[4];

2706 i‡(
pWav
->
	`⁄Ród
’Wav->
pU£rD©a
, &
nibbÀs
, 4) != 4) {

2707  
tŸÆSam∂esRód
;

2709 
pWav
->
ima
.
byãsRemaöögInBlock
 -= 4;

2711 
drwav_uöt32
 
iByã
 = 0; iByte < 4; ++iByte) {

2712 
drwav_uöt8
 
nibbÀ0
 = ((
nibbÀs
[
iByã
] & 0x0F) >> 0);

2713 
drwav_uöt8
 
nibbÀ1
 = ((
nibbÀs
[
iByã
] & 0xF0) >> 4);

2715 
drwav_öt32
 
°ï
 = 
°ïTabÀ
[
pWav
->
ima
.
°ïIndex
[
iCh™√l
]];

2716 
drwav_öt32
 
¥edi˘‹
 = 
pWav
->
ima
.¥edi˘‹[
iCh™√l
];

2718 
drwav_öt32
 
diff
 = 
°ï
 >> 3;

2719 i‡(
nibbÀ0
 & 1Ë
diff
 +
°ï
 >> 2;

2720 i‡(
nibbÀ0
 & 2Ë
diff
 +
°ï
 >> 1;

2721 i‡(
nibbÀ0
 & 4Ë
diff
 +
°ï
;

2722 i‡(
nibbÀ0
 & 8Ë
diff
 = -diff;

2724 
¥edi˘‹
 = 
	`drwav_˛amp
’ªdi˘‹ + 
diff
, -32768, 32767);

2725 
pWav
->
ima
.
¥edi˘‹
[
iCh™√l
] =Öredictor;

2726 
pWav
->
ima
.
°ïIndex
[
iCh™√l
] = 
	`drwav_˛amp
’Wav->ima.°ïIndex[iCh™√l] + 
ödexTabÀ
[
nibbÀ0
], 0, (
drwav_öt32
)
	`drwav_cou¡of
(
°ïTabÀ
)-1);

2727 
pWav
->
ima
.
ˇchedSam∂es
[(
	`drwav_cou¡of
’Wav->ima.ˇchedSam∂esË-ÖWav->ima.
ˇchedSam∂eCou¡
Ë+ (
iByã
*2+0)*pWav->
ch™√ls
 + 
iCh™√l
] = 
¥edi˘‹
;

2730 
°ï
 = 
°ïTabÀ
[
pWav
->
ima
.
°ïIndex
[
iCh™√l
]];

2731 
¥edi˘‹
 = 
pWav
->
ima
.¥edi˘‹[
iCh™√l
];

2733 
diff
 = 
°ï
 >> 3;

2734 i‡(
nibbÀ1
 & 1Ë
diff
 +
°ï
 >> 2;

2735 i‡(
nibbÀ1
 & 2Ë
diff
 +
°ï
 >> 1;

2736 i‡(
nibbÀ1
 & 4Ë
diff
 +
°ï
;

2737 i‡(
nibbÀ1
 & 8Ë
diff
 = -diff;

2739 
¥edi˘‹
 = 
	`drwav_˛amp
’ªdi˘‹ + 
diff
, -32768, 32767);

2740 
pWav
->
ima
.
¥edi˘‹
[
iCh™√l
] =Öredictor;

2741 
pWav
->
ima
.
°ïIndex
[
iCh™√l
] = 
	`drwav_˛amp
’Wav->ima.°ïIndex[iCh™√l] + 
ödexTabÀ
[
nibbÀ1
], 0, (
drwav_öt32
)
	`drwav_cou¡of
(
°ïTabÀ
)-1);

2742 
pWav
->
ima
.
ˇchedSam∂es
[(
	`drwav_cou¡of
’Wav->ima.ˇchedSam∂esË-ÖWav->ima.
ˇchedSam∂eCou¡
Ë+ (
iByã
*2+1)*pWav->
ch™√ls
 + 
iCh™√l
] = 
¥edi˘‹
;

2749  
tŸÆSam∂esRód
;

2750 
	}
}

2753 #i‚de‡
DR_WAV_NO_CONVERSION_API


2754 
	gg_drwavAœwTabÀ
[256] = {

2773 
	gg_drwavMuœwTabÀ
[256] = {

2792 
DRWAV_INLINE
 
drwav_öt16
 
	$drwav__Æaw_to_s16
(
drwav_uöt8
 
ßm∂eIn
)

2794  ()
g_drwavAœwTabÀ
[
ßm∂eIn
];

2795 
	}
}

2797 
DRWAV_INLINE
 
drwav_öt16
 
	$drwav__muœw_to_s16
(
drwav_uöt8
 
ßm∂eIn
)

2799  ()
g_drwavMuœwTabÀ
[
ßm∂eIn
];

2800 
	}
}

2804 
	$drwav__pcm_to_s16
(
drwav_öt16
* 
pOut
, c⁄° * 
pIn
, 
size_t
 
tŸÆSam∂eCou¡
, 
byãsPîSam∂e
)

2807 i‡(
byãsPîSam∂e
 == 1) {

2808 
	`drwav_u8_to_s16
(
pOut
, 
pIn
, 
tŸÆSam∂eCou¡
);

2814 i‡(
byãsPîSam∂e
 == 2) {

2815 
i
 = 0; i < 
tŸÆSam∂eCou¡
; ++i) {

2816 *
pOut
++ = ((c⁄° 
drwav_öt16
*)
pIn
)[
i
];

2820 i‡(
byãsPîSam∂e
 == 3) {

2821 
	`drwav_s24_to_s16
(
pOut
, 
pIn
, 
tŸÆSam∂eCou¡
);

2824 i‡(
byãsPîSam∂e
 == 4) {

2825 
	`drwav_s32_to_s16
(
pOut
, (c⁄° 
drwav_öt32
*)
pIn
, 
tŸÆSam∂eCou¡
);

2831 i‡(
byãsPîSam∂e
 > 8) {

2832 
	`drwav_zîo_mem‹y
(
pOut
, 
tŸÆSam∂eCou¡
 * (*pOut));

2838 
i
 = 0; i < 
tŸÆSam∂eCou¡
; ++i) {

2839 
drwav_uöt64
 
ßm∂e
 = 0;

2840 
shi·
 = (8 - 
byãsPîSam∂e
) * 8;

2842 
j
;

2843 
j
 = 0; j < 
byãsPîSam∂e
 && j < 8; j += 1) {

2844 
ßm∂e
 |(
drwav_uöt64
)(
pIn
[
j
]Ë<< 
shi·
;

2845 
shi·
 += 8;

2848 
pIn
 +
j
;

2849 *
pOut
++ = (
drwav_öt16
)((
drwav_öt64
)
ßm∂e
 >> 48);

2851 
	}
}

2853 
	$drwav__õì_to_s16
(
drwav_öt16
* 
pOut
, c⁄° * 
pIn
, 
size_t
 
tŸÆSam∂eCou¡
, 
byãsPîSam∂e
)

2855 i‡(
byãsPîSam∂e
 == 4) {

2856 
	`drwav_f32_to_s16
(
pOut
, (c⁄° *)
pIn
, 
tŸÆSam∂eCou¡
);

2858 } i‡(
byãsPîSam∂e
 == 8) {

2859 
	`drwav_f64_to_s16
(
pOut
, (c⁄° *)
pIn
, 
tŸÆSam∂eCou¡
);

2863 
	`drwav_zîo_mem‹y
(
pOut
, 
tŸÆSam∂eCou¡
 * (*pOut));

2866 
	}
}

2868 
drwav_uöt64
 
	$drwav_ªad_s16__pcm
(
drwav
* 
pWav
, 
drwav_uöt64
 
ßm∂esToRód
, 
drwav_öt16
* 
pBuf„rOut
)

2870 
drwav_uöt32
 
byãsPîSam∂e
;

2873 i‡(
pWav
->
å™¶©edF‹m©Tag
 =
DR_WAVE_FORMAT_PCM
 &&ÖWav->
bôsPîSam∂e
 == 16) {

2874  
	`drwav_ªad
(
pWav
, 
ßm∂esToRód
, 
pBuf„rOut
);

2877 
byãsPîSam∂e
 = 
	`drwav_gë_byãs_≥r_ßm∂e
(
pWav
);

2878 i‡(
byãsPîSam∂e
 == 0) {

2882 
drwav_uöt64
 
tŸÆSam∂esRód
 = 0;

2883 
ßm∂eD©a
[4096];

2884 
ßm∂esToRód
 > 0) {

2885 
drwav_uöt64
 
ßm∂esRód
 = 
	`drwav_ªad
(
pWav
, 
	`drwav_mö
(
ßm∂esToRód
, (
ßm∂eD©a
)/
byãsPîSam∂e
), sampleData);

2886 i‡(
ßm∂esRód
 == 0) {

2890 
	`drwav__pcm_to_s16
(
pBuf„rOut
, 
ßm∂eD©a
, (
size_t
)
ßm∂esRód
, 
byãsPîSam∂e
);

2892 
pBuf„rOut
 +
ßm∂esRód
;

2893 
ßm∂esToRód
 -
ßm∂esRód
;

2894 
tŸÆSam∂esRód
 +
ßm∂esRód
;

2897  
tŸÆSam∂esRód
;

2898 
	}
}

2900 
drwav_uöt64
 
	$drwav_ªad_s16__õì
(
drwav
* 
pWav
, 
drwav_uöt64
 
ßm∂esToRód
, 
drwav_öt16
* 
pBuf„rOut
)

2902 
drwav_uöt32
 
byãsPîSam∂e
 = 
	`drwav_gë_byãs_≥r_ßm∂e
(
pWav
);

2903 i‡(
byãsPîSam∂e
 == 0) {

2907 
drwav_uöt64
 
tŸÆSam∂esRód
 = 0;

2908 
ßm∂eD©a
[4096];

2909 
ßm∂esToRód
 > 0) {

2910 
drwav_uöt64
 
ßm∂esRód
 = 
	`drwav_ªad
(
pWav
, 
	`drwav_mö
(
ßm∂esToRód
, (
ßm∂eD©a
)/
byãsPîSam∂e
), sampleData);

2911 i‡(
ßm∂esRód
 == 0) {

2915 
	`drwav__õì_to_s16
(
pBuf„rOut
, 
ßm∂eD©a
, (
size_t
)
ßm∂esRód
, 
byãsPîSam∂e
);

2917 
pBuf„rOut
 +
ßm∂esRód
;

2918 
ßm∂esToRód
 -
ßm∂esRód
;

2919 
tŸÆSam∂esRód
 +
ßm∂esRód
;

2922  
tŸÆSam∂esRód
;

2923 
	}
}

2925 
drwav_uöt64
 
	$drwav_ªad_s16__Æaw
(
drwav
* 
pWav
, 
drwav_uöt64
 
ßm∂esToRód
, 
drwav_öt16
* 
pBuf„rOut
)

2927 
drwav_uöt32
 
byãsPîSam∂e
 = 
	`drwav_gë_byãs_≥r_ßm∂e
(
pWav
);

2928 i‡(
byãsPîSam∂e
 == 0) {

2932 
drwav_uöt64
 
tŸÆSam∂esRód
 = 0;

2933 
ßm∂eD©a
[4096];

2934 
ßm∂esToRód
 > 0) {

2935 
drwav_uöt64
 
ßm∂esRód
 = 
	`drwav_ªad
(
pWav
, 
	`drwav_mö
(
ßm∂esToRód
, (
ßm∂eD©a
)/
byãsPîSam∂e
), sampleData);

2936 i‡(
ßm∂esRód
 == 0) {

2940 
	`drwav_Æaw_to_s16
(
pBuf„rOut
, 
ßm∂eD©a
, (
size_t
)
ßm∂esRód
);

2942 
pBuf„rOut
 +
ßm∂esRód
;

2943 
ßm∂esToRód
 -
ßm∂esRód
;

2944 
tŸÆSam∂esRód
 +
ßm∂esRód
;

2947  
tŸÆSam∂esRód
;

2948 
	}
}

2950 
drwav_uöt64
 
	$drwav_ªad_s16__muœw
(
drwav
* 
pWav
, 
drwav_uöt64
 
ßm∂esToRód
, 
drwav_öt16
* 
pBuf„rOut
)

2952 
drwav_uöt32
 
byãsPîSam∂e
 = 
	`drwav_gë_byãs_≥r_ßm∂e
(
pWav
);

2953 i‡(
byãsPîSam∂e
 == 0) {

2957 
drwav_uöt64
 
tŸÆSam∂esRód
 = 0;

2958 
ßm∂eD©a
[4096];

2959 
ßm∂esToRód
 > 0) {

2960 
drwav_uöt64
 
ßm∂esRód
 = 
	`drwav_ªad
(
pWav
, 
	`drwav_mö
(
ßm∂esToRód
, (
ßm∂eD©a
)/
byãsPîSam∂e
), sampleData);

2961 i‡(
ßm∂esRód
 == 0) {

2965 
	`drwav_muœw_to_s16
(
pBuf„rOut
, 
ßm∂eD©a
, (
size_t
)
ßm∂esRód
);

2967 
pBuf„rOut
 +
ßm∂esRód
;

2968 
ßm∂esToRód
 -
ßm∂esRód
;

2969 
tŸÆSam∂esRód
 +
ßm∂esRód
;

2972  
tŸÆSam∂esRód
;

2973 
	}
}

2975 
drwav_uöt64
 
	$drwav_ªad_s16
(
drwav
* 
pWav
, 
drwav_uöt64
 
ßm∂esToRód
, 
drwav_öt16
* 
pBuf„rOut
)

2977 i‡(
pWav
 =
NULL
 || 
ßm∂esToRód
 =0 || 
pBuf„rOut
 == NULL) {

2982 i‡(
ßm∂esToRód
 * (
drwav_öt16
Ë> 
DRWAV_SIZE_MAX
) {

2983 
ßm∂esToRód
 = 
DRWAV_SIZE_MAX
 / (
drwav_öt16
);

2986 i‡(
pWav
->
å™¶©edF‹m©Tag
 =
DR_WAVE_FORMAT_PCM
) {

2987  
	`drwav_ªad_s16__pcm
(
pWav
, 
ßm∂esToRód
, 
pBuf„rOut
);

2990 i‡(
pWav
->
å™¶©edF‹m©Tag
 =
DR_WAVE_FORMAT_ADPCM
) {

2991  
	`drwav_ªad_s16__mßdpcm
(
pWav
, 
ßm∂esToRód
, 
pBuf„rOut
);

2994 i‡(
pWav
->
å™¶©edF‹m©Tag
 =
DR_WAVE_FORMAT_IEEE_FLOAT
) {

2995  
	`drwav_ªad_s16__õì
(
pWav
, 
ßm∂esToRód
, 
pBuf„rOut
);

2998 i‡(
pWav
->
å™¶©edF‹m©Tag
 =
DR_WAVE_FORMAT_ALAW
) {

2999  
	`drwav_ªad_s16__Æaw
(
pWav
, 
ßm∂esToRód
, 
pBuf„rOut
);

3002 i‡(
pWav
->
å™¶©edF‹m©Tag
 =
DR_WAVE_FORMAT_MULAW
) {

3003  
	`drwav_ªad_s16__muœw
(
pWav
, 
ßm∂esToRód
, 
pBuf„rOut
);

3006 i‡(
pWav
->
å™¶©edF‹m©Tag
 =
DR_WAVE_FORMAT_DVI_ADPCM
) {

3007  
	`drwav_ªad_s16__ima
(
pWav
, 
ßm∂esToRód
, 
pBuf„rOut
);

3011 
	}
}

3013 
drwav_uöt64
 
	$drwav_ªad_pcm_‰ames_s16
(
drwav
* 
pWav
, 
drwav_uöt64
 
‰amesToRód
, 
drwav_öt16
* 
pBuf„rOut
)

3015  
	`drwav_ªad_s16
(
pWav
, 
‰amesToRód
 *ÖWav->
ch™√ls
, 
pBuf„rOut
) /ÖWav->channels;

3016 
	}
}

3018 
	$drwav_u8_to_s16
(
drwav_öt16
* 
pOut
, c⁄° 
drwav_uöt8
* 
pIn
, 
size_t
 
ßm∂eCou¡
)

3020 
r
;

3021 
size_t
 
i
 = 0; i < 
ßm∂eCou¡
; ++i) {

3022 
x
 = 
pIn
[
i
];

3023 
r
 = 
x
 - 128;

3024 
r
 =Ñ << 8;

3025 
pOut
[
i
] = ()
r
;

3027 
	}
}

3029 
	$drwav_s24_to_s16
(
drwav_öt16
* 
pOut
, c⁄° 
drwav_uöt8
* 
pIn
, 
size_t
 
ßm∂eCou¡
)

3031 
r
;

3032 
size_t
 
i
 = 0; i < 
ßm∂eCou¡
; ++i) {

3033 
x
 = (()((()(((c⁄° *)
pIn
)[
i
*3+0]) << 8) | (()(((const *)pIn)[i*3+1]) << 16) | (()(((const *)pIn)[i*3+2])) << 24)) >> 8;

3034 
r
 = 
x
 >> 8;

3035 
pOut
[
i
] = ()
r
;

3037 
	}
}

3039 
	$drwav_s32_to_s16
(
drwav_öt16
* 
pOut
, c⁄° 
drwav_öt32
* 
pIn
, 
size_t
 
ßm∂eCou¡
)

3041 
r
;

3042 
size_t
 
i
 = 0; i < 
ßm∂eCou¡
; ++i) {

3043 
x
 = 
pIn
[
i
];

3044 
r
 = 
x
 >> 16;

3045 
pOut
[
i
] = ()
r
;

3047 
	}
}

3049 
	$drwav_f32_to_s16
(
drwav_öt16
* 
pOut
, c⁄° * 
pIn
, 
size_t
 
ßm∂eCou¡
)

3051 
r
;

3052 
size_t
 
i
 = 0; i < 
ßm∂eCou¡
; ++i) {

3053 
x
 = 
pIn
[
i
];

3054 
c
;

3055 
c
 = ((
x
 < -1) ? -1 : ((x > 1) ? 1 : x));

3056 
c
 = c + 1;

3057 
r
 = ()(
c
 * 32767.5f);

3058 
r
 =Ñ - 32768;

3059 
pOut
[
i
] = ()
r
;

3061 
	}
}

3063 
	$drwav_f64_to_s16
(
drwav_öt16
* 
pOut
, c⁄° * 
pIn
, 
size_t
 
ßm∂eCou¡
)

3065 
r
;

3066 
size_t
 
i
 = 0; i < 
ßm∂eCou¡
; ++i) {

3067 
x
 = 
pIn
[
i
];

3068 
c
;

3069 
c
 = ((
x
 < -1) ? -1 : ((x > 1) ? 1 : x));

3070 
c
 = c + 1;

3071 
r
 = ()(
c
 * 32767.5);

3072 
r
 =Ñ - 32768;

3073 
pOut
[
i
] = ()
r
;

3075 
	}
}

3077 
	$drwav_Æaw_to_s16
(
drwav_öt16
* 
pOut
, c⁄° 
drwav_uöt8
* 
pIn
, 
size_t
 
ßm∂eCou¡
)

3079 
size_t
 
i
 = 0; i < 
ßm∂eCou¡
; ++i) {

3080 
pOut
[
i
] = 
	`drwav__Æaw_to_s16
(
pIn
[i]);

3082 
	}
}

3084 
	$drwav_muœw_to_s16
(
drwav_öt16
* 
pOut
, c⁄° 
drwav_uöt8
* 
pIn
, 
size_t
 
ßm∂eCou¡
)

3086 
size_t
 
i
 = 0; i < 
ßm∂eCou¡
; ++i) {

3087 
pOut
[
i
] = 
	`drwav__muœw_to_s16
(
pIn
[i]);

3089 
	}
}

3093 
	$drwav__pcm_to_f32
(* 
pOut
, c⁄° * 
pIn
, 
size_t
 
ßm∂eCou¡
, 
byãsPîSam∂e
)

3096 i‡(
byãsPîSam∂e
 == 1) {

3097 
	`drwav_u8_to_f32
(
pOut
, 
pIn
, 
ßm∂eCou¡
);

3102 i‡(
byãsPîSam∂e
 == 2) {

3103 
	`drwav_s16_to_f32
(
pOut
, (c⁄° 
drwav_öt16
*)
pIn
, 
ßm∂eCou¡
);

3106 i‡(
byãsPîSam∂e
 == 3) {

3107 
	`drwav_s24_to_f32
(
pOut
, 
pIn
, 
ßm∂eCou¡
);

3110 i‡(
byãsPîSam∂e
 == 4) {

3111 
	`drwav_s32_to_f32
(
pOut
, (c⁄° 
drwav_öt32
*)
pIn
, 
ßm∂eCou¡
);

3117 i‡(
byãsPîSam∂e
 > 8) {

3118 
	`drwav_zîo_mem‹y
(
pOut
, 
ßm∂eCou¡
 * (*pOut));

3124 
i
 = 0; i < 
ßm∂eCou¡
; ++i) {

3125 
drwav_uöt64
 
ßm∂e
 = 0;

3126 
shi·
 = (8 - 
byãsPîSam∂e
) * 8;

3128 
j
;

3129 
j
 = 0; j < 
byãsPîSam∂e
 && j < 8; j += 1) {

3130 
ßm∂e
 |(
drwav_uöt64
)(
pIn
[
j
]Ë<< 
shi·
;

3131 
shi·
 += 8;

3134 
pIn
 +
j
;

3135 *
pOut
++ = ()((
drwav_öt64
)
ßm∂e
 / 9223372036854775807.0);

3137 
	}
}

3139 
	$drwav__õì_to_f32
(* 
pOut
, c⁄° * 
pIn
, 
size_t
 
ßm∂eCou¡
, 
byãsPîSam∂e
)

3141 i‡(
byãsPîSam∂e
 == 4) {

3142 
i
 = 0; i < 
ßm∂eCou¡
; ++i) {

3143 *
pOut
++ = ((c⁄° *)
pIn
)[
i
];

3146 } i‡(
byãsPîSam∂e
 == 8) {

3147 
	`drwav_f64_to_f32
(
pOut
, (c⁄° *)
pIn
, 
ßm∂eCou¡
);

3151 
	`drwav_zîo_mem‹y
(
pOut
, 
ßm∂eCou¡
 * (*pOut));

3154 
	}
}

3157 
drwav_uöt64
 
	$drwav_ªad_f32__pcm
(
drwav
* 
pWav
, 
drwav_uöt64
 
ßm∂esToRód
, * 
pBuf„rOut
)

3159 
drwav_uöt32
 
byãsPîSam∂e
 = 
	`drwav_gë_byãs_≥r_ßm∂e
(
pWav
);

3160 i‡(
byãsPîSam∂e
 == 0) {

3164 
drwav_uöt64
 
tŸÆSam∂esRód
 = 0;

3165 
ßm∂eD©a
[4096];

3166 
ßm∂esToRód
 > 0) {

3167 
drwav_uöt64
 
ßm∂esRód
 = 
	`drwav_ªad
(
pWav
, 
	`drwav_mö
(
ßm∂esToRód
, (
ßm∂eD©a
)/
byãsPîSam∂e
), sampleData);

3168 i‡(
ßm∂esRód
 == 0) {

3172 
	`drwav__pcm_to_f32
(
pBuf„rOut
, 
ßm∂eD©a
, (
size_t
)
ßm∂esRód
, 
byãsPîSam∂e
);

3173 
pBuf„rOut
 +
ßm∂esRód
;

3175 
ßm∂esToRód
 -
ßm∂esRód
;

3176 
tŸÆSam∂esRód
 +
ßm∂esRód
;

3179  
tŸÆSam∂esRód
;

3180 
	}
}

3182 
drwav_uöt64
 
	$drwav_ªad_f32__mßdpcm
(
drwav
* 
pWav
, 
drwav_uöt64
 
ßm∂esToRód
, * 
pBuf„rOut
)

3186 
drwav_uöt64
 
tŸÆSam∂esRód
 = 0;

3187 
drwav_öt16
 
ßm∂es16
[2048];

3188 
ßm∂esToRód
 > 0) {

3189 
drwav_uöt64
 
ßm∂esRód
 = 
	`drwav_ªad_s16
(
pWav
, 
	`drwav_mö
(
ßm∂esToRód
, 2048), 
ßm∂es16
);

3190 i‡(
ßm∂esRód
 == 0) {

3194 
	`drwav_s16_to_f32
(
pBuf„rOut
, 
ßm∂es16
, (
size_t
)
ßm∂esRód
);

3196 
pBuf„rOut
 +
ßm∂esRód
;

3197 
ßm∂esToRód
 -
ßm∂esRód
;

3198 
tŸÆSam∂esRód
 +
ßm∂esRód
;

3201  
tŸÆSam∂esRód
;

3202 
	}
}

3204 
drwav_uöt64
 
	$drwav_ªad_f32__ima
(
drwav
* 
pWav
, 
drwav_uöt64
 
ßm∂esToRód
, * 
pBuf„rOut
)

3208 
drwav_uöt64
 
tŸÆSam∂esRód
 = 0;

3209 
drwav_öt16
 
ßm∂es16
[2048];

3210 
ßm∂esToRód
 > 0) {

3211 
drwav_uöt64
 
ßm∂esRód
 = 
	`drwav_ªad_s16
(
pWav
, 
	`drwav_mö
(
ßm∂esToRód
, 2048), 
ßm∂es16
);

3212 i‡(
ßm∂esRód
 == 0) {

3216 
	`drwav_s16_to_f32
(
pBuf„rOut
, 
ßm∂es16
, (
size_t
)
ßm∂esRód
);

3218 
pBuf„rOut
 +
ßm∂esRód
;

3219 
ßm∂esToRód
 -
ßm∂esRód
;

3220 
tŸÆSam∂esRód
 +
ßm∂esRód
;

3223  
tŸÆSam∂esRód
;

3224 
	}
}

3226 
drwav_uöt64
 
	$drwav_ªad_f32__õì
(
drwav
* 
pWav
, 
drwav_uöt64
 
ßm∂esToRód
, * 
pBuf„rOut
)

3228 
drwav_uöt32
 
byãsPîSam∂e
;

3231 i‡(
pWav
->
å™¶©edF‹m©Tag
 =
DR_WAVE_FORMAT_IEEE_FLOAT
 &&ÖWav->
bôsPîSam∂e
 == 32) {

3232  
	`drwav_ªad
(
pWav
, 
ßm∂esToRód
, 
pBuf„rOut
);

3235 
byãsPîSam∂e
 = 
	`drwav_gë_byãs_≥r_ßm∂e
(
pWav
);

3236 i‡(
byãsPîSam∂e
 == 0) {

3240 
drwav_uöt64
 
tŸÆSam∂esRód
 = 0;

3241 
ßm∂eD©a
[4096];

3242 
ßm∂esToRód
 > 0) {

3243 
drwav_uöt64
 
ßm∂esRód
 = 
	`drwav_ªad
(
pWav
, 
	`drwav_mö
(
ßm∂esToRód
, (
ßm∂eD©a
)/
byãsPîSam∂e
), sampleData);

3244 i‡(
ßm∂esRód
 == 0) {

3248 
	`drwav__õì_to_f32
(
pBuf„rOut
, 
ßm∂eD©a
, (
size_t
)
ßm∂esRód
, 
byãsPîSam∂e
);

3250 
pBuf„rOut
 +
ßm∂esRód
;

3251 
ßm∂esToRód
 -
ßm∂esRód
;

3252 
tŸÆSam∂esRód
 +
ßm∂esRód
;

3255  
tŸÆSam∂esRód
;

3256 
	}
}

3258 
drwav_uöt64
 
	$drwav_ªad_f32__Æaw
(
drwav
* 
pWav
, 
drwav_uöt64
 
ßm∂esToRód
, * 
pBuf„rOut
)

3260 
drwav_uöt32
 
byãsPîSam∂e
 = 
	`drwav_gë_byãs_≥r_ßm∂e
(
pWav
);

3261 i‡(
byãsPîSam∂e
 == 0) {

3265 
drwav_uöt64
 
tŸÆSam∂esRód
 = 0;

3266 
ßm∂eD©a
[4096];

3267 
ßm∂esToRód
 > 0) {

3268 
drwav_uöt64
 
ßm∂esRód
 = 
	`drwav_ªad
(
pWav
, 
	`drwav_mö
(
ßm∂esToRód
, (
ßm∂eD©a
)/
byãsPîSam∂e
), sampleData);

3269 i‡(
ßm∂esRód
 == 0) {

3273 
	`drwav_Æaw_to_f32
(
pBuf„rOut
, 
ßm∂eD©a
, (
size_t
)
ßm∂esRód
);

3275 
pBuf„rOut
 +
ßm∂esRód
;

3276 
ßm∂esToRód
 -
ßm∂esRód
;

3277 
tŸÆSam∂esRód
 +
ßm∂esRód
;

3280  
tŸÆSam∂esRód
;

3281 
	}
}

3283 
drwav_uöt64
 
	$drwav_ªad_f32__muœw
(
drwav
* 
pWav
, 
drwav_uöt64
 
ßm∂esToRód
, * 
pBuf„rOut
)

3285 
drwav_uöt32
 
byãsPîSam∂e
 = 
	`drwav_gë_byãs_≥r_ßm∂e
(
pWav
);

3286 i‡(
byãsPîSam∂e
 == 0) {

3290 
drwav_uöt64
 
tŸÆSam∂esRód
 = 0;

3291 
ßm∂eD©a
[4096];

3292 
ßm∂esToRód
 > 0) {

3293 
drwav_uöt64
 
ßm∂esRód
 = 
	`drwav_ªad
(
pWav
, 
	`drwav_mö
(
ßm∂esToRód
, (
ßm∂eD©a
)/
byãsPîSam∂e
), sampleData);

3294 i‡(
ßm∂esRód
 == 0) {

3298 
	`drwav_muœw_to_f32
(
pBuf„rOut
, 
ßm∂eD©a
, (
size_t
)
ßm∂esRód
);

3300 
pBuf„rOut
 +
ßm∂esRód
;

3301 
ßm∂esToRód
 -
ßm∂esRód
;

3302 
tŸÆSam∂esRód
 +
ßm∂esRód
;

3305  
tŸÆSam∂esRód
;

3306 
	}
}

3308 
drwav_uöt64
 
	$drwav_ªad_f32
(
drwav
* 
pWav
, 
drwav_uöt64
 
ßm∂esToRód
, * 
pBuf„rOut
)

3310 i‡(
pWav
 =
NULL
 || 
ßm∂esToRód
 =0 || 
pBuf„rOut
 == NULL) {

3315 i‡(
ßm∂esToRód
 * (Ë> 
DRWAV_SIZE_MAX
) {

3316 
ßm∂esToRód
 = 
DRWAV_SIZE_MAX
 / ();

3319 i‡(
pWav
->
å™¶©edF‹m©Tag
 =
DR_WAVE_FORMAT_PCM
) {

3320  
	`drwav_ªad_f32__pcm
(
pWav
, 
ßm∂esToRód
, 
pBuf„rOut
);

3323 i‡(
pWav
->
å™¶©edF‹m©Tag
 =
DR_WAVE_FORMAT_ADPCM
) {

3324  
	`drwav_ªad_f32__mßdpcm
(
pWav
, 
ßm∂esToRód
, 
pBuf„rOut
);

3327 i‡(
pWav
->
å™¶©edF‹m©Tag
 =
DR_WAVE_FORMAT_IEEE_FLOAT
) {

3328  
	`drwav_ªad_f32__õì
(
pWav
, 
ßm∂esToRód
, 
pBuf„rOut
);

3331 i‡(
pWav
->
å™¶©edF‹m©Tag
 =
DR_WAVE_FORMAT_ALAW
) {

3332  
	`drwav_ªad_f32__Æaw
(
pWav
, 
ßm∂esToRód
, 
pBuf„rOut
);

3335 i‡(
pWav
->
å™¶©edF‹m©Tag
 =
DR_WAVE_FORMAT_MULAW
) {

3336  
	`drwav_ªad_f32__muœw
(
pWav
, 
ßm∂esToRód
, 
pBuf„rOut
);

3339 i‡(
pWav
->
å™¶©edF‹m©Tag
 =
DR_WAVE_FORMAT_DVI_ADPCM
) {

3340  
	`drwav_ªad_f32__ima
(
pWav
, 
ßm∂esToRód
, 
pBuf„rOut
);

3344 
	}
}

3346 
drwav_uöt64
 
	$drwav_ªad_pcm_‰ames_f32
(
drwav
* 
pWav
, 
drwav_uöt64
 
‰amesToRód
, * 
pBuf„rOut
)

3348  
	`drwav_ªad_f32
(
pWav
, 
‰amesToRód
 *ÖWav->
ch™√ls
, 
pBuf„rOut
) /ÖWav->channels;

3349 
	}
}

3351 
	$drwav_u8_to_f32
(* 
pOut
, c⁄° 
drwav_uöt8
* 
pIn
, 
size_t
 
ßm∂eCou¡
)

3353 i‡(
pOut
 =
NULL
 || 
pIn
 == NULL) {

3357 #ifde‡
DR_WAV_LIBSNDFILE_COMPAT


3362 
size_t
 
i
 = 0; i < 
ßm∂eCou¡
; ++i) {

3363 *
pOut
++ = (
pIn
[
i
] / 256.0f) * 2 - 1;

3366 
size_t
 
i
 = 0; i < 
ßm∂eCou¡
; ++i) {

3367 *
pOut
++ = (
pIn
[
i
] / 255.0f) * 2 - 1;

3370 
	}
}

3372 
	$drwav_s16_to_f32
(* 
pOut
, c⁄° 
drwav_öt16
* 
pIn
, 
size_t
 
ßm∂eCou¡
)

3374 i‡(
pOut
 =
NULL
 || 
pIn
 == NULL) {

3378 
size_t
 
i
 = 0; i < 
ßm∂eCou¡
; ++i) {

3379 *
pOut
++ = 
pIn
[
i
] / 32768.0f;

3381 
	}
}

3383 
	$drwav_s24_to_f32
(* 
pOut
, c⁄° 
drwav_uöt8
* 
pIn
, 
size_t
 
ßm∂eCou¡
)

3385 i‡(
pOut
 =
NULL
 || 
pIn
 == NULL) {

3389 
size_t
 
i
 = 0; i < 
ßm∂eCou¡
; ++i) {

3390 
s0
 = 
pIn
[
i
*3 + 0];

3391 
s1
 = 
pIn
[
i
*3 + 1];

3392 
s2
 = 
pIn
[
i
*3 + 2];

3394 
ßm∂e32
 = ()((
s0
 << 8Ë| (
s1
 << 16Ë| (
s2
 << 24));

3395 *
pOut
++ = ()(
ßm∂e32
 / 2147483648.0);

3397 
	}
}

3399 
	$drwav_s32_to_f32
(* 
pOut
, c⁄° 
drwav_öt32
* 
pIn
, 
size_t
 
ßm∂eCou¡
)

3401 i‡(
pOut
 =
NULL
 || 
pIn
 == NULL) {

3405 
size_t
 
i
 = 0; i < 
ßm∂eCou¡
; ++i) {

3406 *
pOut
++ = ()(
pIn
[
i
] / 2147483648.0);

3408 
	}
}

3410 
	$drwav_f64_to_f32
(* 
pOut
, c⁄° * 
pIn
, 
size_t
 
ßm∂eCou¡
)

3412 i‡(
pOut
 =
NULL
 || 
pIn
 == NULL) {

3416 
size_t
 
i
 = 0; i < 
ßm∂eCou¡
; ++i) {

3417 *
pOut
++ = ()
pIn
[
i
];

3419 
	}
}

3421 
	$drwav_Æaw_to_f32
(* 
pOut
, c⁄° 
drwav_uöt8
* 
pIn
, 
size_t
 
ßm∂eCou¡
)

3423 i‡(
pOut
 =
NULL
 || 
pIn
 == NULL) {

3427 
size_t
 
i
 = 0; i < 
ßm∂eCou¡
; ++i) {

3428 *
pOut
++ = 
	`drwav__Æaw_to_s16
(
pIn
[
i
]) / 32768.0f;

3430 
	}
}

3432 
	$drwav_muœw_to_f32
(* 
pOut
, c⁄° 
drwav_uöt8
* 
pIn
, 
size_t
 
ßm∂eCou¡
)

3434 i‡(
pOut
 =
NULL
 || 
pIn
 == NULL) {

3438 
size_t
 
i
 = 0; i < 
ßm∂eCou¡
; ++i) {

3439 *
pOut
++ = 
	`drwav__muœw_to_s16
(
pIn
[
i
]) / 32768.0f;

3441 
	}
}

3445 
	$drwav__pcm_to_s32
(
drwav_öt32
* 
pOut
, c⁄° * 
pIn
, 
size_t
 
tŸÆSam∂eCou¡
, 
byãsPîSam∂e
)

3448 i‡(
byãsPîSam∂e
 == 1) {

3449 
	`drwav_u8_to_s32
(
pOut
, 
pIn
, 
tŸÆSam∂eCou¡
);

3454 i‡(
byãsPîSam∂e
 == 2) {

3455 
	`drwav_s16_to_s32
(
pOut
, (c⁄° 
drwav_öt16
*)
pIn
, 
tŸÆSam∂eCou¡
);

3458 i‡(
byãsPîSam∂e
 == 3) {

3459 
	`drwav_s24_to_s32
(
pOut
, 
pIn
, 
tŸÆSam∂eCou¡
);

3462 i‡(
byãsPîSam∂e
 == 4) {

3463 
i
 = 0; i < 
tŸÆSam∂eCou¡
; ++i) {

3464 *
pOut
++ = ((c⁄° 
drwav_öt32
*)
pIn
)[
i
];

3471 i‡(
byãsPîSam∂e
 > 8) {

3472 
	`drwav_zîo_mem‹y
(
pOut
, 
tŸÆSam∂eCou¡
 * (*pOut));

3478 
i
 = 0; i < 
tŸÆSam∂eCou¡
; ++i) {

3479 
drwav_uöt64
 
ßm∂e
 = 0;

3480 
shi·
 = (8 - 
byãsPîSam∂e
) * 8;

3482 
j
;

3483 
j
 = 0; j < 
byãsPîSam∂e
 && j < 8; j += 1) {

3484 
ßm∂e
 |(
drwav_uöt64
)(
pIn
[
j
]Ë<< 
shi·
;

3485 
shi·
 += 8;

3488 
pIn
 +
j
;

3489 *
pOut
++ = (
drwav_öt32
)((
drwav_öt64
)
ßm∂e
 >> 32);

3491 
	}
}

3493 
	$drwav__õì_to_s32
(
drwav_öt32
* 
pOut
, c⁄° * 
pIn
, 
size_t
 
tŸÆSam∂eCou¡
, 
byãsPîSam∂e
)

3495 i‡(
byãsPîSam∂e
 == 4) {

3496 
	`drwav_f32_to_s32
(
pOut
, (c⁄° *)
pIn
, 
tŸÆSam∂eCou¡
);

3498 } i‡(
byãsPîSam∂e
 == 8) {

3499 
	`drwav_f64_to_s32
(
pOut
, (c⁄° *)
pIn
, 
tŸÆSam∂eCou¡
);

3503 
	`drwav_zîo_mem‹y
(
pOut
, 
tŸÆSam∂eCou¡
 * (*pOut));

3506 
	}
}

3509 
drwav_uöt64
 
	$drwav_ªad_s32__pcm
(
drwav
* 
pWav
, 
drwav_uöt64
 
ßm∂esToRód
, 
drwav_öt32
* 
pBuf„rOut
)

3511 
drwav_uöt32
 
byãsPîSam∂e
;

3514 i‡(
pWav
->
å™¶©edF‹m©Tag
 =
DR_WAVE_FORMAT_PCM
 &&ÖWav->
bôsPîSam∂e
 == 32) {

3515  
	`drwav_ªad
(
pWav
, 
ßm∂esToRód
, 
pBuf„rOut
);

3518 
byãsPîSam∂e
 = 
	`drwav_gë_byãs_≥r_ßm∂e
(
pWav
);

3519 i‡(
byãsPîSam∂e
 == 0) {

3523 
drwav_uöt64
 
tŸÆSam∂esRód
 = 0;

3524 
ßm∂eD©a
[4096];

3525 
ßm∂esToRód
 > 0) {

3526 
drwav_uöt64
 
ßm∂esRód
 = 
	`drwav_ªad
(
pWav
, 
	`drwav_mö
(
ßm∂esToRód
, (
ßm∂eD©a
)/
byãsPîSam∂e
), sampleData);

3527 i‡(
ßm∂esRód
 == 0) {

3531 
	`drwav__pcm_to_s32
(
pBuf„rOut
, 
ßm∂eD©a
, (
size_t
)
ßm∂esRód
, 
byãsPîSam∂e
);

3533 
pBuf„rOut
 +
ßm∂esRód
;

3534 
ßm∂esToRód
 -
ßm∂esRód
;

3535 
tŸÆSam∂esRód
 +
ßm∂esRód
;

3538  
tŸÆSam∂esRód
;

3539 
	}
}

3541 
drwav_uöt64
 
	$drwav_ªad_s32__mßdpcm
(
drwav
* 
pWav
, 
drwav_uöt64
 
ßm∂esToRód
, 
drwav_öt32
* 
pBuf„rOut
)

3545 
drwav_uöt64
 
tŸÆSam∂esRód
 = 0;

3546 
drwav_öt16
 
ßm∂es16
[2048];

3547 
ßm∂esToRód
 > 0) {

3548 
drwav_uöt64
 
ßm∂esRód
 = 
	`drwav_ªad_s16
(
pWav
, 
	`drwav_mö
(
ßm∂esToRód
, 2048), 
ßm∂es16
);

3549 i‡(
ßm∂esRód
 == 0) {

3553 
	`drwav_s16_to_s32
(
pBuf„rOut
, 
ßm∂es16
, (
size_t
)
ßm∂esRód
);

3555 
pBuf„rOut
 +
ßm∂esRód
;

3556 
ßm∂esToRód
 -
ßm∂esRód
;

3557 
tŸÆSam∂esRód
 +
ßm∂esRód
;

3560  
tŸÆSam∂esRód
;

3561 
	}
}

3563 
drwav_uöt64
 
	$drwav_ªad_s32__ima
(
drwav
* 
pWav
, 
drwav_uöt64
 
ßm∂esToRód
, 
drwav_öt32
* 
pBuf„rOut
)

3567 
drwav_uöt64
 
tŸÆSam∂esRód
 = 0;

3568 
drwav_öt16
 
ßm∂es16
[2048];

3569 
ßm∂esToRód
 > 0) {

3570 
drwav_uöt64
 
ßm∂esRód
 = 
	`drwav_ªad_s16
(
pWav
, 
	`drwav_mö
(
ßm∂esToRód
, 2048), 
ßm∂es16
);

3571 i‡(
ßm∂esRód
 == 0) {

3575 
	`drwav_s16_to_s32
(
pBuf„rOut
, 
ßm∂es16
, (
size_t
)
ßm∂esRód
);

3577 
pBuf„rOut
 +
ßm∂esRód
;

3578 
ßm∂esToRód
 -
ßm∂esRód
;

3579 
tŸÆSam∂esRód
 +
ßm∂esRód
;

3582  
tŸÆSam∂esRód
;

3583 
	}
}

3585 
drwav_uöt64
 
	$drwav_ªad_s32__õì
(
drwav
* 
pWav
, 
drwav_uöt64
 
ßm∂esToRód
, 
drwav_öt32
* 
pBuf„rOut
)

3587 
drwav_uöt32
 
byãsPîSam∂e
 = 
	`drwav_gë_byãs_≥r_ßm∂e
(
pWav
);

3588 i‡(
byãsPîSam∂e
 == 0) {

3592 
drwav_uöt64
 
tŸÆSam∂esRód
 = 0;

3593 
ßm∂eD©a
[4096];

3594 
ßm∂esToRód
 > 0) {

3595 
drwav_uöt64
 
ßm∂esRód
 = 
	`drwav_ªad
(
pWav
, 
	`drwav_mö
(
ßm∂esToRód
, (
ßm∂eD©a
)/
byãsPîSam∂e
), sampleData);

3596 i‡(
ßm∂esRód
 == 0) {

3600 
	`drwav__õì_to_s32
(
pBuf„rOut
, 
ßm∂eD©a
, (
size_t
)
ßm∂esRód
, 
byãsPîSam∂e
);

3602 
pBuf„rOut
 +
ßm∂esRód
;

3603 
ßm∂esToRód
 -
ßm∂esRód
;

3604 
tŸÆSam∂esRód
 +
ßm∂esRód
;

3607  
tŸÆSam∂esRód
;

3608 
	}
}

3610 
drwav_uöt64
 
	$drwav_ªad_s32__Æaw
(
drwav
* 
pWav
, 
drwav_uöt64
 
ßm∂esToRód
, 
drwav_öt32
* 
pBuf„rOut
)

3612 
drwav_uöt32
 
byãsPîSam∂e
 = 
	`drwav_gë_byãs_≥r_ßm∂e
(
pWav
);

3613 i‡(
byãsPîSam∂e
 == 0) {

3617 
drwav_uöt64
 
tŸÆSam∂esRód
 = 0;

3618 
ßm∂eD©a
[4096];

3619 
ßm∂esToRód
 > 0) {

3620 
drwav_uöt64
 
ßm∂esRód
 = 
	`drwav_ªad
(
pWav
, 
	`drwav_mö
(
ßm∂esToRód
, (
ßm∂eD©a
)/
byãsPîSam∂e
), sampleData);

3621 i‡(
ßm∂esRód
 == 0) {

3625 
	`drwav_Æaw_to_s32
(
pBuf„rOut
, 
ßm∂eD©a
, (
size_t
)
ßm∂esRód
);

3627 
pBuf„rOut
 +
ßm∂esRód
;

3628 
ßm∂esToRód
 -
ßm∂esRód
;

3629 
tŸÆSam∂esRód
 +
ßm∂esRód
;

3632  
tŸÆSam∂esRód
;

3633 
	}
}

3635 
drwav_uöt64
 
	$drwav_ªad_s32__muœw
(
drwav
* 
pWav
, 
drwav_uöt64
 
ßm∂esToRód
, 
drwav_öt32
* 
pBuf„rOut
)

3637 
drwav_uöt32
 
byãsPîSam∂e
 = 
	`drwav_gë_byãs_≥r_ßm∂e
(
pWav
);

3638 i‡(
byãsPîSam∂e
 == 0) {

3642 
drwav_uöt64
 
tŸÆSam∂esRód
 = 0;

3643 
ßm∂eD©a
[4096];

3644 
ßm∂esToRód
 > 0) {

3645 
drwav_uöt64
 
ßm∂esRód
 = 
	`drwav_ªad
(
pWav
, 
	`drwav_mö
(
ßm∂esToRód
, (
ßm∂eD©a
)/
byãsPîSam∂e
), sampleData);

3646 i‡(
ßm∂esRód
 == 0) {

3650 
	`drwav_muœw_to_s32
(
pBuf„rOut
, 
ßm∂eD©a
, (
size_t
)
ßm∂esRód
);

3652 
pBuf„rOut
 +
ßm∂esRód
;

3653 
ßm∂esToRód
 -
ßm∂esRód
;

3654 
tŸÆSam∂esRód
 +
ßm∂esRód
;

3657  
tŸÆSam∂esRód
;

3658 
	}
}

3660 
drwav_uöt64
 
	$drwav_ªad_s32
(
drwav
* 
pWav
, 
drwav_uöt64
 
ßm∂esToRód
, 
drwav_öt32
* 
pBuf„rOut
)

3662 i‡(
pWav
 =
NULL
 || 
ßm∂esToRód
 =0 || 
pBuf„rOut
 == NULL) {

3667 i‡(
ßm∂esToRód
 * (
drwav_öt32
Ë> 
DRWAV_SIZE_MAX
) {

3668 
ßm∂esToRód
 = 
DRWAV_SIZE_MAX
 / (
drwav_öt32
);

3672 i‡(
pWav
->
å™¶©edF‹m©Tag
 =
DR_WAVE_FORMAT_PCM
) {

3673  
	`drwav_ªad_s32__pcm
(
pWav
, 
ßm∂esToRód
, 
pBuf„rOut
);

3676 i‡(
pWav
->
å™¶©edF‹m©Tag
 =
DR_WAVE_FORMAT_ADPCM
) {

3677  
	`drwav_ªad_s32__mßdpcm
(
pWav
, 
ßm∂esToRód
, 
pBuf„rOut
);

3680 i‡(
pWav
->
å™¶©edF‹m©Tag
 =
DR_WAVE_FORMAT_IEEE_FLOAT
) {

3681  
	`drwav_ªad_s32__õì
(
pWav
, 
ßm∂esToRód
, 
pBuf„rOut
);

3684 i‡(
pWav
->
å™¶©edF‹m©Tag
 =
DR_WAVE_FORMAT_ALAW
) {

3685  
	`drwav_ªad_s32__Æaw
(
pWav
, 
ßm∂esToRód
, 
pBuf„rOut
);

3688 i‡(
pWav
->
å™¶©edF‹m©Tag
 =
DR_WAVE_FORMAT_MULAW
) {

3689  
	`drwav_ªad_s32__muœw
(
pWav
, 
ßm∂esToRód
, 
pBuf„rOut
);

3692 i‡(
pWav
->
å™¶©edF‹m©Tag
 =
DR_WAVE_FORMAT_DVI_ADPCM
) {

3693  
	`drwav_ªad_s32__ima
(
pWav
, 
ßm∂esToRód
, 
pBuf„rOut
);

3697 
	}
}

3699 
drwav_uöt64
 
	$drwav_ªad_pcm_‰ames_s32
(
drwav
* 
pWav
, 
drwav_uöt64
 
‰amesToRód
, 
drwav_öt32
* 
pBuf„rOut
)

3701  
	`drwav_ªad_s32
(
pWav
, 
‰amesToRód
 *ÖWav->
ch™√ls
, 
pBuf„rOut
) /ÖWav->channels;

3702 
	}
}

3704 
	$drwav_u8_to_s32
(
drwav_öt32
* 
pOut
, c⁄° 
drwav_uöt8
* 
pIn
, 
size_t
 
ßm∂eCou¡
)

3706 i‡(
pOut
 =
NULL
 || 
pIn
 == NULL) {

3710 
size_t
 
i
 = 0; i < 
ßm∂eCou¡
; ++i) {

3711 *
pOut
++ = (()
pIn
[
i
] - 128) << 24;

3713 
	}
}

3715 
	$drwav_s16_to_s32
(
drwav_öt32
* 
pOut
, c⁄° 
drwav_öt16
* 
pIn
, 
size_t
 
ßm∂eCou¡
)

3717 i‡(
pOut
 =
NULL
 || 
pIn
 == NULL) {

3721 
size_t
 
i
 = 0; i < 
ßm∂eCou¡
; ++i) {

3722 *
pOut
++ = 
pIn
[
i
] << 16;

3724 
	}
}

3726 
	$drwav_s24_to_s32
(
drwav_öt32
* 
pOut
, c⁄° 
drwav_uöt8
* 
pIn
, 
size_t
 
ßm∂eCou¡
)

3728 i‡(
pOut
 =
NULL
 || 
pIn
 == NULL) {

3732 
size_t
 
i
 = 0; i < 
ßm∂eCou¡
; ++i) {

3733 
s0
 = 
pIn
[
i
*3 + 0];

3734 
s1
 = 
pIn
[
i
*3 + 1];

3735 
s2
 = 
pIn
[
i
*3 + 2];

3737 
drwav_öt32
 
ßm∂e32
 = (drwav_öt32)((
s0
 << 8Ë| (
s1
 << 16Ë| (
s2
 << 24));

3738 *
pOut
++ = 
ßm∂e32
;

3740 
	}
}

3742 
	$drwav_f32_to_s32
(
drwav_öt32
* 
pOut
, c⁄° * 
pIn
, 
size_t
 
ßm∂eCou¡
)

3744 i‡(
pOut
 =
NULL
 || 
pIn
 == NULL) {

3748 
size_t
 
i
 = 0; i < 
ßm∂eCou¡
; ++i) {

3749 *
pOut
++ = (
drwav_öt32
)(2147483648.0 * 
pIn
[
i
]);

3751 
	}
}

3753 
	$drwav_f64_to_s32
(
drwav_öt32
* 
pOut
, c⁄° * 
pIn
, 
size_t
 
ßm∂eCou¡
)

3755 i‡(
pOut
 =
NULL
 || 
pIn
 == NULL) {

3759 
size_t
 
i
 = 0; i < 
ßm∂eCou¡
; ++i) {

3760 *
pOut
++ = (
drwav_öt32
)(2147483648.0 * 
pIn
[
i
]);

3762 
	}
}

3764 
	$drwav_Æaw_to_s32
(
drwav_öt32
* 
pOut
, c⁄° 
drwav_uöt8
* 
pIn
, 
size_t
 
ßm∂eCou¡
)

3766 i‡(
pOut
 =
NULL
 || 
pIn
 == NULL) {

3770 
size_t
 
i
 = 0; i < 
ßm∂eCou¡
; ++i) {

3771 *
pOut
++ = ((
drwav_öt32
)
	`drwav__Æaw_to_s16
(
pIn
[
i
])) << 16;

3773 
	}
}

3775 
	$drwav_muœw_to_s32
(
drwav_öt32
* 
pOut
, c⁄° 
drwav_uöt8
* 
pIn
, 
size_t
 
ßm∂eCou¡
)

3777 i‡(
pOut
 =
NULL
 || 
pIn
 == NULL) {

3781 
size_t
 
i
0; i < 
ßm∂eCou¡
; ++i) {

3782 *
pOut
++ = ((
drwav_öt32
)
	`drwav__muœw_to_s16
(
pIn
[
i
])) << 16;

3784 
	}
}

3788 
drwav_öt16
* 
	$drwav__ªad_™d_˛o£_s16
(
drwav
* 
pWav
, * 
ch™√ls
, * 
ßm∂eR©e
, 
drwav_uöt64
* 
tŸÆSam∂eCou¡
)

3790 
	`drwav_as£π
(
pWav
 !
NULL
);

3792 
drwav_uöt64
 
ßm∂eD©aSize
 = 
pWav
->
tŸÆSam∂eCou¡
 * (
drwav_öt16
);

3793 i‡(
ßm∂eD©aSize
 > 
DRWAV_SIZE_MAX
) {

3794 
	`drwav_unöô
(
pWav
);

3795  
NULL
;

3798 
drwav_öt16
* 
pSam∂eD©a
 = (drwav_öt16*)
	`DRWAV_MALLOC
((
size_t
)
ßm∂eD©aSize
);

3799 i‡(
pSam∂eD©a
 =
NULL
) {

3800 
	`drwav_unöô
(
pWav
);

3801  
NULL
;

3804 
drwav_uöt64
 
ßm∂esRód
 = 
	`drwav_ªad_s16
(
pWav
, (
size_t
ÌWav->
tŸÆSam∂eCou¡
, 
pSam∂eD©a
);

3805 i‡(
ßm∂esRód
 !
pWav
->
tŸÆSam∂eCou¡
) {

3806 
	`DRWAV_FREE
(
pSam∂eD©a
);

3807 
	`drwav_unöô
(
pWav
);

3808  
NULL
;

3811 
	`drwav_unöô
(
pWav
);

3813 i‡(
ßm∂eR©e
Ë*ßm∂eR©ê
pWav
->sampleRate;

3814 i‡(
ch™√ls
Ë*ch™√l†
pWav
->channels;

3815 i‡(
tŸÆSam∂eCou¡
Ë*tŸÆSam∂eCou¡ = 
pWav
->totalSampleCount;

3816  
pSam∂eD©a
;

3817 
	}
}

3819 * 
	$drwav__ªad_™d_˛o£_f32
(
drwav
* 
pWav
, * 
ch™√ls
, * 
ßm∂eR©e
, 
drwav_uöt64
* 
tŸÆSam∂eCou¡
)

3821 
	`drwav_as£π
(
pWav
 !
NULL
);

3823 
drwav_uöt64
 
ßm∂eD©aSize
 = 
pWav
->
tŸÆSam∂eCou¡
 * ();

3824 i‡(
ßm∂eD©aSize
 > 
DRWAV_SIZE_MAX
) {

3825 
	`drwav_unöô
(
pWav
);

3826  
NULL
;

3829 * 
pSam∂eD©a
 = (*)
	`DRWAV_MALLOC
((
size_t
)
ßm∂eD©aSize
);

3830 i‡(
pSam∂eD©a
 =
NULL
) {

3831 
	`drwav_unöô
(
pWav
);

3832  
NULL
;

3835 
drwav_uöt64
 
ßm∂esRód
 = 
	`drwav_ªad_f32
(
pWav
, (
size_t
ÌWav->
tŸÆSam∂eCou¡
, 
pSam∂eD©a
);

3836 i‡(
ßm∂esRód
 !
pWav
->
tŸÆSam∂eCou¡
) {

3837 
	`DRWAV_FREE
(
pSam∂eD©a
);

3838 
	`drwav_unöô
(
pWav
);

3839  
NULL
;

3842 
	`drwav_unöô
(
pWav
);

3844 i‡(
ßm∂eR©e
Ë*ßm∂eR©ê
pWav
->sampleRate;

3845 i‡(
ch™√ls
Ë*ch™√l†
pWav
->channels;

3846 i‡(
tŸÆSam∂eCou¡
Ë*tŸÆSam∂eCou¡ = 
pWav
->totalSampleCount;

3847  
pSam∂eD©a
;

3848 
	}
}

3850 
drwav_öt32
* 
	$drwav__ªad_™d_˛o£_s32
(
drwav
* 
pWav
, * 
ch™√ls
, * 
ßm∂eR©e
, 
drwav_uöt64
* 
tŸÆSam∂eCou¡
)

3852 
	`drwav_as£π
(
pWav
 !
NULL
);

3854 
drwav_uöt64
 
ßm∂eD©aSize
 = 
pWav
->
tŸÆSam∂eCou¡
 * (
drwav_öt32
);

3855 i‡(
ßm∂eD©aSize
 > 
DRWAV_SIZE_MAX
) {

3856 
	`drwav_unöô
(
pWav
);

3857  
NULL
;

3860 
drwav_öt32
* 
pSam∂eD©a
 = (drwav_öt32*)
	`DRWAV_MALLOC
((
size_t
)
ßm∂eD©aSize
);

3861 i‡(
pSam∂eD©a
 =
NULL
) {

3862 
	`drwav_unöô
(
pWav
);

3863  
NULL
;

3866 
drwav_uöt64
 
ßm∂esRód
 = 
	`drwav_ªad_s32
(
pWav
, (
size_t
ÌWav->
tŸÆSam∂eCou¡
, 
pSam∂eD©a
);

3867 i‡(
ßm∂esRód
 !
pWav
->
tŸÆSam∂eCou¡
) {

3868 
	`DRWAV_FREE
(
pSam∂eD©a
);

3869 
	`drwav_unöô
(
pWav
);

3870  
NULL
;

3873 
	`drwav_unöô
(
pWav
);

3875 i‡(
ßm∂eR©e
Ë*ßm∂eR©ê
pWav
->sampleRate;

3876 i‡(
ch™√ls
Ë*ch™√l†
pWav
->channels;

3877 i‡(
tŸÆSam∂eCou¡
Ë*tŸÆSam∂eCou¡ = 
pWav
->totalSampleCount;

3878  
pSam∂eD©a
;

3879 
	}
}

3882 
drwav_öt16
* 
	$drwav_›í_™d_ªad_s16
(
drwav_ªad_¥oc
 
⁄Ród
, 
drwav_£ek_¥oc
 
⁄Sìk
, * 
pU£rD©a
, * 
ch™√ls
, * 
ßm∂eR©e
, 
drwav_uöt64
* 
tŸÆSam∂eCou¡
)

3884 i‡(
ch™√ls
) *channels = 0;

3885 i‡(
ßm∂eR©e
) *sampleRate = 0;

3886 i‡(
tŸÆSam∂eCou¡
) *totalSampleCount = 0;

3888 
drwav
 
wav
;

3889 i‡(!
	`drwav_öô
(&
wav
, 
⁄Ród
, 
⁄Sìk
, 
pU£rD©a
)) {

3890  
NULL
;

3893  
	`drwav__ªad_™d_˛o£_s16
(&
wav
, 
ch™√ls
, 
ßm∂eR©e
, 
tŸÆSam∂eCou¡
);

3894 
	}
}

3896 
drwav_öt16
* 
	$drwav_›í_™d_ªad_pcm_‰ames_s16
(
drwav_ªad_¥oc
 
⁄Ród
, 
drwav_£ek_¥oc
 
⁄Sìk
, * 
pU£rD©a
, * 
ch™√lsOut
, * 
ßm∂eR©eOut
, 
drwav_uöt64
* 
tŸÆFømeCou¡Out
)

3898 i‡(
ch™√lsOut
) *channelsOut = 0;

3899 i‡(
ßm∂eR©eOut
) *sampleRateOut = 0;

3900 i‡(
tŸÆFømeCou¡Out
) *totalFrameCountOut = 0;

3902 
ch™√ls
;

3903 
ßm∂eR©e
;

3904 
drwav_uöt64
 
tŸÆSam∂eCou¡
;

3905 
drwav_öt16
* 
ªsu…
 = 
	`drwav_›í_™d_ªad_s16
(
⁄Ród
, 
⁄Sìk
, 
pU£rD©a
, &
ch™√ls
, &
ßm∂eR©e
, &
tŸÆSam∂eCou¡
);

3906 i‡(
ªsu…
 =
NULL
) {

3907  
NULL
;

3910 i‡(
ch™√lsOut
Ë*ch™√lsOuà
ch™√ls
;

3911 i‡(
ßm∂eR©eOut
Ë*ßm∂eR©eOuà
ßm∂eR©e
;

3912 i‡(
tŸÆFømeCou¡Out
Ë*tŸÆFømeCou¡Ouà
tŸÆSam∂eCou¡
 / 
ch™√ls
;

3914  
ªsu…
;

3915 
	}
}

3917 * 
	$drwav_›í_™d_ªad_f32
(
drwav_ªad_¥oc
 
⁄Ród
, 
drwav_£ek_¥oc
 
⁄Sìk
, * 
pU£rD©a
, * 
ch™√ls
, * 
ßm∂eR©e
, 
drwav_uöt64
* 
tŸÆSam∂eCou¡
)

3919 i‡(
ßm∂eR©e
) *sampleRate = 0;

3920 i‡(
ch™√ls
) *channels = 0;

3921 i‡(
tŸÆSam∂eCou¡
) *totalSampleCount = 0;

3923 
drwav
 
wav
;

3924 i‡(!
	`drwav_öô
(&
wav
, 
⁄Ród
, 
⁄Sìk
, 
pU£rD©a
)) {

3925  
NULL
;

3928  
	`drwav__ªad_™d_˛o£_f32
(&
wav
, 
ch™√ls
, 
ßm∂eR©e
, 
tŸÆSam∂eCou¡
);

3929 
	}
}

3931 * 
	$drwav_›í_™d_ªad_pcm_‰ames_f32
(
drwav_ªad_¥oc
 
⁄Ród
, 
drwav_£ek_¥oc
 
⁄Sìk
, * 
pU£rD©a
, * 
ch™√lsOut
, * 
ßm∂eR©eOut
, 
drwav_uöt64
* 
tŸÆFømeCou¡Out
)

3933 i‡(
ch™√lsOut
) *channelsOut = 0;

3934 i‡(
ßm∂eR©eOut
) *sampleRateOut = 0;

3935 i‡(
tŸÆFømeCou¡Out
) *totalFrameCountOut = 0;

3937 
ch™√ls
;

3938 
ßm∂eR©e
;

3939 
drwav_uöt64
 
tŸÆSam∂eCou¡
;

3940 * 
ªsu…
 = 
	`drwav_›í_™d_ªad_f32
(
⁄Ród
, 
⁄Sìk
, 
pU£rD©a
, &
ch™√ls
, &
ßm∂eR©e
, &
tŸÆSam∂eCou¡
);

3941 i‡(
ªsu…
 =
NULL
) {

3942  
NULL
;

3945 i‡(
ch™√lsOut
Ë*ch™√lsOuà
ch™√ls
;

3946 i‡(
ßm∂eR©eOut
Ë*ßm∂eR©eOuà
ßm∂eR©e
;

3947 i‡(
tŸÆFømeCou¡Out
Ë*tŸÆFømeCou¡Ouà
tŸÆSam∂eCou¡
 / 
ch™√ls
;

3949  
ªsu…
;

3950 
	}
}

3952 
drwav_öt32
* 
	$drwav_›í_™d_ªad_s32
(
drwav_ªad_¥oc
 
⁄Ród
, 
drwav_£ek_¥oc
 
⁄Sìk
, * 
pU£rD©a
, * 
ch™√ls
, * 
ßm∂eR©e
, 
drwav_uöt64
* 
tŸÆSam∂eCou¡
)

3954 i‡(
ßm∂eR©e
) *sampleRate = 0;

3955 i‡(
ch™√ls
) *channels = 0;

3956 i‡(
tŸÆSam∂eCou¡
) *totalSampleCount = 0;

3958 
drwav
 
wav
;

3959 i‡(!
	`drwav_öô
(&
wav
, 
⁄Ród
, 
⁄Sìk
, 
pU£rD©a
)) {

3960  
NULL
;

3963  
	`drwav__ªad_™d_˛o£_s32
(&
wav
, 
ch™√ls
, 
ßm∂eR©e
, 
tŸÆSam∂eCou¡
);

3964 
	}
}

3966 
drwav_öt32
* 
	$drwav_›í_™d_ªad_pcm_‰ames_s32
(
drwav_ªad_¥oc
 
⁄Ród
, 
drwav_£ek_¥oc
 
⁄Sìk
, * 
pU£rD©a
, * 
ch™√lsOut
, * 
ßm∂eR©eOut
, 
drwav_uöt64
* 
tŸÆFømeCou¡Out
)

3968 i‡(
ch™√lsOut
) *channelsOut = 0;

3969 i‡(
ßm∂eR©eOut
) *sampleRateOut = 0;

3970 i‡(
tŸÆFømeCou¡Out
) *totalFrameCountOut = 0;

3972 
ch™√ls
;

3973 
ßm∂eR©e
;

3974 
drwav_uöt64
 
tŸÆSam∂eCou¡
;

3975 
drwav_öt32
* 
ªsu…
 = 
	`drwav_›í_™d_ªad_s32
(
⁄Ród
, 
⁄Sìk
, 
pU£rD©a
, &
ch™√ls
, &
ßm∂eR©e
, &
tŸÆSam∂eCou¡
);

3976 i‡(
ªsu…
 =
NULL
) {

3977  
NULL
;

3980 i‡(
ch™√lsOut
Ë*ch™√lsOuà
ch™√ls
;

3981 i‡(
ßm∂eR©eOut
Ë*ßm∂eR©eOuà
ßm∂eR©e
;

3982 i‡(
tŸÆFømeCou¡Out
Ë*tŸÆFømeCou¡Ouà
tŸÆSam∂eCou¡
 / 
ch™√ls
;

3984  
ªsu…
;

3985 
	}
}

3987 #i‚de‡
DR_WAV_NO_STDIO


3988 
drwav_öt16
* 
	$drwav_›í_fûe_™d_ªad_s16
(c⁄° * 
fûíame
, * 
ch™√ls
, * 
ßm∂eR©e
, 
drwav_uöt64
* 
tŸÆSam∂eCou¡
)

3990 i‡(
ßm∂eR©e
) *sampleRate = 0;

3991 i‡(
ch™√ls
) *channels = 0;

3992 i‡(
tŸÆSam∂eCou¡
) *totalSampleCount = 0;

3994 
drwav
 
wav
;

3995 i‡(!
	`drwav_öô_fûe
(&
wav
, 
fûíame
)) {

3996  
NULL
;

3999  
	`drwav__ªad_™d_˛o£_s16
(&
wav
, 
ch™√ls
, 
ßm∂eR©e
, 
tŸÆSam∂eCou¡
);

4000 
	}
}

4002 
drwav_öt16
* 
	$drwav_›í_fûe_™d_ªad_pcm_‰ames_s16
(c⁄° * 
fûíame
, * 
ch™√lsOut
, * 
ßm∂eR©eOut
, 
drwav_uöt64
* 
tŸÆFømeCou¡Out
)

4004 i‡(
ch™√lsOut
) *channelsOut = 0;

4005 i‡(
ßm∂eR©eOut
) *sampleRateOut = 0;

4006 i‡(
tŸÆFømeCou¡Out
) *totalFrameCountOut = 0;

4008 
ch™√ls
;

4009 
ßm∂eR©e
;

4010 
drwav_uöt64
 
tŸÆSam∂eCou¡
;

4011 
drwav_öt16
* 
ªsu…
 = 
	`drwav_›í_fûe_™d_ªad_s16
(
fûíame
, &
ch™√ls
, &
ßm∂eR©e
, &
tŸÆSam∂eCou¡
);

4012 i‡(
ªsu…
 =
NULL
) {

4013  
NULL
;

4016 i‡(
ch™√lsOut
Ë*ch™√lsOuà
ch™√ls
;

4017 i‡(
ßm∂eR©eOut
Ë*ßm∂eR©eOuà
ßm∂eR©e
;

4018 i‡(
tŸÆFømeCou¡Out
Ë*tŸÆFømeCou¡Ouà
tŸÆSam∂eCou¡
 / 
ch™√ls
;

4020  
ªsu…
;

4021 
	}
}

4023 * 
	$drwav_›í_fûe_™d_ªad_f32
(c⁄° * 
fûíame
, * 
ch™√ls
, * 
ßm∂eR©e
, 
drwav_uöt64
* 
tŸÆSam∂eCou¡
)

4025 i‡(
ßm∂eR©e
) *sampleRate = 0;

4026 i‡(
ch™√ls
) *channels = 0;

4027 i‡(
tŸÆSam∂eCou¡
) *totalSampleCount = 0;

4029 
drwav
 
wav
;

4030 i‡(!
	`drwav_öô_fûe
(&
wav
, 
fûíame
)) {

4031  
NULL
;

4034  
	`drwav__ªad_™d_˛o£_f32
(&
wav
, 
ch™√ls
, 
ßm∂eR©e
, 
tŸÆSam∂eCou¡
);

4035 
	}
}

4037 * 
	$drwav_›í_fûe_™d_ªad_pcm_‰ames_f32
(c⁄° * 
fûíame
, * 
ch™√lsOut
, * 
ßm∂eR©eOut
, 
drwav_uöt64
* 
tŸÆFømeCou¡Out
)

4039 i‡(
ch™√lsOut
) *channelsOut = 0;

4040 i‡(
ßm∂eR©eOut
) *sampleRateOut = 0;

4041 i‡(
tŸÆFømeCou¡Out
) *totalFrameCountOut = 0;

4043 
ch™√ls
;

4044 
ßm∂eR©e
;

4045 
drwav_uöt64
 
tŸÆSam∂eCou¡
;

4046 * 
ªsu…
 = 
	`drwav_›í_fûe_™d_ªad_f32
(
fûíame
, &
ch™√ls
, &
ßm∂eR©e
, &
tŸÆSam∂eCou¡
);

4047 i‡(
ªsu…
 =
NULL
) {

4048  
NULL
;

4051 i‡(
ch™√lsOut
Ë*ch™√lsOuà
ch™√ls
;

4052 i‡(
ßm∂eR©eOut
Ë*ßm∂eR©eOuà
ßm∂eR©e
;

4053 i‡(
tŸÆFømeCou¡Out
Ë*tŸÆFømeCou¡Ouà
tŸÆSam∂eCou¡
 / 
ch™√ls
;

4055  
ªsu…
;

4056 
	}
}

4058 
drwav_öt32
* 
	$drwav_›í_fûe_™d_ªad_s32
(c⁄° * 
fûíame
, * 
ch™√ls
, * 
ßm∂eR©e
, 
drwav_uöt64
* 
tŸÆSam∂eCou¡
)

4060 i‡(
ßm∂eR©e
) *sampleRate = 0;

4061 i‡(
ch™√ls
) *channels = 0;

4062 i‡(
tŸÆSam∂eCou¡
) *totalSampleCount = 0;

4064 
drwav
 
wav
;

4065 i‡(!
	`drwav_öô_fûe
(&
wav
, 
fûíame
)) {

4066  
NULL
;

4069  
	`drwav__ªad_™d_˛o£_s32
(&
wav
, 
ch™√ls
, 
ßm∂eR©e
, 
tŸÆSam∂eCou¡
);

4070 
	}
}

4072 
drwav_öt32
* 
	$drwav_›í_fûe_™d_ªad_pcm_‰ames_s32
(c⁄° * 
fûíame
, * 
ch™√lsOut
, * 
ßm∂eR©eOut
, 
drwav_uöt64
* 
tŸÆFømeCou¡Out
)

4074 i‡(
ch™√lsOut
) *channelsOut = 0;

4075 i‡(
ßm∂eR©eOut
) *sampleRateOut = 0;

4076 i‡(
tŸÆFømeCou¡Out
) *totalFrameCountOut = 0;

4078 
ch™√ls
;

4079 
ßm∂eR©e
;

4080 
drwav_uöt64
 
tŸÆSam∂eCou¡
;

4081 
drwav_öt32
* 
ªsu…
 = 
	`drwav_›í_fûe_™d_ªad_s32
(
fûíame
, &
ch™√ls
, &
ßm∂eR©e
, &
tŸÆSam∂eCou¡
);

4082 i‡(
ªsu…
 =
NULL
) {

4083  
NULL
;

4086 i‡(
ch™√lsOut
Ë*ch™√lsOuà
ch™√ls
;

4087 i‡(
ßm∂eR©eOut
Ë*ßm∂eR©eOuà
ßm∂eR©e
;

4088 i‡(
tŸÆFømeCou¡Out
Ë*tŸÆFømeCou¡Ouà
tŸÆSam∂eCou¡
 / 
ch™√ls
;

4090  
ªsu…
;

4091 
	}
}

4094 
drwav_öt16
* 
	$drwav_›í_mem‹y_™d_ªad_s16
(c⁄° * 
d©a
, 
size_t
 
d©aSize
, * 
ch™√ls
, * 
ßm∂eR©e
, 
drwav_uöt64
* 
tŸÆSam∂eCou¡
)

4096 i‡(
ßm∂eR©e
) *sampleRate = 0;

4097 i‡(
ch™√ls
) *channels = 0;

4098 i‡(
tŸÆSam∂eCou¡
) *totalSampleCount = 0;

4100 
drwav
 
wav
;

4101 i‡(!
	`drwav_öô_mem‹y
(&
wav
, 
d©a
, 
d©aSize
)) {

4102  
NULL
;

4105  
	`drwav__ªad_™d_˛o£_s16
(&
wav
, 
ch™√ls
, 
ßm∂eR©e
, 
tŸÆSam∂eCou¡
);

4106 
	}
}

4108 
drwav_öt16
* 
	$drwav_›í_mem‹y_™d_ªad_pcm_‰ames_s16
(c⁄° * 
d©a
, 
size_t
 
d©aSize
, * 
ch™√lsOut
, * 
ßm∂eR©eOut
, 
drwav_uöt64
* 
tŸÆFømeCou¡Out
)

4110 i‡(
ch™√lsOut
) *channelsOut = 0;

4111 i‡(
ßm∂eR©eOut
) *sampleRateOut = 0;

4112 i‡(
tŸÆFømeCou¡Out
) *totalFrameCountOut = 0;

4114 
ch™√ls
;

4115 
ßm∂eR©e
;

4116 
drwav_uöt64
 
tŸÆSam∂eCou¡
;

4117 
drwav_öt16
* 
ªsu…
 = 
	`drwav_›í_mem‹y_™d_ªad_s16
(
d©a
, 
d©aSize
, &
ch™√ls
, &
ßm∂eR©e
, &
tŸÆSam∂eCou¡
);

4118 i‡(
ªsu…
 =
NULL
) {

4119  
NULL
;

4122 i‡(
ch™√lsOut
Ë*ch™√lsOuà
ch™√ls
;

4123 i‡(
ßm∂eR©eOut
Ë*ßm∂eR©eOuà
ßm∂eR©e
;

4124 i‡(
tŸÆFømeCou¡Out
Ë*tŸÆFømeCou¡Ouà
tŸÆSam∂eCou¡
 / 
ch™√ls
;

4126  
ªsu…
;

4127 
	}
}

4129 * 
	$drwav_›í_mem‹y_™d_ªad_f32
(c⁄° * 
d©a
, 
size_t
 
d©aSize
, * 
ch™√ls
, * 
ßm∂eR©e
, 
drwav_uöt64
* 
tŸÆSam∂eCou¡
)

4131 i‡(
ßm∂eR©e
) *sampleRate = 0;

4132 i‡(
ch™√ls
) *channels = 0;

4133 i‡(
tŸÆSam∂eCou¡
) *totalSampleCount = 0;

4135 
drwav
 
wav
;

4136 i‡(!
	`drwav_öô_mem‹y
(&
wav
, 
d©a
, 
d©aSize
)) {

4137  
NULL
;

4140  
	`drwav__ªad_™d_˛o£_f32
(&
wav
, 
ch™√ls
, 
ßm∂eR©e
, 
tŸÆSam∂eCou¡
);

4141 
	}
}

4143 * 
	$drwav_›í_mem‹y_™d_ªad_pcm_‰ames_f32
(c⁄° * 
d©a
, 
size_t
 
d©aSize
, * 
ch™√lsOut
, * 
ßm∂eR©eOut
, 
drwav_uöt64
* 
tŸÆFømeCou¡Out
)

4145 i‡(
ch™√lsOut
) *channelsOut = 0;

4146 i‡(
ßm∂eR©eOut
) *sampleRateOut = 0;

4147 i‡(
tŸÆFømeCou¡Out
) *totalFrameCountOut = 0;

4149 
ch™√ls
;

4150 
ßm∂eR©e
;

4151 
drwav_uöt64
 
tŸÆSam∂eCou¡
;

4152 * 
ªsu…
 = 
	`drwav_›í_mem‹y_™d_ªad_f32
(
d©a
, 
d©aSize
, &
ch™√ls
, &
ßm∂eR©e
, &
tŸÆSam∂eCou¡
);

4153 i‡(
ªsu…
 =
NULL
) {

4154  
NULL
;

4157 i‡(
ch™√lsOut
Ë*ch™√lsOuà
ch™√ls
;

4158 i‡(
ßm∂eR©eOut
Ë*ßm∂eR©eOuà
ßm∂eR©e
;

4159 i‡(
tŸÆFømeCou¡Out
Ë*tŸÆFømeCou¡Ouà
tŸÆSam∂eCou¡
 / 
ch™√ls
;

4161  
ªsu…
;

4162 
	}
}

4164 
drwav_öt32
* 
	$drwav_›í_mem‹y_™d_ªad_s32
(c⁄° * 
d©a
, 
size_t
 
d©aSize
, * 
ch™√ls
, * 
ßm∂eR©e
, 
drwav_uöt64
* 
tŸÆSam∂eCou¡
)

4166 i‡(
ßm∂eR©e
) *sampleRate = 0;

4167 i‡(
ch™√ls
) *channels = 0;

4168 i‡(
tŸÆSam∂eCou¡
) *totalSampleCount = 0;

4170 
drwav
 
wav
;

4171 i‡(!
	`drwav_öô_mem‹y
(&
wav
, 
d©a
, 
d©aSize
)) {

4172  
NULL
;

4175  
	`drwav__ªad_™d_˛o£_s32
(&
wav
, 
ch™√ls
, 
ßm∂eR©e
, 
tŸÆSam∂eCou¡
);

4176 
	}
}

4178 
drwav_öt32
* 
	$drwav_›í_mem‹y_™d_ªad_pcm_‰ames_s32
(c⁄° * 
d©a
, 
size_t
 
d©aSize
, * 
ch™√lsOut
, * 
ßm∂eR©eOut
, 
drwav_uöt64
* 
tŸÆFømeCou¡Out
)

4180 i‡(
ch™√lsOut
) *channelsOut = 0;

4181 i‡(
ßm∂eR©eOut
) *sampleRateOut = 0;

4182 i‡(
tŸÆFømeCou¡Out
) *totalFrameCountOut = 0;

4184 
ch™√ls
;

4185 
ßm∂eR©e
;

4186 
drwav_uöt64
 
tŸÆSam∂eCou¡
;

4187 
drwav_öt32
* 
ªsu…
 = 
	`drwav_›í_mem‹y_™d_ªad_s32
(
d©a
, 
d©aSize
, &
ch™√ls
, &
ßm∂eR©e
, &
tŸÆSam∂eCou¡
);

4188 i‡(
ªsu…
 =
NULL
) {

4189  
NULL
;

4192 i‡(
ch™√lsOut
Ë*ch™√lsOuà
ch™√ls
;

4193 i‡(
ßm∂eR©eOut
Ë*ßm∂eR©eOuà
ßm∂eR©e
;

4194 i‡(
tŸÆFømeCou¡Out
Ë*tŸÆFømeCou¡Ouà
tŸÆSam∂eCou¡
 / 
ch™√ls
;

4196  
ªsu…
;

4197 
	}
}

4201 
	$drwav_‰ì
(* 
pD©aRëu∫edByO≥nAndRód
)

4203 
	`DRWAV_FREE
(
pD©aRëu∫edByO≥nAndRód
);

4204 
	}
}

	@rnnoise/examples/rnnoise_demo.c

1 
	~<°dio.h
>

2 
	~<°rög.h
>

3 
	~"∫noi£.h
"

4 
	~<°dlib.h
>

5 
	~<°döt.h
>

6 
	~<ems¸ùãn.h
>

7 
	#EMSCRIPTEN_KEEPALVE


	)

10 
	#_mö
(
a
, 
b
Ë((◊Ë< (b)Ë? (aË: (b))

	)

11 
	#_max
(
a
, 
b
Ë((◊Ë> (b)Ë? (aË: (b))

	)

12 
	#_˛amp
(
x
, 
lo
, 
hi
Ë(
	`_max
(÷o), 
	`_mö
((hi), (x))))

	)

14 #ifde‡
USE_WAV_MP3_LIBRARIES


15 
	#DR_MP3_IMPLEMENTATION


	)

17 
	~"dr_mp3.h
"

19 
	#DR_WAV_IMPLEMENTATION


	)

21 
	~"dr_wav.h
"

24 #i‡ 
deföed
(
__APPLE__
)

25 
	~<mach/mach_time.h
>

26 #ñi‡
deföed
(
_WIN32
)

27 
	#WIN32_LEAN_AND_MEAN


	)

29 
	~<wödows.h
>

33 
	~<time.h
>

35 #i‚de‡ 
CLOCK_MONOTONIC


36 
	#CLOCK_MONOTONIC
 
CLOCK_REALTIME


	)

41 
uöt64_t
 
	$«nŸimî
() {

42 
evî
 = 0;

43 #i‡
	`deföed
(
__APPLE__
)

44 
mach_timeba£_öfo_d©a_t
 
‰equícy
;

45 i‡(!
evî
) {

46 i‡(
	`mach_timeba£_öfo
(&
‰equícy
Ë!
KERN_SUCCESS
) {

49 
evî
 = 1;

51  (
	`mach_absﬁuã_time
(Ë* 
‰equícy
.
numî
 / fªquícy.
díom
);

52 #ñi‡
	`deföed
(
_WIN32
)

53 
LARGE_INTEGER
 
‰equícy
;

54 i‡(!
evî
) {

55 
	`QuîyPîf‹m™˚Fªquícy
(&
‰equícy
);

56 
evî
 = 1;

58 
LARGE_INTEGER
 
t
;

59 
	`QuîyPîf‹m™˚Cou¡î
(&
t
);

60  (
t
.
QuadP¨t
 * (
uöt64_t
Ë1e9Ë/ 
‰equícy
.QuadPart;

62 
time•ec
 
t
 = {0};

63 i‡(!
evî
) {

64 i‡(
	`˛ock_gëtime
(
CLOCK_MONOTONIC
, &
t
) != 0) {

67 
evî
 = 1;

69 
	`˛ock_gëtime
(
CLOCK_MONOTONIC
, &
t
);

70  (
t
.
tv_£c
 * (
uöt64_t
Ë1e9Ë+Å.
tv_n£c
;

72 
	}
}

74 
	$now
() {

75 
uöt64_t
 
ïoch
 = 0;

76 i‡(!
ïoch
) {

77 
ïoch
 = 
	`«nŸimî
();

79  (
	`«nŸimî
(Ë- 
ïoch
) / 1e9;

80 
	}
}

82 
	$ˇlcEœp£d
(
°¨t
, 
íd
) {

83 
took
 = -
°¨t
;

84  
took
 + 
íd
;

85 
	}
}

87 #ifde‡
USE_WAV_MP3_LIBRARIES


89 
	$wavWrôe_s16
(*
fûíame
, *
buf„r
, 
ßm∂eR©e
, 
uöt32_t
 
tŸÆSam∂eCou¡
, uöt32_à
ch™√ls
) {

90 
drwav_d©a_f‹m©
 
f‹m©
;

91 
f‹m©
.
c⁄èöî
 = 
drwav_c⁄èöî_riff
;

92 
f‹m©
.f‹m© = 
DR_WAVE_FORMAT_PCM
;

93 
f‹m©
.
ch™√ls
 = channels;

94 
f‹m©
.
ßm∂eR©e
 = (
drwav_uöt32
) sampleRate;

95 
f‹m©
.
bôsPîSam∂e
 = 16;

96 *
buf„r_16
(*Ë
buf„r
;

97 
öt32_t
 
i
 = 0; i < 
tŸÆSam∂eCou¡
; ++i) {

98 
buf„r_16
[
i
] = 
	`drwav_˛amp
(
buf„r
[i], -32768, 32767);

100 
drwav
 *
pWav
 = 
	`drwav_›í_fûe_wrôe
(
fûíame
, &
f‹m©
);

101 i‡(
pWav
) {

102 
drwav_uöt64
 
ßm∂esWrôãn
 = 
	`drwav_wrôe
(
pWav
, 
tŸÆSam∂eCou¡
, 
buf„r
);

103 
	`drwav_unöô
(
pWav
);

104 i‡(
ßm∂esWrôãn
 !
tŸÆSam∂eCou¡
) {

105 
	`Ârötf
(
°dîr
, "wrôêfûê[%s]Éº‹.\n", 
fûíame
);

106 
	`exô
(1);

109 
	}
}

111 
	$wavWrôe_f32
(*
fûíame
, *
buf„r
, 
ßm∂eR©e
, 
uöt32_t
 
tŸÆSam∂eCou¡
, uöt32_à
ch™√ls
) {

112 
drwav_d©a_f‹m©
 
f‹m©
;

113 
f‹m©
.
c⁄èöî
 = 
drwav_c⁄èöî_riff
;

114 
f‹m©
.f‹m© = 
DR_WAVE_FORMAT_IEEE_FLOAT
;

115 
f‹m©
.
ch™√ls
 = channels;

116 
f‹m©
.
ßm∂eR©e
 = (
drwav_uöt32
) sampleRate;

117 
f‹m©
.
bôsPîSam∂e
 = 32;

118 
öt32_t
 
i
 = 0; i < 
tŸÆSam∂eCou¡
; ++i) {

119 
buf„r
[
i
] = 
	`drwav_˛amp
(buffer[i], -32768, 32767) * (1.0f / 32768.0f);

121 
drwav
 *
pWav
 = 
	`drwav_›í_fûe_wrôe
(
fûíame
, &
f‹m©
);

122 i‡(
pWav
) {

123 
drwav_uöt64
 
ßm∂esWrôãn
 = 
	`drwav_wrôe
(
pWav
, 
tŸÆSam∂eCou¡
, 
buf„r
);

124 
	`drwav_unöô
(
pWav
);

125 i‡(
ßm∂esWrôãn
 !
tŸÆSam∂eCou¡
) {

126 
	`Ârötf
(
°dîr
, "wrôêfûê[%s]Éº‹.\n", 
fûíame
);

127 
	`exô
(1);

130 
	}
}

132 *
	$wavRód_f32
(c⁄° *
fûíame
, 
uöt32_t
 *
ßm∂eR©e
, 
uöt64_t
 *
ßm∂eCou¡
, uöt32_à*
ch™√ls
) {

133 
drwav_uöt64
 
tŸÆSam∂eCou¡
 = 0;

134 *
öput
 = 
	`drwav_›í_fûe_™d_ªad_pcm_‰ames_f32
(
fûíame
, 
ch™√ls
, 
ßm∂eR©e
, &
tŸÆSam∂eCou¡
);

135 i‡(
öput
 =
NULL
) {

136 
drmp3_c⁄fig
 
pC⁄fig
;

137 
öput
 = 
	`drmp3_›í_fûe_™d_ªad_f32
(
fûíame
, &
pC⁄fig
, &
tŸÆSam∂eCou¡
);

138 i‡(
öput
 !
NULL
) {

139 *
ch™√ls
 = 
pC⁄fig
.
ouçutCh™√ls
;

140 *
ßm∂eR©e
 = 
pC⁄fig
.
ouçutSam∂eR©e
;

143 i‡(
öput
 =
NULL
) {

144 
	`Ârötf
(
°dîr
, "ªad fûê[%s]Éº‹.\n", 
fûíame
);

145 
	`exô
(1);

147 *
ßm∂eCou¡
 = 
tŸÆSam∂eCou¡
 * (*
ch™√ls
);

148 
öt32_t
 
i
 = 0; i < *
ßm∂eCou¡
; ++i) {

149 
öput
[
i
] = input[i] * 32768.0f;

151  
öput
;

152 
	}
}

154 *
	$mem_wavRód_f32
(c⁄° * 
d©a
, 
size_t
 
d©aSize
, 
uöt32_t
 *
ßm∂eR©e
, uöt32_à*
ch™√ls
, 
uöt64_t
 *
ßm∂eCou¡
) {

155 
drwav_uöt64
 
tŸÆSam∂eCou¡
 = 0;

156 *
öput
 = 
	`drwav_›í_mem‹y_™d_ªad_pcm_‰ames_f32
(
d©a
, 
d©aSize
, 
ch™√ls
, 
ßm∂eR©e
, &
tŸÆSam∂eCou¡
);

158 *
ßm∂eCou¡
 = 
tŸÆSam∂eCou¡
 * (*
ch™√ls
);

160 
öt32_t
 
i
 = 0; i < *
ßm∂eCou¡
; ++i) {

161 
öput
[
i
] = input[i] * 32768.0f;

163  
öput
;

164 
	}
}

168 
	$•lô∑th
(c⁄° *
∑th
, *
drv
, *
dú
, *
«me
, *
ext
) {

169 c⁄° *
íd
;

170 c⁄° *
p
;

171 c⁄° *
s
;

172 i‡(
∑th
[0] &&Öath[1] == ':') {

173 i‡(
drv
) {

174 *
drv
++ = *
∑th
++;

175 *
drv
++ = *
∑th
++;

176 *
drv
 = '\0';

178 } i‡(
drv
)

179 *
drv
 = '\0';

180 
íd
 = 
∑th
; *end && *end != ':';)

181 
íd
++;

182 
p
 = 
íd
;Ö > 
∑th
 && *--p != '\\' && *p != '/';)

183 i‡(*
p
 == '.') {

184 
íd
 = 
p
;

187 i‡(
ext
)

188 
s
 = 
íd
; (*
ext
 = *s++);)

189 
ext
++;

190 
p
 = 
íd
;Ö > 
∑th
;)

191 i‡(*--
p
 == '\\' || *p == '/') {

192 
p
++;

195 i‡(
«me
) {

196 
s
 = 
p
; s < 
íd
;)

197 *
«me
++ = *
s
++;

198 *
«me
 = '\0';

200 i‡(
dú
) {

201 
s
 = 
∑th
; s < 
p
;)

202 *
dú
++ = *
s
++;

203 *
dú
 = '\0';

205 
	}
}

209 
uöt64_t
 
	$Reßm∂e_f32
(c⁄° *
öput
, *
ouçut
, 
öSam∂eR©e
, 
outSam∂eR©e
, 
uöt64_t
 
öputSize
,

210 
uöt32_t
 
ch™√ls


212 i‡(
öput
 =
NULL
)

214 
uöt64_t
 
ouçutSize
 = 
öputSize
 * 
outSam∂eR©e
 / 
öSam∂eR©e
;

215 i‡(
ouçut
 =
NULL
)

216  
ouçutSize
;

217 
°ïDi°
 = ((Ë
öSam∂eR©e
 / (Ë
outSam∂eR©e
);

218 c⁄° 
uöt64_t
 
fixedFø˘i⁄
 = (1LL << 32);

219 c⁄° 
n‹mFixed
 = (1.0 / (1LL << 32));

220 
uöt64_t
 
°ï
 = ((uöt64_tË(
°ïDi°
 * 
fixedFø˘i⁄
 + 0.5));

221 
uöt64_t
 
curOff£t
 = 0;

222 
uöt32_t
 
i
 = 0; i < 
ouçutSize
; i += 1) {

223 
uöt32_t
 
c
 = 0; c < 
ch™√ls
; c += 1) {

224 *
ouçut
++ = (Ë(
öput
[
c
] + (öput[¯+ 
ch™√ls
] - input[c]) * (

225 (Ë(
curOff£t
 >> 32Ë+ ((curOff£à& (
fixedFø˘i⁄
 - 1)Ë* 
n‹mFixed
)

229 
curOff£t
 +
°ï
;

230 
öput
 +(
curOff£t
 >> 32Ë* 
ch™√ls
;

231 
curOff£t
 &(
fixedFø˘i⁄
 - 1);

233  
ouçutSize
;

234 
	}
}

236 
	$¥öt
(c⁄° * 
buf„r
, c⁄° 
size
, 
°r
) {

237 
	`¥ötf
("\n-------------%c-------------\n\n", 
°r
);

238 
j
=0; j<10; ++j) {

239 
	`¥ötf
("\n");

240 
i
 = 0; i<
size
/10; ++iË
	`¥ötf
("%f, ", *(
buf„r
++));

242 
	`¥ötf
("\n-------------------------\n\n");

243 
	}
}

244 
EMSCRIPTEN_KEEPALIVE


245 
	$díoi£_¥oc
(*
öput
, 
uöt32_t
 
ßm∂eR©e
, uöt32_à
ch™√ls
, 
uöt64_t
 
ßm∂eCou¡
) {

246 
Êag
 = 0;

247 
uöt32_t
 
èrgëFømeSize
 = 480;

248 
uöt32_t
 
èrgëSam∂eR©e
 = 48000;

249 
uöt32_t
 
≥rFømeSize
 = 
ßm∂eR©e
 / 100;

250 *
‰ameBuf„r
 = (*Ë
	`mÆloc
((*‰ameBuf„rË* (
ch™√ls
 + 1Ë* 
èrgëFømeSize
);

251 *
¥o˚ssBuf„r
 = 
‰ameBuf„r
 + 
èrgëFømeSize
 * 
ch™√ls
;

252 
Díoi£Sèã
 **
°s
 = 
	`mÆloc
(
ch™√ls
 * (DenoiseState *));

253 i‡(
°s
 =
NULL
 || 
‰ameBuf„r
 == NULL) {

254 i‡(
°s
)

255 
	`‰ì
(
°s
);

256 i‡(
‰ameBuf„r
)

257 
	`‰ì
(
‰ameBuf„r
);

258 
	`Ârötf
(
°dîr
, "mallocÉrror.\n");

261 
i
 = 0; i < 
ch™√ls
; i++) {

262 
°s
[
i
] = 
	`∫noi£_¸óã
(
NULL
);

263 i‡(
°s
[
i
] =
NULL
) {

264 
x
 = 0; x < 
i
; x++) {

265 i‡(
°s
[
x
]) {

266 
	`∫noi£_de°roy
(
°s
[
x
]);

269 
	`‰ì
(
°s
);

270 
	`‰ì
(
‰ameBuf„r
);

274 
size_t
 
‰ameSãp
 = 
ch™√ls
 * 
≥rFømeSize
;

275 
uöt64_t
 
‰ames
 = 
ßm∂eCou¡
 / 
‰ameSãp
;

276 
uöt64_t
 
œ°FømeSize
 = (
ßm∂eCou¡
 % 
‰ameSãp
Ë/ 
ch™√ls
;

277 
i
 = 0; i < 
‰ames
; ++i) {

278 if(
Êag
Ë
	`¥öt
(
öput
, 480, 'A');

280 
	`Reßm∂e_f32
(
öput
, 
‰ameBuf„r
, 
ßm∂eR©e
, 
èrgëSam∂eR©e
,

281 
≥rFømeSize
, 
ch™√ls
);

282 if(
Êag
Ë
	`¥öt
(
‰ameBuf„r
, 480, 'B');

284 
c
 = 0; c < 
ch™√ls
; c++) {

285 
k
 = 0; k < 
èrgëFømeSize
; k++)

286 
¥o˚ssBuf„r
[
k
] = 
‰ameBuf„r
[k * 
ch™√ls
 + 
c
];

287 
	`∫noi£_¥o˚ss_‰ame
(
°s
[
c
], 
¥o˚ssBuf„r
,ÖrocessBuffer);

288 
k
 = 0; k < 
èrgëFømeSize
; k++)

289 
‰ameBuf„r
[
k
 * 
ch™√ls
 + 
c
] = 
¥o˚ssBuf„r
[k];

291 if(
Êag
Ë
	`¥öt
(
‰ameBuf„r
, 480, 'C');

293 
	`Reßm∂e_f32
(
‰ameBuf„r
, 
öput
, 
èrgëSam∂eR©e
, 
ßm∂eR©e
, 
èrgëFømeSize
, 
ch™√ls
);

294 if(
Êag
Ë{ 
	`¥öt
(
öput
, 480, 'D'); flag = 1; }

296 
öput
 +
‰ameSãp
;

298 i‡(
œ°FømeSize
 != 0) {

299 
	`mem£t
(
‰ameBuf„r
, 0, 
èrgëFømeSize
 * 
ch™√ls
 * ());

300 
uöt64_t
 
œ°Rósm∂eSize
 = 
	`Reßm∂e_f32
(
öput
, 
‰ameBuf„r
, 
ßm∂eR©e
,

301 
èrgëSam∂eR©e
,

302 
œ°FømeSize
, 
ch™√ls
);

303 
c
 = 0; c < 
ch™√ls
; c++) {

304 
k
 = 0; k < 
èrgëFømeSize
; k++)

305 
¥o˚ssBuf„r
[
k
] = 
‰ameBuf„r
[k * 
ch™√ls
 + 
c
];

306 
	`∫noi£_¥o˚ss_‰ame
(
°s
[
c
], 
¥o˚ssBuf„r
,ÖrocessBuffer);

307 
k
 = 0; k < 
èrgëFømeSize
; k++)

308 
‰ameBuf„r
[
k
 * 
ch™√ls
 + 
c
] = 
¥o˚ssBuf„r
[k];

310 
	`Reßm∂e_f32
(
‰ameBuf„r
, 
öput
, 
èrgëSam∂eR©e
, 
ßm∂eR©e
, 
œ°Rósm∂eSize
,

311 
ch™√ls
);

313 
i
 = 0; i < 
ch™√ls
; i++) {

314 i‡(
°s
[
i
]) {

315 
	`∫noi£_de°roy
(
°s
[
i
]);

318 
	`‰ì
(
°s
);

319 
	`‰ì
(
‰ameBuf„r
);

320 
	}
}

322 
	gªsu…
[2];

323 
uöt32_t
 
	gßm∂eR©e
 = 0;

324 
uöt32_t
 
	gch™√ls
 = 0;

325 
uöt64_t
 
	gßm∂eCou¡
 = 0;

326 * 
	gªsu…_buf„r
;

328 #ifde‡
USE_WAV_MP3_LIBRARIES


330 
EMSCRIPTEN_KEEPALIVE


331 * 
	$∫nDíoi£Mem
(* 
audioD©a
, 
size_t
 
audioSize
) {

333 * 
buf„r
 = 
	`mem_wavRód_f32
(
audioD©a
, 
audioSize
, &
ßm∂eR©e
, &
ch™√ls
, &
ßm∂eCou¡
);

337 if(
buf„r
 !
NULL
) {

338 
	`díoi£_¥oc
(
buf„r
, 
ßm∂eR©e
, 
ch™√ls
, 
ßm∂eCou¡
);

340 
ªsu…_buf„r
 = 
buf„r
;

341 
ªsu…
[1] = 
ßm∂eCou¡
;

343  
buf„r
;

344 
	}
}

348 
EMSCRIPTEN_KEEPALIVE


349 * 
	$∫nDíoi£_øwmem
(c⁄° * 
audioD©a
, c⁄° 
uöt32_t
 
ö_ßm∂eR©e
, c⁄° uöt32_à
ö_ch™√ls
, c⁄° uöt32_à
ö_ßm∂eCou¡
) {

351 
ßm∂eCou¡
 = 
ö_ßm∂eCou¡
;

352 
ßm∂eR©e
 = 
ö_ßm∂eR©e
;

353 
ch™√ls
 = 
ö_ch™√ls
;

355 * 
buf„r
 = (*Ë
	`mÆloc
((Ë* 
ßm∂eCou¡
);

358 
i
 = 0; i < 
ßm∂eCou¡
; ++i) {

359 
buf„r
[
i
] = 
audioD©a
[i] * 32768.0f;

363 if(
buf„r
 !
NULL
) {

365 
	`díoi£_¥oc
(
buf„r
, 
ßm∂eR©e
, 
ch™√ls
, 
ßm∂eCou¡
);

369 
i
 = 0; i < 
ßm∂eCou¡
; ++i) {

370 
buf„r
[
i
] = 
	`_˛amp
(buffer[i], -32768, 32767) * (1.0f / 32768.0);

376 
ªsu…_buf„r
 = 
buf„r
;

377 
ªsu…
[1] = 
ßm∂eCou¡
;

379  
buf„r
;

380 
	}
}

382 
	gtime_öãrvÆ
 = 0;

383 
EMSCRIPTEN_KEEPALIVE


384 * 
	$∫nDíoi£_øwmem_≥rf
(c⁄° * 
audioD©a
, c⁄° 
uöt32_t
 
ö_ßm∂eR©e
, c⁄° uöt32_à
ö_ch™√ls
, c⁄° uöt32_à
ö_ßm∂eCou¡
) {

385 *
ªsu…
;

387 
°¨tTime
 = 
	`now
();

388 
ªsu…
 = 
	`∫nDíoi£_øwmem_≥rf
(
audioD©a
, 
ö_ßm∂eR©e
, 
ö_ch™√ls
, 
ö_ßm∂eCou¡
);

389 
time_öãrvÆ
 = 
	`ˇlcEœp£d
(
°¨tTime
, 
	`now
());

390  
ªsu…
;

391 
	}
}

392 
EMSCRIPTEN_KEEPALIVE


393 
	$gë_∫nDíoi£_øwmem_time
(Ë{  
time_öãrvÆ
;
	}
}

396 
EMSCRIPTEN_KEEPALIVE


397 
	$gëResu…Poöãr
(Ë{  
ªsu…
[0];
	}
}

398 
EMSCRIPTEN_KEEPALIVE


399 
	$gëResu…Size
(Ë{  
ªsu…
[1];
	}
}

400 
EMSCRIPTEN_KEEPALIVE


401 
	$gëßm∂eR©e
(Ë{  
ßm∂eR©e
;
	}
}

402 
EMSCRIPTEN_KEEPALIVE


403 
	$gëch™√ls
(Ë{  
ch™√ls
;
	}
}

404 
EMSCRIPTEN_KEEPALIVE


405 
	$gëßm∂eCou¡
(Ë{  (Ë
ßm∂eCou¡
;
	}
}

406 
EMSCRIPTEN_KEEPALIVE


407 
	$‰ìBuf„r
(Ë{ 
	`‰ì
(
ªsu…_buf„r
);
	}
}

409 #ifde‡
USE_WAV_MP3_LIBRARIES


411 
	$∫nDeNoi£
(*
ö_fûe
, *
out_fûe
) {

413 
FILE
 *
Â
 = 
	`f›í
(
ö_fûe
, "rb");

414 
	`f£ek
(
Â
, 0, 
SEEK_END
);

415 
size_t
 
fSize
 = 
	`·ñl
(
Â
);

416 
	`ªwöd
(
Â
);

419 
audioD©a
[
fSize
];

420 
rSèt
 = 
	`‰ód
(
audioD©a
, (), 
fSize
, 
Â
);

421 if(
rSèt
 < 1Ë{
	`¥ötf
("\nFileReadError: %d\n",ÑStat);}

422 
audioD©aSize
 = 
fSize
;

425 
°¨tTime
 = 
	`now
();

426 * 
buf„r
 = 
	`∫nDíoi£Mem
(
audioD©a
, 
audioD©aSize
);

427 
time_öãrvÆ
 = 
	`ˇlcEœp£d
(
°¨tTime
, 
	`now
());

428 
	`¥ötf
("Performance:\n\n");

429 
	`¥ötf
("AudioFûe:\t\t%s\n", 
ö_fûe
);

430 
	`¥ötf
("Sam∂eR©e:\t\t%d\n", 
ßm∂eR©e
);

431 
	`¥ötf
("D©aSizê(byãs):\t%ld\n", 
ßm∂eCou¡
);

433 
	`¥ötf
("TimêöãrvÆ (ms):\t%f\¿", (
time_öãrvÆ
 * 1000));

434 
	`¥ötf
("Kbps:\t\t\t%f\¿",(
ßm∂eCou¡
)/(
time_öãrvÆ
 * 1000));

435 if(
buf„r
) {

436 
	`wavWrôe_s16
(
out_fûe
, 
buf„r
, 
ßm∂eR©e
, (
uöt32_t
Ë
ªsu…
[1], 
ch™√ls
);

437 
	`‰ì
(
buf„r
);

439 
	}
}

444 
	$maö
(
¨gc
, **
¨gv
) {

446 #ifde‡
USE_WAV_MP3_LIBRARIES


447 if(
¨gc
 < 3) {

448 
	`¥ötf
("PleaseÖrovideáudio fileÅoÖrocess. For Example \n");

449 
	`¥ötf
("./rnnoise file.wav outfile.wav\n");

453 *
öFûe
 = 
¨gv
[1];

454 *
outFûe
 = 
¨gv
[2];

456 
	`∫nDeNoi£
(
öFûe
, 
outFûe
);

459 
	}
}

	@rnnoise/examples_bak/rnnoise_demo.c

28 
	~<°dio.h
>

29 
	~"∫noi£.h
"

31 
	#FRAME_SIZE
 480

	)

33 
	$maö
(
¨gc
, **
¨gv
) {

34 
i
;

35 
fú°
 = 1;

36 
x
[
FRAME_SIZE
];

37 
FILE
 *
f1
, *
fout
;

38 
Díoi£Sèã
 *
°
;

39 
°
 = 
	`∫noi£_¸óã
(
NULL
);

40 i‡(
¨gc
!=3) {

41 
	`Ârötf
(
°dîr
, "ußge: %†<noisy s≥ech> <ouçuàdíoi£d>\n", 
¨gv
[0]);

44 
f1
 = 
	`f›í
(
¨gv
[1], "rb");

45 
fout
 = 
	`f›í
(
¨gv
[2], "wb");

47 
tmp
[
FRAME_SIZE
];

48 
	`‰ód
(
tmp
, (), 
FRAME_SIZE
, 
f1
);

49 i‡(
	`„of
(
f1
)) ;

50 
i
=0;i<
FRAME_SIZE
;i++Ë
x
[i] = 
tmp
[i];

51 
	`∫noi£_¥o˚ss_‰ame
(
°
, 
x
, x);

52 
i
=0;i<
FRAME_SIZE
;i++Ë
tmp
[i] = 
x
[i];

53 i‡(!
fú°
Ë
	`fwrôe
(
tmp
, (), 
FRAME_SIZE
, 
fout
);

54 
fú°
 = 0;

56 
	`∫noi£_de°roy
(
°
);

57 
	`f˛o£
(
f1
);

58 
	`f˛o£
(
fout
);

60 
	}
}

	@rnnoise/include/rnnoise.h

28 #i‚de‡
RNNOISE_H


29 
	#RNNOISE_H
 1

	)

31 
	~<°dio.h
>

33 #ifde‡
__˝lu•lus


37 #i‚de‡
RNNOISE_EXPORT


38 #i‡
deföed
(
WIN32
)

39 #i‡
deföed
(
RNNOISE_BUILD
Ë&& deföed(
DLL_EXPORT
)

40 
	#RNNOISE_EXPORT
 
	`__de˛•ec
(
dŒexp‹t
)

	)

42 
	#RNNOISE_EXPORT


	)

44 #ñi‡
deföed
(
__GNUC__
Ë&& deföed(
RNNOISE_BUILD
)

45 
	#RNNOISE_EXPORT
 
	`__©åibuã__
 ((
	`visibûôy
 ("deÁu…")))

	)

47 
	#RNNOISE_EXPORT


	)

51 
Díoi£Sèã
 
	tDíoi£Sèã
;

52 
RNNModñ
 
	tRNNModñ
;

57 
RNNOISE_EXPORT
 
∫noi£_gë_size
();

62 
RNNOISE_EXPORT
 
∫noi£_gë_‰ame_size
();

71 
RNNOISE_EXPORT
 
∫noi£_öô
(
Díoi£Sèã
 *
°
, 
RNNModñ
 *
modñ
);

80 
RNNOISE_EXPORT
 
Díoi£Sèã
 *
∫noi£_¸óã
(
RNNModñ
 *
modñ
);

87 
RNNOISE_EXPORT
 
∫noi£_de°roy
(
Díoi£Sèã
 *
°
);

94 
RNNOISE_EXPORT
 
∫noi£_¥o˚ss_‰ame
(
Díoi£Sèã
 *
°
, *
out
, c⁄° *
ö
);

101 
RNNOISE_EXPORT
 
RNNModñ
 *
∫noi£_modñ_‰om_fûe
(
FILE
 *
f
);

108 
RNNOISE_EXPORT
 
∫noi£_modñ_‰ì
(
RNNModñ
 *
modñ
);

110 #ifde‡
__˝lu•lus


	@rnnoise/src/_kiss_fft_guts.h

26 #i‚de‡
KISS_FFT_GUTS_H


27 
	#KISS_FFT_GUTS_H


	)

29 
	#MIN
(
a
,
b
Ë(◊)<(bË? (a):(b))

	)

30 
	#MAX
(
a
,
b
Ë(◊)>(bË? (a):(b))

	)

36 
	~"kiss_f·.h
"

47 #ifde‡
FIXED_POINT


48 
	~"¨ch.h
"

51 
	#SAMP_MAX
 2147483647

	)

52 
	#TWID_MAX
 32767

	)

53 
	#TRIG_UPSCALE
 1

	)

55 
	#SAMP_MIN
 -
SAMP_MAX


	)

58 
	#S_MUL
(
a
,
b
Ë
	`MULT16_32_Q15
(b,á)

	)

60 
	#C_MUL
(
m
,
a
,
b
) \

61 do{ (
m
).
r
 = 
	`SUB32_ovÊw
(
	`S_MUL
((
a
).r,(
b
).rË, S_MUL(◊).
i
,(b).i)); \

62 (
m
).
i
 = 
	`ADD32_ovÊw
(
	`S_MUL
((
a
).
r
,(
b
).iË, S_MUL(◊).i,(b).r)); }0)

	)

64 
	#C_MULC
(
m
,
a
,
b
) \

65 do{ (
m
).
r
 = 
	`ADD32_ovÊw
(
	`S_MUL
((
a
).r,(
b
).rË, S_MUL(◊).
i
,(b).i)); \

66 (
m
).
i
 = 
	`SUB32_ovÊw
(
	`S_MUL
((
a
).i,(
b
).
r
Ë, S_MUL(◊).r,(b).i)); }0)

	)

68 
	#C_MULBYSCALAR
–
c
, 
s
 ) \

69 do{ (
c
).
r
 = 
	`S_MUL
–(c).∏, 
s
 ) ;\

70 (
c
).
i
 = 
	`S_MUL
–(c).ò, 
s
 ) ; }0)

	)

72 
	#DIVSCALAR
(
x
,
k
) \

73 (
x
Ë
	`S_MUL
–x, (
TWID_MAX
-((
k
)>>1))/(k)+1 )

	)

75 
	#C_FIXDIV
(
c
,
div
) \

76 dÿ{ 
	`DIVSCALAR
–(
c
).
r
 , 
div
); \

77 
	`DIVSCALAR
–(
c
).
i
 , 
div
); }0)

	)

79 
	#C_ADD
–
ªs
, 
a
,
b
)\

80 dÿ{(
ªs
).
r
=
	`ADD32_ovÊw
((
a
).r,(
b
).r); (ªs).
i
=ADD32_ovflw((a).i,(b).i); \

81 }0)

	)

82 
	#C_SUB
–
ªs
, 
a
,
b
)\

83 dÿ{(
ªs
).
r
=
	`SUB32_ovÊw
((
a
).r,(
b
).r); (ªs).
i
=SUB32_ovflw((a).i,(b).i); \

84 }0)

	)

85 
	#C_ADDTO
–
ªs
 , 
a
)\

86 dÿ{(
ªs
).
r
 = 
	`ADD32_ovÊw
(‘es).r, (
a
).r); (ªs).
i
 = ADD32_ovflw((res).i,(a).i);\

87 }0)

	)

89 
	#C_SUBFROM
–
ªs
 , 
a
)\

90 dÿ{(
ªs
).
r
 = 
	`ADD32_ovÊw
(‘es).r,(
a
).r); (ªs).
i
 = 
	`SUB32_ovÊw
((res).i,(a).i); \

91 }0)

	)

93 #i‡
deföed
(
OPUS_ARM_INLINE_ASM
)

94 
	~"¨m/kiss_f·_¨mv4.h
"

97 #i‡
deföed
(
OPUS_ARM_INLINE_EDSP
)

98 
	~"¨m/kiss_f·_¨mv5e.h
"

100 #i‡
deföed
(
MIPSr1_ASM
)

101 
	~"mùs/kiss_f·_mù§1.h
"

106 
	#S_MUL
(
a
,
b
Ë–◊)*(bË)

	)

107 
	#C_MUL
(
m
,
a
,
b
) \

108 do{ (
m
).
r
 = (
a
).r*(
b
).∏- (a).
i
*(b).i;\

109 (
m
).
i
 = (
a
).
r
*(
b
).ò+ (a).i*(b).r; }0)

	)

110 
	#C_MULC
(
m
,
a
,
b
) \

111 do{ (
m
).
r
 = (
a
).r*(
b
).∏+ (a).
i
*(b).i;\

112 (
m
).
i
 = (
a
).i*(
b
).
r
 - (a).r*(b).i; }0)

	)

114 
	#C_MUL4
(
m
,
a
,
b
Ë
	`C_MUL
(m,a,b)

	)

116 
	#C_FIXDIV
(
c
,
div
Ë

	)

117 
	#C_MULBYSCALAR
–
c
, 
s
 ) \

118 do{ (
c
).
r
 *(
s
);\

119 (
c
).
i
 *(
s
); }0)

	)

122 #i‚de‡
CHECK_OVERFLOW_OP


123 
	#CHECK_OVERFLOW_OP
(
a
,
›
,
b
Ë

	)

126 #i‚de‡
C_ADD


127 
	#C_ADD
–
ªs
, 
a
,
b
)\

129 
	`CHECK_OVERFLOW_OP
((
a
).
r
,+,(
b
).r)\

130 
	`CHECK_OVERFLOW_OP
((
a
).
i
,+,(
b
).i)\

131 (
ªs
).
r
=(
a
).r+(
b
).r; (ªs).
i
=(a).i+(b).i; \

132 }0)

	)

133 
	#C_SUB
–
ªs
, 
a
,
b
)\

135 
	`CHECK_OVERFLOW_OP
((
a
).
r
,-,(
b
).r)\

136 
	`CHECK_OVERFLOW_OP
((
a
).
i
,-,(
b
).i)\

137 (
ªs
).
r
=(
a
).r-(
b
).r; (ªs).
i
=(a).i-(b).i; \

138 }0)

	)

139 
	#C_ADDTO
–
ªs
 , 
a
)\

141 
	`CHECK_OVERFLOW_OP
((
ªs
).
r
,+,(
a
).r)\

142 
	`CHECK_OVERFLOW_OP
((
ªs
).
i
,+,(
a
).i)\

143 (
ªs
).
r
 +(
a
).r; (ªs).
i
 += (a).i;\

144 }0)

	)

146 
	#C_SUBFROM
–
ªs
 , 
a
)\

148 
	`CHECK_OVERFLOW_OP
((
ªs
).
r
,-,(
a
).r)\

149 
	`CHECK_OVERFLOW_OP
((
ªs
).
i
,-,(
a
).i)\

150 (
ªs
).
r
 -(
a
).r; (ªs).
i
 -= (a).i; \

151 }0)

	)

154 #ifde‡
FIXED_POINT


157 
	#KISS_FFT_COS
(
pha£
Ë
	`Êo‹
(.5+
TWID_MAX
*
	`cos
 (pha£))

	)

158 
	#KISS_FFT_SIN
(
pha£
Ë
	`Êo‹
(.5+
TWID_MAX
*
	`sö
 (pha£))

	)

159 
	#HALF_OF
(
x
Ë((x)>>1)

	)

160 #ñi‡
deföed
(
USE_SIMD
)

161 
	#KISS_FFT_COS
(
pha£
Ë
	`_mm_£t1_ps
–
	`cos
’ha£Ë)

	)

162 
	#KISS_FFT_SIN
(
pha£
Ë
	`_mm_£t1_ps
–
	`sö
’ha£Ë)

	)

163 
	#HALF_OF
(
x
Ë((x)*
	`_mm_£t1_ps
(.5f))

	)

165 
	#KISS_FFT_COS
(
pha£
Ë(
kiss_f·_sˇœr
Ë
	`cos
’ha£)

	)

166 
	#KISS_FFT_SIN
(
pha£
Ë(
kiss_f·_sˇœr
Ë
	`sö
’ha£)

	)

167 
	#HALF_OF
(
x
Ë((x)*.5f)

	)

170 
	#kf_˚xp
(
x
,
pha£
) \

172 (
x
)->
r
 = 
	`KISS_FFT_COS
(
pha£
);\

173 (
x
)->
i
 = 
	`KISS_FFT_SIN
(
pha£
);\

174 }0)

	)

176 
	#kf_˚xp2
(
x
,
pha£
) \

178 (
x
)->
r
 = 
TRIG_UPSCALE
*
	`˚…_cos_n‹m
((
pha£
));\

179 (
x
)->
i
 = 
TRIG_UPSCALE
*
	`˚…_cos_n‹m
((
pha£
)-32768);\

180 }0)

	)

	@rnnoise/src/arch.h

34 #i‚de‡
ARCH_H


35 
	#ARCH_H


	)

37 
	~"›us_ty≥s.h
"

38 
	~"comm⁄.h
"

40 #i‡!
deföed
(
__GNUC_PREREQ
)

41 #i‡
deföed
(
__GNUC__
)&&deföed(
__GNUC_MINOR__
)

42 
	#__GNUC_PREREQ
(
_maj
,
_mö
) \

43 ((
__GNUC__
<<16)+
__GNUC_MINOR__
>=((
_maj
)<<16)+(
_mö
))

	)

45 
	#__GNUC_PREREQ
(
_maj
,
_mö
Ë0

	)

49 
	#CELT_SIG_SCALE
 32768.f

	)

51 
	#˚…_Áèl
(
°r
Ë
	`_˚…_Áèl
(°r, 
__FILE__
, 
__LINE__
);

	)

52 #ifde‡
ENABLE_ASSERTIONS


53 
	~<°dio.h
>

54 
	~<°dlib.h
>

55 #ifde‡
__GNUC__


56 
__©åibuã__
((
n‹ëu∫
))

58 
OPUS_INLINE
 
	$_˚…_Áèl
(c⁄° *
°r
, c⁄° *
fûe
, 
löe
)

60 
	`Ârötf
 (
°dîr
, "F©Æ (öã∫ÆËîr‹ i¿%s,Üöê%d: %s\n", 
fûe
, 
löe
, 
°r
);

61 
	`ab‹t
();

62 
	}
}

63 
	#˚…_as£π
(
c⁄d
Ë{i‡(!(c⁄d)Ë{
	`˚…_Áèl
("as£πi⁄ faûed: " #c⁄d);}}

	)

64 
	#˚…_as£π2
(
c⁄d
, 
mesßge
Ë{i‡(!(c⁄d)Ë{
	`˚…_Áèl
("as£πi⁄ faûed: " #c⁄d "\n" mesßge);}}

	)

66 
	#˚…_as£π
(
c⁄d
)

	)

67 
	#˚…_as£π2
(
c⁄d
, 
mesßge
)

	)

70 
	#IMUL32
(
a
,
b
Ë(◊)*(b))

	)

72 
	#MIN16
(
a
,
b
Ë(◊Ë< (bË? (aË: (b)Ë

	)

73 
	#MAX16
(
a
,
b
Ë(◊Ë> (bË? (aË: (b)Ë

	)

74 
	#MIN32
(
a
,
b
Ë(◊Ë< (bË? (aË: (b)Ë

	)

75 
	#MAX32
(
a
,
b
Ë(◊Ë> (bË? (aË: (b)Ë

	)

76 
	#IMIN
(
a
,
b
Ë(◊Ë< (bË? (aË: (b)Ë

	)

77 
	#IMAX
(
a
,
b
Ë(◊Ë> (bË? (aË: (b)Ë

	)

78 
	#UADD32
(
a
,
b
Ë(◊)+(b))

	)

79 
	#USUB32
(
a
,
b
Ë(◊)-(b))

	)

84 #i‡
deföed
(
__x86_64__
Ë|| deföed(
__LP64__
Ë|| deföed(
_WIN64
)

85 
	#OPUS_FAST_INT64
 1

	)

87 
	#OPUS_FAST_INT64
 0

	)

90 
	#PRINT_MIPS
(
fûe
)

	)

92 #ifde‡
FIXED_POINT


94 
›us_öt16
 
	t›us_vÆ16
;

95 
›us_öt32
 
	t›us_vÆ32
;

96 
›us_öt64
 
	t›us_vÆ64
;

98 
›us_vÆ32
 
	t˚…_sig
;

99 
›us_vÆ16
 
	t˚…_n‹m
;

100 
›us_vÆ32
 
	t˚…_íî
;

102 
	#Q15ONE
 32767

	)

104 
	#SIG_SHIFT
 12

	)

107 
	#SIG_SAT
 (300000000)

	)

109 
	#NORM_SCALING
 16384

	)

111 
	#DB_SHIFT
 10

	)

113 
	#EPSILON
 1

	)

114 
	#VERY_SMALL
 0

	)

115 
	#VERY_LARGE16
 ((
›us_vÆ16
)32767)

	)

116 
	#Q15_ONE
 ((
›us_vÆ16
)32767)

	)

118 
	#SCALEIN
(
a
Ë◊)

	)

119 
	#SCALEOUT
(
a
Ë◊)

	)

121 
	#ABS16
(
x
Ë((xË< 0 ? (-(x)Ë: (x))

	)

122 
	#ABS32
(
x
Ë((xË< 0 ? (-(x)Ë: (x))

	)

124 
OPUS_INLINE
 
›us_öt16
 
	$SAT16
(
›us_öt32
 
x
) {

125  
x
 > 32767 ? 32767 : x < -32768 ? -32768 : (
›us_öt16
)x;

126 
	}
}

128 #ifde‡
FIXED_DEBUG


129 
	~"fixed_debug.h
"

132 
	~"fixed_gíîic.h
"

134 #ifde‡
OPUS_ARM_PRESUME_AARCH64_NEON_INTR


135 
	~"¨m/fixed_¨m64.h
"

136 #ñi‡
OPUS_ARM_INLINE_EDSP


137 
	~"¨m/fixed_¨mv5e.h
"

138 #ñi‡
deföed
 (
OPUS_ARM_INLINE_ASM
)

139 
	~"¨m/fixed_¨mv4.h
"

140 #ñi‡
deföed
 (
BFIN_ASM
)

141 
	~"fixed_bfö.h
"

142 #ñi‡
deföed
 (
TI_C5X_ASM
)

143 
	~"fixed_c5x.h
"

144 #ñi‡
deföed
 (
TI_C6X_ASM
)

145 
	~"fixed_c6x.h
"

152 
	t›us_vÆ16
;

153 
	t›us_vÆ32
;

154 
	t›us_vÆ64
;

156 
	t˚…_sig
;

157 
	t˚…_n‹m
;

158 
	t˚…_íî
;

160 #ifde‡
FLOAT_APPROX


163 
OPUS_INLINE
 
	$˚…_i¢™
(
x
)

165 uni⁄ {
f
; 
›us_uöt32
 
i
;} 
ö
;

166 
ö
.
f
 = 
x
;

167  ((
ö
.
i
>>23)&0xFF)==0xFF && (in.i&0x007FFFFF)!=0;

168 
	}
}

170 #ifde‡
__FAST_MATH__


171 #îr‹ 
C™nŸ
 
buûd
 
lib›us
 
wôh
 -
fÁ°
-
m©h
 
u∆ess
 
FLOAT_APPROX
 
is
 
deföed
. 
This
 
could
 
ªsu…
 
ö
 
¸ashes
 
⁄
 
exåeme
 (
e
.
g
. 
NaN
Ë
öput


173 
	#˚…_i¢™
(
x
Ë((x)!=(x))

	)

176 
	#Q15ONE
 1.0f

	)

178 
	#NORM_SCALING
 1.f

	)

180 
	#EPSILON
 1e-15f

	)

181 
	#VERY_SMALL
 1e-30f

	)

182 
	#VERY_LARGE16
 1e15f

	)

183 
	#Q15_ONE
 ((
›us_vÆ16
)1.f)

	)

186 
	#ABS16
(
x
Ë(()
	`Ábs
(x))

	)

187 
	#ABS32
(
x
Ë(()
	`Ábs
(x))

	)

189 
	#QCONST16
(
x
,
bôs
Ë(x)

	)

190 
	#QCONST32
(
x
,
bôs
Ë(x)

	)

192 
	#NEG16
(
x
Ë(-(x))

	)

193 
	#NEG32
(
x
Ë(-(x))

	)

194 
	#NEG32_ovÊw
(
x
Ë(-(x))

	)

195 
	#EXTRACT16
(
x
Ë(x)

	)

196 
	#EXTEND32
(
x
Ë(x)

	)

197 
	#SHR16
(
a
,
shi·
Ë◊)

	)

198 
	#SHL16
(
a
,
shi·
Ë◊)

	)

199 
	#SHR32
(
a
,
shi·
Ë◊)

	)

200 
	#SHL32
(
a
,
shi·
Ë◊)

	)

201 
	#PSHR32
(
a
,
shi·
Ë◊)

	)

202 
	#VSHR32
(
a
,
shi·
Ë◊)

	)

204 
	#PSHR
(
a
,
shi·
Ë◊)

	)

205 
	#SHR
(
a
,
shi·
Ë◊)

	)

206 
	#SHL
(
a
,
shi·
Ë◊)

	)

207 
	#SATURATE
(
x
,
a
Ë(x)

	)

208 
	#SATURATE16
(
x
Ë(x)

	)

210 
	#ROUND16
(
a
,
shi·
Ë◊)

	)

211 
	#SROUND16
(
a
,
shi·
Ë◊)

	)

212 
	#HALF16
(
x
Ë(.5f*(x))

	)

213 
	#HALF32
(
x
Ë(.5f*(x))

	)

215 
	#ADD16
(
a
,
b
Ë(◊)+(b))

	)

216 
	#SUB16
(
a
,
b
Ë(◊)-(b))

	)

217 
	#ADD32
(
a
,
b
Ë(◊)+(b))

	)

218 
	#SUB32
(
a
,
b
Ë(◊)-(b))

	)

219 
	#ADD32_ovÊw
(
a
,
b
Ë(◊)+(b))

	)

220 
	#SUB32_ovÊw
(
a
,
b
Ë(◊)-(b))

	)

221 
	#MULT16_16_16
(
a
,
b
Ë(◊)*(b))

	)

222 
	#MULT16_16
(
a
,
b
Ë((
›us_vÆ32
)◊)*(›us_vÆ32)(b))

	)

223 
	#MAC16_16
(
c
,
a
,
b
Ë((c)+(
›us_vÆ32
)◊)*(›us_vÆ32)(b))

	)

225 
	#MULT16_32_Q15
(
a
,
b
Ë(◊)*(b))

	)

226 
	#MULT16_32_Q16
(
a
,
b
Ë(◊)*(b))

	)

228 
	#MULT32_32_Q31
(
a
,
b
Ë(◊)*(b))

	)

230 
	#MAC16_32_Q15
(
c
,
a
,
b
Ë((c)+◊)*(b))

	)

231 
	#MAC16_32_Q16
(
c
,
a
,
b
Ë((c)+◊)*(b))

	)

233 
	#MULT16_16_Q11_32
(
a
,
b
Ë(◊)*(b))

	)

234 
	#MULT16_16_Q11
(
a
,
b
Ë(◊)*(b))

	)

235 
	#MULT16_16_Q13
(
a
,
b
Ë(◊)*(b))

	)

236 
	#MULT16_16_Q14
(
a
,
b
Ë(◊)*(b))

	)

237 
	#MULT16_16_Q15
(
a
,
b
Ë(◊)*(b))

	)

238 
	#MULT16_16_P15
(
a
,
b
Ë(◊)*(b))

	)

239 
	#MULT16_16_P13
(
a
,
b
Ë(◊)*(b))

	)

240 
	#MULT16_16_P14
(
a
,
b
Ë(◊)*(b))

	)

241 
	#MULT16_32_P16
(
a
,
b
Ë(◊)*(b))

	)

243 
	#DIV32_16
(
a
,
b
Ë(((
›us_vÆ32
)◊))/(
›us_vÆ16
)(b))

	)

244 
	#DIV32
(
a
,
b
Ë(((
›us_vÆ32
)◊))/(›us_vÆ32)(b))

	)

246 
	#SCALEIN
(
a
Ë(◊)*
CELT_SIG_SCALE
)

	)

247 
	#SCALEOUT
(
a
Ë(◊)*(1/
CELT_SIG_SCALE
))

	)

249 
	#SIG2WORD16
(
x
Ë(x)

	)

253 #i‚de‡
GLOBAL_STACK_SIZE


254 #ifde‡
FIXED_POINT


255 
	#GLOBAL_STACK_SIZE
 120000

	)

257 
	#GLOBAL_STACK_SIZE
 120000

	)

	@rnnoise/src/celt_lpc.c

28 #ifde‡
HAVE_CONFIG_H


29 
	~"c⁄fig.h
"

32 
	~"˚…_Õc.h
"

33 
	~"¨ch.h
"

34 
	~"comm⁄.h
"

35 
	~"pôch.h
"

37 
	$_˚…_Õc
(

38 
›us_vÆ16
 *
_Õc
,

39 c⁄° 
›us_vÆ32
 *
ac
,

40 
p


43 
i
, 
j
;

44 
›us_vÆ32
 
r
;

45 
›us_vÆ32
 
îr‹
 = 
ac
[0];

46 #ifde‡
FIXED_POINT


47 
›us_vÆ32
 
Õc
[
LPC_ORDER
];

49 *
Õc
 = 
_Õc
;

52 
	`RNN_CLEAR
(
Õc
, 
p
);

53 i‡(
ac
[0] != 0)

55 
i
 = 0; i < 
p
; i++) {

57 
›us_vÆ32
 
º
 = 0;

58 
j
 = 0; j < 
i
; j++)

59 
º
 +
	`MULT32_32_Q31
(
Õc
[
j
],
ac
[
i
 - j]);

60 
º
 +
	`SHR32
(
ac
[
i
 + 1],3);

61 
r
 = -
	`SHL32
(
º
,3)/
îr‹
;

63 
Õc
[
i
] = 
	`SHR32
(
r
,3);

64 
j
 = 0; j < (
i
+1)>>1; j++)

66 
›us_vÆ32
 
tmp1
, 
tmp2
;

67 
tmp1
 = 
Õc
[
j
];

68 
tmp2
 = 
Õc
[
i
-1-
j
];

69 
Õc
[
j
] = 
tmp1
 + 
	`MULT32_32_Q31
(
r
,
tmp2
);

70 
Õc
[
i
-1-
j
] = 
tmp2
 + 
	`MULT32_32_Q31
(
r
,
tmp1
);

73 
îr‹
 =Éº‹ - 
	`MULT32_32_Q31
(MULT32_32_Q31(
r
,r),error);

75 #ifde‡
FIXED_POINT


76 i‡(
îr‹
<
	`SHR32
(
ac
[0],10))

79 i‡(
îr‹
<.001f*
ac
[0])

84 #ifde‡
FIXED_POINT


85 
i
=0;i<
p
;i++)

86 
_Õc
[
i
] = 
	`ROUND16
(
Õc
[i],16);

88 
	}
}

91 
	$˚…_fú
(

92 c⁄° 
›us_vÆ16
 *
x
,

93 c⁄° 
›us_vÆ16
 *
num
,

94 
›us_vÆ16
 *
y
,

95 
N
,

96 
‹d
)

98 
i
,
j
;

99 
›us_vÆ16
 
∫um
[
‹d
];

100 
i
=0;i<
‹d
;i++)

101 
∫um
[
i
] = 
num
[
‹d
-i-1];

102 
i
=0;i<
N
-3;i+=4)

104 
›us_vÆ32
 
sum
[4];

105 
sum
[0] = 
	`SHL32
(
	`EXTEND32
(
x
[
i
 ]), 
SIG_SHIFT
);

106 
sum
[1] = 
	`SHL32
(
	`EXTEND32
(
x
[
i
+1]), 
SIG_SHIFT
);

107 
sum
[2] = 
	`SHL32
(
	`EXTEND32
(
x
[
i
+2]), 
SIG_SHIFT
);

108 
sum
[3] = 
	`SHL32
(
	`EXTEND32
(
x
[
i
+3]), 
SIG_SHIFT
);

109 
	`xc‹r_kî√l
(
∫um
, 
x
+
i
-
‹d
, 
sum
, ord);

110 
y
[
i
 ] = 
	`ROUND16
(
sum
[0], 
SIG_SHIFT
);

111 
y
[
i
+1] = 
	`ROUND16
(
sum
[1], 
SIG_SHIFT
);

112 
y
[
i
+2] = 
	`ROUND16
(
sum
[2], 
SIG_SHIFT
);

113 
y
[
i
+3] = 
	`ROUND16
(
sum
[3], 
SIG_SHIFT
);

115 ;
i
<
N
;i++)

117 
›us_vÆ32
 
sum
 = 
	`SHL32
(
	`EXTEND32
(
x
[
i
]), 
SIG_SHIFT
);

118 
j
=0;j<
‹d
;j++)

119 
sum
 = 
	`MAC16_16
(sum,
∫um
[
j
],
x
[
i
+j-
‹d
]);

120 
y
[
i
] = 
	`ROUND16
(
sum
, 
SIG_SHIFT
);

122 
	}
}

124 
	$˚…_iú
(c⁄° 
›us_vÆ32
 *
_x
,

125 c⁄° 
›us_vÆ16
 *
dí
,

126 
›us_vÆ32
 *
_y
,

127 
N
,

128 
‹d
,

129 
›us_vÆ16
 *
mem
)

131 #ifde‡
SMALL_FOOTPRINT


132 
i
,
j
;

133 
i
=0;i<
N
;i++)

135 
›us_vÆ32
 
sum
 = 
_x
[
i
];

136 
j
=0;j<
‹d
;j++)

138 
sum
 -
	`MULT16_16
(
dí
[
j
],
mem
[j]);

140 
j
=
‹d
-1;j>=1;j--)

142 
mem
[
j
]=mem[j-1];

144 
mem
[0] = 
	`SROUND16
(
sum
, 
SIG_SHIFT
);

145 
_y
[
i
] = 
sum
;

148 
i
,
j
;

149 
	`˚…_as£π
((
‹d
&3)==0);

150 
›us_vÆ16
 
rdí
[
‹d
];

151 
›us_vÆ16
 
y
[
N
+
‹d
];

152 
i
=0;i<
‹d
;i++)

153 
rdí
[
i
] = 
dí
[
‹d
-i-1];

154 
i
=0;i<
‹d
;i++)

155 
y
[
i
] = -
mem
[
‹d
-i-1];

156 ;
i
<
N
+
‹d
;i++)

157 
y
[
i
]=0;

158 
i
=0;i<
N
-3;i+=4)

161 
›us_vÆ32
 
sum
[4];

162 
sum
[0]=
_x
[
i
];

163 
sum
[1]=
_x
[
i
+1];

164 
sum
[2]=
_x
[
i
+2];

165 
sum
[3]=
_x
[
i
+3];

166 
	`xc‹r_kî√l
(
rdí
, 
y
+
i
, 
sum
, 
‹d
);

169 
y
[
i
+
‹d
 ] = -
	`SROUND16
(
sum
[0],
SIG_SHIFT
);

170 
_y
[
i
 ] = 
sum
[0];

171 
sum
[1] = 
	`MAC16_16
(sum[1], 
y
[
i
+
‹d
 ], 
dí
[0]);

172 
y
[
i
+
‹d
+1] = -
	`SROUND16
(
sum
[1],
SIG_SHIFT
);

173 
_y
[
i
+1] = 
sum
[1];

174 
sum
[2] = 
	`MAC16_16
(sum[2], 
y
[
i
+
‹d
+1], 
dí
[0]);

175 
sum
[2] = 
	`MAC16_16
(sum[2], 
y
[
i
+
‹d
 ], 
dí
[1]);

176 
y
[
i
+
‹d
+2] = -
	`SROUND16
(
sum
[2],
SIG_SHIFT
);

177 
_y
[
i
+2] = 
sum
[2];

179 
sum
[3] = 
	`MAC16_16
(sum[3], 
y
[
i
+
‹d
+2], 
dí
[0]);

180 
sum
[3] = 
	`MAC16_16
(sum[3], 
y
[
i
+
‹d
+1], 
dí
[1]);

181 
sum
[3] = 
	`MAC16_16
(sum[3], 
y
[
i
+
‹d
 ], 
dí
[2]);

182 
y
[
i
+
‹d
+3] = -
	`SROUND16
(
sum
[3],
SIG_SHIFT
);

183 
_y
[
i
+3] = 
sum
[3];

185 ;
i
<
N
;i++)

187 
›us_vÆ32
 
sum
 = 
_x
[
i
];

188 
j
=0;j<
‹d
;j++)

189 
sum
 -
	`MULT16_16
(
rdí
[
j
],
y
[
i
+j]);

190 
y
[
i
+
‹d
] = 
	`SROUND16
(
sum
,
SIG_SHIFT
);

191 
_y
[
i
] = 
sum
;

193 
i
=0;i<
‹d
;i++)

194 
mem
[
i
] = 
_y
[
N
-i-1];

196 
	}
}

198 
	$_˚…_autoc‹r
(

199 c⁄° 
›us_vÆ16
 *
x
,

200 
›us_vÆ32
 *
ac
,

201 c⁄° 
›us_vÆ16
 *
wödow
,

202 
ovîœp
,

203 
œg
,

204 
n
)

206 
›us_vÆ32
 
d
;

207 
i
, 
k
;

208 
Á°N
=
n
-
œg
;

209 
shi·
;

210 c⁄° 
›us_vÆ16
 *
x±r
;

211 
›us_vÆ16
 
xx
[
n
];

212 
	`˚…_as£π
(
n
>0);

213 
	`˚…_as£π
(
ovîœp
>=0);

214 i‡(
ovîœp
 == 0)

216 
x±r
 = 
x
;

218 
i
=0;i<
n
;i++)

219 
xx
[
i
] = 
x
[i];

220 
i
=0;i<
ovîœp
;i++)

222 
xx
[
i
] = 
	`MULT16_16_Q15
(
x
[i],
wödow
[i]);

223 
xx
[
n
-
i
-1] = 
	`MULT16_16_Q15
(
x
[n-i-1],
wödow
[i]);

225 
x±r
 = 
xx
;

227 
shi·
=0;

228 #ifde‡
FIXED_POINT


230 
›us_vÆ32
 
ac0
;

231 
ac0
 = 1+(
n
<<7);

232 i‡(
n
&1Ë
ac0
 +
	`SHR32
(
	`MULT16_16
(
x±r
[0],xptr[0]),9);

233 
i
=(
n
&1);i<n;i+=2)

235 
ac0
 +
	`SHR32
(
	`MULT16_16
(
x±r
[
i
],xptr[i]),9);

236 
ac0
 +
	`SHR32
(
	`MULT16_16
(
x±r
[
i
+1],xptr[i+1]),9);

239 
shi·
 = 
	`˚…_ûog2
(
ac0
)-30+10;

240 
shi·
 = (shift)/2;

241 i‡(
shi·
>0)

243 
i
=0;i<
n
;i++)

244 
xx
[
i
] = 
	`PSHR32
(
x±r
[i], 
shi·
);

245 
x±r
 = 
xx
;

247 
shi·
 = 0;

250 
	`˚…_pôch_xc‹r
(
x±r
, x±r, 
ac
, 
Á°N
, 
œg
+1);

251 
k
=0;k<=
œg
;k++)

253 
i
 = 
k
+
Á°N
, 
d
 = 0; i < 
n
; i++)

254 
d
 = 
	`MAC16_16
(d, 
x±r
[
i
], x±r[i-
k
]);

255 
ac
[
k
] +
d
;

257 #ifde‡
FIXED_POINT


258 
shi·
 = 2*shift;

259 i‡(
shi·
<=0)

260 
ac
[0] +
	`SHL32
((
›us_öt32
)1, -
shi·
);

261 i‡(
ac
[0] < 268435456)

263 
shi·2
 = 29 - 
	`EC_ILOG
(
ac
[0]);

264 
i
=0;i<=
œg
;i++)

265 
ac
[
i
] = 
	`SHL32
◊c[i], 
shi·2
);

266 
shi·
 -
shi·2
;

267 } i‡(
ac
[0] >= 536870912)

269 
shi·2
=1;

270 i‡(
ac
[0] >= 1073741824)

271 
shi·2
++;

272 
i
=0;i<=
œg
;i++)

273 
ac
[
i
] = 
	`SHR32
◊c[i], 
shi·2
);

274 
shi·
 +
shi·2
;

278  
shi·
;

279 
	}
}

	@rnnoise/src/celt_lpc.h

28 #i‚de‡
PLC_H


29 
	#PLC_H


	)

31 
	~"¨ch.h
"

32 
	~"comm⁄.h
"

34 #i‡
deföed
(
OPUS_X86_MAY_HAVE_SSE4_1
)

35 
	~"x86/˚…_Õc_s£.h
"

38 
	#LPC_ORDER
 24

	)

40 
_˚…_Õc
(
›us_vÆ16
 *
_Õc
, c⁄° 
›us_vÆ32
 *
ac
, 
p
);

42 
˚…_fú
(

43 c⁄° 
›us_vÆ16
 *
x
,

44 c⁄° 
›us_vÆ16
 *
num
,

45 
›us_vÆ16
 *
y
,

46 
N
,

47 
‹d
);

49 
˚…_iú
(c⁄° 
›us_vÆ32
 *
x
,

50 c⁄° 
›us_vÆ16
 *
dí
,

51 
›us_vÆ32
 *
y
,

52 
N
,

53 
‹d
,

54 
›us_vÆ16
 *
mem
);

56 
_˚…_autoc‹r
(c⁄° 
›us_vÆ16
 *
x
, 
›us_vÆ32
 *
ac
,

57 c⁄° 
›us_vÆ16
 *
wödow
, 
ovîœp
, 
œg
, 
n
);

	@rnnoise/src/common.h

3 #i‚de‡
COMMON_H


4 
	#COMMON_H


	)

6 
	~"°dlib.h
"

7 
	~"°rög.h
"

9 
	#RNN_INLINE
 
ölöe


	)

10 
	#OPUS_INLINE
 
ölöe


	)

15 #i‚de‡
OVERRIDE_RNNOISE_ALLOC


16 
RNN_INLINE
 *
	$∫noi£_Æloc
 (
size_t
 
size
)

18  
	`mÆloc
(
size
);

19 
	}
}

23 #i‚de‡
OVERRIDE_RNNOISE_FREE


24 
RNN_INLINE
 
	$∫noi£_‰ì
 (*
±r
)

26 
	`‰ì
(
±r
);

27 
	}
}

31 #i‚de‡
OVERRIDE_RNN_COPY


32 
	#RNN_COPY
(
d°
, 
§c
, 
n
Ë(
	`mem˝y
((d°), (§c), (n)*(*(d°)Ë+ 0*((d°)-(§c)Ë))

	)

37 #i‚de‡
OVERRIDE_RNN_MOVE


38 
	#RNN_MOVE
(
d°
, 
§c
, 
n
Ë(
	`memmove
((d°), (§c), (n)*(*(d°)Ë+ 0*((d°)-(§c)Ë))

	)

42 #i‚de‡
OVERRIDE_RNN_CLEAR


43 
	#RNN_CLEAR
(
d°
, 
n
Ë(
	`mem£t
((d°), 0, (n)*(*(d°))))

	)

	@rnnoise/src/denoise.c

28 #ifde‡
HAVE_CONFIG_H


29 
	~"c⁄fig.h
"

32 
	~<°dlib.h
>

33 
	~<°rög.h
>

34 
	~<°dio.h
>

35 
	~"kiss_f·.h
"

36 
	~"comm⁄.h
"

37 
	~<m©h.h
>

38 
	~"∫noi£.h
"

39 
	~"pôch.h
"

40 
	~"¨ch.h
"

41 
	~"∫n.h
"

42 
	~"∫n_d©a.h
"

44 
	#FRAME_SIZE_SHIFT
 2

	)

45 
	#FRAME_SIZE
 (120<<
FRAME_SIZE_SHIFT
)

	)

46 
	#WINDOW_SIZE
 (2*
FRAME_SIZE
)

	)

47 
	#FREQ_SIZE
 (
FRAME_SIZE
 + 1)

	)

49 
	#PITCH_MIN_PERIOD
 60

	)

50 
	#PITCH_MAX_PERIOD
 768

	)

51 
	#PITCH_FRAME_SIZE
 960

	)

52 
	#PITCH_BUF_SIZE
 (
PITCH_MAX_PERIOD
+
PITCH_FRAME_SIZE
)

	)

54 
	#SQUARE
(
x
Ë((x)*(x))

	)

56 
	#NB_BANDS
 22

	)

58 
	#CEPS_MEM
 8

	)

59 
	#NB_DELTA_CEPS
 6

	)

61 
	#NB_FEATURES
 (
NB_BANDS
+3*
NB_DELTA_CEPS
+2)

	)

64 #i‚de‡
TRAINING


65 
	#TRAINING
 0

	)

70 c⁄° 
RNNModñ
 
∫noi£_modñ_‹ig
;

73 c⁄° 
›us_öt16
 
	geb™d5ms
[] = {

80 
	möô
;

81 
kiss_f·_°©e
 *
	mkf·
;

82 
	mhÆf_wödow
[
FRAME_SIZE
];

83 
	md˘_èbÀ
[
NB_BANDS
*NB_BANDS];

84 } 
	tComm⁄Sèã
;

86 
	sDíoi£Sèã
 {

87 
	m™Æysis_mem
[
FRAME_SIZE
];

88 
	m˚p°øl_mem
[
CEPS_MEM
][
NB_BANDS
];

89 
	mmemid
;

90 
	msy¡hesis_mem
[
FRAME_SIZE
];

91 
	mpôch_buf
[
PITCH_BUF_SIZE
];

92 
	mpôch_íh_buf
[
PITCH_BUF_SIZE
];

93 
	mœ°_gaö
;

94 
	mœ°_≥riod
;

95 
	mmem_hp_x
[2];

96 
	mœ°g
[
NB_BANDS
];

97 
RNNSèã
 
	m∫n
;

100 
	$compuã_b™d_íîgy
(*
b™dE
, c⁄° 
kiss_f·_˝x
 *
X
) {

101 
i
;

102 
sum
[
NB_BANDS
] = {0};

103 
i
=0;i<
NB_BANDS
-1;i++)

105 
j
;

106 
b™d_size
;

107 
b™d_size
 = (
eb™d5ms
[
i
+1]-eb™d5ms[i])<<
FRAME_SIZE_SHIFT
;

108 
j
=0;j<
b™d_size
;j++) {

109 
tmp
;

110 
‰ac
 = ()
j
/
b™d_size
;

111 
tmp
 = 
	`SQUARE
(
X
[(
eb™d5ms
[
i
]<<
FRAME_SIZE_SHIFT
Ë+ 
j
].
r
);

112 
tmp
 +
	`SQUARE
(
X
[(
eb™d5ms
[
i
]<<
FRAME_SIZE_SHIFT
Ë+ 
j
].i);

113 
sum
[
i
] +(1-
‰ac
)*
tmp
;

114 
sum
[
i
+1] +
‰ac
*
tmp
;

117 
sum
[0] *= 2;

118 
sum
[
NB_BANDS
-1] *= 2;

119 
i
=0;i<
NB_BANDS
;i++)

121 
b™dE
[
i
] = 
sum
[i];

123 
	}
}

125 
	$compuã_b™d_c‹r
(*
b™dE
, c⁄° 
kiss_f·_˝x
 *
X
, c⁄° kiss_f·_˝x *
P
) {

126 
i
;

127 
sum
[
NB_BANDS
] = {0};

128 
i
=0;i<
NB_BANDS
-1;i++)

130 
j
;

131 
b™d_size
;

132 
b™d_size
 = (
eb™d5ms
[
i
+1]-eb™d5ms[i])<<
FRAME_SIZE_SHIFT
;

133 
j
=0;j<
b™d_size
;j++) {

134 
tmp
;

135 
‰ac
 = ()
j
/
b™d_size
;

136 
tmp
 = 
X
[(
eb™d5ms
[
i
]<<
FRAME_SIZE_SHIFT
Ë+ 
j
].
r
 * 
P
[(eband5ms[i]<<FRAME_SIZE_SHIFT) + j].r;

137 
tmp
 +
X
[(
eb™d5ms
[
i
]<<
FRAME_SIZE_SHIFT
Ë+ 
j
].ò* 
P
[(eband5ms[i]<<FRAME_SIZE_SHIFT) + j].i;

138 
sum
[
i
] +(1-
‰ac
)*
tmp
;

139 
sum
[
i
+1] +
‰ac
*
tmp
;

142 
sum
[0] *= 2;

143 
sum
[
NB_BANDS
-1] *= 2;

144 
i
=0;i<
NB_BANDS
;i++)

146 
b™dE
[
i
] = 
sum
[i];

148 
	}
}

150 
	$öãΩ_b™d_gaö
(*
g
, c⁄° *
b™dE
) {

151 
i
;

152 
	`mem£t
(
g
, 0, 
FREQ_SIZE
);

153 
i
=0;i<
NB_BANDS
-1;i++)

155 
j
;

156 
b™d_size
;

157 
b™d_size
 = (
eb™d5ms
[
i
+1]-eb™d5ms[i])<<
FRAME_SIZE_SHIFT
;

158 
j
=0;j<
b™d_size
;j++) {

159 
‰ac
 = ()
j
/
b™d_size
;

160 
g
[(
eb™d5ms
[
i
]<<
FRAME_SIZE_SHIFT
Ë+ 
j
] = (1-
‰ac
)*
b™dE
[i] + frac*bandE[i+1];

163 
	}
}

166 
Comm⁄Sèã
 
	gcomm⁄
;

168 
	$check_öô
() {

169 
i
;

170 i‡(
comm⁄
.
öô
) ;

171 
comm⁄
.
kf·
 = 
	`›us_f·_Æloc_twiddÀs
(2*
FRAME_SIZE
, 
NULL
, NULL, NULL, 0);

172 
i
=0;i<
FRAME_SIZE
;i++)

173 
comm⁄
.
hÆf_wödow
[
i
] = 
	`sö
(.5*
M_PI
*sö(.5*M_PI*(i+.5)/
FRAME_SIZE
) * sin(.5*M_PI*(i+.5)/FRAME_SIZE));

174 
i
=0;i<
NB_BANDS
;i++) {

175 
j
;

176 
j
=0;j<
NB_BANDS
;j++) {

177 
comm⁄
.
d˘_èbÀ
[
i
*
NB_BANDS
 + 
j
] = 
	`cos
((i+.5)*j*
M_PI
/NB_BANDS);

178 i‡(
j
==0Ë
comm⁄
.
d˘_èbÀ
[
i
*
NB_BANDS
 + j] *
	`sqπ
(.5);

181 
comm⁄
.
öô
 = 1;

182 
	}
}

184 
	$d˘
(*
out
, c⁄° *
ö
) {

185 
i
;

186 
	`check_öô
();

187 
i
=0;i<
NB_BANDS
;i++) {

188 
j
;

189 
sum
 = 0;

190 
j
=0;j<
NB_BANDS
;j++) {

191 
sum
 +
ö
[
j
] * 
comm⁄
.
d˘_èbÀ
[j*
NB_BANDS
 + 
i
];

193 
out
[
i
] = 
sum
*
	`sqπ
(2./22);

195 
	}
}

198 
	$id˘
(*
out
, c⁄° *
ö
) {

199 
i
;

200 
	`check_öô
();

201 
i
=0;i<
NB_BANDS
;i++) {

202 
j
;

203 
sum
 = 0;

204 
j
=0;j<
NB_BANDS
;j++) {

205 
sum
 +
ö
[
j
] * 
comm⁄
.
d˘_èbÀ
[
i
*
NB_BANDS
 + j];

207 
out
[
i
] = 
sum
*
	`sqπ
(2./22);

209 
	}
}

212 
	$f‹w¨d_å™sf‹m
(
kiss_f·_˝x
 *
out
, c⁄° *
ö
) {

213 
i
;

214 
kiss_f·_˝x
 
x
[
WINDOW_SIZE
];

215 
kiss_f·_˝x
 
y
[
WINDOW_SIZE
];

216 
	`check_öô
();

217 
i
=0;i<
WINDOW_SIZE
;i++) {

218 
x
[
i
].
r
 = 
ö
[i];

219 
x
[
i
].i = 0;

221 
	`›us_f·
(
comm⁄
.
kf·
, 
x
, 
y
, 0);

222 
i
=0;i<
FREQ_SIZE
;i++) {

223 
out
[
i
] = 
y
[i];

225 
	}
}

227 
	$övî£_å™sf‹m
(*
out
, c⁄° 
kiss_f·_˝x
 *
ö
) {

228 
i
;

229 
kiss_f·_˝x
 
x
[
WINDOW_SIZE
];

230 
kiss_f·_˝x
 
y
[
WINDOW_SIZE
];

231 
	`check_öô
();

232 
i
=0;i<
FREQ_SIZE
;i++) {

233 
x
[
i
] = 
ö
[i];

235 ;
i
<
WINDOW_SIZE
;i++) {

236 
x
[
i
].
r
 = x[
WINDOW_SIZE
 - i].r;

237 
x
[
i
].ò-x[
WINDOW_SIZE
 - i].i;

239 
	`›us_f·
(
comm⁄
.
kf·
, 
x
, 
y
, 0);

241 
out
[0] = 
WINDOW_SIZE
*
y
[0].
r
;

242 
i
=1;i<
WINDOW_SIZE
;i++) {

243 
out
[
i
] = 
WINDOW_SIZE
*
y
[WINDOW_SIZE - i].
r
;

245 
	}
}

247 
	$≠∂y_wödow
(*
x
) {

248 
i
;

249 
	`check_öô
();

250 
i
=0;i<
FRAME_SIZE
;i++) {

251 
x
[
i
] *
comm⁄
.
hÆf_wödow
[i];

252 
x
[
WINDOW_SIZE
 - 1 - 
i
] *
comm⁄
.
hÆf_wödow
[i];

254 
	}
}

256 
	$∫noi£_gë_size
() {

257  (
Díoi£Sèã
);

258 
	}
}

260 
	$∫noi£_gë_‰ame_size
() {

261  
FRAME_SIZE
;

262 
	}
}

264 
	$∫noi£_öô
(
Díoi£Sèã
 *
°
, 
RNNModñ
 *
modñ
) {

265 
	`mem£t
(
°
, 0, (*st));

266 i‡(
modñ
)

267 
°
->
∫n
.
modñ
 = model;

269 
°
->
∫n
.
modñ
 = &
∫noi£_modñ_‹ig
;

270 
°
->
∫n
.
vad_gru_°©e
 = 
	`ˇŒoc
((), st->∫n.
modñ
->
vad_gru_size
);

271 
°
->
∫n
.
noi£_gru_°©e
 = 
	`ˇŒoc
((), st->∫n.
modñ
->
noi£_gru_size
);

272 
°
->
∫n
.
díoi£_gru_°©e
 = 
	`ˇŒoc
((), st->∫n.
modñ
->
díoi£_gru_size
);

274 
	}
}

276 
Díoi£Sèã
 *
	$∫noi£_¸óã
(
RNNModñ
 *
modñ
) {

277 
Díoi£Sèã
 *
°
;

278 
°
 = 
	`mÆloc
(
	`∫noi£_gë_size
());

279 
	`∫noi£_öô
(
°
, 
modñ
);

280  
°
;

281 
	}
}

283 
	$∫noi£_de°roy
(
Díoi£Sèã
 *
°
) {

284 
	`‰ì
(
°
->
∫n
.
vad_gru_°©e
);

285 
	`‰ì
(
°
->
∫n
.
noi£_gru_°©e
);

286 
	`‰ì
(
°
->
∫n
.
díoi£_gru_°©e
);

287 
	`‰ì
(
°
);

288 
	}
}

290 #i‡
TRAINING


291 
	glow∑ss
 = 
FREQ_SIZE
;

292 
	gb™d_Õ
 = 
NB_BANDS
;

295 
	$‰ame_™Æysis
(
Díoi£Sèã
 *
°
, 
kiss_f·_˝x
 *
X
, *
Ex
, c⁄° *
ö
) {

296 
i
;

297 
x
[
WINDOW_SIZE
];

298 
	`RNN_COPY
(
x
, 
°
->
™Æysis_mem
, 
FRAME_SIZE
);

299 
i
=0;i<
FRAME_SIZE
;i++Ë
x
[FRAME_SIZE + i] = 
ö
[i];

300 
	`RNN_COPY
(
°
->
™Æysis_mem
, 
ö
, 
FRAME_SIZE
);

301 
	`≠∂y_wödow
(
x
);

302 
	`f‹w¨d_å™sf‹m
(
X
, 
x
);

303 #i‡
TRAINING


304 
i
=
low∑ss
;i<
FREQ_SIZE
;i++)

305 
X
[
i
].
r
 = X[i].i = 0;

307 
	`compuã_b™d_íîgy
(
Ex
, 
X
);

308 
	}
}

310 
	$compuã_‰ame_„©uªs
(
Díoi£Sèã
 *
°
, 
kiss_f·_˝x
 *
X
, kiss_f·_˝x *
P
,

311 *
Ex
, *
Ep
, *
Exp
, *
„©uªs
, c⁄° *
ö
) {

312 
i
;

313 
E
 = 0;

314 *
˚ps_0
, *
˚ps_1
, *
˚ps_2
;

315 
•ec_v¨übûôy
 = 0;

316 
Ly
[
NB_BANDS
];

317 
p
[
WINDOW_SIZE
];

318 
pôch_buf
[
PITCH_BUF_SIZE
>>1];

319 
pôch_ödex
;

320 
gaö
;

321 *(
¥e
[1]);

322 
tmp
[
NB_BANDS
];

323 
fﬁlow
, 
logMax
;

324 
	`‰ame_™Æysis
(
°
, 
X
, 
Ex
, 
ö
);

325 
	`RNN_MOVE
(
°
->
pôch_buf
, &°->pôch_buf[
FRAME_SIZE
], 
PITCH_BUF_SIZE
-FRAME_SIZE);

326 
	`RNN_COPY
(&
°
->
pôch_buf
[
PITCH_BUF_SIZE
-
FRAME_SIZE
], 
ö
, FRAME_SIZE);

327 
¥e
[0] = &
°
->
pôch_buf
[0];

328 
	`pôch_downßm∂e
(
¥e
, 
pôch_buf
, 
PITCH_BUF_SIZE
, 1);

329 
	`pôch_£¨ch
(
pôch_buf
+(
PITCH_MAX_PERIOD
>>1),Öôch_buf, 
PITCH_FRAME_SIZE
,

330 
PITCH_MAX_PERIOD
-3*
PITCH_MIN_PERIOD
, &
pôch_ödex
);

331 
pôch_ödex
 = 
PITCH_MAX_PERIOD
-pitch_index;

333 
gaö
 = 
	`ªmove_doublög
(
pôch_buf
, 
PITCH_MAX_PERIOD
, 
PITCH_MIN_PERIOD
,

334 
PITCH_FRAME_SIZE
, &
pôch_ödex
, 
°
->
œ°_≥riod
, st->
œ°_gaö
);

335 
°
->
œ°_≥riod
 = 
pôch_ödex
;

336 
°
->
œ°_gaö
 = 
gaö
;

337 
i
=0;i<
WINDOW_SIZE
;i++)

338 
p
[
i
] = 
°
->
pôch_buf
[
PITCH_BUF_SIZE
-
WINDOW_SIZE
-
pôch_ödex
+i];

339 
	`≠∂y_wödow
(
p
);

340 
	`f‹w¨d_å™sf‹m
(
P
, 
p
);

341 
	`compuã_b™d_íîgy
(
Ep
, 
P
);

342 
	`compuã_b™d_c‹r
(
Exp
, 
X
, 
P
);

343 
i
=0;i<
NB_BANDS
;i++Ë
Exp
[i] = Exp[i]/
	`sqπ
(.001+
Ex
[i]*
Ep
[i]);

344 
	`d˘
(
tmp
, 
Exp
);

345 
i
=0;i<
NB_DELTA_CEPS
;i++Ë
„©uªs
[
NB_BANDS
+2*NB_DELTA_CEPS+i] = 
tmp
[i];

346 
„©uªs
[
NB_BANDS
+2*
NB_DELTA_CEPS
] -= 1.3;

347 
„©uªs
[
NB_BANDS
+2*
NB_DELTA_CEPS
+1] -= 0.9;

348 
„©uªs
[
NB_BANDS
+3*
NB_DELTA_CEPS
] = .01*(
pôch_ödex
-300);

349 
logMax
 = -2;

350 
fﬁlow
 = -2;

351 
i
=0;i<
NB_BANDS
;i++) {

352 
Ly
[
i
] = 
	`log10
(1e-2+
Ex
[i]);

353 
Ly
[
i
] = 
	`MAX16
(
logMax
-7, MAX16(
fﬁlow
-1.5, Ly[i]));

354 
logMax
 = 
	`MAX16
÷ogMax, 
Ly
[
i
]);

355 
fﬁlow
 = 
	`MAX16
(fﬁlow-1.5, 
Ly
[
i
]);

356 
E
 +
Ex
[
i
];

358 i‡(!
TRAINING
 && 
E
 < 0.04) {

360 
	`RNN_CLEAR
(
„©uªs
, 
NB_FEATURES
);

363 
	`d˘
(
„©uªs
, 
Ly
);

364 
„©uªs
[0] -= 12;

365 
„©uªs
[1] -= 4;

366 
˚ps_0
 = 
°
->
˚p°øl_mem
[°->
memid
];

367 
˚ps_1
 = (
°
->
memid
 < 1Ë? st->
˚p°øl_mem
[
CEPS_MEM
+st->memid-1] : st->cepstral_mem[st->memid-1];

368 
˚ps_2
 = (
°
->
memid
 < 2Ë? st->
˚p°øl_mem
[
CEPS_MEM
+st->memid-2] : st->cepstral_mem[st->memid-2];

369 
i
=0;i<
NB_BANDS
;i++Ë
˚ps_0
[i] = 
„©uªs
[i];

370 
°
->
memid
++;

371 
i
=0;i<
NB_DELTA_CEPS
;i++) {

372 
„©uªs
[
i
] = 
˚ps_0
[i] + 
˚ps_1
[i] + 
˚ps_2
[i];

373 
„©uªs
[
NB_BANDS
+
i
] = 
˚ps_0
[i] - 
˚ps_2
[i];

374 
„©uªs
[
NB_BANDS
+
NB_DELTA_CEPS
+
i
] = 
˚ps_0
[i] - 2*
˚ps_1
[i] + 
˚ps_2
[i];

377 i‡(
°
->
memid
 =
CEPS_MEM
) st->memid = 0;

378 
i
=0;i<
CEPS_MEM
;i++)

380 
j
;

381 
mödi°
 = 1e15f;

382 
j
=0;j<
CEPS_MEM
;j++)

384 
k
;

385 
di°
=0;

386 
k
=0;k<
NB_BANDS
;k++)

388 
tmp
;

389 
tmp
 = 
°
->
˚p°øl_mem
[
i
][
k
] - st->˚p°øl_mem[
j
][k];

390 
di°
 +
tmp
*tmp;

392 i‡(
j
!=
i
)

393 
mödi°
 = 
	`MIN32
(mödi°, 
di°
);

395 
•ec_v¨übûôy
 +
mödi°
;

397 
„©uªs
[
NB_BANDS
+3*
NB_DELTA_CEPS
+1] = 
•ec_v¨übûôy
/
CEPS_MEM
-2.1;

398  
TRAINING
 && 
E
 < 0.1;

399 
	}
}

401 
	$‰ame_sy¡hesis
(
Díoi£Sèã
 *
°
, *
out
, c⁄° 
kiss_f·_˝x
 *
y
) {

402 
x
[
WINDOW_SIZE
];

403 
i
;

404 
	`övî£_å™sf‹m
(
x
, 
y
);

405 
	`≠∂y_wödow
(
x
);

406 
i
=0;i<
FRAME_SIZE
;i++Ë
out
[i] = 
x
[i] + 
°
->
sy¡hesis_mem
[i];

407 
	`RNN_COPY
(
°
->
sy¡hesis_mem
, &
x
[
FRAME_SIZE
], FRAME_SIZE);

408 
	}
}

410 
	$biquad
(*
y
, 
mem
[2], c⁄° *
x
, c⁄° *
b
, c⁄° *
a
, 
N
) {

411 
i
;

412 
i
=0;i<
N
;i++) {

413 
xi
, 
yi
;

414 
xi
 = 
x
[
i
];

415 
yi
 = 
x
[
i
] + 
mem
[0];

416 
mem
[0] = mem[1] + (
b
[0]*()
xi
 - 
a
[0]*()
yi
);

417 
mem
[1] = (
b
[1]*()
xi
 - 
a
[1]*()
yi
);

418 
y
[
i
] = 
yi
;

420 
	}
}

422 
	$pôch_fûãr
(
kiss_f·_˝x
 *
X
, c⁄° kiss_f·_˝x *
P
, c⁄° *
Ex
, c⁄° *
Ep
,

423 c⁄° *
Exp
, c⁄° *
g
) {

424 
i
;

425 
r
[
NB_BANDS
];

426 
rf
[
FREQ_SIZE
] = {0};

427 
i
=0;i<
NB_BANDS
;i++) {

429 i‡(
Exp
[
i
]>
g
[i]Ë
r
[i] = 1;

430 
r
[
i
] = 
Exp
[i]*(1-
g
[i])/(.001 + g[i]*(1-Exp[i]));

431 
r
[
i
] = 
	`MIN16
(1, 
	`MAX16
(0,Ñ[i]));

433 i‡(
Exp
[
i
]>
g
[i]Ë
r
[i] = 1;

434 
r
[
i
] = 
	`SQUARE
(
Exp
[i])*(1-SQUARE(
g
[i]))/(.001 + SQUARE(g[i])*(1-SQUARE(Exp[i])));

435 
r
[
i
] = 
	`sqπ
(
	`MIN16
(1, 
	`MAX16
(0,Ñ[i])));

437 
r
[
i
] *
	`sqπ
(
Ex
[i]/(1e-8+
Ep
[i]));

439 
	`öãΩ_b™d_gaö
(
rf
, 
r
);

440 
i
=0;i<
FREQ_SIZE
;i++) {

441 
X
[
i
].
r
 +
rf
[i]*
P
[i].r;

442 
X
[
i
].ò+
rf
[i]*
P
[i].i;

444 
√wE
[
NB_BANDS
];

445 
	`compuã_b™d_íîgy
(
√wE
, 
X
);

446 
n‹m
[
NB_BANDS
];

447 
n‹mf
[
FREQ_SIZE
]={0};

448 
i
=0;i<
NB_BANDS
;i++) {

449 
n‹m
[
i
] = 
	`sqπ
(
Ex
[i]/(1e-8+
√wE
[i]));

451 
	`öãΩ_b™d_gaö
(
n‹mf
, 
n‹m
);

452 
i
=0;i<
FREQ_SIZE
;i++) {

453 
X
[
i
].
r
 *
n‹mf
[i];

454 
X
[
i
].ò*
n‹mf
[i];

456 
	}
}

458 
	$∫noi£_¥o˚ss_‰ame
(
Díoi£Sèã
 *
°
, *
out
, c⁄° *
ö
) {

459 
i
;

460 
kiss_f·_˝x
 
X
[
FREQ_SIZE
];

461 
kiss_f·_˝x
 
P
[
WINDOW_SIZE
];

462 
x
[
FRAME_SIZE
];

463 
Ex
[
NB_BANDS
], 
Ep
[NB_BANDS];

464 
Exp
[
NB_BANDS
];

465 
„©uªs
[
NB_FEATURES
];

466 
g
[
NB_BANDS
];

467 
gf
[
FREQ_SIZE
]={1};

468 
vad_¥ob
 = 0;

469 
sûí˚
;

470 c⁄° 
a_hp
[2] = {-1.99599, 0.99600};

471 c⁄° 
b_hp
[2] = {-2, 1};

472 
	`biquad
(
x
, 
°
->
mem_hp_x
, 
ö
, 
b_hp
, 
a_hp
, 
FRAME_SIZE
);

473 
sûí˚
 = 
	`compuã_‰ame_„©uªs
(
°
, 
X
, 
P
, 
Ex
, 
Ep
, 
Exp
, 
„©uªs
, 
x
);

475 i‡(!
sûí˚
) {

476 
	`compuã_∫n
(&
°
->
∫n
, 
g
, &
vad_¥ob
, 
„©uªs
);

477 
	`pôch_fûãr
(
X
, 
P
, 
Ex
, 
Ep
, 
Exp
, 
g
);

478 
i
=0;i<
NB_BANDS
;i++) {

479 
Æpha
 = .6f;

480 
g
[
i
] = 
	`MAX16
(g[i], 
Æpha
*
°
->
œ°g
[i]);

481 
°
->
œ°g
[
i
] = 
g
[i];

483 
	`öãΩ_b™d_gaö
(
gf
, 
g
);

485 
i
=0;i<
FREQ_SIZE
;i++) {

486 
X
[
i
].
r
 *
gf
[i];

487 
X
[
i
].ò*
gf
[i];

492 
	`‰ame_sy¡hesis
(
°
, 
out
, 
X
);

493  
vad_¥ob
;

494 
	}
}

496 #i‡
TRAINING


498 
	$uni_ønd
() {

499  
	`ønd
()/()
RAND_MAX
-.5;

500 
	}
}

502 
	$ønd_ª•
(*
a
, *
b
) {

503 
a
[0] = .75*
	`uni_ønd
();

504 
a
[1] = .75*
	`uni_ønd
();

505 
b
[0] = .75*
	`uni_ønd
();

506 
b
[1] = .75*
	`uni_ønd
();

507 
	}
}

509 
	$maö
(
¨gc
, **
¨gv
) {

510 
i
;

511 
cou¡
=0;

512 c⁄° 
a_hp
[2] = {-1.99599, 0.99600};

513 c⁄° 
b_hp
[2] = {-2, 1};

514 
a_noi£
[2] = {0};

515 
b_noi£
[2] = {0};

516 
a_sig
[2] = {0};

517 
b_sig
[2] = {0};

518 
mem_hp_x
[2]={0};

519 
mem_hp_n
[2]={0};

520 
mem_ª•_x
[2]={0};

521 
mem_ª•_n
[2]={0};

522 
x
[
FRAME_SIZE
];

523 
n
[
FRAME_SIZE
];

524 
xn
[
FRAME_SIZE
];

525 
vad_˙t
=0;

526 
gaö_ch™ge_cou¡
=0;

527 
•ìch_gaö
 = 1, 
noi£_gaö
 = 1;

528 
FILE
 *
f1
, *
f2
;

529 
maxCou¡
;

530 
Díoi£Sèã
 *
°
;

531 
Díoi£Sèã
 *
noi£_°©e
;

532 
Díoi£Sèã
 *
noisy
;

533 
°
 = 
	`∫noi£_¸óã
(
NULL
);

534 
noi£_°©e
 = 
	`∫noi£_¸óã
(
NULL
);

535 
noisy
 = 
	`∫noi£_¸óã
(
NULL
);

536 i‡(
¨gc
!=4) {

537 
	`Ârötf
(
°dîr
, "ußge: %†<•ìch> <noi£> <cou¡>\n", 
¨gv
[0]);

540 
f1
 = 
	`f›í
(
¨gv
[1], "r");

541 
f2
 = 
	`f›í
(
¨gv
[2], "r");

542 
maxCou¡
 = 
	`©oi
(
¨gv
[3]);

543 
i
=0;i<150;i++) {

544 
tmp
[
FRAME_SIZE
];

545 
	`‰ód
(
tmp
, (), 
FRAME_SIZE
, 
f2
);

548 
kiss_f·_˝x
 
X
[
FREQ_SIZE
], 
Y
[FREQ_SIZE], 
N
[FREQ_SIZE], 
P
[
WINDOW_SIZE
];

549 
Ex
[
NB_BANDS
], 
Ey
[NB_BANDS], 
En
[NB_BANDS], 
Ep
[NB_BANDS];

550 
Exp
[
NB_BANDS
];

551 
Ln
[
NB_BANDS
];

552 
„©uªs
[
NB_FEATURES
];

553 
g
[
NB_BANDS
];

554 
tmp
[
FRAME_SIZE
];

555 
vad
=0;

556 
E
=0;

557 i‡(
cou¡
==
maxCou¡
) ;

558 i‡((
cou¡
%1000)==0Ë
	`Ârötf
(
°dîr
, "%d\r", count);

559 i‡(++
gaö_ch™ge_cou¡
 > 2821) {

560 
•ìch_gaö
 = 
	`pow
(10., (-40+(
	`ønd
()%60))/20.);

561 
noi£_gaö
 = 
	`pow
(10., (-30+(
	`ønd
()%50))/20.);

562 i‡(
	`ønd
()%10==0Ë
noi£_gaö
 = 0;

563 
noi£_gaö
 *
•ìch_gaö
;

564 i‡(
	`ønd
()%10==0Ë
•ìch_gaö
 = 0;

565 
gaö_ch™ge_cou¡
 = 0;

566 
	`ønd_ª•
(
a_noi£
, 
b_noi£
);

567 
	`ønd_ª•
(
a_sig
, 
b_sig
);

568 
low∑ss
 = 
FREQ_SIZE
 * 3000./24000. * 
	`pow
(50., 
	`ønd
()/()
RAND_MAX
);

569 
i
=0;i<
NB_BANDS
;i++) {

570 i‡(
eb™d5ms
[
i
]<<
FRAME_SIZE_SHIFT
 > 
low∑ss
) {

571 
b™d_Õ
 = 
i
;

576 i‡(
•ìch_gaö
 != 0) {

577 
	`‰ód
(
tmp
, (), 
FRAME_SIZE
, 
f1
);

578 i‡(
	`„of
(
f1
)) {

579 
	`ªwöd
(
f1
);

580 
	`‰ód
(
tmp
, (), 
FRAME_SIZE
, 
f1
);

582 
i
=0;i<
FRAME_SIZE
;i++Ë
x
[i] = 
•ìch_gaö
*
tmp
[i];

583 
i
=0;i<
FRAME_SIZE
;i++Ë
E
 +
tmp
[i]*()tmp[i];

585 
i
=0;i<
FRAME_SIZE
;i++Ë
x
[i] = 0;

586 
E
 = 0;

588 i‡(
noi£_gaö
!=0) {

589 
	`‰ód
(
tmp
, (), 
FRAME_SIZE
, 
f2
);

590 i‡(
	`„of
(
f2
)) {

591 
	`ªwöd
(
f2
);

592 
	`‰ód
(
tmp
, (), 
FRAME_SIZE
, 
f2
);

594 
i
=0;i<
FRAME_SIZE
;i++Ë
n
[i] = 
noi£_gaö
*
tmp
[i];

596 
i
=0;i<
FRAME_SIZE
;i++Ë
n
[i] = 0;

598 
	`biquad
(
x
, 
mem_hp_x
, x, 
b_hp
, 
a_hp
, 
FRAME_SIZE
);

599 
	`biquad
(
x
, 
mem_ª•_x
, x, 
b_sig
, 
a_sig
, 
FRAME_SIZE
);

600 
	`biquad
(
n
, 
mem_hp_n
,Ç, 
b_hp
, 
a_hp
, 
FRAME_SIZE
);

601 
	`biquad
(
n
, 
mem_ª•_n
,Ç, 
b_noi£
, 
a_noi£
, 
FRAME_SIZE
);

602 
i
=0;i<
FRAME_SIZE
;i++Ë
xn
[i] = 
x
[i] + 
n
[i];

603 i‡(
E
 > 1e9f) {

604 
vad_˙t
=0;

605 } i‡(
E
 > 1e8f) {

606 
vad_˙t
 -= 5;

607 } i‡(
E
 > 1e7f) {

608 
vad_˙t
++;

610 
vad_˙t
+=2;

612 i‡(
vad_˙t
 < 0) vad_cnt = 0;

613 i‡(
vad_˙t
 > 15) vad_cnt = 15;

615 i‡(
vad_˙t
 >10Ë
vad
 = 0;

616 i‡(
vad_˙t
 > 0Ë
vad
 = 0.5f;

617 
vad
 = 1.f;

619 
	`‰ame_™Æysis
(
°
, 
Y
, 
Ey
, 
x
);

620 
	`‰ame_™Æysis
(
noi£_°©e
, 
N
, 
En
, 
n
);

621 
i
=0;i<
NB_BANDS
;i++Ë
Ln
[i] = 
	`log10
(1e-2+
En
[i]);

622 
sûí˚
 = 
	`compuã_‰ame_„©uªs
(
noisy
, 
X
, 
P
, 
Ex
, 
Ep
, 
Exp
, 
„©uªs
, 
xn
);

623 
	`pôch_fûãr
(
X
, 
P
, 
Ex
, 
Ep
, 
Exp
, 
g
);

625 
i
=0;i<
NB_BANDS
;i++) {

626 
g
[
i
] = 
	`sqπ
((
Ey
[i]+1e-3)/(
Ex
[i]+1e-3));

627 i‡(
g
[
i
] > 1) g[i] = 1;

628 i‡(
sûí˚
 || 
i
 > 
b™d_Õ
Ë
g
[i] = -1;

629 i‡(
Ey
[
i
] < 5e-2 && 
Ex
[i] < 5e-2Ë
g
[i] = -1;

630 i‡(
vad
==0 && 
noi£_gaö
==0Ë
g
[
i
] = -1;

632 
cou¡
++;

634 
	`fwrôe
(
„©uªs
, (), 
NB_FEATURES
, 
°dout
);

635 
	`fwrôe
(
g
, (), 
NB_BANDS
, 
°dout
);

636 
	`fwrôe
(
Ln
, (), 
NB_BANDS
, 
°dout
);

637 
	`fwrôe
(&
vad
, (), 1, 
°dout
);

640 
	`Ârötf
(
°dîr
, "m©rix size: %d x %d\n", 
cou¡
, 
NB_FEATURES
 + 2*
NB_BANDS
 + 1);

641 
	`f˛o£
(
f1
);

642 
	`f˛o£
(
f2
);

644 
	}
}

	@rnnoise/src/kiss_fft.c

32 #i‚de‡
SKIP_CONFIG_H


33 #ifde‡
HAVE_CONFIG_H


34 
	~"c⁄fig.h
"

38 
	~"_kiss_f·_guts.h
"

39 
	#CUSTOM_MODES


	)

45 
	$kf_bÊy2
(

46 
kiss_f·_˝x
 * 
Fout
,

47 
m
,

48 
N


51 
kiss_f·_˝x
 * 
Fout2
;

52 
i
;

53 ()
m
;

54 #ifde‡
CUSTOM_MODES


55 i‡(
m
==1)

57 
	`˚…_as£π
(
m
==1);

58 
i
=0;i<
N
;i++)

60 
kiss_f·_˝x
 
t
;

61 
Fout2
 = 
Fout
 + 1;

62 
t
 = *
Fout2
;

63 
	`C_SUB
–*
Fout2
 , *
Fout
 , 
t
 );

64 
	`C_ADDTO
–*
Fout
 , 
t
 );

65 
Fout
 += 2;

70 
›us_vÆ16
 
tw
;

71 
tw
 = 
	`QCONST16
(0.7071067812f, 15);

73 
	`˚…_as£π
(
m
==4);

74 
i
=0;i<
N
;i++)

76 
kiss_f·_˝x
 
t
;

77 
Fout2
 = 
Fout
 + 4;

78 
t
 = 
Fout2
[0];

79 
	`C_SUB
–
Fout2
[0] , 
Fout
[0] , 
t
 );

80 
	`C_ADDTO
–
Fout
[0] , 
t
 );

82 
t
.
r
 = 
	`S_MUL
(
	`ADD32_ovÊw
(
Fout2
[1].r, Fout2[1].
i
), 
tw
);

83 
t
.
i
 = 
	`S_MUL
(
	`SUB32_ovÊw
(
Fout2
[1].i, Fout2[1].
r
), 
tw
);

84 
	`C_SUB
–
Fout2
[1] , 
Fout
[1] , 
t
 );

85 
	`C_ADDTO
–
Fout
[1] , 
t
 );

87 
t
.
r
 = 
Fout2
[2].
i
;

88 
t
.
i
 = -
Fout2
[2].
r
;

89 
	`C_SUB
–
Fout2
[2] , 
Fout
[2] , 
t
 );

90 
	`C_ADDTO
–
Fout
[2] , 
t
 );

92 
t
.
r
 = 
	`S_MUL
(
	`SUB32_ovÊw
(
Fout2
[3].
i
, Fout2[3].r), 
tw
);

93 
t
.
i
 = 
	`S_MUL
(
	`NEG32_ovÊw
(
	`ADD32_ovÊw
(
Fout2
[3].i, Fout2[3].
r
)), 
tw
);

94 
	`C_SUB
–
Fout2
[3] , 
Fout
[3] , 
t
 );

95 
	`C_ADDTO
–
Fout
[3] , 
t
 );

96 
Fout
 += 8;

99 
	}
}

101 
	$kf_bÊy4
(

102 
kiss_f·_˝x
 * 
Fout
,

103 c⁄° 
size_t
 
f°ride
,

104 c⁄° 
kiss_f·_°©e
 *
°
,

105 
m
,

106 
N
,

107 
mm


110 
i
;

112 i‡(
m
==1)

115 
i
=0;i<
N
;i++)

117 
kiss_f·_˝x
 
s¸©ch0
, 
s¸©ch1
;

119 
	`C_SUB
–
s¸©ch0
 , *
Fout
, Fout[2] );

120 
	`C_ADDTO
(*
Fout
, Fout[2]);

121 
	`C_ADD
–
s¸©ch1
 , 
Fout
[1] , Fout[3] );

122 
	`C_SUB
–
Fout
[2], *Fout, 
s¸©ch1
 );

123 
	`C_ADDTO
–*
Fout
 , 
s¸©ch1
 );

124 
	`C_SUB
–
s¸©ch1
 , 
Fout
[1] , Fout[3] );

126 
Fout
[1].
r
 = 
	`ADD32_ovÊw
(
s¸©ch0
.r, 
s¸©ch1
.
i
);

127 
Fout
[1].
i
 = 
	`SUB32_ovÊw
(
s¸©ch0
.i, 
s¸©ch1
.
r
);

128 
Fout
[3].
r
 = 
	`SUB32_ovÊw
(
s¸©ch0
.r, 
s¸©ch1
.
i
);

129 
Fout
[3].
i
 = 
	`ADD32_ovÊw
(
s¸©ch0
.i, 
s¸©ch1
.
r
);

130 
Fout
+=4;

133 
j
;

134 
kiss_f·_˝x
 
s¸©ch
[6];

135 c⁄° 
kiss_twiddÀ_˝x
 *
tw1
,*
tw2
,*
tw3
;

136 c⁄° 
m2
=2*
m
;

137 c⁄° 
m3
=3*
m
;

138 
kiss_f·_˝x
 * 
Fout_beg
 = 
Fout
;

139 
i
=0;i<
N
;i++)

141 
Fout
 = 
Fout_beg
 + 
i
*
mm
;

142 
tw3
 = 
tw2
 = 
tw1
 = 
°
->
twiddÀs
;

144 
j
=0;j<
m
;j++)

146 
	`C_MUL
(
s¸©ch
[0],
Fout
[
m
] , *
tw1
 );

147 
	`C_MUL
(
s¸©ch
[1],
Fout
[
m2
] , *
tw2
 );

148 
	`C_MUL
(
s¸©ch
[2],
Fout
[
m3
] , *
tw3
 );

150 
	`C_SUB
–
s¸©ch
[5] , *
Fout
, scratch[1] );

151 
	`C_ADDTO
(*
Fout
, 
s¸©ch
[1]);

152 
	`C_ADD
–
s¸©ch
[3] , scratch[0] , scratch[2] );

153 
	`C_SUB
–
s¸©ch
[4] , scratch[0] , scratch[2] );

154 
	`C_SUB
–
Fout
[
m2
], *Fout, 
s¸©ch
[3] );

155 
tw1
 +
f°ride
;

156 
tw2
 +
f°ride
*2;

157 
tw3
 +
f°ride
*3;

158 
	`C_ADDTO
–*
Fout
 , 
s¸©ch
[3] );

160 
Fout
[
m
].
r
 = 
	`ADD32_ovÊw
(
s¸©ch
[5].r, s¸©ch[4].
i
);

161 
Fout
[
m
].
i
 = 
	`SUB32_ovÊw
(
s¸©ch
[5].i, s¸©ch[4].
r
);

162 
Fout
[
m3
].
r
 = 
	`SUB32_ovÊw
(
s¸©ch
[5].r, s¸©ch[4].
i
);

163 
Fout
[
m3
].
i
 = 
	`ADD32_ovÊw
(
s¸©ch
[5].i, s¸©ch[4].
r
);

164 ++
Fout
;

168 
	}
}

171 #i‚de‡
RADIX_TWO_ONLY


173 
	$kf_bÊy3
(

174 
kiss_f·_˝x
 * 
Fout
,

175 c⁄° 
size_t
 
f°ride
,

176 c⁄° 
kiss_f·_°©e
 *
°
,

177 
m
,

178 
N
,

179 
mm


182 
i
;

183 
size_t
 
k
;

184 c⁄° 
size_t
 
m2
 = 2*
m
;

185 c⁄° 
kiss_twiddÀ_˝x
 *
tw1
,*
tw2
;

186 
kiss_f·_˝x
 
s¸©ch
[5];

187 
kiss_twiddÀ_˝x
 
ïi3
;

189 
kiss_f·_˝x
 * 
Fout_beg
 = 
Fout
;

190 #ifde‡
FIXED_POINT


192 
ïi3
.
i
 = -28378;

194 
ïi3
 = 
°
->
twiddÀs
[
f°ride
*
m
];

196 
i
=0;i<
N
;i++)

198 
Fout
 = 
Fout_beg
 + 
i
*
mm
;

199 
tw1
=
tw2
=
°
->
twiddÀs
;

201 
k
=
m
;

204 
	`C_MUL
(
s¸©ch
[1],
Fout
[
m
] , *
tw1
);

205 
	`C_MUL
(
s¸©ch
[2],
Fout
[
m2
] , *
tw2
);

207 
	`C_ADD
(
s¸©ch
[3],scratch[1],scratch[2]);

208 
	`C_SUB
(
s¸©ch
[0],scratch[1],scratch[2]);

209 
tw1
 +
f°ride
;

210 
tw2
 +
f°ride
*2;

212 
Fout
[
m
].
r
 = 
	`SUB32_ovÊw
(Fout->r, 
	`HALF_OF
(
s¸©ch
[3].r));

213 
Fout
[
m
].
i
 = 
	`SUB32_ovÊw
(Fout->i, 
	`HALF_OF
(
s¸©ch
[3].i));

215 
	`C_MULBYSCALAR
–
s¸©ch
[0] , 
ïi3
.
i
 );

217 
	`C_ADDTO
(*
Fout
,
s¸©ch
[3]);

219 
Fout
[
m2
].
r
 = 
	`ADD32_ovÊw
(Fout[
m
].r, 
s¸©ch
[0].
i
);

220 
Fout
[
m2
].
i
 = 
	`SUB32_ovÊw
(Fout[
m
].i, 
s¸©ch
[0].
r
);

222 
Fout
[
m
].
r
 = 
	`SUB32_ovÊw
(Fout[m].r, 
s¸©ch
[0].
i
);

223 
Fout
[
m
].
i
 = 
	`ADD32_ovÊw
(Fout[m].i, 
s¸©ch
[0].
r
);

225 ++
Fout
;

226 } --
k
);

228 
	}
}

231 #i‚de‡
OVERRIDE_kf_bÊy5


232 
	$kf_bÊy5
(

233 
kiss_f·_˝x
 * 
Fout
,

234 c⁄° 
size_t
 
f°ride
,

235 c⁄° 
kiss_f·_°©e
 *
°
,

236 
m
,

237 
N
,

238 
mm


241 
kiss_f·_˝x
 *
Fout0
,*
Fout1
,*
Fout2
,*
Fout3
,*
Fout4
;

242 
i
, 
u
;

243 
kiss_f·_˝x
 
s¸©ch
[13];

244 c⁄° 
kiss_twiddÀ_˝x
 *
tw
;

245 
kiss_twiddÀ_˝x
 
ya
,
yb
;

246 
kiss_f·_˝x
 * 
Fout_beg
 = 
Fout
;

248 #ifde‡
FIXED_POINT


249 
ya
.
r
 = 10126;

250 
ya
.
i
 = -31164;

251 
yb
.
r
 = -26510;

252 
yb
.
i
 = -19261;

254 
ya
 = 
°
->
twiddÀs
[
f°ride
*
m
];

255 
yb
 = 
°
->
twiddÀs
[
f°ride
*2*
m
];

257 
tw
=
°
->
twiddÀs
;

259 
i
=0;i<
N
;i++)

261 
Fout
 = 
Fout_beg
 + 
i
*
mm
;

262 
Fout0
=
Fout
;

263 
Fout1
=
Fout0
+
m
;

264 
Fout2
=
Fout0
+2*
m
;

265 
Fout3
=
Fout0
+3*
m
;

266 
Fout4
=
Fout0
+4*
m
;

269  
u
=0; u<
m
; ++u ) {

270 
s¸©ch
[0] = *
Fout0
;

272 
	`C_MUL
(
s¸©ch
[1] ,*
Fout1
, 
tw
[
u
*
f°ride
]);

273 
	`C_MUL
(
s¸©ch
[2] ,*
Fout2
, 
tw
[2*
u
*
f°ride
]);

274 
	`C_MUL
(
s¸©ch
[3] ,*
Fout3
, 
tw
[3*
u
*
f°ride
]);

275 
	`C_MUL
(
s¸©ch
[4] ,*
Fout4
, 
tw
[4*
u
*
f°ride
]);

277 
	`C_ADD
–
s¸©ch
[7],scratch[1],scratch[4]);

278 
	`C_SUB
–
s¸©ch
[10],scratch[1],scratch[4]);

279 
	`C_ADD
–
s¸©ch
[8],scratch[2],scratch[3]);

280 
	`C_SUB
–
s¸©ch
[9],scratch[2],scratch[3]);

282 
Fout0
->
r
 = 
	`ADD32_ovÊw
(Fout0->r, ADD32_ovÊw(
s¸©ch
[7].r, scratch[8].r));

283 
Fout0
->
i
 = 
	`ADD32_ovÊw
(Fout0->i, ADD32_ovÊw(
s¸©ch
[7].i, scratch[8].i));

285 
s¸©ch
[5].
r
 = 
	`ADD32_ovÊw
(s¸©ch[0].r, ADD32_ovÊw(
	`S_MUL
(s¸©ch[7].r,
ya
.r), S_MUL(s¸©ch[8].r,
yb
.r)));

286 
s¸©ch
[5].
i
 = 
	`ADD32_ovÊw
(s¸©ch[0].i, ADD32_ovÊw(
	`S_MUL
(s¸©ch[7].i,
ya
.
r
), S_MUL(s¸©ch[8].i,
yb
.r)));

288 
s¸©ch
[6].
r
 = 
	`ADD32_ovÊw
(
	`S_MUL
(s¸©ch[10].
i
,
ya
.i), S_MUL(s¸©ch[9].i,
yb
.i));

289 
s¸©ch
[6].
i
 = 
	`NEG32_ovÊw
(
	`ADD32_ovÊw
(
	`S_MUL
(s¸©ch[10].
r
,
ya
.i), S_MUL(s¸©ch[9].r,
yb
.i)));

291 
	`C_SUB
(*
Fout1
,
s¸©ch
[5],scratch[6]);

292 
	`C_ADD
(*
Fout4
,
s¸©ch
[5],scratch[6]);

294 
s¸©ch
[11].
r
 = 
	`ADD32_ovÊw
(s¸©ch[0].r, ADD32_ovÊw(
	`S_MUL
(s¸©ch[7].r,
yb
.r), S_MUL(s¸©ch[8].r,
ya
.r)));

295 
s¸©ch
[11].
i
 = 
	`ADD32_ovÊw
(s¸©ch[0].i, ADD32_ovÊw(
	`S_MUL
(s¸©ch[7].i,
yb
.
r
), S_MUL(s¸©ch[8].i,
ya
.r)));

296 
s¸©ch
[12].
r
 = 
	`SUB32_ovÊw
(
	`S_MUL
(s¸©ch[9].
i
,
ya
.i), S_MUL(s¸©ch[10].i,
yb
.i));

297 
s¸©ch
[12].
i
 = 
	`SUB32_ovÊw
(
	`S_MUL
(s¸©ch[10].
r
,
yb
.i), S_MUL(s¸©ch[9].r,
ya
.i));

299 
	`C_ADD
(*
Fout2
,
s¸©ch
[11],scratch[12]);

300 
	`C_SUB
(*
Fout3
,
s¸©ch
[11],scratch[12]);

302 ++
Fout0
;++
Fout1
;++
Fout2
;++
Fout3
;++
Fout4
;

305 
	}
}

312 #ifde‡
CUSTOM_MODES


315 
	$compuã_bôªv_èbÀ
(

316 
Fout
,

317 
›us_öt16
 *
f
,

318 c⁄° 
size_t
 
f°ride
,

319 
ö_°ride
,

320 
›us_öt16
 * 
Á˘‹s
,

321 c⁄° 
kiss_f·_°©e
 *
°


324 c⁄° 
p
=*
Á˘‹s
++;

325 c⁄° 
m
=*
Á˘‹s
++;

328 i‡(
m
==1)

330 
j
;

331 
j
=0;j<
p
;j++)

333 *
f
 = 
Fout
+
j
;

334 
f
 +
f°ride
*
ö_°ride
;

337 
j
;

338 
j
=0;j<
p
;j++)

340 
	`compuã_bôªv_èbÀ
–
Fout
 , 
f
, 
f°ride
*
p
, 
ö_°ride
, 
Á˘‹s
,
°
);

341 
f
 +
f°ride
*
ö_°ride
;

342 
Fout
 +
m
;

345 
	}
}

352 
	$kf_Á˘‹
(
n
,
›us_öt16
 * 
Ácbuf
)

354 
p
=4;

355 
i
;

356 
°ages
=0;

357 
nbak
 = 
n
;

361 
n
 % 
p
) {

362 
p
) {

363 4: 
p
 = 2; ;

364 2: 
p
 = 3; ;

365 : 
p
 += 2; ;

367 i‡(
p
>32000 || (
›us_öt32
Ì*(›us_öt32Ì > 
n
)

368 
p
 = 
n
;

370 
n
 /
p
;

371 #ifde‡
RADIX_TWO_ONLY


372 i‡(
p
!=2 &&Ö != 4)

374 i‡(
p
>5)

379 
Ácbuf
[2*
°ages
] = 
p
;

380 i‡(
p
==2 && 
°ages
 > 1)

382 
Ácbuf
[2*
°ages
] = 4;

383 
Ácbuf
[2] = 2;

385 
°ages
++;

386 } 
n
 > 1);

387 
n
 = 
nbak
;

391 
i
=0;i<
°ages
/2;i++)

393 
tmp
;

394 
tmp
 = 
Ácbuf
[2*
i
];

395 
Ácbuf
[2*
i
] = facbuf[2*(
°ages
-i-1)];

396 
Ácbuf
[2*(
°ages
-
i
-1)] = 
tmp
;

398 
i
=0;i<
°ages
;i++)

400 
n
 /
Ácbuf
[2*
i
];

401 
Ácbuf
[2*
i
+1] = 
n
;

404 
	}
}

406 
	$compuã_twiddÀs
(
kiss_twiddÀ_˝x
 *
twiddÀs
, 
nf·
)

408 
i
;

409 #ifde‡
FIXED_POINT


410 
i
=0;i<
nf·
;++i) {

411 
›us_vÆ32
 
pha£
 = -
i
;

412 
	`kf_˚xp2
(
twiddÀs
+
i
, 
	`DIV32
(
	`SHL32
(
pha£
,17),
nf·
));

415 
i
=0;i<
nf·
;++i) {

416 c⁄° 
pi
=3.14159265358979323846264338327;

417 
pha£
 = ( -2*
pi
 /
nf·
 ) * 
i
;

418 
	`kf_˚xp
(
twiddÀs
+
i
, 
pha£
 );

421 
	}
}

423 
	$›us_f·_Æloc_¨ch_c
(
kiss_f·_°©e
 *
°
) {

424 ()
°
;

426 
	}
}

434 
kiss_f·_°©e
 *
	$›us_f·_Æloc_twiddÀs
(
nf·
,* 
mem
,
size_t
 * 
Ànmem
,

435 c⁄° 
kiss_f·_°©e
 *
ba£
, 
¨ch
)

437 
kiss_f·_°©e
 *
°
=
NULL
;

438 
size_t
 
mem√eded
 = (
kiss_f·_°©e
);

440 i‡–
Ànmem
==
NULL
 ) {

441 
°
 = ( 
kiss_f·_°©e
*)
	`KISS_FFT_MALLOC
–
mem√eded
 );

443 i‡(
mem
 !
NULL
 && *
Ànmem
 >
mem√eded
)

444 
°
 = (
kiss_f·_°©e
*)
mem
;

445 *
Ànmem
 = 
mem√eded
;

447 i‡(
°
) {

448 
›us_öt16
 *
bôªv
;

449 
kiss_twiddÀ_˝x
 *
twiddÀs
;

451 
°
->
nf·
=nfft;

452 #ifde‡
FIXED_POINT


453 
°
->
sˇÀ_shi·
 = 
	`˚…_ûog2
(°->
nf·
);

454 i‡(
°
->
nf·
 =1<<°->
sˇÀ_shi·
)

455 
°
->
sˇÀ
 = 
Q15ONE
;

457 
°
->
sˇÀ
 = (1073741824+°->
nf·
/2)/°->nf·>>(15-°->
sˇÀ_shi·
);

459 
°
->
sˇÀ
 = 1.f/
nf·
;

461 i‡(
ba£
 !
NULL
)

463 
°
->
twiddÀs
 = 
ba£
->twiddles;

464 
°
->
shi·
 = 0;

465 
°
->
shi·
 < 32 && 
nf·
<<°->shi· !
ba£
->nfft)

466 
°
->
shi·
++;

467 i‡(
°
->
shi·
>=32)

468 
Áû
;

470 
°
->
twiddÀs
 =ÅwiddÀ†(
kiss_twiddÀ_˝x
*)
	`KISS_FFT_MALLOC
((kiss_twiddÀ_˝x)*
nf·
);

471 
	`compuã_twiddÀs
(
twiddÀs
, 
nf·
);

472 
°
->
shi·
 = -1;

474 i‡(!
	`kf_Á˘‹
(
nf·
,
°
->
Á˘‹s
))

476 
Áû
;

480 
°
->
bôªv
 = bôªv = (
›us_öt16
*)
	`KISS_FFT_MALLOC
((›us_öt16)*
nf·
);

481 i‡(
°
->
bôªv
==
NULL
)

482 
Áû
;

483 
	`compuã_bôªv_èbÀ
(0, 
bôªv
, 1,1, 
°
->
Á˘‹s
,st);

486 i‡(
	`›us_f·_Æloc_¨ch
(
°
, 
¨ch
))

487 
Áû
;

489  
°
;

490 
Áû
:

491 
	`›us_f·_‰ì
(
°
, 
¨ch
);

492  
NULL
;

493 
	}
}

495 
kiss_f·_°©e
 *
	$›us_f·_Æloc
(
nf·
,* 
mem
,
size_t
 * 
Ànmem
, 
¨ch
)

497  
	`›us_f·_Æloc_twiddÀs
(
nf·
, 
mem
, 
Ànmem
, 
NULL
, 
¨ch
);

498 
	}
}

500 
	$›us_f·_‰ì_¨ch_c
(
kiss_f·_°©e
 *
°
) {

501 ()
°
;

502 
	}
}

504 
	$›us_f·_‰ì
(c⁄° 
kiss_f·_°©e
 *
cfg
, 
¨ch
)

506 i‡(
cfg
)

508 
	`›us_f·_‰ì_¨ch
((
kiss_f·_°©e
 *)
cfg
, 
¨ch
);

509 
	`›us_‰ì
((
›us_öt16
*)
cfg
->
bôªv
);

510 i‡(
cfg
->
shi·
 < 0)

511 
	`›us_‰ì
((
kiss_twiddÀ_˝x
*)
cfg
->
twiddÀs
);

512 
	`›us_‰ì
((
kiss_f·_°©e
*)
cfg
);

514 
	}
}

518 
	$›us_f·_im∂
(c⁄° 
kiss_f·_°©e
 *
°
,
kiss_f·_˝x
 *
fout
)

520 
m2
, 
m
;

521 
p
;

522 
L
;

523 
f°ride
[
MAXFACTORS
];

524 
i
;

525 
shi·
;

528 
shi·
 = 
°
->shift>0 ? st->shift : 0;

530 
f°ride
[0] = 1;

531 
L
=0;

533 
p
 = 
°
->
Á˘‹s
[2*
L
];

534 
m
 = 
°
->
Á˘‹s
[2*
L
+1];

535 
f°ride
[
L
+1] = f°ride[L]*
p
;

536 
L
++;

537 } 
m
!=1);

538 
m
 = 
°
->
Á˘‹s
[2*
L
-1];

539 
i
=
L
-1;i>=0;i--)

541 i‡(
i
!=0)

542 
m2
 = 
°
->
Á˘‹s
[2*
i
-1];

544 
m2
 = 1;

545 
°
->
Á˘‹s
[2*
i
])

548 
	`kf_bÊy2
(
fout
, 
m
, 
f°ride
[
i
]);

551 
	`kf_bÊy4
(
fout
,
f°ride
[
i
]<<
shi·
,
°
,
m
, f°ride[i], 
m2
);

553 #i‚de‡
RADIX_TWO_ONLY


555 
	`kf_bÊy3
(
fout
,
f°ride
[
i
]<<
shi·
,
°
,
m
, f°ride[i], 
m2
);

558 
	`kf_bÊy5
(
fout
,
f°ride
[
i
]<<
shi·
,
°
,
m
, f°ride[i], 
m2
);

562 
m
 = 
m2
;

564 
	}
}

566 
	$›us_f·_c
(c⁄° 
kiss_f·_°©e
 *
°
,c⁄° 
kiss_f·_˝x
 *
fö
,kiss_f·_˝x *
fout
)

568 
i
;

569 
›us_vÆ16
 
sˇÀ
;

570 #ifde‡
FIXED_POINT


573 
sˇÀ_shi·
 = 
°
->scale_shift-1;

575 
sˇÀ
 = 
°
->scale;

577 
	`˚…_as£π2
 (
fö
 !
fout
, "In-place FFTÇot supported");

579 
i
=0;i<
°
->
nf·
;i++)

581 
kiss_f·_˝x
 
x
 = 
fö
[
i
];

582 
fout
[
°
->
bôªv
[
i
]].
r
 = 
	`SHR32
(
	`MULT16_32_Q16
(
sˇÀ
, 
x
.r), 
sˇÀ_shi·
);

583 
fout
[
°
->
bôªv
[
i
]].ò
	`SHR32
(
	`MULT16_32_Q16
(
sˇÀ
, 
x
.i), 
sˇÀ_shi·
);

585 
	`›us_f·_im∂
(
°
, 
fout
);

586 
	}
}

589 
	$›us_if·_c
(c⁄° 
kiss_f·_°©e
 *
°
,c⁄° 
kiss_f·_˝x
 *
fö
,kiss_f·_˝x *
fout
)

591 
i
;

592 
	`˚…_as£π2
 (
fö
 !
fout
, "In-place FFTÇot supported");

594 
i
=0;i<
°
->
nf·
;i++)

595 
fout
[
°
->
bôªv
[
i
]] = 
fö
[i];

596 
i
=0;i<
°
->
nf·
;i++)

597 
fout
[
i
].i = -fout[i].i;

598 
	`›us_f·_im∂
(
°
, 
fout
);

599 
i
=0;i<
°
->
nf·
;i++)

600 
fout
[
i
].i = -fout[i].i;

601 
	}
}

	@rnnoise/src/kiss_fft.h

29 #i‚de‡
KISS_FFT_H


30 
	#KISS_FFT_H


	)

32 
	~<°dlib.h
>

33 
	~<m©h.h
>

34 
	~"¨ch.h
"

36 
	~<°dlib.h
>

37 
	#›us_Æloc
(
x
Ë
	`mÆloc
(x)

	)

38 
	#›us_‰ì
(
x
Ë
	`‰ì
(x)

	)

40 #ifde‡
__˝lu•lus


44 #ifde‡
USE_SIMD


45 
	~<xmmöåö.h
>

46 
	#kiss_f·_sˇœr
 
__m128


	)

47 
	#KISS_FFT_MALLOC
(
nbyãs
Ë
	`memÆign
(16,nbyãs)

	)

49 
	#KISS_FFT_MALLOC
 
›us_Æloc


	)

52 #ifde‡
FIXED_POINT


53 
	~"¨ch.h
"

55 
	#kiss_f·_sˇœr
 
›us_öt32


	)

56 
	#kiss_twiddÀ_sˇœr
 
›us_öt16


	)

60 #i‚de‡
kiss_f·_sˇœr


62 
	#kiss_f·_sˇœr
 

	)

63 
	#kiss_twiddÀ_sˇœr
 

	)

64 
	#KF_SUFFIX
 
_˚…_sögÀ


	)

69 
kiss_f·_sˇœr
 
r
;

70 
kiss_f·_sˇœr
 
i
;

71 }
	tkiss_f·_˝x
;

74 
kiss_twiddÀ_sˇœr
 
r
;

75 
kiss_twiddÀ_sˇœr
 
i
;

76 }
	tkiss_twiddÀ_˝x
;

78 
	#MAXFACTORS
 8

	)

84 
	s¨ch_f·_°©e
{

85 
is_suµ‹ãd
;

86 *
¥iv
;

87 } 
	t¨ch_f·_°©e
;

89 
	skiss_f·_°©e
{

90 
nf·
;

91 
›us_vÆ16
 
sˇÀ
;

92 #ifde‡
FIXED_POINT


93 
sˇÀ_shi·
;

95 
shi·
;

96 
›us_öt16
 
Á˘‹s
[2*
MAXFACTORS
];

97 c⁄° 
›us_öt16
 *
bôªv
;

98 c⁄° 
kiss_twiddÀ_˝x
 *
twiddÀs
;

99 
¨ch_f·_°©e
 *
¨ch_f·
;

100 } 
	tkiss_f·_°©e
;

102 #i‡
deföed
(
HAVE_ARM_NE10
)

103 
	~"¨m/f·_¨m.h
"

131 
kiss_f·_°©e
 *
›us_f·_Æloc_twiddÀs
(
nf·
,* 
mem
,
size_t
 * 
Ànmem
, c⁄° kiss_f·_°©ê*
ba£
, 
¨ch
);

133 
kiss_f·_°©e
 *
›us_f·_Æloc
(
nf·
,* 
mem
,
size_t
 * 
Ànmem
, 
¨ch
);

145 
›us_f·_c
(c⁄° 
kiss_f·_°©e
 *
cfg
,c⁄° 
kiss_f·_˝x
 *
fö
,kiss_f·_˝x *
fout
);

146 
›us_if·_c
(c⁄° 
kiss_f·_°©e
 *
cfg
,c⁄° 
kiss_f·_˝x
 *
fö
,kiss_f·_˝x *
fout
);

148 
›us_f·_im∂
(c⁄° 
kiss_f·_°©e
 *
°
,
kiss_f·_˝x
 *
fout
);

149 
›us_if·_im∂
(c⁄° 
kiss_f·_°©e
 *
°
,
kiss_f·_˝x
 *
fout
);

151 
›us_f·_‰ì
(c⁄° 
kiss_f·_°©e
 *
cfg
, 
¨ch
);

154 
›us_f·_‰ì_¨ch_c
(
kiss_f·_°©e
 *
°
);

155 
›us_f·_Æloc_¨ch_c
(
kiss_f·_°©e
 *
°
);

157 #i‡!
deföed
(
OVERRIDE_OPUS_FFT
)

159 #i‡
deföed
(
OPUS_HAVE_RTCD
Ë&& (deföed(
HAVE_ARM_NE10
))

161 (*c⁄° 
OPUS_FFT_ALLOC_ARCH_IMPL
[
OPUS_ARCHMASK
+1])(

162 
kiss_f·_°©e
 *
°
);

164 
	#›us_f·_Æloc_¨ch
(
_°
, 
¨ch
) \

165 ((*
OPUS_FFT_ALLOC_ARCH_IMPL
[(
¨ch
)&
OPUS_ARCHMASK
])(
_°
))

	)

167 (*c⁄° 
OPUS_FFT_FREE_ARCH_IMPL
[
OPUS_ARCHMASK
+1])(

168 
kiss_f·_°©e
 *
°
);

169 
	#›us_f·_‰ì_¨ch
(
_°
, 
¨ch
) \

170 ((*
OPUS_FFT_FREE_ARCH_IMPL
[(
¨ch
)&
OPUS_ARCHMASK
])(
_°
))

	)

172 (*c⁄° 
OPUS_FFT
[
OPUS_ARCHMASK
+1])(c⁄° 
kiss_f·_°©e
 *
cfg
,

173 c⁄° 
kiss_f·_˝x
 *
fö
, kiss_f·_˝x *
fout
);

174 
	#›us_f·
(
_cfg
, 
_fö
, 
_fout
, 
¨ch
) \

175 ((*
OPUS_FFT
[(
¨ch
)&
OPUS_ARCHMASK
])(
_cfg
, 
_fö
, 
_fout
))

	)

177 (*c⁄° 
OPUS_IFFT
[
OPUS_ARCHMASK
+1])(c⁄° 
kiss_f·_°©e
 *
cfg
,

178 c⁄° 
kiss_f·_˝x
 *
fö
, kiss_f·_˝x *
fout
);

179 
	#›us_if·
(
_cfg
, 
_fö
, 
_fout
, 
¨ch
) \

180 ((*
OPUS_IFFT
[(
¨ch
)&
OPUS_ARCHMASK
])(
_cfg
, 
_fö
, 
_fout
))

	)

184 
	#›us_f·_Æloc_¨ch
(
_°
, 
¨ch
) \

185 (()(
¨ch
), 
	`›us_f·_Æloc_¨ch_c
(
_°
))

	)

187 
	#›us_f·_‰ì_¨ch
(
_°
, 
¨ch
) \

188 (()(
¨ch
), 
	`›us_f·_‰ì_¨ch_c
(
_°
))

	)

190 
	#›us_f·
(
_cfg
, 
_fö
, 
_fout
, 
¨ch
) \

191 (()(
¨ch
), 
	`›us_f·_c
(
_cfg
, 
_fö
, 
_fout
))

	)

193 
	#›us_if·
(
_cfg
, 
_fö
, 
_fout
, 
¨ch
) \

194 (()(
¨ch
), 
	`›us_if·_c
(
_cfg
, 
_fö
, 
_fout
))

	)

199 #ifde‡
__˝lu•lus


	@rnnoise/src/opus_types.h

33 #i‚de‡
OPUS_TYPES_H


34 
	#OPUS_TYPES_H


	)

37 #i‡(
deföed
(
__STDC__
Ë&& __STDC__ && deföed(
__STDC_VERSION__
Ë&& __STDC_VERSION__ >199901LË|| (deföed(
__GNUC__
Ë&& (deföed(
_STDINT_H
Ë|| deföed(
_STDINT_H_
)Ë|| deföed (
HAVE_STDINT_H
))

38 
	~<°döt.h
>

40 
öt16_t
 
	t›us_öt16
;

41 
uöt16_t
 
	t›us_uöt16
;

42 
öt32_t
 
	t›us_öt32
;

43 
uöt32_t
 
	t›us_uöt32
;

44 #ñi‡
deföed
(
_WIN32
)

46 #i‡
deföed
(
__CYGWIN__
)

47 
	~<_G_c⁄fig.h
>

48 
_G_öt32_t
 
	t›us_öt32
;

49 
_G_uöt32_t
 
	t›us_uöt32
;

50 
_G_öt16
 
	t›us_öt16
;

51 
_G_uöt16
 
	t›us_uöt16
;

52 #ñi‡
deföed
(
__MINGW32__
)

53 
	t›us_öt16
;

54 
	t›us_uöt16
;

55 
	t›us_öt32
;

56 
	t›us_uöt32
;

57 #ñi‡
deföed
(
__MWERKS__
)

58 
	t›us_öt32
;

59 
	t›us_uöt32
;

60 
	t›us_öt16
;

61 
	t›us_uöt16
;

64 
__öt32
 
	t›us_öt32
;

65 
	t__öt32
 
	t›us_uöt32
;

66 
__öt16
 
	t›us_öt16
;

67 
	t__öt16
 
	t›us_uöt16
;

70 #ñi‡
deföed
(
__MACOS__
)

72 
	~<sys/ty≥s.h
>

73 
SI¡16
 
	t›us_öt16
;

74 
UI¡16
 
	t›us_uöt16
;

75 
SI¡32
 
	t›us_öt32
;

76 
UI¡32
 
	t›us_uöt32
;

78 #ñi‡(
deföed
(
__APPLE__
Ë&& deföed(
__MACH__
))

80 
	~<sys/ty≥s.h
>

81 
öt16_t
 
	t›us_öt16
;

82 
u_öt16_t
 
	t›us_uöt16
;

83 
öt32_t
 
	t›us_öt32
;

84 
u_öt32_t
 
	t›us_uöt32
;

86 #ñi‡
deföed
(
__BEOS__
)

89 
	~<öây≥s.h
>

90 
öt16
 
	t›us_öt16
;

91 
u_öt16
 
	t›us_uöt16
;

92 
öt32_t
 
	t›us_öt32
;

93 
u_öt32_t
 
	t›us_uöt32
;

95 #ñi‡
deföed
 (
__EMX__
)

98 
	t›us_öt16
;

99 
	t›us_uöt16
;

100 
	t›us_öt32
;

101 
	t›us_uöt32
;

103 #ñi‡
deföed
 (
DJGPP
)

106 
	t›us_öt16
;

107 
	t›us_uöt16
;

108 
	t›us_öt32
;

109 
	t›us_uöt32
;

111 #ñi‡
deföed
(
R5900
)

114 
	t›us_öt32
;

115 
	t›us_uöt32
;

116 
	t›us_öt16
;

117 
	t›us_uöt16
;

119 #ñi‡
deföed
(
__SYMBIAN32__
)

122 sig√d 
	t›us_öt16
;

123 
	t›us_uöt16
;

124 sig√d 
	t›us_öt32
;

125 
	t›us_uöt32
;

127 #ñi‡
deföed
(
CONFIG_TI_C54X
Ë|| deföed (
CONFIG_TI_C55X
)

129 
	t›us_öt16
;

130 
	t›us_uöt16
;

131 
	t›us_öt32
;

132 
	t›us_uöt32
;

134 #ñi‡
deföed
(
CONFIG_TI_C6X
)

136 
	t›us_öt16
;

137 
	t›us_uöt16
;

138 
	t›us_öt32
;

139 
	t›us_uöt32
;

144 
	t›us_öt16
;

145 
	t›us_uöt16
;

146 
	t›us_öt32
;

147 
	t›us_uöt32
;

151 
	#›us_öt
 

	)

152 
	#›us_öt64
 

	)

153 
	#›us_öt8
 sig√d 

	)

155 
	#›us_uöt
 

	)

156 
	#›us_uöt64
 

	)

157 
	#›us_uöt8
 

	)

	@rnnoise/src/pitch.c

34 #ifde‡
HAVE_CONFIG_H


35 
	~"c⁄fig.h
"

38 
	~"pôch.h
"

39 
	~"comm⁄.h
"

43 
	~"˚…_Õc.h
"

44 
	~"m©h.h
"

46 
föd_be°_pôch
(
›us_vÆ32
 *
xc‹r
, 
›us_vÆ16
 *
y
, 
Àn
,

47 
max_pôch
, *
be°_pôch


48 #ifde‡
FIXED_POINT


49 , 
yshi·
, 
›us_vÆ32
 
maxc‹r


53 
	gi
, 
	gj
;

54 
›us_vÆ32
 
	gSyy
=1;

55 
›us_vÆ16
 
	gbe°_num
[2];

56 
›us_vÆ32
 
	gbe°_dí
[2];

57 #ifde‡
FIXED_POINT


58 
	gxshi·
;

60 
	gxshi·
 = 
˚…_ûog2
(
maxc‹r
)-14;

63 
	gbe°_num
[0] = -1;

64 
	gbe°_num
[1] = -1;

65 
	gbe°_dí
[0] = 0;

66 
	gbe°_dí
[1] = 0;

67 
	gbe°_pôch
[0] = 0;

68 
	gbe°_pôch
[1] = 1;

69 
	gj
=0;j<
	gÀn
;j++)

70 
	gSyy
 = 
ADD32
(
Syy
, 
SHR32
(
MULT16_16
(
y
[
j
],y[j]), 
yshi·
));

71 
	gi
=0;i<
	gmax_pôch
;i++)

73 i‡(
	gxc‹r
[
i
]>0)

75 
›us_vÆ16
 
	gnum
;

76 
›us_vÆ32
 
	gxc‹r16
;

77 
	gxc‹r16
 = 
EXTRACT16
(
VSHR32
(
xc‹r
[
i
], 
xshi·
));

78 #i‚de‡
FIXED_POINT


81 
	gxc‹r16
 *= 1e-12f;

83 
	gnum
 = 
MULT16_16_Q15
(
xc‹r16
,xcorr16);

84 i‡(
MULT16_32_Q15
(
num
,
be°_dí
[1]Ë> MULT16_32_Q15(
be°_num
[1],
Syy
))

86 i‡(
MULT16_32_Q15
(
num
,
be°_dí
[0]Ë> MULT16_32_Q15(
be°_num
[0],
Syy
))

88 
	gbe°_num
[1] = 
be°_num
[0];

89 
	gbe°_dí
[1] = 
be°_dí
[0];

90 
	gbe°_pôch
[1] = 
be°_pôch
[0];

91 
	gbe°_num
[0] = 
num
;

92 
	gbe°_dí
[0] = 
Syy
;

93 
	gbe°_pôch
[0] = 
i
;

95 
	gbe°_num
[1] = 
num
;

96 
	gbe°_dí
[1] = 
Syy
;

97 
	gbe°_pôch
[1] = 
i
;

101 
	gSyy
 +
SHR32
(
MULT16_16
(
y
[
i
+
Àn
],y[i+Àn]),
yshi·
) - SHR32(MULT16_16(y[i],y[i]),yshift);

102 
	gSyy
 = 
MAX32
(1, 
Syy
);

106 
	$˚…_fú5
(c⁄° 
›us_vÆ16
 *
x
,

107 c⁄° 
›us_vÆ16
 *
num
,

108 
›us_vÆ16
 *
y
,

109 
N
,

110 
›us_vÆ16
 *
mem
)

112 
i
;

113 
›us_vÆ16
 
num0
, 
num1
, 
num2
, 
num3
, 
num4
;

114 
›us_vÆ32
 
mem0
, 
mem1
, 
mem2
, 
mem3
, 
mem4
;

115 
num0
=
num
[0];

116 
num1
=
num
[1];

117 
num2
=
num
[2];

118 
num3
=
num
[3];

119 
num4
=
num
[4];

120 
mem0
=
mem
[0];

121 
mem1
=
mem
[1];

122 
mem2
=
mem
[2];

123 
mem3
=
mem
[3];

124 
mem4
=
mem
[4];

125 
i
=0;i<
N
;i++)

127 
›us_vÆ32
 
sum
 = 
	`SHL32
(
	`EXTEND32
(
x
[
i
]), 
SIG_SHIFT
);

128 
sum
 = 
	`MAC16_16
(sum,
num0
,
mem0
);

129 
sum
 = 
	`MAC16_16
(sum,
num1
,
mem1
);

130 
sum
 = 
	`MAC16_16
(sum,
num2
,
mem2
);

131 
sum
 = 
	`MAC16_16
(sum,
num3
,
mem3
);

132 
sum
 = 
	`MAC16_16
(sum,
num4
,
mem4
);

133 
mem4
 = 
mem3
;

134 
mem3
 = 
mem2
;

135 
mem2
 = 
mem1
;

136 
mem1
 = 
mem0
;

137 
mem0
 = 
x
[
i
];

138 
y
[
i
] = 
	`ROUND16
(
sum
, 
SIG_SHIFT
);

140 
mem
[0]=
mem0
;

141 
mem
[1]=
mem1
;

142 
mem
[2]=
mem2
;

143 
mem
[3]=
mem3
;

144 
mem
[4]=
mem4
;

145 
	}
}

148 
	$pôch_downßm∂e
(
˚…_sig
 *
x
[], 
›us_vÆ16
 *
x_Õ
,

149 
Àn
, 
C
)

151 
i
;

152 
›us_vÆ32
 
ac
[5];

153 
›us_vÆ16
 
tmp
=
Q15ONE
;

154 
›us_vÆ16
 
Õc
[4], 
mem
[5]={0,0,0,0,0};

155 
›us_vÆ16
 
Õc2
[5];

156 
›us_vÆ16
 
c1
 = 
	`QCONST16
(.8f,15);

157 #ifde‡
FIXED_POINT


158 
shi·
;

159 
›us_vÆ32
 
maxabs
 = 
	`˚…_maxabs32
(
x
[0], 
Àn
);

160 i‡(
C
==2)

162 
›us_vÆ32
 
maxabs_1
 = 
	`˚…_maxabs32
(
x
[1], 
Àn
);

163 
maxabs
 = 
	`MAX32
(maxabs, 
maxabs_1
);

165 i‡(
maxabs
<1)

166 
maxabs
=1;

167 
shi·
 = 
	`˚…_ûog2
(
maxabs
)-10;

168 i‡(
shi·
<0)

169 
shi·
=0;

170 i‡(
C
==2)

171 
shi·
++;

173 
i
=1;i<
Àn
>>1;i++)

174 
x_Õ
[
i
] = 
	`SHR32
(
	`HALF32
(HALF32(
x
[0][(2*i-1)]+x[0][(2*i+1)])+x[0][2*i]), 
shi·
);

175 
x_Õ
[0] = 
	`SHR32
(
	`HALF32
(HALF32(
x
[0][1])+x[0][0]), 
shi·
);

176 i‡(
C
==2)

178 
i
=1;i<
Àn
>>1;i++)

179 
x_Õ
[
i
] +
	`SHR32
(
	`HALF32
(HALF32(
x
[1][(2*i-1)]+x[1][(2*i+1)])+x[1][2*i]), 
shi·
);

180 
x_Õ
[0] +
	`SHR32
(
	`HALF32
(HALF32(
x
[1][1])+x[1][0]), 
shi·
);

183 
	`_˚…_autoc‹r
(
x_Õ
, 
ac
, 
NULL
, 0,

184 4, 
Àn
>>1);

187 #ifde‡
FIXED_POINT


188 
ac
[0] +
	`SHR32
(ac[0],13);

190 
ac
[0] *= 1.0001f;

193 
i
=1;i<=4;i++)

196 #ifde‡
FIXED_POINT


197 
ac
[
i
] -
	`MULT16_32_Q15
(2*i*i,ác[i]);

199 
ac
[
i
] -=ác[i]*(.008f*i)*(.008f*i);

203 
	`_˚…_Õc
(
Õc
, 
ac
, 4);

204 
i
=0;i<4;i++)

206 
tmp
 = 
	`MULT16_16_Q15
(
	`QCONST16
(.9f,15),Åmp);

207 
Õc
[
i
] = 
	`MULT16_16_Q15
÷pc[i], 
tmp
);

210 
Õc2
[0] = 
Õc
[0] + 
	`QCONST16
(.8f,
SIG_SHIFT
);

211 
Õc2
[1] = 
Õc
[1] + 
	`MULT16_16_Q15
(
c1
,lpc[0]);

212 
Õc2
[2] = 
Õc
[2] + 
	`MULT16_16_Q15
(
c1
,lpc[1]);

213 
Õc2
[3] = 
Õc
[3] + 
	`MULT16_16_Q15
(
c1
,lpc[2]);

214 
Õc2
[4] = 
	`MULT16_16_Q15
(
c1
,
Õc
[3]);

215 
	`˚…_fú5
(
x_Õ
, 
Õc2
, x_Õ, 
Àn
>>1, 
mem
);

216 
	}
}

218 
	$˚…_pôch_xc‹r
(c⁄° 
›us_vÆ16
 *
_x
, c⁄° opus_vÆ16 *
_y
,

219 
›us_vÆ32
 *
xc‹r
, 
Àn
, 
max_pôch
)

224 
i
, 
j
;

225 #ifde‡
FIXED_POINT


226 
›us_vÆ32
 
maxc‹r
=1;

228 
i
=0;i<
max_pôch
;i++)

230 
›us_vÆ32
 
sum
 = 0;

231 
j
=0;j<
Àn
;j++)

232 
sum
 = 
	`MAC16_16
(sum, 
_x
[
j
], 
_y
[
i
+j]);

233 
xc‹r
[
i
] = 
sum
;

234 #ifde‡
FIXED_POINT


235 
maxc‹r
 = 
	`MAX32
(maxc‹r, 
sum
);

238 #ifde‡
FIXED_POINT


239  
maxc‹r
;

243 
i
;

247 #ifde‡
FIXED_POINT


248 
›us_vÆ32
 
maxc‹r
=1;

250 
	`˚…_as£π
(
max_pôch
>0);

251 
	`˚…_as£π
((((*)
_x
-(*)
NULL
)&3)==0);

252 
i
=0;i<
max_pôch
-3;i+=4)

254 
›us_vÆ32
 
sum
[4]={0,0,0,0};

255 
	`xc‹r_kî√l
(
_x
, 
_y
+
i
, 
sum
, 
Àn
);

256 
xc‹r
[
i
]=
sum
[0];

257 
xc‹r
[
i
+1]=
sum
[1];

258 
xc‹r
[
i
+2]=
sum
[2];

259 
xc‹r
[
i
+3]=
sum
[3];

260 #ifde‡
FIXED_POINT


261 
sum
[0] = 
	`MAX32
(sum[0], sum[1]);

262 
sum
[2] = 
	`MAX32
(sum[2], sum[3]);

263 
sum
[0] = 
	`MAX32
(sum[0], sum[2]);

264 
maxc‹r
 = 
	`MAX32
(maxc‹r, 
sum
[0]);

268 ;
i
<
max_pôch
;i++)

270 
›us_vÆ32
 
sum
;

271 
sum
 = 
	`˚…_ö√r_¥od
(
_x
, 
_y
+
i
, 
Àn
);

272 
xc‹r
[
i
] = 
sum
;

273 #ifde‡
FIXED_POINT


274 
maxc‹r
 = 
	`MAX32
(maxc‹r, 
sum
);

277 #ifde‡
FIXED_POINT


278  
maxc‹r
;

281 
	}
}

283 
	$pôch_£¨ch
(c⁄° 
›us_vÆ16
 *
x_Õ
, opus_vÆ16 *
y
,

284 
Àn
, 
max_pôch
, *
pôch
)

286 
i
, 
j
;

287 
œg
;

288 
be°_pôch
[2]={0,0};

289 #ifde‡
FIXED_POINT


290 
›us_vÆ32
 
maxc‹r
;

291 
›us_vÆ32
 
xmax
, 
ymax
;

292 
shi·
=0;

294 
off£t
;

296 
	`˚…_as£π
(
Àn
>0);

297 
	`˚…_as£π
(
max_pôch
>0);

298 
œg
 = 
Àn
+
max_pôch
;

300 
›us_vÆ16
 
x_Õ4
[
Àn
>>2];

301 
›us_vÆ16
 
y_Õ4
[
œg
>>2];

302 
›us_vÆ32
 
xc‹r
[
max_pôch
>>1];

305 
j
=0;j<
Àn
>>2;j++)

306 
x_Õ4
[
j
] = 
x_Õ
[2*j];

307 
j
=0;j<
œg
>>2;j++)

308 
y_Õ4
[
j
] = 
y
[2*j];

310 #ifde‡
FIXED_POINT


311 
xmax
 = 
	`˚…_maxabs16
(
x_Õ4
, 
Àn
>>2);

312 
ymax
 = 
	`˚…_maxabs16
(
y_Õ4
, 
œg
>>2);

313 
shi·
 = 
	`˚…_ûog2
(
	`MAX32
(1, MAX32(
xmax
, 
ymax
)))-11;

314 i‡(
shi·
>0)

316 
j
=0;j<
Àn
>>2;j++)

317 
x_Õ4
[
j
] = 
	`SHR16
(x_Õ4[j], 
shi·
);

318 
j
=0;j<
œg
>>2;j++)

319 
y_Õ4
[
j
] = 
	`SHR16
(y_Õ4[j], 
shi·
);

321 
shi·
 *= 2;

323 
shi·
 = 0;

329 #ifde‡
FIXED_POINT


330 
maxc‹r
 =

332 
	`˚…_pôch_xc‹r
(
x_Õ4
, 
y_Õ4
, 
xc‹r
, 
Àn
>>2, 
max_pôch
>>2);

334 
	`föd_be°_pôch
(
xc‹r
, 
y_Õ4
, 
Àn
>>2, 
max_pôch
>>2, 
be°_pôch


335 #ifde‡
FIXED_POINT


336 , 0, 
maxc‹r


341 #ifde‡
FIXED_POINT


342 
maxc‹r
=1;

344 
i
=0;i<
max_pôch
>>1;i++)

346 
›us_vÆ32
 
sum
;

347 
xc‹r
[
i
] = 0;

348 i‡(
	`abs
(
i
-2*
be°_pôch
[0])>2 &&ábs(i-2*best_pitch[1])>2)

350 #ifde‡
FIXED_POINT


351 
sum
 = 0;

352 
j
=0;j<
Àn
>>1;j++)

353 
sum
 +
	`SHR32
(
	`MULT16_16
(
x_Õ
[
j
],
y
[
i
+j]), 
shi·
);

355 
sum
 = 
	`˚…_ö√r_¥od
(
x_Õ
, 
y
+
i
, 
Àn
>>1);

357 
xc‹r
[
i
] = 
	`MAX32
(-1, 
sum
);

358 #ifde‡
FIXED_POINT


359 
maxc‹r
 = 
	`MAX32
(maxc‹r, 
sum
);

362 
	`föd_be°_pôch
(
xc‹r
, 
y
, 
Àn
>>1, 
max_pôch
>>1, 
be°_pôch


363 #ifde‡
FIXED_POINT


364 , 
shi·
+1, 
maxc‹r


369 i‡(
be°_pôch
[0]>0 && be°_pôch[0]<(
max_pôch
>>1)-1)

371 
›us_vÆ32
 
a
, 
b
, 
c
;

372 
a
 = 
xc‹r
[
be°_pôch
[0]-1];

373 
b
 = 
xc‹r
[
be°_pôch
[0]];

374 
c
 = 
xc‹r
[
be°_pôch
[0]+1];

375 i‡((
c
-
a
Ë> 
	`MULT16_32_Q15
(
	`QCONST16
(.7f,15),
b
-a))

376 
off£t
 = 1;

377 i‡((
a
-
c
Ë> 
	`MULT16_32_Q15
(
	`QCONST16
(.7f,15),
b
-c))

378 
off£t
 = -1;

380 
off£t
 = 0;

382 
off£t
 = 0;

384 *
pôch
 = 2*
be°_pôch
[0]-
off£t
;

385 
	}
}

387 #ifde‡
FIXED_POINT


388 
›us_vÆ16
 
	$compuã_pôch_gaö
(
›us_vÆ32
 
xy
, opus_vÆ32 
xx
, opus_vÆ32 
yy
)

390 
›us_vÆ32
 
x2y2
;

391 
sx
, 
sy
, 
shi·
;

392 
›us_vÆ32
 
g
;

393 
›us_vÆ16
 
dí
;

394 i‡(
xy
 =0 || 
xx
 =0 || 
yy
 == 0)

396 
sx
 = 
	`˚…_ûog2
(
xx
)-14;

397 
sy
 = 
	`˚…_ûog2
(
yy
)-14;

398 
shi·
 = 
sx
 + 
sy
;

399 
x2y2
 = 
	`SHR32
(
	`MULT16_16
(
	`VSHR32
(
xx
, 
sx
), VSHR32(
yy
, 
sy
)), 14);

400 i‡(
shi·
 & 1) {

401 i‡(
x2y2
 < 32768)

403 
x2y2
 <<= 1;

404 
shi·
--;

406 
x2y2
 >>= 1;

407 
shi·
++;

410 
dí
 = 
	`˚…_rsqπ_n‹m
(
x2y2
);

411 
g
 = 
	`MULT16_32_Q15
(
dí
, 
xy
);

412 
g
 = 
	`VSHR32
(g, (
shi·
>>1)-1);

413  
	`EXTRACT16
(
	`MIN32
(
g
, 
Q15ONE
));

414 
	}
}

416 
›us_vÆ16
 
	$compuã_pôch_gaö
(
›us_vÆ32
 
xy
, opus_vÆ32 
xx
, opus_vÆ32 
yy
)

418  
xy
/
	`sqπ
(1+
xx
*
yy
);

419 
	}
}

422 c⁄° 
	g£c⁄d_check
[16] = {0, 0, 3, 2, 3, 2, 5, 2, 3, 2, 3, 2, 5, 2, 3, 2};

423 
›us_vÆ16
 
	$ªmove_doublög
(
›us_vÆ16
 *
x
, 
max≥riod
, 
mö≥riod
,

424 
N
, *
T0_
, 
¥ev_≥riod
, 
›us_vÆ16
 
¥ev_gaö
)

426 
k
, 
i
, 
T
, 
T0
;

427 
›us_vÆ16
 
g
, 
g0
;

428 
›us_vÆ16
 
pg
;

429 
›us_vÆ32
 
xy
,
xx
,
yy
,
xy2
;

430 
›us_vÆ32
 
xc‹r
[3];

431 
›us_vÆ32
 
be°_xy
, 
be°_yy
;

432 
off£t
;

433 
mö≥riod0
;

435 
mö≥riod0
 = 
mö≥riod
;

436 
max≥riod
 /= 2;

437 
mö≥riod
 /= 2;

438 *
T0_
 /= 2;

439 
¥ev_≥riod
 /= 2;

440 
N
 /= 2;

441 
x
 +
max≥riod
;

442 i‡(*
T0_
>=
max≥riod
)

443 *
T0_
=
max≥riod
-1;

445 
T
 = 
T0
 = *
T0_
;

446 
›us_vÆ32
 
yy_lookup
[
max≥riod
+1];

447 
	`duÆ_ö√r_¥od
(
x
, x, x-
T0
, 
N
, &
xx
, &
xy
);

448 
yy_lookup
[0] = 
xx
;

449 
yy
=
xx
;

450 
i
=1;i<=
max≥riod
;i++)

452 
yy
 = yy+
	`MULT16_16
(
x
[-
i
],x[-i])-MULT16_16(x[
N
-i],x[N-i]);

453 
yy_lookup
[
i
] = 
	`MAX32
(0, 
yy
);

455 
yy
 = 
yy_lookup
[
T0
];

456 
be°_xy
 = 
xy
;

457 
be°_yy
 = 
yy
;

458 
g
 = 
g0
 = 
	`compuã_pôch_gaö
(
xy
, 
xx
, 
yy
);

460 
k
=2;k<=15;k++)

462 
T1
, 
T1b
;

463 
›us_vÆ16
 
g1
;

464 
›us_vÆ16
 
c⁄t
=0;

465 
›us_vÆ16
 
thªsh
;

466 
T1
 = (2*
T0
+
k
)/(2*k);

467 i‡(
T1
 < 
mö≥riod
)

470 i‡(
k
==2)

472 i‡(
T1
+
T0
>
max≥riod
)

473 
T1b
 = 
T0
;

475 
T1b
 = 
T0
+
T1
;

478 
T1b
 = (2*
£c⁄d_check
[
k
]*
T0
+k)/(2*k);

480 
	`duÆ_ö√r_¥od
(
x
, &x[-
T1
], &x[-
T1b
], 
N
, &
xy
, &
xy2
);

481 
xy
 = 
	`HALF32
(xy + 
xy2
);

482 
yy
 = 
	`HALF32
(
yy_lookup
[
T1
] + yy_lookup[
T1b
]);

483 
g1
 = 
	`compuã_pôch_gaö
(
xy
, 
xx
, 
yy
);

484 i‡(
	`abs
(
T1
-
¥ev_≥riod
)<=1)

485 
c⁄t
 = 
¥ev_gaö
;

486 i‡(
	`abs
(
T1
-
¥ev_≥riod
)<=2 && 5*
k
*k < 
T0
)

487 
c⁄t
 = 
	`HALF16
(
¥ev_gaö
);

489 
c⁄t
 = 0;

490 
thªsh
 = 
	`MAX16
(
	`QCONST16
(.3f,15), 
	`MULT16_16_Q15
(QCONST16(.7f,15),
g0
)-
c⁄t
);

493 i‡(
T1
<3*
mö≥riod
)

494 
thªsh
 = 
	`MAX16
(
	`QCONST16
(.4f,15), 
	`MULT16_16_Q15
(QCONST16(.85f,15),
g0
)-
c⁄t
);

495 i‡(
T1
<2*
mö≥riod
)

496 
thªsh
 = 
	`MAX16
(
	`QCONST16
(.5f,15), 
	`MULT16_16_Q15
(QCONST16(.9f,15),
g0
)-
c⁄t
);

497 i‡(
g1
 > 
thªsh
)

499 
be°_xy
 = 
xy
;

500 
be°_yy
 = 
yy
;

501 
T
 = 
T1
;

502 
g
 = 
g1
;

505 
be°_xy
 = 
	`MAX32
(0, best_xy);

506 i‡(
be°_yy
 <
be°_xy
)

507 
pg
 = 
Q15ONE
;

509 
pg
 = 
be°_xy
/(
be°_yy
+1);

511 
k
=0;k<3;k++)

512 
xc‹r
[
k
] = 
	`˚…_ö√r_¥od
(
x
, x-(
T
+k-1), 
N
);

513 i‡((
xc‹r
[2]-xc‹r[0]Ë> 
	`MULT16_32_Q15
(
	`QCONST16
(.7f,15),xcorr[1]-xcorr[0]))

514 
off£t
 = 1;

515 i‡((
xc‹r
[0]-xc‹r[2]Ë> 
	`MULT16_32_Q15
(
	`QCONST16
(.7f,15),xcorr[1]-xcorr[2]))

516 
off£t
 = -1;

518 
off£t
 = 0;

519 i‡(
pg
 > 
g
)

520 
pg
 = 
g
;

521 *
T0_
 = 2*
T
+
off£t
;

523 i‡(*
T0_
<
mö≥riod0
)

524 *
T0_
=
mö≥riod0
;

525  
pg
;

526 
	}
}

	@rnnoise/src/pitch.h

34 #i‚de‡
PITCH_H


35 
	#PITCH_H


	)

39 
	~"¨ch.h
"

41 
pôch_downßm∂e
(
˚…_sig
 *
x
[], 
›us_vÆ16
 *
x_Õ
,

42 
Àn
, 
C
);

44 
pôch_£¨ch
(c⁄° 
›us_vÆ16
 *
x_Õ
, opus_vÆ16 *
y
,

45 
Àn
, 
max_pôch
, *
pôch
);

47 
›us_vÆ16
 
ªmove_doublög
(›us_vÆ16 *
x
, 
max≥riod
, 
mö≥riod
,

48 
N
, *
T0
, 
¥ev_≥riod
, 
›us_vÆ16
 
¥ev_gaö
);

53 
OPUS_INLINE
 
	$xc‹r_kî√l
(c⁄° 
›us_vÆ16
 * 
x
, c⁄° opus_vÆ16 * 
y
, 
›us_vÆ32
 
sum
[4], 
Àn
)

55 
j
;

56 
›us_vÆ16
 
y_0
, 
y_1
, 
y_2
, 
y_3
;

57 
	`˚…_as£π
(
Àn
>=3);

58 
y_3
=0;

59 
y_0
=*
y
++;

60 
y_1
=*
y
++;

61 
y_2
=*
y
++;

62 
j
=0;j<
Àn
-3;j+=4)

64 
›us_vÆ16
 
tmp
;

65 
tmp
 = *
x
++;

66 
y_3
=*
y
++;

67 
sum
[0] = 
	`MAC16_16
(sum[0],
tmp
,
y_0
);

68 
sum
[1] = 
	`MAC16_16
(sum[1],
tmp
,
y_1
);

69 
sum
[2] = 
	`MAC16_16
(sum[2],
tmp
,
y_2
);

70 
sum
[3] = 
	`MAC16_16
(sum[3],
tmp
,
y_3
);

71 
tmp
=*
x
++;

72 
y_0
=*
y
++;

73 
sum
[0] = 
	`MAC16_16
(sum[0],
tmp
,
y_1
);

74 
sum
[1] = 
	`MAC16_16
(sum[1],
tmp
,
y_2
);

75 
sum
[2] = 
	`MAC16_16
(sum[2],
tmp
,
y_3
);

76 
sum
[3] = 
	`MAC16_16
(sum[3],
tmp
,
y_0
);

77 
tmp
=*
x
++;

78 
y_1
=*
y
++;

79 
sum
[0] = 
	`MAC16_16
(sum[0],
tmp
,
y_2
);

80 
sum
[1] = 
	`MAC16_16
(sum[1],
tmp
,
y_3
);

81 
sum
[2] = 
	`MAC16_16
(sum[2],
tmp
,
y_0
);

82 
sum
[3] = 
	`MAC16_16
(sum[3],
tmp
,
y_1
);

83 
tmp
=*
x
++;

84 
y_2
=*
y
++;

85 
sum
[0] = 
	`MAC16_16
(sum[0],
tmp
,
y_3
);

86 
sum
[1] = 
	`MAC16_16
(sum[1],
tmp
,
y_0
);

87 
sum
[2] = 
	`MAC16_16
(sum[2],
tmp
,
y_1
);

88 
sum
[3] = 
	`MAC16_16
(sum[3],
tmp
,
y_2
);

90 i‡(
j
++<
Àn
)

92 
›us_vÆ16
 
tmp
 = *
x
++;

93 
y_3
=*
y
++;

94 
sum
[0] = 
	`MAC16_16
(sum[0],
tmp
,
y_0
);

95 
sum
[1] = 
	`MAC16_16
(sum[1],
tmp
,
y_1
);

96 
sum
[2] = 
	`MAC16_16
(sum[2],
tmp
,
y_2
);

97 
sum
[3] = 
	`MAC16_16
(sum[3],
tmp
,
y_3
);

99 i‡(
j
++<
Àn
)

101 
›us_vÆ16
 
tmp
=*
x
++;

102 
y_0
=*
y
++;

103 
sum
[0] = 
	`MAC16_16
(sum[0],
tmp
,
y_1
);

104 
sum
[1] = 
	`MAC16_16
(sum[1],
tmp
,
y_2
);

105 
sum
[2] = 
	`MAC16_16
(sum[2],
tmp
,
y_3
);

106 
sum
[3] = 
	`MAC16_16
(sum[3],
tmp
,
y_0
);

108 i‡(
j
<
Àn
)

110 
›us_vÆ16
 
tmp
=*
x
++;

111 
y_1
=*
y
++;

112 
sum
[0] = 
	`MAC16_16
(sum[0],
tmp
,
y_2
);

113 
sum
[1] = 
	`MAC16_16
(sum[1],
tmp
,
y_3
);

114 
sum
[2] = 
	`MAC16_16
(sum[2],
tmp
,
y_0
);

115 
sum
[3] = 
	`MAC16_16
(sum[3],
tmp
,
y_1
);

117 
	}
}

119 
OPUS_INLINE
 
	$duÆ_ö√r_¥od
(c⁄° 
›us_vÆ16
 *
x
, c⁄° opus_vÆ16 *
y01
, c⁄° opus_vÆ16 *
y02
,

120 
N
, 
›us_vÆ32
 *
xy1
, opus_vÆ32 *
xy2
)

122 
i
;

123 
›us_vÆ32
 
xy01
=0;

124 
›us_vÆ32
 
xy02
=0;

125 
i
=0;i<
N
;i++)

127 
xy01
 = 
	`MAC16_16
(xy01, 
x
[
i
], 
y01
[i]);

128 
xy02
 = 
	`MAC16_16
(xy02, 
x
[
i
], 
y02
[i]);

130 *
xy1
 = 
xy01
;

131 *
xy2
 = 
xy02
;

132 
	}
}

136 
OPUS_INLINE
 
›us_vÆ32
 
	$˚…_ö√r_¥od
(c⁄° 
›us_vÆ16
 *
x
,

137 c⁄° 
›us_vÆ16
 *
y
, 
N
)

139 
i
;

140 
›us_vÆ32
 
xy
=0;

141 
i
=0;i<
N
;i++)

142 
xy
 = 
	`MAC16_16
(xy, 
x
[
i
], 
y
[i]);

143  
xy
;

144 
	}
}

146 
˚…_pôch_xc‹r
(c⁄° 
›us_vÆ16
 *
_x
, c⁄° opus_vÆ16 *
_y
,

147 
›us_vÆ32
 *
xc‹r
, 
Àn
, 
max_pôch
);

	@rnnoise/src/rnn.c

28 #ifde‡
HAVE_CONFIG_H


29 
	~"c⁄fig.h
"

32 
	~<m©h.h
>

33 
	~"›us_ty≥s.h
"

34 
	~"comm⁄.h
"

35 
	~"¨ch.h
"

36 
	~"ènsig_èbÀ.h
"

37 
	~"∫n.h
"

38 
	~"∫n_d©a.h
"

39 
	~<°dio.h
>

41 
OPUS_INLINE
 
	$ènsig_≠¥ox
(
x
)

43 
i
;

44 
y
, 
dy
;

45 
sign
=1;

47 i‡(!(
x
<8))

49 i‡(!(
x
>-8))

51 #i‚de‡
FIXED_POINT


53 i‡(
	`˚…_i¢™
(
x
))

56 i‡(
x
<0)

58 
x
=-x;

59 
sign
=-1;

61 
i
 = ()
	`Êo‹
(.5f+25*
x
);

62 
x
 -.04f*
i
;

63 
y
 = 
ènsig_èbÀ
[
i
];

64 
dy
 = 1-
y
*y;

65 
y
 = y + 
x
*
dy
*(1 - y*x);

66  
sign
*
y
;

67 
	}
}

69 
OPUS_INLINE
 
	$sigmoid_≠¥ox
(
x
)

71  .5 + .5*
	`ènsig_≠¥ox
(.5*
x
);

72 
	}
}

74 
OPUS_INLINE
 
	$ªlu
(
x
)

76  
x
 < 0 ? 0 : x;

77 
	}
}

79 
	$compuã_dí£
(c⁄° 
Dí£Layî
 *
œyî
, *
ouçut
, c⁄° *
öput
)

81 
i
, 
j
;

82 
N
, 
M
;

83 
°ride
;

84 
M
 = 
œyî
->
nb_öputs
;

85 
N
 = 
œyî
->
nb_√ur⁄s
;

86 
°ride
 = 
N
;

87 
i
=0;i<
N
;i++)

90 
sum
 = 
œyî
->
büs
[
i
];

91 
j
=0;j<
M
;j++)

92 
sum
 +
œyî
->
öput_weights
[
j
*
°ride
 + 
i
]*
öput
[j];

93 
ouçut
[
i
] = 
WEIGHTS_SCALE
*
sum
;

95 i‡(
œyî
->
a˘iv©i⁄
 =
ACTIVATION_SIGMOID
) {

96 
i
=0;i<
N
;i++)

97 
ouçut
[
i
] = 
	`sigmoid_≠¥ox
(output[i]);

98 } i‡(
œyî
->
a˘iv©i⁄
 =
ACTIVATION_TANH
) {

99 
i
=0;i<
N
;i++)

100 
ouçut
[
i
] = 
	`ènsig_≠¥ox
(output[i]);

101 } i‡(
œyî
->
a˘iv©i⁄
 =
ACTIVATION_RELU
) {

102 
i
=0;i<
N
;i++)

103 
ouçut
[
i
] = 
	`ªlu
(output[i]);

107 
	}
}

109 
	$compuã_gru
(c⁄° 
GRULayî
 *
gru
, *
°©e
, c⁄° *
öput
)

111 
i
, 
j
;

112 
N
, 
M
;

113 
°ride
;

114 
z
[
MAX_NEURONS
];

115 
r
[
MAX_NEURONS
];

116 
h
[
MAX_NEURONS
];

117 
M
 = 
gru
->
nb_öputs
;

118 
N
 = 
gru
->
nb_√ur⁄s
;

119 
°ride
 = 3*
N
;

120 
i
=0;i<
N
;i++)

123 
sum
 = 
gru
->
büs
[
i
];

124 
j
=0;j<
M
;j++)

125 
sum
 +
gru
->
öput_weights
[
j
*
°ride
 + 
i
]*
öput
[j];

126 
j
=0;j<
N
;j++)

127 
sum
 +
gru
->
ªcuºít_weights
[
j
*
°ride
 + 
i
]*
°©e
[j];

128 
z
[
i
] = 
	`sigmoid_≠¥ox
(
WEIGHTS_SCALE
*
sum
);

130 
i
=0;i<
N
;i++)

133 
sum
 = 
gru
->
büs
[
N
 + 
i
];

134 
j
=0;j<
M
;j++)

135 
sum
 +
gru
->
öput_weights
[
N
 + 
j
*
°ride
 + 
i
]*
öput
[j];

136 
j
=0;j<
N
;j++)

137 
sum
 +
gru
->
ªcuºít_weights
[
N
 + 
j
*
°ride
 + 
i
]*
°©e
[j];

138 
r
[
i
] = 
	`sigmoid_≠¥ox
(
WEIGHTS_SCALE
*
sum
);

140 
i
=0;i<
N
;i++)

143 
sum
 = 
gru
->
büs
[2*
N
 + 
i
];

144 
j
=0;j<
M
;j++)

145 
sum
 +
gru
->
öput_weights
[2*
N
 + 
j
*
°ride
 + 
i
]*
öput
[j];

146 
j
=0;j<
N
;j++)

147 
sum
 +
gru
->
ªcuºít_weights
[2*
N
 + 
j
*
°ride
 + 
i
]*
°©e
[j]*
r
[j];

148 i‡(
gru
->
a˘iv©i⁄
 =
ACTIVATION_SIGMOID
Ë
sum
 = 
	`sigmoid_≠¥ox
(
WEIGHTS_SCALE
*sum);

149 i‡(
gru
->
a˘iv©i⁄
 =
ACTIVATION_TANH
Ë
sum
 = 
	`ènsig_≠¥ox
(
WEIGHTS_SCALE
*sum);

150 i‡(
gru
->
a˘iv©i⁄
 =
ACTIVATION_RELU
Ë
sum
 = 
	`ªlu
(
WEIGHTS_SCALE
*sum);

152 
h
[
i
] = 
z
[i]*
°©e
[i] + (1-z[i])*
sum
;

154 
i
=0;i<
N
;i++)

155 
°©e
[
i
] = 
h
[i];

156 
	}
}

158 
	#INPUT_SIZE
 42

	)

160 
	$compuã_∫n
(
RNNSèã
 *
∫n
, *
gaös
, *
vad
, c⁄° *
öput
) {

161 
i
;

162 
dí£_out
[
MAX_NEURONS
];

163 
noi£_öput
[
MAX_NEURONS
*3];

164 
díoi£_öput
[
MAX_NEURONS
*3];

165 
	`compuã_dí£
(
∫n
->
modñ
->
öput_dí£
, 
dí£_out
, 
öput
);

166 
	`compuã_gru
(
∫n
->
modñ
->
vad_gru
,Ñ¬->
vad_gru_°©e
, 
dí£_out
);

167 
	`compuã_dí£
(
∫n
->
modñ
->
vad_ouçut
, 
vad
,Ñ¬->
vad_gru_°©e
);

168 
i
=0;i<
∫n
->
modñ
->
öput_dí£_size
;i++Ë
noi£_öput
[i] = 
dí£_out
[i];

169 
i
=0;i<
∫n
->
modñ
->
vad_gru_size
;i++Ë
noi£_öput
[i+∫n->modñ->
öput_dí£_size
] =Ñ¬->
vad_gru_°©e
[i];

170 
i
=0;i<
INPUT_SIZE
;i++Ë
noi£_öput
[i+
∫n
->
modñ
->
öput_dí£_size
+∫n->modñ->
vad_gru_size
] = 
öput
[i];

171 
	`compuã_gru
(
∫n
->
modñ
->
noi£_gru
,Ñ¬->
noi£_gru_°©e
, 
noi£_öput
);

173 
i
=0;i<
∫n
->
modñ
->
vad_gru_size
;i++Ë
díoi£_öput
[i] =Ñ¬->
vad_gru_°©e
[i];

174 
i
=0;i<
∫n
->
modñ
->
noi£_gru_size
;i++Ë
díoi£_öput
[i+∫n->modñ->
vad_gru_size
] =Ñ¬->
noi£_gru_°©e
[i];

175 
i
=0;i<
INPUT_SIZE
;i++Ë
díoi£_öput
[i+
∫n
->
modñ
->
vad_gru_size
+∫n->modñ->
noi£_gru_size
] = 
öput
[i];

176 
	`compuã_gru
(
∫n
->
modñ
->
díoi£_gru
,Ñ¬->
díoi£_gru_°©e
, 
díoi£_öput
);

177 
	`compuã_dí£
(
∫n
->
modñ
->
díoi£_ouçut
, 
gaös
,Ñ¬->
díoi£_gru_°©e
);

178 
	}
}

	@rnnoise/src/rnn.h

27 #i‚de‡
RNN_H_


28 
	#RNN_H_


	)

30 
	~"∫noi£.h
"

32 
	~"›us_ty≥s.h
"

34 
	#WEIGHTS_SCALE
 (1.f/256)

	)

36 
	#MAX_NEURONS
 128

	)

38 
	#ACTIVATION_TANH
 0

	)

39 
	#ACTIVATION_SIGMOID
 1

	)

40 
	#ACTIVATION_RELU
 2

	)

42 sig√d 
	t∫n_weight
;

45 c⁄° 
∫n_weight
 *
	mbüs
;

46 c⁄° 
∫n_weight
 *
	möput_weights
;

47 
	mnb_öputs
;

48 
	mnb_√ur⁄s
;

49 
	ma˘iv©i⁄
;

50 } 
	tDí£Layî
;

53 c⁄° 
∫n_weight
 *
	mbüs
;

54 c⁄° 
∫n_weight
 *
	möput_weights
;

55 c⁄° 
∫n_weight
 *
	mªcuºít_weights
;

56 
	mnb_öputs
;

57 
	mnb_√ur⁄s
;

58 
	ma˘iv©i⁄
;

59 } 
	tGRULayî
;

61 
RNNSèã
 
	tRNNSèã
;

63 
compuã_dí£
(c⁄° 
Dí£Layî
 *
œyî
, *
ouçut
, c⁄° *
öput
);

65 
compuã_gru
(c⁄° 
GRULayî
 *
gru
, *
°©e
, c⁄° *
öput
);

67 
compuã_∫n
(
RNNSèã
 *
∫n
, *
gaös
, *
vad
, c⁄° *
öput
);

	@rnnoise/src/rnn_data.c

3 #ifde‡
HAVE_CONFIG_H


4 
	~"c⁄fig.h
"

7 
	~"∫n.h
"

8 
	~"∫n_d©a.h
"

10 c⁄° 
∫n_weight
 
	göput_dí£_weights
[1008] = {

139 c⁄° 
∫n_weight
 
	göput_dí£_büs
[24] = {

145 c⁄° 
Dí£Layî
 
	göput_dí£
 = {

146 
öput_dí£_büs
,

147 
öput_dí£_weights
,

148 42, 24, 
ACTIVATION_TANH


151 c⁄° 
∫n_weight
 
	gvad_gru_weights
[1728] = {

370 c⁄° 
∫n_weight
 
	gvad_gru_ªcuºít_weights
[1728] = {

589 c⁄° 
∫n_weight
 
	gvad_gru_büs
[72] = {

601 c⁄° 
GRULayî
 
	gvad_gru
 = {

602 
vad_gru_büs
,

603 
vad_gru_weights
,

604 
vad_gru_ªcuºít_weights
,

605 24, 24, 
ACTIVATION_RELU


608 c⁄° 
∫n_weight
 
	gnoi£_gru_weights
[12960] = {

2231 c⁄° 
∫n_weight
 
	gnoi£_gru_ªcuºít_weights
[6912] = {

3098 c⁄° 
∫n_weight
 
	gnoi£_gru_büs
[144] = {

3119 c⁄° 
GRULayî
 
	gnoi£_gru
 = {

3120 
noi£_gru_büs
,

3121 
noi£_gru_weights
,

3122 
noi£_gru_ªcuºít_weights
,

3123 90, 48, 
ACTIVATION_RELU


3126 c⁄° 
∫n_weight
 
	gdíoi£_gru_weights
[32832] = {

7233 c⁄° 
∫n_weight
 
	gdíoi£_gru_ªcuºít_weights
[27648] = {

10692 c⁄° 
∫n_weight
 
	gdíoi£_gru_büs
[288] = {

10731 c⁄° 
GRULayî
 
	gdíoi£_gru
 = {

10732 
díoi£_gru_büs
,

10733 
díoi£_gru_weights
,

10734 
díoi£_gru_ªcuºít_weights
,

10735 114, 96, 
ACTIVATION_RELU


10738 c⁄° 
∫n_weight
 
	gdíoi£_ouçut_weights
[2112] = {

11005 c⁄° 
∫n_weight
 
	gdíoi£_ouçut_büs
[22] = {

11011 c⁄° 
Dí£Layî
 
	gdíoi£_ouçut
 = {

11012 
díoi£_ouçut_büs
,

11013 
díoi£_ouçut_weights
,

11014 96, 22, 
ACTIVATION_SIGMOID


11017 c⁄° 
∫n_weight
 
	gvad_ouçut_weights
[24] = {

11023 c⁄° 
∫n_weight
 
	gvad_ouçut_büs
[1] = {

11027 c⁄° 
Dí£Layî
 
	gvad_ouçut
 = {

11028 
vad_ouçut_büs
,

11029 
vad_ouçut_weights
,

11030 24, 1, 
ACTIVATION_SIGMOID


11033 c⁄° 
RNNModñ
 
	g∫noi£_modñ_‹ig
 = {

11035 &
öput_dí£
,

11038 &
vad_gru
,

11041 &
noi£_gru
,

11044 &
díoi£_gru
,

11047 &
díoi£_ouçut
,

11050 &
vad_ouçut


	@rnnoise/src/rnn_data.h

1 #i‚de‡
RNN_DATA_H


2 
	#RNN_DATA_H


	)

4 
	~"∫n.h
"

6 
	sRNNModñ
 {

7 
	möput_dí£_size
;

8 c⁄° 
Dí£Layî
 *
	möput_dí£
;

10 
	mvad_gru_size
;

11 c⁄° 
GRULayî
 *
	mvad_gru
;

13 
	mnoi£_gru_size
;

14 c⁄° 
GRULayî
 *
	mnoi£_gru
;

16 
	mdíoi£_gru_size
;

17 c⁄° 
GRULayî
 *
	mdíoi£_gru
;

19 
	mdíoi£_ouçut_size
;

20 c⁄° 
Dí£Layî
 *
	mdíoi£_ouçut
;

22 
	mvad_ouçut_size
;

23 c⁄° 
Dí£Layî
 *
	mvad_ouçut
;

26 
	sRNNSèã
 {

27 c⁄° 
RNNModñ
 *
	mmodñ
;

28 *
	mvad_gru_°©e
;

29 *
	mnoi£_gru_°©e
;

30 *
	mdíoi£_gru_°©e
;

	@rnnoise/src/rnn_reader.c

27 #ifde‡
HAVE_CONFIG_H


28 
	~"c⁄fig.h
"

31 
	~<°dio.h
>

32 
	~<°dlib.h
>

33 
	~<sys/ty≥s.h
>

35 
	~"∫n.h
"

36 
	~"∫n_d©a.h
"

37 
	~"∫noi£.h
"

41 
	#F_ACTIVATION_TANH
 0

	)

42 
	#F_ACTIVATION_SIGMOID
 1

	)

43 
	#F_ACTIVATION_RELU
 2

	)

45 
RNNModñ
 *
	$∫noi£_modñ_‰om_fûe
(
FILE
 *
f
)

47 
i
, 
ö
;

49 i‡(
	`fsˇnf
(
f
, "∫noi£-nu modñ fûêvîsi⁄ %d\n", &
ö
) != 1 || in != 1)

50  
NULL
;

52 
RNNModñ
 *
ªt
 = 
	`ˇŒoc
(1, (RNNModel));

53 i‡(!
ªt
)

54  
NULL
;

56 
	#ALLOC_LAYER
(
ty≥
, 
«me
) \

57 
ty≥
 *
«me
; \

58 
«me
 = 
	`ˇŒoc
(1, (
ty≥
)); \

59 i‡(!
«me
) { \

60 
	`∫noi£_modñ_‰ì
(
ªt
); \

61  
NULL
; \

63 
ªt
->
«me
 = 
	)
name

65 
	`ALLOC_LAYER
(
Dí£Layî
, 
öput_dí£
);

66 
	`ALLOC_LAYER
(
GRULayî
, 
vad_gru
);

67 
	`ALLOC_LAYER
(
GRULayî
, 
noi£_gru
);

68 
	`ALLOC_LAYER
(
GRULayî
, 
díoi£_gru
);

69 
	`ALLOC_LAYER
(
Dí£Layî
, 
díoi£_ouçut
);

70 
	`ALLOC_LAYER
(
Dí£Layî
, 
vad_ouçut
);

72 
	#INPUT_VAL
(
«me
) do { \

73 i‡(
	`fsˇnf
(
f
, "%d", &
ö
) != 1 || in < 0 || in > 128) { \

74 
	`∫noi£_modñ_‰ì
(
ªt
); \

75  
NULL
; \

77 
«me
 = 
ö
; \

78 } 0)

	)

80 
	#INPUT_ACTIVATION
(
«me
) do { \

81 
a˘iv©i⁄
; \

82 
	`INPUT_VAL
(
a˘iv©i⁄
); \

83 
a˘iv©i⁄
) { \

84 
F_ACTIVATION_SIGMOID
: \

85 
«me
 = 
ACTIVATION_SIGMOID
; \

87 
F_ACTIVATION_RELU
: \

88 
«me
 = 
ACTIVATION_RELU
; \

91 
«me
 = 
ACTIVATION_TANH
; \

93 } 0)

	)

95 
	#INPUT_ARRAY
(
«me
, 
Àn
) do { \

96 
∫n_weight
 *
vÆues
 = 
	`mÆloc
((
Àn
) * (rnn_weight)); \

97 i‡(!
vÆues
) { \

98 
	`∫noi£_modñ_‰ì
(
ªt
); \

99  
NULL
; \

101 
«me
 = 
vÆues
; \

102 
i
 = 0; i < (
Àn
); i++) { \

103 i‡(
	`fsˇnf
(
f
, "%d", &
ö
) != 1) { \

104 
	`∫noi£_modñ_‰ì
(
ªt
); \

105  
NULL
; \

107 
vÆues
[
i
] = 
ö
; \

109 } 0)

	)

111 
	#INPUT_DENSE
(
«me
) do { \

112 
	`INPUT_VAL
(
«me
->
nb_öputs
); \

113 
	`INPUT_VAL
(
«me
->
nb_√ur⁄s
); \

114 
ªt
->
«me
 ## 
_size
 =Çame->
nb_√ur⁄s
; \

115 
	`INPUT_ACTIVATION
(
«me
->
a˘iv©i⁄
); \

116 
	`INPUT_ARRAY
(
«me
->
öput_weights
,Çame->
nb_öputs
 *Çame->
nb_√ur⁄s
); \

117 
	`INPUT_ARRAY
(
«me
->
büs
,Çame->
nb_√ur⁄s
); \

118 } 0)

	)

120 
	#INPUT_GRU
(
«me
) do { \

121 
	`INPUT_VAL
(
«me
->
nb_öputs
); \

122 
	`INPUT_VAL
(
«me
->
nb_√ur⁄s
); \

123 
ªt
->
«me
 ## 
_size
 =Çame->
nb_√ur⁄s
; \

124 
	`INPUT_ACTIVATION
(
«me
->
a˘iv©i⁄
); \

125 
	`INPUT_ARRAY
(
«me
->
öput_weights
,Çame->
nb_öputs
 *Çame->
nb_√ur⁄s
 * 3); \

126 
	`INPUT_ARRAY
(
«me
->
ªcuºít_weights
,Çame->
nb_√ur⁄s
 *Çame->nb_neurons * 3); \

127 
	`INPUT_ARRAY
(
«me
->
büs
,Çame->
nb_√ur⁄s
 * 3); \

128 } 0)

	)

130 
	`INPUT_DENSE
(
öput_dí£
);

131 
	`INPUT_GRU
(
vad_gru
);

132 
	`INPUT_GRU
(
noi£_gru
);

133 
	`INPUT_GRU
(
díoi£_gru
);

134 
	`INPUT_DENSE
(
díoi£_ouçut
);

135 
	`INPUT_DENSE
(
vad_ouçut
);

137  
ªt
;

138 
	}
}

140 
	$∫noi£_modñ_‰ì
(
RNNModñ
 *
modñ
)

142 
	#FREE_MAYBE
(
±r
Ëdÿ{ i‡’åË
	`‰ì
’å); } 0)

	)

143 
	#FREE_DENSE
(
«me
) do { \

144 i‡(
modñ
->
«me
) { \

145 
	`‰ì
((*Ë
modñ
->
«me
->
öput_weights
); \

146 
	`‰ì
((*Ë
modñ
->
«me
->
büs
); \

147 
	`‰ì
((*Ë
modñ
->
«me
); \

149 } 0)

	)

150 
	#FREE_GRU
(
«me
) do { \

151 i‡(
modñ
->
«me
) { \

152 
	`‰ì
((*Ë
modñ
->
«me
->
öput_weights
); \

153 
	`‰ì
((*Ë
modñ
->
«me
->
ªcuºít_weights
); \

154 
	`‰ì
((*Ë
modñ
->
«me
->
büs
); \

155 
	`‰ì
((*Ë
modñ
->
«me
); \

157 } 0)

	)

159 i‡(!
modñ
)

161 
	`FREE_DENSE
(
öput_dí£
);

162 
	`FREE_GRU
(
vad_gru
);

163 
	`FREE_GRU
(
noi£_gru
);

164 
	`FREE_GRU
(
díoi£_gru
);

165 
	`FREE_DENSE
(
díoi£_ouçut
);

166 
	`FREE_DENSE
(
vad_ouçut
);

167 
	`‰ì
(
modñ
);

168 
	}
}

	@rnnoise/src/tansig_table.h

3 c⁄° 
	gènsig_èbÀ
[201] = {

	@/usr/include/assert.h

22 #ifdef 
_ASSERT_H


24 #unde‡
_ASSERT_H


25 #unde‡
as£π


26 #unde‡
__ASSERT_VOID_CAST


28 #ifdef 
__USE_GNU


29 #unde‡
as£π_≥º‹


34 
	#_ASSERT_H
 1

	)

35 
	~<„©uªs.h
>

37 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

38 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

40 
	#__ASSERT_VOID_CAST
 ()

	)

48 #ifdef 
NDEBUG


50 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

58 #ifdef 
__USE_GNU


59 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

64 #i‚de‡
_ASSERT_H_DECLS


65 
	#_ASSERT_H_DECLS


	)

66 
__BEGIN_DECLS


69 
	$__as£π_Áû
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
,

70 
__löe
, c⁄° *
__fun˘i⁄
)

71 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

74 
	$__as£π_≥º‹_Áû
 (
__î∫um
, c⁄° *
__fûe
,

75 
__löe
, c⁄° *
__fun˘i⁄
)

76 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

81 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

82 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

85 
__END_DECLS


91 #i‡
deföed
 
__˝lu•lus


92 
	#as£π
(
ex¥
) \

93 (
°©ic_ˇ°
 <
boﬁ
> (
ex¥
) \

95 : 
	`__as£π_Áû
 (#ex¥, 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

96 #ñi‡!
deföed
 
__GNUC__
 || deföed 
__STRICT_ANSI__


97 
	#as£π
(
ex¥
) \

98 ((
ex¥
) \

99 ? 
	`__ASSERT_VOID_CAST
 (0) \

100 : 
	`__as£π_Áû
 (#ex¥, 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

107 
	#as£π
(
ex¥
) \

108 ((Ë ((
ex¥
Ë? 1 : 0), 
	`__exãnsi⁄__
 ({ \

109 i‡(
ex¥
) \

112 
	`__as£π_Áû
 (#ex¥, 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
); \

113 
	}
}))

	)

116 #ifdef 
__USE_GNU


117 
	#as£π_≥º‹
(
î∫um
) \

118 (!(
î∫um
) \

119 ? 
	`__ASSERT_VOID_CAST
 (0) \

120 : 
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

128 #i‡
deföed
 
__˝lu•lus
 ? 
__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

129 
	#__ASSERT_FUNCTION
 
__exãnsi⁄__
 
__PRETTY_FUNCTION__


	)

131 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

132 
	#__ASSERT_FUNCTION
 
__func__


	)

134 
	#__ASSERT_FUNCTION
 ((c⁄° *Ë0)

	)

141 #i‡
deföed
 
__USE_ISOC11
 && !deföed 
__˝lu•lus


142 #unde‡
°©ic_as£π


143 
	#°©ic_as£π
 
_Sètic_as£π


	)

	@/usr/include/inttypes.h

22 #i‚de‡
_INTTYPES_H


23 
	#_INTTYPES_H
 1

	)

25 
	~<„©uªs.h
>

27 
	~<°döt.h
>

30 #i‚de‡
____gwch¨_t_deföed


31 #ifde‡
__˝lu•lus


32 
	#__gwch¨_t
 
wch¨_t


	)

33 #ñi‡
deföed
 
__WCHAR_TYPE__


34 
__WCHAR_TYPE__
 
	t__gwch¨_t
;

36 
	#__√ed_wch¨_t


	)

37 
	~<°ddef.h
>

38 
wch¨_t
 
	t__gwch¨_t
;

40 
	#____gwch¨_t_deföed
 1

	)

43 #i‡
__WORDSIZE
 == 64

44 
	#__PRI64_PREFIX
 "l"

	)

45 
	#__PRIPTR_PREFIX
 "l"

	)

47 
	#__PRI64_PREFIX
 "Œ"

	)

48 
	#__PRIPTR_PREFIX


	)

54 
	#PRId8
 "d"

	)

55 
	#PRId16
 "d"

	)

56 
	#PRId32
 "d"

	)

57 
	#PRId64
 
__PRI64_PREFIX
 "d"

	)

59 
	#PRIdLEAST8
 "d"

	)

60 
	#PRIdLEAST16
 "d"

	)

61 
	#PRIdLEAST32
 "d"

	)

62 
	#PRIdLEAST64
 
__PRI64_PREFIX
 "d"

	)

64 
	#PRIdFAST8
 "d"

	)

65 
	#PRIdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

66 
	#PRIdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

67 
	#PRIdFAST64
 
__PRI64_PREFIX
 "d"

	)

70 
	#PRIi8
 "i"

	)

71 
	#PRIi16
 "i"

	)

72 
	#PRIi32
 "i"

	)

73 
	#PRIi64
 
__PRI64_PREFIX
 "i"

	)

75 
	#PRIiLEAST8
 "i"

	)

76 
	#PRIiLEAST16
 "i"

	)

77 
	#PRIiLEAST32
 "i"

	)

78 
	#PRIiLEAST64
 
__PRI64_PREFIX
 "i"

	)

80 
	#PRIiFAST8
 "i"

	)

81 
	#PRIiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

82 
	#PRIiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

83 
	#PRIiFAST64
 
__PRI64_PREFIX
 "i"

	)

86 
	#PRIo8
 "o"

	)

87 
	#PRIo16
 "o"

	)

88 
	#PRIo32
 "o"

	)

89 
	#PRIo64
 
__PRI64_PREFIX
 "o"

	)

91 
	#PRIoLEAST8
 "o"

	)

92 
	#PRIoLEAST16
 "o"

	)

93 
	#PRIoLEAST32
 "o"

	)

94 
	#PRIoLEAST64
 
__PRI64_PREFIX
 "o"

	)

96 
	#PRIoFAST8
 "o"

	)

97 
	#PRIoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

98 
	#PRIoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

99 
	#PRIoFAST64
 
__PRI64_PREFIX
 "o"

	)

102 
	#PRIu8
 "u"

	)

103 
	#PRIu16
 "u"

	)

104 
	#PRIu32
 "u"

	)

105 
	#PRIu64
 
__PRI64_PREFIX
 "u"

	)

107 
	#PRIuLEAST8
 "u"

	)

108 
	#PRIuLEAST16
 "u"

	)

109 
	#PRIuLEAST32
 "u"

	)

110 
	#PRIuLEAST64
 
__PRI64_PREFIX
 "u"

	)

112 
	#PRIuFAST8
 "u"

	)

113 
	#PRIuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

114 
	#PRIuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

115 
	#PRIuFAST64
 
__PRI64_PREFIX
 "u"

	)

118 
	#PRIx8
 "x"

	)

119 
	#PRIx16
 "x"

	)

120 
	#PRIx32
 "x"

	)

121 
	#PRIx64
 
__PRI64_PREFIX
 "x"

	)

123 
	#PRIxLEAST8
 "x"

	)

124 
	#PRIxLEAST16
 "x"

	)

125 
	#PRIxLEAST32
 "x"

	)

126 
	#PRIxLEAST64
 
__PRI64_PREFIX
 "x"

	)

128 
	#PRIxFAST8
 "x"

	)

129 
	#PRIxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

130 
	#PRIxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

131 
	#PRIxFAST64
 
__PRI64_PREFIX
 "x"

	)

134 
	#PRIX8
 "X"

	)

135 
	#PRIX16
 "X"

	)

136 
	#PRIX32
 "X"

	)

137 
	#PRIX64
 
__PRI64_PREFIX
 "X"

	)

139 
	#PRIXLEAST8
 "X"

	)

140 
	#PRIXLEAST16
 "X"

	)

141 
	#PRIXLEAST32
 "X"

	)

142 
	#PRIXLEAST64
 
__PRI64_PREFIX
 "X"

	)

144 
	#PRIXFAST8
 "X"

	)

145 
	#PRIXFAST16
 
__PRIPTR_PREFIX
 "X"

	)

146 
	#PRIXFAST32
 
__PRIPTR_PREFIX
 "X"

	)

147 
	#PRIXFAST64
 
__PRI64_PREFIX
 "X"

	)

151 
	#PRIdMAX
 
__PRI64_PREFIX
 "d"

	)

152 
	#PRIiMAX
 
__PRI64_PREFIX
 "i"

	)

153 
	#PRIoMAX
 
__PRI64_PREFIX
 "o"

	)

154 
	#PRIuMAX
 
__PRI64_PREFIX
 "u"

	)

155 
	#PRIxMAX
 
__PRI64_PREFIX
 "x"

	)

156 
	#PRIXMAX
 
__PRI64_PREFIX
 "X"

	)

160 
	#PRIdPTR
 
__PRIPTR_PREFIX
 "d"

	)

161 
	#PRIiPTR
 
__PRIPTR_PREFIX
 "i"

	)

162 
	#PRIoPTR
 
__PRIPTR_PREFIX
 "o"

	)

163 
	#PRIuPTR
 
__PRIPTR_PREFIX
 "u"

	)

164 
	#PRIxPTR
 
__PRIPTR_PREFIX
 "x"

	)

165 
	#PRIXPTR
 
__PRIPTR_PREFIX
 "X"

	)

171 
	#SCNd8
 "hhd"

	)

172 
	#SCNd16
 "hd"

	)

173 
	#SCNd32
 "d"

	)

174 
	#SCNd64
 
__PRI64_PREFIX
 "d"

	)

176 
	#SCNdLEAST8
 "hhd"

	)

177 
	#SCNdLEAST16
 "hd"

	)

178 
	#SCNdLEAST32
 "d"

	)

179 
	#SCNdLEAST64
 
__PRI64_PREFIX
 "d"

	)

181 
	#SCNdFAST8
 "hhd"

	)

182 
	#SCNdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

183 
	#SCNdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

184 
	#SCNdFAST64
 
__PRI64_PREFIX
 "d"

	)

187 
	#SCNi8
 "hhi"

	)

188 
	#SCNi16
 "hi"

	)

189 
	#SCNi32
 "i"

	)

190 
	#SCNi64
 
__PRI64_PREFIX
 "i"

	)

192 
	#SCNiLEAST8
 "hhi"

	)

193 
	#SCNiLEAST16
 "hi"

	)

194 
	#SCNiLEAST32
 "i"

	)

195 
	#SCNiLEAST64
 
__PRI64_PREFIX
 "i"

	)

197 
	#SCNiFAST8
 "hhi"

	)

198 
	#SCNiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

199 
	#SCNiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

200 
	#SCNiFAST64
 
__PRI64_PREFIX
 "i"

	)

203 
	#SCNu8
 "hhu"

	)

204 
	#SCNu16
 "hu"

	)

205 
	#SCNu32
 "u"

	)

206 
	#SCNu64
 
__PRI64_PREFIX
 "u"

	)

208 
	#SCNuLEAST8
 "hhu"

	)

209 
	#SCNuLEAST16
 "hu"

	)

210 
	#SCNuLEAST32
 "u"

	)

211 
	#SCNuLEAST64
 
__PRI64_PREFIX
 "u"

	)

213 
	#SCNuFAST8
 "hhu"

	)

214 
	#SCNuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

215 
	#SCNuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

216 
	#SCNuFAST64
 
__PRI64_PREFIX
 "u"

	)

219 
	#SCNo8
 "hho"

	)

220 
	#SCNo16
 "ho"

	)

221 
	#SCNo32
 "o"

	)

222 
	#SCNo64
 
__PRI64_PREFIX
 "o"

	)

224 
	#SCNoLEAST8
 "hho"

	)

225 
	#SCNoLEAST16
 "ho"

	)

226 
	#SCNoLEAST32
 "o"

	)

227 
	#SCNoLEAST64
 
__PRI64_PREFIX
 "o"

	)

229 
	#SCNoFAST8
 "hho"

	)

230 
	#SCNoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

231 
	#SCNoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

232 
	#SCNoFAST64
 
__PRI64_PREFIX
 "o"

	)

235 
	#SCNx8
 "hhx"

	)

236 
	#SCNx16
 "hx"

	)

237 
	#SCNx32
 "x"

	)

238 
	#SCNx64
 
__PRI64_PREFIX
 "x"

	)

240 
	#SCNxLEAST8
 "hhx"

	)

241 
	#SCNxLEAST16
 "hx"

	)

242 
	#SCNxLEAST32
 "x"

	)

243 
	#SCNxLEAST64
 
__PRI64_PREFIX
 "x"

	)

245 
	#SCNxFAST8
 "hhx"

	)

246 
	#SCNxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

247 
	#SCNxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

248 
	#SCNxFAST64
 
__PRI64_PREFIX
 "x"

	)

252 
	#SCNdMAX
 
__PRI64_PREFIX
 "d"

	)

253 
	#SCNiMAX
 
__PRI64_PREFIX
 "i"

	)

254 
	#SCNoMAX
 
__PRI64_PREFIX
 "o"

	)

255 
	#SCNuMAX
 
__PRI64_PREFIX
 "u"

	)

256 
	#SCNxMAX
 
__PRI64_PREFIX
 "x"

	)

259 
	#SCNdPTR
 
__PRIPTR_PREFIX
 "d"

	)

260 
	#SCNiPTR
 
__PRIPTR_PREFIX
 "i"

	)

261 
	#SCNoPTR
 
__PRIPTR_PREFIX
 "o"

	)

262 
	#SCNuPTR
 
__PRIPTR_PREFIX
 "u"

	)

263 
	#SCNxPTR
 
__PRIPTR_PREFIX
 "x"

	)

266 
	g__BEGIN_DECLS


268 #i‡
__WORDSIZE
 == 64

273 
	mquŸ
;

274 
	mªm
;

275 } 
	timaxdiv_t
;

282 
__exãnsi⁄__
 
	mquŸ
;

283 
__exãnsi⁄__
 
	mªm
;

284 } 
	timaxdiv_t
;

290 
ötmax_t
 
	$imaxabs
 (
ötmax_t
 
__n
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

293 
imaxdiv_t
 
	$imaxdiv
 (
ötmax_t
 
__numî
, i¡max_à
__díom
)

294 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

297 
ötmax_t
 
	$°πoimax
 (c⁄° *
__ª°ri˘
 
__≈å
,

298 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

301 
uötmax_t
 
	$°πoumax
 (c⁄° *
__ª°ri˘
 
__≈å
,

302 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

305 
ötmax_t
 
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

306 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

307 
__THROW
;

310 
uötmax_t
 
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

311 
__gwch¨_t
 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
)

312 
__THROW
;

314 #ifde‡
__USE_EXTERN_INLINES


316 #i‡
__WORDSIZE
 == 64

318 
	$__°πﬁ_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

319 **
__ª°ri˘
 
__íd±r
,

320 
__ba£
, 
__group
)

321 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

323 
__exã∫_ölöe
 
ötmax_t


324 
	`__NTH
 (
	$°πoimax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

325 
ba£
))

327  
	`__°πﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

328 
	}
}

330 
	$__°πoul_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

331 ** 
__ª°ri˘
 
__íd±r
,

332 
__ba£
, 
__group
)

333 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

335 
__exã∫_ölöe
 
uötmax_t


336 
	`__NTH
 (
	$°πoumax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

337 
ba£
))

339  
	`__°πoul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

340 
	}
}

342 
	$__wc°ﬁ_öã∫Æ
 (c⁄° 
__gwch¨_t
 * 
__ª°ri˘
 
__≈å
,

343 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

344 
__ba£
, 
__group
)

345 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

347 
__exã∫_ölöe
 
ötmax_t


348 
	`__NTH
 (
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

349 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

351  
	`__wc°ﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

352 
	}
}

354 
	$__wc°oul_öã∫Æ
 (c⁄° 
__gwch¨_t
 *

355 
__ª°ri˘
 
__≈å
,

356 
__gwch¨_t
 **

357 
__ª°ri˘
 
__íd±r
,

358 
__ba£
, 
__group
)

359 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

361 
__exã∫_ölöe
 
uötmax_t


362 
	`__NTH
 (
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

363 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

365  
	`__wc°oul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

366 
	}
}

370 
__exãnsi⁄__


371 
	$__°πﬁl_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

372 **
__ª°ri˘
 
__íd±r
,

373 
__ba£
, 
__group
)

374 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

376 
__exã∫_ölöe
 
ötmax_t


377 
	`__NTH
 (
	$°πoimax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

378 
ba£
))

380  
	`__°πﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

381 
	}
}

383 
__exãnsi⁄__


384 
	$__°πouŒ_öã∫Æ
 (const *

385 
__ª°ri˘
 
__≈å
,

387 
__ª°ri˘
 
__íd±r
,

388 
__ba£
,

389 
__group
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

392 
__exã∫_ölöe
 
uötmax_t


393 
	`__NTH
 (
	$°πoumax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

394 
ba£
))

396  
	`__°πouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

397 
	}
}

399 
__exãnsi⁄__


400 
	$__wc°ﬁl_öã∫Æ
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

401 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

402 
__ba£
, 
__group
)

403 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

405 
__exã∫_ölöe
 
ötmax_t


406 
	`__NTH
 (
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

407 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

409  
	`__wc°ﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

410 
	}
}

413 
__exãnsi⁄__


414 
	$__wc°ouŒ_öã∫Æ
 (c⁄° 
__gwch¨_t
 *

415 
__ª°ri˘
 
__≈å
,

416 
__gwch¨_t
 **

417 
__ª°ri˘
 
__íd±r
,

418 
__ba£
,

419 
__group
)

420 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

422 
__exã∫_ölöe
 
uötmax_t


423 
	`__NTH
 (
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

424 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

426  
	`__wc°ouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

427 
	}
}

432 
	g__END_DECLS


	@/usr/include/limits.h

22 #i‚de‡
_LIBC_LIMITS_H_


23 
	#_LIBC_LIMITS_H_
 1

	)

25 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

26 
	~<bôs/libc-hódî-°¨t.h
>

32 
	#MB_LEN_MAX
 16

	)

37 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

42 #i‚de‡
_LIMITS_H


43 
	#_LIMITS_H
 1

	)

45 
	~<bôs/w‹dsize.h
>

54 
	#CHAR_BIT
 8

	)

57 
	#SCHAR_MIN
 (-128)

	)

58 
	#SCHAR_MAX
 127

	)

61 
	#UCHAR_MAX
 255

	)

64 #ifde‡
__CHAR_UNSIGNED__


65 
	#CHAR_MIN
 0

	)

66 
	#CHAR_MAX
 
UCHAR_MAX


	)

68 
	#CHAR_MIN
 
SCHAR_MIN


	)

69 
	#CHAR_MAX
 
SCHAR_MAX


	)

73 
	#SHRT_MIN
 (-32768)

	)

74 
	#SHRT_MAX
 32767

	)

77 
	#USHRT_MAX
 65535

	)

80 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

81 
	#INT_MAX
 2147483647

	)

84 
	#UINT_MAX
 4294967295U

	)

87 #i‡
__WORDSIZE
 == 64

88 
	#LONG_MAX
 9223372036854775807L

	)

90 
	#LONG_MAX
 2147483647L

	)

92 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

95 #i‡
__WORDSIZE
 == 64

96 
	#ULONG_MAX
 18446744073709551615UL

	)

98 
	#ULONG_MAX
 4294967295UL

	)

101 #ifde‡
__USE_ISOC99


104 
	#LLONG_MAX
 9223372036854775807LL

	)

105 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

108 
	#ULLONG_MAX
 18446744073709551615ULL

	)

122 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


124 #ö˛ude_√xà<
limôs
.
h
>

130 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


131 #i‚de‡
LLONG_MIN


132 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

134 #i‚de‡
LLONG_MAX


135 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

137 #i‚de‡
ULLONG_MAX


138 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

145 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

146 #i‚de‡
CHAR_WIDTH


147 
	#CHAR_WIDTH
 8

	)

149 #i‚de‡
SCHAR_WIDTH


150 
	#SCHAR_WIDTH
 8

	)

152 #i‚de‡
UCHAR_WIDTH


153 
	#UCHAR_WIDTH
 8

	)

155 #i‚de‡
SHRT_WIDTH


156 
	#SHRT_WIDTH
 16

	)

158 #i‚de‡
USHRT_WIDTH


159 
	#USHRT_WIDTH
 16

	)

161 #i‚de‡
INT_WIDTH


162 
	#INT_WIDTH
 32

	)

164 #i‚de‡
UINT_WIDTH


165 
	#UINT_WIDTH
 32

	)

167 #i‚de‡
LONG_WIDTH


168 
	#LONG_WIDTH
 
__WORDSIZE


	)

170 #i‚de‡
ULONG_WIDTH


171 
	#ULONG_WIDTH
 
__WORDSIZE


	)

173 #i‚de‡
LLONG_WIDTH


174 
	#LLONG_WIDTH
 64

	)

176 #i‚de‡
ULLONG_WIDTH


177 
	#ULLONG_WIDTH
 64

	)

181 #ifdef 
__USE_POSIX


183 
	~<bôs/posix1_lim.h
>

186 #ifdef 
__USE_POSIX2


187 
	~<bôs/posix2_lim.h
>

190 #ifdef 
__USE_XOPEN


191 
	~<bôs/x›í_lim.h
>

	@/usr/include/math.h

23 #i‚def 
_MATH_H


24 
	#_MATH_H
 1

	)

26 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

27 
	~<bôs/libc-hódî-°¨t.h
>

29 #i‡
deföed
 
log
 && deföed 
__GNUC__


30 #w¨nög 
A
 
ma¸o
 
ˇŒed
 
log
 
was
 
Æªady
 
deföed
 
whí
 <
m©h
.
h
> wa†
ö˛uded
.

31 #w¨nög 
This
 
wûl
 
ˇu£
 
compû©i⁄
 
¥obÀms
.

34 
	g__BEGIN_DECLS


37 
	~<bôs/ty≥s.h
>

40 
	~<bôs/m©h-ve˘‹.h
>

43 
	~<bôs/Êﬂä.h
>

47 #i‡
__GNUC_PREREQ
 (3, 3)

48 
	#HUGE_VAL
 (
	`__buûtö_huge_vÆ
 ())

	)

55 
	#HUGE_VAL
 1e10000

	)

57 #ifde‡
__USE_ISOC99


58 #i‡
__GNUC_PREREQ
 (3, 3)

59 
	#HUGE_VALF
 (
	`__buûtö_huge_vÆf
 ())

	)

60 
	#HUGE_VALL
 (
	`__buûtö_huge_vÆl
 ())

	)

62 
	#HUGE_VALF
 1e10000f

	)

63 
	#HUGE_VALL
 1e10000L

	)

66 #i‡
__HAVE_FLOAT16
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

67 
	#HUGE_VAL_F16
 (
	`__buûtö_huge_vÆf16
 ())

	)

69 #i‡
__HAVE_FLOAT32
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

70 
	#HUGE_VAL_F32
 (
	`__buûtö_huge_vÆf32
 ())

	)

72 #i‡
__HAVE_FLOAT64
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

73 
	#HUGE_VAL_F64
 (
	`__buûtö_huge_vÆf64
 ())

	)

75 #i‡
__HAVE_FLOAT128
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

76 
	#HUGE_VAL_F128
 (
	`__buûtö_huge_vÆf128
 ())

	)

78 #i‡
__HAVE_FLOAT32X
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

79 
	#HUGE_VAL_F32X
 (
	`__buûtö_huge_vÆf32x
 ())

	)

81 #i‡
__HAVE_FLOAT64X
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

82 
	#HUGE_VAL_F64X
 (
	`__buûtö_huge_vÆf64x
 ())

	)

84 #i‡
__HAVE_FLOAT128X
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

85 
	#HUGE_VAL_F128X
 (
	`__buûtö_huge_vÆf128x
 ())

	)

88 #ifde‡
__USE_ISOC99


90 #i‡
__GNUC_PREREQ
 (3, 3)

91 
	#INFINITY
 (
	`__buûtö_öff
 ())

	)

93 
	#INFINITY
 
HUGE_VALF


	)

97 #i‡
__GNUC_PREREQ
 (3, 3)

98 
	#NAN
 (
	`__buûtö_«nf
 (""))

	)

103 
	#NAN
 (0.0‡/ 0.0f)

	)

107 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

109 #i‡
__GNUC_PREREQ
 (3, 3)

110 
	#SNANF
 (
	`__buûtö_«nsf
 (""))

	)

111 
	#SNAN
 (
	`__buûtö_«ns
 (""))

	)

112 
	#SNANL
 (
	`__buûtö_«n¶
 (""))

	)

115 #i‡
__HAVE_FLOAT16
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

116 
	#SNANF16
 (
	`__buûtö_«nsf16
 (""))

	)

118 #i‡
__HAVE_FLOAT32
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

119 
	#SNANF32
 (
	`__buûtö_«nsf32
 (""))

	)

121 #i‡
__HAVE_FLOAT64
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

122 
	#SNANF64
 (
	`__buûtö_«nsf64
 (""))

	)

124 #i‡
__HAVE_FLOAT128
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

125 
	#SNANF128
 (
	`__buûtö_«nsf128
 (""))

	)

127 #i‡
__HAVE_FLOAT32X
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

128 
	#SNANF32X
 (
	`__buûtö_«nsf32x
 (""))

	)

130 #i‡
__HAVE_FLOAT64X
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

131 
	#SNANF64X
 (
	`__buûtö_«nsf64x
 (""))

	)

133 #i‡
__HAVE_FLOAT128X
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

134 
	#SNANF128X
 (
	`__buûtö_«nsf128x
 (""))

	)

138 
	~<bôs/Êt-evÆ-mëhod.h
>

140 #ifde‡
__USE_ISOC99


148 #i‡
__GLIBC_FLT_EVAL_METHOD
 == 0 || __GLIBC_FLT_EVAL_METHOD == 16

149 
	tÊﬂt_t
;

150 
	tdoubÀ_t
;

151 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 1

152 
	tÊﬂt_t
;

153 
	tdoubÀ_t
;

154 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 2

155 
	tÊﬂt_t
;

156 
	tdoubÀ_t
;

157 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 32

158 
_Flﬂt32
 
	tÊﬂt_t
;

159 
	tdoubÀ_t
;

160 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 33

161 
_Flﬂt32x
 
	tÊﬂt_t
;

162 
_Flﬂt32x
 
	tdoubÀ_t
;

163 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 64

164 
_Flﬂt64
 
	tÊﬂt_t
;

165 
_Flﬂt64
 
	tdoubÀ_t
;

166 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 65

167 
_Flﬂt64x
 
	tÊﬂt_t
;

168 
_Flﬂt64x
 
	tdoubÀ_t
;

169 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 128

170 
_Flﬂt128
 
	tÊﬂt_t
;

171 
_Flﬂt128
 
	tdoubÀ_t
;

172 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 129

173 
_Flﬂt128x
 
	tÊﬂt_t
;

174 
_Flﬂt128x
 
	tdoubÀ_t
;

190 
	~<bôs/Â-logb.h
>

191 #ifde‡
__USE_ISOC99


192 #i‡
__FP_LOGB0_IS_MIN


193 
	#FP_ILOGB0
 (-2147483647 - 1)

	)

195 
	#FP_ILOGB0
 (-2147483647)

	)

197 #i‡
__FP_LOGBNAN_IS_MIN


198 
	#FP_ILOGBNAN
 (-2147483647 - 1)

	)

200 
	#FP_ILOGBNAN
 2147483647

	)

203 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

204 #i‡
__WORDSIZE
 == 32

205 
	#__FP_LONG_MAX
 0x7fffffffL

	)

207 
	#__FP_LONG_MAX
 0x7fffffffffffffffL

	)

209 #i‡
__FP_LOGB0_IS_MIN


210 
	#FP_LLOGB0
 (-
__FP_LONG_MAX
 - 1)

	)

212 
	#FP_LLOGB0
 (-
__FP_LONG_MAX
)

	)

214 #i‡
__FP_LOGBNAN_IS_MIN


215 
	#FP_LLOGBNAN
 (-
__FP_LONG_MAX
 - 1)

	)

217 
	#FP_LLOGBNAN
 
__FP_LONG_MAX


	)

233 
	~<bôs/Â-Á°.h
>

235 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

239 
	mFP_INT_UPWARD
 =

240 
	#FP_INT_UPWARD
 0

	)

241 
FP_INT_UPWARD
,

242 
	mFP_INT_DOWNWARD
 =

243 
	#FP_INT_DOWNWARD
 1

	)

244 
FP_INT_DOWNWARD
,

245 
	mFP_INT_TOWARDZERO
 =

246 
	#FP_INT_TOWARDZERO
 2

	)

247 
FP_INT_TOWARDZERO
,

248 
	mFP_INT_TONEARESTFROMZERO
 =

249 
	#FP_INT_TONEARESTFROMZERO
 3

	)

250 
FP_INT_TONEARESTFROMZERO
,

251 
	mFP_INT_TONEAREST
 =

252 
	#FP_INT_TONEAREST
 4

	)

253 
FP_INT_TONEAREST
,

262 
	#__SIMD_DECL
(
fun˘i⁄
Ë
	`__CONCAT
 (
__DECL_SIMD_
, fun˘i⁄)

	)

264 
	#__MATHCALL_VEC
(
fun˘i⁄
, 
suffix
, 
¨gs
) \

265 
	`__SIMD_DECL
 (
	`__MATH_PRECNAME
 (
fun˘i⁄
, 
suffix
)) \

266 
	`__MATHCALL
 (
fun˘i⁄
, 
suffix
, 
¨gs
)

	)

268 
	#__MATHDECL_VEC
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

269 
	`__SIMD_DECL
 (
	`__MATH_PRECNAME
 (
fun˘i⁄
, 
suffix
)) \

270 
	`__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
)

	)

272 
	#__MATHCALL
(
fun˘i⁄
,
suffix
, 
¨gs
) \

273 
	`__MATHDECL
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
)

	)

274 
	#__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

275 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
); \

276 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
)

	)

277 
	#__MATHCALLX
(
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

278 
	`__MATHDECLX
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
)

	)

279 
	#__MATHDECLX
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

280 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
); \

281 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
)

	)

282 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

283 
ty≥
 
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
Ë
¨gs
 
__THROW


	)

285 
	#_MdoubÀ_
 

	)

286 
	#__MATH_PRECNAME
(
«me
,
r
Ë
	`__CONCAT
“ame,r)

	)

287 
	#__MATH_DECLARING_DOUBLE
 1

	)

288 
	#__MATH_DECLARING_FLOATN
 0

	)

289 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

290 
	~<bôs/m©hˇŒs.h
>

291 #unde‡
_MdoubÀ_


292 #unde‡
__MATH_PRECNAME


293 #unde‡
__MATH_DECLARING_DOUBLE


294 #unde‡
__MATH_DECLARING_FLOATN


296 #ifde‡
__USE_ISOC99


302 
	#_MdoubÀ_
 

	)

303 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f
##
	)
r

304 
	#__MATH_DECLARING_DOUBLE
 0

	)

305 
	#__MATH_DECLARING_FLOATN
 0

	)

306 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

307 
	~<bôs/m©hˇŒs.h
>

308 #unde‡
_MdoubÀ_


309 #unde‡
__MATH_PRECNAME


310 #unde‡
__MATH_DECLARING_DOUBLE


311 #unde‡
__MATH_DECLARING_FLOATN


313 #i‡!(
deföed
 
__NO_LONG_DOUBLE_MATH
 && deföed 
_LIBC
) \

314 || 
deföed
 
__LDBL_COMPAT
 \

315 || 
deföed
 
_LIBC_TEST


316 #ifde‡
__LDBL_COMPAT


318 #ifde‡
__USE_ISOC99


319 
	$__∆dbl_√xâow¨df
 (
__x
, 
__y
)

320 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

321 #ifde‡
__REDIRECT_NTH


322 
	`__REDIRECT_NTH
 (
√xâow¨df
, (
__x
, 
__y
),

323 
__∆dbl_√xâow¨df
)

324 
	`__©åibuã__
 ((
__c⁄°__
));

325 
	`__REDIRECT_NTH
 (
√xâow¨d
, (
__x
, 
__y
),

326 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

327 
	`__REDIRECT_NTH
 (
√xâow¨dl
,

328 (
__x
, 
__y
),

329 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

333 #unde‡
__MATHDECL_1


334 
	#__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
Æüs
) \

335 
ty≥
 
	`__REDIRECT_NTH
(
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
), \

336 
¨gs
, 
Æüs
)

	)

337 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

338 
	`__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
	`__CONCAT
(fun˘i⁄,suffix))

	)

344 
	#_MdoubÀ_
 

	)

345 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
l
##
	)
r

346 
	#__MATH_DECLARING_DOUBLE
 0

	)

347 
	#__MATH_DECLARING_FLOATN
 0

	)

348 
	#__MATH_DECLARE_LDOUBLE
 1

	)

349 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

350 
	~<bôs/m©hˇŒs.h
>

351 #unde‡
_MdoubÀ_


352 #unde‡
__MATH_PRECNAME


353 #unde‡
__MATH_DECLARING_DOUBLE


354 #unde‡
__MATH_DECLARING_FLOATN


363 #i‡
__HAVE_DISTINCT_FLOAT16
 || (
__HAVE_FLOAT16
 && !
deföed
 
_LIBC
)

364 
	#_MdoubÀ_
 
_Flﬂt16


	)

365 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f16
##
	)
r

366 
	#__MATH_DECLARING_DOUBLE
 0

	)

367 
	#__MATH_DECLARING_FLOATN
 1

	)

368 #i‡
__HAVE_DISTINCT_FLOAT16


369 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

371 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

372 
	~<bôs/m©hˇŒs.h
>

374 #unde‡
_MdoubÀ_


375 #unde‡
__MATH_PRECNAME


376 #unde‡
__MATH_DECLARING_DOUBLE


377 #unde‡
__MATH_DECLARING_FLOATN


380 #i‡
__HAVE_DISTINCT_FLOAT32
 || (
__HAVE_FLOAT32
 && !
deföed
 
_LIBC
)

381 
	#_MdoubÀ_
 
_Flﬂt32


	)

382 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f32
##
	)
r

383 
	#__MATH_DECLARING_DOUBLE
 0

	)

384 
	#__MATH_DECLARING_FLOATN
 1

	)

385 #i‡
__HAVE_DISTINCT_FLOAT32


386 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

388 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

389 
	~<bôs/m©hˇŒs.h
>

391 #unde‡
_MdoubÀ_


392 #unde‡
__MATH_PRECNAME


393 #unde‡
__MATH_DECLARING_DOUBLE


394 #unde‡
__MATH_DECLARING_FLOATN


397 #i‡
__HAVE_DISTINCT_FLOAT64
 || (
__HAVE_FLOAT64
 && !
deföed
 
_LIBC
)

398 
	#_MdoubÀ_
 
_Flﬂt64


	)

399 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f64
##
	)
r

400 
	#__MATH_DECLARING_DOUBLE
 0

	)

401 
	#__MATH_DECLARING_FLOATN
 1

	)

402 #i‡
__HAVE_DISTINCT_FLOAT64


403 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

405 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

406 
	~<bôs/m©hˇŒs.h
>

408 #unde‡
_MdoubÀ_


409 #unde‡
__MATH_PRECNAME


410 #unde‡
__MATH_DECLARING_DOUBLE


411 #unde‡
__MATH_DECLARING_FLOATN


414 #i‡
__HAVE_DISTINCT_FLOAT128
 || (
__HAVE_FLOAT128
 && !
deföed
 
_LIBC
)

415 
	#_MdoubÀ_
 
_Flﬂt128


	)

416 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f128
##
	)
r

417 
	#__MATH_DECLARING_DOUBLE
 0

	)

418 
	#__MATH_DECLARING_FLOATN
 1

	)

419 #i‡
__HAVE_DISTINCT_FLOAT128


420 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

422 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

423 
	~<bôs/m©hˇŒs.h
>

425 #unde‡
_MdoubÀ_


426 #unde‡
__MATH_PRECNAME


427 #unde‡
__MATH_DECLARING_DOUBLE


428 #unde‡
__MATH_DECLARING_FLOATN


431 #i‡
__HAVE_DISTINCT_FLOAT32X
 || (
__HAVE_FLOAT32X
 && !
deföed
 
_LIBC
)

432 
	#_MdoubÀ_
 
_Flﬂt32x


	)

433 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f32x
##
	)
r

434 
	#__MATH_DECLARING_DOUBLE
 0

	)

435 
	#__MATH_DECLARING_FLOATN
 1

	)

436 #i‡
__HAVE_DISTINCT_FLOAT32X


437 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

439 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

440 
	~<bôs/m©hˇŒs.h
>

442 #unde‡
_MdoubÀ_


443 #unde‡
__MATH_PRECNAME


444 #unde‡
__MATH_DECLARING_DOUBLE


445 #unde‡
__MATH_DECLARING_FLOATN


448 #i‡
__HAVE_DISTINCT_FLOAT64X
 || (
__HAVE_FLOAT64X
 && !
deföed
 
_LIBC
)

449 
	#_MdoubÀ_
 
_Flﬂt64x


	)

450 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f64x
##
	)
r

451 
	#__MATH_DECLARING_DOUBLE
 0

	)

452 
	#__MATH_DECLARING_FLOATN
 1

	)

453 #i‡
__HAVE_DISTINCT_FLOAT64X


454 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

456 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

457 
	~<bôs/m©hˇŒs.h
>

459 #unde‡
_MdoubÀ_


460 #unde‡
__MATH_PRECNAME


461 #unde‡
__MATH_DECLARING_DOUBLE


462 #unde‡
__MATH_DECLARING_FLOATN


465 #i‡
__HAVE_DISTINCT_FLOAT128X
 || (
__HAVE_FLOAT128X
 && !
deföed
 
_LIBC
)

466 
	#_MdoubÀ_
 
_Flﬂt128x


	)

467 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f128x
##
	)
r

468 
	#__MATH_DECLARING_DOUBLE
 0

	)

469 
	#__MATH_DECLARING_FLOATN
 1

	)

470 #i‡
__HAVE_DISTINCT_FLOAT128X


471 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

473 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

474 
	~<bôs/m©hˇŒs.h
>

476 #unde‡
_MdoubÀ_


477 #unde‡
__MATH_PRECNAME


478 #unde‡
__MATH_DECLARING_DOUBLE


479 #unde‡
__MATH_DECLARING_FLOATN


482 #unde‡
__MATHDECL_1


483 #unde‡
__MATHDECL


484 #unde‡
__MATHCALL


487 
	#__MATHCALL_NARROW_ARGS_1
 (
_M¨g_
 
__x
)

	)

488 
	#__MATHCALL_NARROW_ARGS_2
 (
_M¨g_
 
__x
, _M¨g_ 
__y
)

	)

489 
	#__MATHCALL_NARROW_ARGS_3
 (
_M¨g_
 
__x
, _M¨g_ 
__y
, _M¨g_ 
__z
)

	)

490 
	#__MATHCALL_NARROW_NORMAL
(
func
, 
«rgs
) \

491 
_Mªt_
 
func
 
__MATHCALL_NARROW_ARGS_
 ## 
«rgs
 
__THROW


	)

492 
	#__MATHCALL_NARROW_REDIR
(
func
, 
ªdú
, 
«rgs
) \

493 
_Mªt_
 
	`__REDIRECT_NTH
 (
func
, 
__MATHCALL_NARROW_ARGS_
 ## 
«rgs
, \

494 
ªdú
)

	)

495 
	#__MATHCALL_NARROW
(
func
, 
ªdú
, 
«rgs
) \

496 
	`__MATHCALL_NARROW_NORMAL
 (
func
, 
«rgs
)

	)

498 #i‡
	`__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

500 
	#_Mªt_
 

	)

501 
	#_M¨g_
 

	)

502 
	#__MATHCALL_NAME
(
«me
Ë
f
 ## 
	)
name

503 
	~<bôs/m©hˇŒs-«ºow.h
>

504 #unde‡
_Mªt_


505 #unde‡
_M¨g_


506 #unde‡
__MATHCALL_NAME


508 
	#_Mªt_
 

	)

509 
	#_M¨g_
 

	)

510 
	#__MATHCALL_NAME
(
«me
Ë
f
 ##Çamê## 
l


	)

511 #ifde‡
__LDBL_COMPAT


512 
	#__MATHCALL_REDIR_NAME
(
«me
Ë
f
 ## 
	)
name

513 #unde‡
__MATHCALL_NARROW


514 
	#__MATHCALL_NARROW
(
func
, 
ªdú
, 
«rgs
) \

515 
	`__MATHCALL_NARROW_REDIR
 (
func
, 
ªdú
, 
«rgs
)

	)

517 
	~<bôs/m©hˇŒs-«ºow.h
>

518 #unde‡
_Mªt_


519 #unde‡
_M¨g_


520 #unde‡
__MATHCALL_NAME


521 #ifde‡
__LDBL_COMPAT


522 #unde‡
__MATHCALL_REDIR_NAME


523 #unde‡
__MATHCALL_NARROW


524 
	#__MATHCALL_NARROW
(
func
, 
ªdú
, 
«rgs
) \

525 
	`__MATHCALL_NARROW_NORMAL
 (
func
, 
«rgs
)

	)

528 
	#_Mªt_
 

	)

529 
	#_M¨g_
 

	)

530 
	#__MATHCALL_NAME
(
«me
Ë
d
 ##Çamê## 
l


	)

531 #ifde‡
__LDBL_COMPAT


532 
	#__MATHCALL_REDIR_NAME
(
«me
Ë
__∆dbl_d
 ##Çamê## 
l


	)

533 #unde‡
__MATHCALL_NARROW


534 
	#__MATHCALL_NARROW
(
func
, 
ªdú
, 
«rgs
) \

535 
	`__MATHCALL_NARROW_REDIR
 (
func
, 
ªdú
, 
«rgs
)

	)

537 
	~<bôs/m©hˇŒs-«ºow.h
>

538 #unde‡
_Mªt_


539 #unde‡
_M¨g_


540 #unde‡
__MATHCALL_NAME


541 #ifde‡
__LDBL_COMPAT


542 #unde‡
__MATHCALL_REDIR_NAME


543 #unde‡
__MATHCALL_NARROW


544 
	#__MATHCALL_NARROW
(
func
, 
ªdú
, 
«rgs
) \

545 
	`__MATHCALL_NARROW_NORMAL
 (
func
, 
«rgs
)

	)

550 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

552 #i‡
__HAVE_FLOAT16
 && 
__HAVE_FLOAT32


553 
	#_Mªt_
 
_Flﬂt16


	)

554 
	#_M¨g_
 
_Flﬂt32


	)

555 
	#__MATHCALL_NAME
(
«me
Ë
f16
 ##Çamê## 
f32


	)

556 
	~<bôs/m©hˇŒs-«ºow.h
>

557 #unde‡
_Mªt_


558 #unde‡
_M¨g_


559 #unde‡
__MATHCALL_NAME


562 #i‡
__HAVE_FLOAT16
 && 
__HAVE_FLOAT32X


563 
	#_Mªt_
 
_Flﬂt16


	)

564 
	#_M¨g_
 
_Flﬂt32x


	)

565 
	#__MATHCALL_NAME
(
«me
Ë
f16
 ##Çamê## 
f32x


	)

566 
	~<bôs/m©hˇŒs-«ºow.h
>

567 #unde‡
_Mªt_


568 #unde‡
_M¨g_


569 #unde‡
__MATHCALL_NAME


572 #i‡
__HAVE_FLOAT16
 && 
__HAVE_FLOAT64


573 
	#_Mªt_
 
_Flﬂt16


	)

574 
	#_M¨g_
 
_Flﬂt64


	)

575 
	#__MATHCALL_NAME
(
«me
Ë
f16
 ##Çamê## 
f64


	)

576 
	~<bôs/m©hˇŒs-«ºow.h
>

577 #unde‡
_Mªt_


578 #unde‡
_M¨g_


579 #unde‡
__MATHCALL_NAME


582 #i‡
__HAVE_FLOAT16
 && 
__HAVE_FLOAT64X


583 
	#_Mªt_
 
_Flﬂt16


	)

584 
	#_M¨g_
 
_Flﬂt64x


	)

585 
	#__MATHCALL_NAME
(
«me
Ë
f16
 ##Çamê## 
f64x


	)

586 
	~<bôs/m©hˇŒs-«ºow.h
>

587 #unde‡
_Mªt_


588 #unde‡
_M¨g_


589 #unde‡
__MATHCALL_NAME


592 #i‡
__HAVE_FLOAT16
 && 
__HAVE_FLOAT128


593 
	#_Mªt_
 
_Flﬂt16


	)

594 
	#_M¨g_
 
_Flﬂt128


	)

595 
	#__MATHCALL_NAME
(
«me
Ë
f16
 ##Çamê## 
f128


	)

596 
	~<bôs/m©hˇŒs-«ºow.h
>

597 #unde‡
_Mªt_


598 #unde‡
_M¨g_


599 #unde‡
__MATHCALL_NAME


602 #i‡
__HAVE_FLOAT16
 && 
__HAVE_FLOAT128X


603 
	#_Mªt_
 
_Flﬂt16


	)

604 
	#_M¨g_
 
_Flﬂt128x


	)

605 
	#__MATHCALL_NAME
(
«me
Ë
f16
 ##Çamê## 
f128x


	)

606 
	~<bôs/m©hˇŒs-«ºow.h
>

607 #unde‡
_Mªt_


608 #unde‡
_M¨g_


609 #unde‡
__MATHCALL_NAME


612 #i‡
__HAVE_FLOAT32
 && 
__HAVE_FLOAT32X


613 
	#_Mªt_
 
_Flﬂt32


	)

614 
	#_M¨g_
 
_Flﬂt32x


	)

615 
	#__MATHCALL_NAME
(
«me
Ë
f32
 ##Çamê## 
f32x


	)

616 
	~<bôs/m©hˇŒs-«ºow.h
>

617 #unde‡
_Mªt_


618 #unde‡
_M¨g_


619 #unde‡
__MATHCALL_NAME


622 #i‡
__HAVE_FLOAT32
 && 
__HAVE_FLOAT64


623 
	#_Mªt_
 
_Flﬂt32


	)

624 
	#_M¨g_
 
_Flﬂt64


	)

625 
	#__MATHCALL_NAME
(
«me
Ë
f32
 ##Çamê## 
f64


	)

626 
	~<bôs/m©hˇŒs-«ºow.h
>

627 #unde‡
_Mªt_


628 #unde‡
_M¨g_


629 #unde‡
__MATHCALL_NAME


632 #i‡
__HAVE_FLOAT32
 && 
__HAVE_FLOAT64X


633 
	#_Mªt_
 
_Flﬂt32


	)

634 
	#_M¨g_
 
_Flﬂt64x


	)

635 
	#__MATHCALL_NAME
(
«me
Ë
f32
 ##Çamê## 
f64x


	)

636 
	~<bôs/m©hˇŒs-«ºow.h
>

637 #unde‡
_Mªt_


638 #unde‡
_M¨g_


639 #unde‡
__MATHCALL_NAME


642 #i‡
__HAVE_FLOAT32
 && 
__HAVE_FLOAT128


643 
	#_Mªt_
 
_Flﬂt32


	)

644 
	#_M¨g_
 
_Flﬂt128


	)

645 
	#__MATHCALL_NAME
(
«me
Ë
f32
 ##Çamê## 
f128


	)

646 
	~<bôs/m©hˇŒs-«ºow.h
>

647 #unde‡
_Mªt_


648 #unde‡
_M¨g_


649 #unde‡
__MATHCALL_NAME


652 #i‡
__HAVE_FLOAT32
 && 
__HAVE_FLOAT128X


653 
	#_Mªt_
 
_Flﬂt32


	)

654 
	#_M¨g_
 
_Flﬂt128x


	)

655 
	#__MATHCALL_NAME
(
«me
Ë
f32
 ##Çamê## 
f128x


	)

656 
	~<bôs/m©hˇŒs-«ºow.h
>

657 #unde‡
_Mªt_


658 #unde‡
_M¨g_


659 #unde‡
__MATHCALL_NAME


662 #i‡
__HAVE_FLOAT32X
 && 
__HAVE_FLOAT64


663 
	#_Mªt_
 
_Flﬂt32x


	)

664 
	#_M¨g_
 
_Flﬂt64


	)

665 
	#__MATHCALL_NAME
(
«me
Ë
f32x
 ##Çamê## 
f64


	)

666 
	~<bôs/m©hˇŒs-«ºow.h
>

667 #unde‡
_Mªt_


668 #unde‡
_M¨g_


669 #unde‡
__MATHCALL_NAME


672 #i‡
__HAVE_FLOAT32X
 && 
__HAVE_FLOAT64X


673 
	#_Mªt_
 
_Flﬂt32x


	)

674 
	#_M¨g_
 
_Flﬂt64x


	)

675 
	#__MATHCALL_NAME
(
«me
Ë
f32x
 ##Çamê## 
f64x


	)

676 
	~<bôs/m©hˇŒs-«ºow.h
>

677 #unde‡
_Mªt_


678 #unde‡
_M¨g_


679 #unde‡
__MATHCALL_NAME


682 #i‡
__HAVE_FLOAT32X
 && 
__HAVE_FLOAT128


683 
	#_Mªt_
 
_Flﬂt32x


	)

684 
	#_M¨g_
 
_Flﬂt128


	)

685 
	#__MATHCALL_NAME
(
«me
Ë
f32x
 ##Çamê## 
f128


	)

686 
	~<bôs/m©hˇŒs-«ºow.h
>

687 #unde‡
_Mªt_


688 #unde‡
_M¨g_


689 #unde‡
__MATHCALL_NAME


692 #i‡
__HAVE_FLOAT32X
 && 
__HAVE_FLOAT128X


693 
	#_Mªt_
 
_Flﬂt32x


	)

694 
	#_M¨g_
 
_Flﬂt128x


	)

695 
	#__MATHCALL_NAME
(
«me
Ë
f32x
 ##Çamê## 
f128x


	)

696 
	~<bôs/m©hˇŒs-«ºow.h
>

697 #unde‡
_Mªt_


698 #unde‡
_M¨g_


699 #unde‡
__MATHCALL_NAME


702 #i‡
__HAVE_FLOAT64
 && 
__HAVE_FLOAT64X


703 
	#_Mªt_
 
_Flﬂt64


	)

704 
	#_M¨g_
 
_Flﬂt64x


	)

705 
	#__MATHCALL_NAME
(
«me
Ë
f64
 ##Çamê## 
f64x


	)

706 
	~<bôs/m©hˇŒs-«ºow.h
>

707 #unde‡
_Mªt_


708 #unde‡
_M¨g_


709 #unde‡
__MATHCALL_NAME


712 #i‡
__HAVE_FLOAT64
 && 
__HAVE_FLOAT128


713 
	#_Mªt_
 
_Flﬂt64


	)

714 
	#_M¨g_
 
_Flﬂt128


	)

715 
	#__MATHCALL_NAME
(
«me
Ë
f64
 ##Çamê## 
f128


	)

716 
	~<bôs/m©hˇŒs-«ºow.h
>

717 #unde‡
_Mªt_


718 #unde‡
_M¨g_


719 #unde‡
__MATHCALL_NAME


722 #i‡
__HAVE_FLOAT64
 && 
__HAVE_FLOAT128X


723 
	#_Mªt_
 
_Flﬂt64


	)

724 
	#_M¨g_
 
_Flﬂt128x


	)

725 
	#__MATHCALL_NAME
(
«me
Ë
f64
 ##Çamê## 
f128x


	)

726 
	~<bôs/m©hˇŒs-«ºow.h
>

727 #unde‡
_Mªt_


728 #unde‡
_M¨g_


729 #unde‡
__MATHCALL_NAME


732 #i‡
__HAVE_FLOAT64X
 && 
__HAVE_FLOAT128


733 
	#_Mªt_
 
_Flﬂt64x


	)

734 
	#_M¨g_
 
_Flﬂt128


	)

735 
	#__MATHCALL_NAME
(
«me
Ë
f64x
 ##Çamê## 
f128


	)

736 
	~<bôs/m©hˇŒs-«ºow.h
>

737 #unde‡
_Mªt_


738 #unde‡
_M¨g_


739 #unde‡
__MATHCALL_NAME


742 #i‡
__HAVE_FLOAT64X
 && 
__HAVE_FLOAT128X


743 
	#_Mªt_
 
_Flﬂt64x


	)

744 
	#_M¨g_
 
_Flﬂt128x


	)

745 
	#__MATHCALL_NAME
(
«me
Ë
f64x
 ##Çamê## 
f128x


	)

746 
	~<bôs/m©hˇŒs-«ºow.h
>

747 #unde‡
_Mªt_


748 #unde‡
_M¨g_


749 #unde‡
__MATHCALL_NAME


752 #i‡
__HAVE_FLOAT128
 && 
__HAVE_FLOAT128X


753 
	#_Mªt_
 
_Flﬂt128


	)

754 
	#_M¨g_
 
_Flﬂt128x


	)

755 
	#__MATHCALL_NAME
(
«me
Ë
f128
 ##Çamê## 
f128x


	)

756 
	~<bôs/m©hˇŒs-«ºow.h
>

757 #unde‡
_Mªt_


758 #unde‡
_M¨g_


759 #unde‡
__MATHCALL_NAME


764 #unde‡
__MATHCALL_NARROW_ARGS_1


765 #unde‡
__MATHCALL_NARROW_ARGS_2


766 #unde‡
__MATHCALL_NARROW_ARGS_3


767 #unde‡
__MATHCALL_NARROW_NORMAL


768 #unde‡
__MATHCALL_NARROW_REDIR


769 #unde‡
__MATHCALL_NARROW


771 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


773 
signgam
;

776 #i‡(
__HAVE_DISTINCT_FLOAT16
 \

777 || 
__HAVE_DISTINCT_FLOAT32
 \

778 || 
__HAVE_DISTINCT_FLOAT64
 \

779 || 
__HAVE_DISTINCT_FLOAT32X
 \

780 || 
__HAVE_DISTINCT_FLOAT64X
 \

781 || 
__HAVE_DISTINCT_FLOAT128X
)

794 #ifde‡
__NO_LONG_DOUBLE_MATH


795 #i‡
__HAVE_DISTINCT_FLOAT128


798 
	#__MATH_TG
(
TG_ARG
, 
FUNC
, 
ARGS
) \

799 ( (
TG_ARG
Ë= (Ë? 
FUNC
 ## 
f
 
ARGS
 : FUNC ARGS)

	)

800 #ñi‡
__HAVE_DISTINCT_FLOAT128


801 #i‡
__HAVE_GENERIC_SELECTION


802 #i‡
__HAVE_FLOATN_NOT_TYPEDEF
 && 
__HAVE_FLOAT32


803 
	#__MATH_TG_F32
(
FUNC
, 
ARGS
Ë
_Flﬂt32
: FUNC ## 
f
 ARGS,

	)

805 
	#__MATH_TG_F32
(
FUNC
, 
ARGS
)

	)

807 #i‡
__HAVE_FLOATN_NOT_TYPEDEF
 && 
__HAVE_FLOAT64X


808 #i‡
__HAVE_FLOAT64X_LONG_DOUBLE


809 
	#__MATH_TG_F64X
(
FUNC
, 
ARGS
Ë
_Flﬂt64x
: FUNC ## 
l
 ARGS,

	)

811 
	#__MATH_TG_F64X
(
FUNC
, 
ARGS
Ë
_Flﬂt64x
: FUNC ## 
f128
 ARGS,

	)

814 
	#__MATH_TG_F64X
(
FUNC
, 
ARGS
)

	)

816 
	#__MATH_TG
(
TG_ARG
, 
FUNC
, 
ARGS
) \

817 
	`_Gíîic
 ((
TG_ARG
), \

818 : 
FUNC
 ## 
f
 
ARGS
, \

819 
	`__MATH_TG_F32
 (
FUNC
, 
ARGS
) \

820 : 
FUNC
 
ARGS
, \

821 : 
FUNC
 ## 
l
 
ARGS
, \

822 
	`__MATH_TG_F64X
 (
FUNC
, 
ARGS
) \

823 
_Flﬂt128
: 
FUNC
 ## 
f128
 
ARGS
)

	)

825 #i‡
__HAVE_FLOATN_NOT_TYPEDEF


828 
	#__MATH_TG
(
TG_ARG
, 
FUNC
, 
ARGS
) \

829 
__buûtö_choo£_ex¥
 \

830 (
	`__buûtö_ty≥s_com∑tibÀ_p
 (
	`__ty≥of
 (
TG_ARG
), ), \

831 
FUNC
 ## 
f
 
ARGS
, \

832 
__buûtö_choo£_ex¥
 \

833 (
	`__buûtö_ty≥s_com∑tibÀ_p
 (
	`__ty≥of
 (
TG_ARG
), ), \

834 
FUNC
 
ARGS
, \

835 
__buûtö_choo£_ex¥
 \

836 (
	`__buûtö_ty≥s_com∑tibÀ_p
 (
	`__ty≥of
 (
TG_ARG
), ), \

837 
FUNC
 ## 
l
 
ARGS
, \

838 
FUNC
 ## 
f128
 
ARGS
)))

	)

841 
	#__MATH_TG
(
TG_ARG
, 
FUNC
, 
ARGS
) \

842 ( (
TG_ARG
) ==  () \

843 ? 
FUNC
 ## 
f
 
ARGS
 \

844 :  (
TG_ARG
) ==  () \

845 ? 
FUNC
 
ARGS
 \

846 : 
FUNC
 ## 
l
 
ARGS
)

	)

850 #ifde‡
__USE_ISOC99


855 
FP_NAN
 =

856 
	#FP_NAN
 0

	)

857 
FP_NAN
,

858 
FP_INFINITE
 =

859 
	#FP_INFINITE
 1

	)

860 
FP_INFINITE
,

861 
FP_ZERO
 =

862 
	#FP_ZERO
 2

	)

863 
FP_ZERO
,

864 
FP_SUBNORMAL
 =

865 
	#FP_SUBNORMAL
 3

	)

866 
FP_SUBNORMAL
,

867 
FP_NORMAL
 =

868 
	#FP_NORMAL
 4

	)

869 
FP_NORMAL


877 #i‡((
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__
) \

878 || 
	`__glibc_˛™g_¥îeq
 (2,8)) \

879 && (!
deföed
 
__OPTIMIZE_SIZE__
 || deföed 
__˝lu•lus
)

886 
	#Â˛assify
(
x
Ë
	`__buûtö_Â˛assify
 (
FP_NAN
, 
FP_INFINITE
, \

887 
FP_NORMAL
, 
FP_SUBNORMAL
, 
FP_ZERO
, 
x
)

	)

889 
	#Â˛assify
(
x
Ë
	`__MATH_TG
 ((x), 
__Â˛assify
, (x))

	)

893 #i‡
	`__GNUC_PREREQ
 (6,0Ë|| 
	`__glibc_˛™g_¥îeq
 (3,3)

894 
	#signbô
(
x
Ë
	`__buûtö_signbô
 (x)

	)

895 #ñi‡
deföed
 
__˝lu•lus


903 
	#signbô
(
x
Ë
	`__buûtö_signbôl
 (x)

	)

904 #ñi‡
	`__GNUC_PREREQ
 (4,0)

905 
	#signbô
(
x
Ë
	`__MATH_TG
 ((x), 
__buûtö_signbô
, (x))

	)

907 
	#signbô
(
x
Ë
	`__MATH_TG
 ((x), 
__signbô
, (x))

	)

911 #i‡(
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__
) \

912 || 
	$__glibc_˛™g_¥îeq
 (2,8)

913 
	#isföôe
(
x
Ë
	`__buûtö_isföôe
 (x)

	)

915 
	#isföôe
(
x
Ë
	`__MATH_TG
 ((x), 
__föôe
, (x))

	)

919 #i‡(
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__
) \

920 || 
	$__glibc_˛™g_¥îeq
 (2,8)

921 
	#i¢‹mÆ
(
x
Ë
	`__buûtö_i¢‹mÆ
 (x)

	)

923 
	#i¢‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_NORMAL
)

	)

928 #i‡(
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__
) \

929 || 
	$__glibc_˛™g_¥îeq
 (2,8)

930 
	#i¢™
(
x
Ë
	`__buûtö_i¢™
 (x)

	)

932 
	#i¢™
(
x
Ë
	`__MATH_TG
 ((x), 
__i¢™
, (x))

	)

936 #i‡
__HAVE_DISTINCT_FLOAT128
 && !
	`__GNUC_PREREQ
 (7,0) \

937 && !
deföed
 
__SUPPORT_SNAN__
 && !deföed 
__˝lu•lus


943 
	#isöf
(
x
) \

944 (
	`__buûtö_ty≥s_com∑tibÀ_p
 (
	`__ty≥of
 (
x
), 
_Flﬂt128
) \

945 ? 
	`__isöff128
 (
x
Ë: 
	`__buûtö_isöf_sign
 (x))

	)

946 #ñi‡(
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__
) \

947 || 
	$__glibc_˛™g_¥îeq
 (3,7)

948 
	#isöf
(
x
Ë
	`__buûtö_isöf_sign
 (x)

	)

950 
	#isöf
(
x
Ë
	`__MATH_TG
 ((x), 
__isöf
, (x))

	)

954 
	#MATH_ERRNO
 1

	)

955 
	#MATH_ERREXCEPT
 2

	)

962 #ifde‡
__FAST_MATH__


963 
	#m©h_îrh™dlög
 0

	)

964 #ñi‡
deföed
 
__NO_MATH_ERRNO__


965 
	#m©h_îrh™dlög
 (
MATH_ERREXCEPT
)

	)

967 
	#m©h_îrh™dlög
 (
MATH_ERRNO
 | 
MATH_ERREXCEPT
)

	)

972 #i‡
	`__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

973 
	~<bôs/isˇn⁄iˇl.h
>

976 #i‚de‡
__˝lu•lus


977 
	#issig«lög
(
x
Ë
	`__MATH_TG
 ((x), 
__issig«lög
, (x))

	)

986 
ölöe
 
	`issig«lög
 (
__vÆ
Ë{  
	`__issig«lögf
 (__val); }

987 
ölöe
 
	`issig«lög
 (
__vÆ
Ë{  
	`__issig«lög
 (__val); }

988 
ölöe
 

989 
	`issig«lög
 (
__vÆ
)

991 #ifde‡
__NO_LONG_DOUBLE_MATH


992  
	`__issig«lög
 (
__vÆ
);

994  
	`__issig«lögl
 (
__vÆ
);

997 #i‡
__HAVE_FLOAT128_UNLIKE_LDBL


1000 
ölöe
 
	`issig«lög
 (
_Flﬂt128
 
__vÆ
Ë{  
	`__issig«lögf128
 (__val); }

1002 
	}
}

1006 
	#issubn‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_SUBNORMAL
)

	)

1009 #i‚de‡
__˝lu•lus


1010 #ifde‡
__SUPPORT_SNAN__


1011 
	#iszîo
(
x
Ë(
	`Â˛assify
 (xË=
FP_ZERO
)

	)

1013 
	#iszîo
(
x
Ë(((
	`__ty≥of
 (x)Ë(x)Ë=0)

	)

1017 #ifde‡
__SUPPORT_SNAN__


1018 
ölöe
 

1019 
iszîo
 (
__vÆ
)

1021  
__Â˛assifyf
 (
__vÆ
Ë=
FP_ZERO
;

1023 
ölöe
 

1024 
iszîo
 (
__vÆ
)

1026  
__Â˛assify
 (
__vÆ
Ë=
FP_ZERO
;

1028 
ölöe
 

1029 
iszîo
 (
__vÆ
)

1031 #ifde‡
__NO_LONG_DOUBLE_MATH


1032  
__Â˛assify
 (
__vÆ
Ë=
FP_ZERO
;

1034  
__Â˛assifyl
 (
__vÆ
Ë=
FP_ZERO
;

1037 #i‡
__HAVE_FLOAT128_UNLIKE_LDBL


1040 
ölöe
 

1041 
iszîo
 (
_Flﬂt128
 
__vÆ
)

1043  
__Â˛assifyf128
 (
__vÆ
Ë=
FP_ZERO
;

1047 
ãm∂©e
 <
˛ass
 
__T
> 
ölöe
 
boﬁ


1048 
iszîo
 (
__T
 
__vÆ
)

1050  
__vÆ
 == 0;

1057 #ifde‡
__USE_XOPEN


1059 
	#MAXFLOAT
 3.40282347e+38F

	)

1064 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


1065 
	#M_E
 2.7182818284590452354

	)

1066 
	#M_LOG2E
 1.4426950408889634074

	)

1067 
	#M_LOG10E
 0.43429448190325182765

	)

1068 
	#M_LN2
 0.69314718055994530942

	)

1069 
	#M_LN10
 2.30258509299404568402

	)

1070 
	#M_PI
 3.14159265358979323846

	)

1071 
	#M_PI_2
 1.57079632679489661923

	)

1072 
	#M_PI_4
 0.78539816339744830962

	)

1073 
	#M_1_PI
 0.31830988618379067154

	)

1074 
	#M_2_PI
 0.63661977236758134308

	)

1075 
	#M_2_SQRTPI
 1.12837916709551257390

	)

1076 
	#M_SQRT2
 1.41421356237309504880

	)

1077 
	#M_SQRT1_2
 0.70710678118654752440

	)

1083 #ifde‡
__USE_GNU


1084 
	#M_El
 2.718281828459045235360287471352662498L

	)

1085 
	#M_LOG2El
 1.442695040888963407359924681001892137L

	)

1086 
	#M_LOG10El
 0.434294481903251827651128918916605082L

	)

1087 
	#M_LN2l
 0.693147180559945309417232121458176568L

	)

1088 
	#M_LN10l
 2.302585092994045684017991454684364208L

	)

1089 
	#M_PIl
 3.141592653589793238462643383279502884L

	)

1090 
	#M_PI_2l
 1.570796326794896619231321691639751442L

	)

1091 
	#M_PI_4l
 0.785398163397448309615660845819875721L

	)

1092 
	#M_1_PIl
 0.318309886183790671537767526745028724L

	)

1093 
	#M_2_PIl
 0.636619772367581343075535053490057448L

	)

1094 
	#M_2_SQRTPIl
 1.128379167095512573896158903121545172L

	)

1095 
	#M_SQRT2l
 1.414213562373095048801688724209698079L

	)

1096 
	#M_SQRT1_2l
 0.707106781186547524400844362104849039L

	)

1099 #i‡
__HAVE_FLOAT16
 && 
deföed
 
__USE_GNU


1100 
	#M_Ef16
 
	`__f16
 (2.718281828459045235360287471352662498Ë

	)

1101 
	#M_LOG2Ef16
 
	`__f16
 (1.442695040888963407359924681001892137Ë

	)

1102 
	#M_LOG10Ef16
 
	`__f16
 (0.434294481903251827651128918916605082Ë

	)

1103 
	#M_LN2f16
 
	`__f16
 (0.693147180559945309417232121458176568Ë

	)

1104 
	#M_LN10f16
 
	`__f16
 (2.302585092994045684017991454684364208Ë

	)

1105 
	#M_PIf16
 
	`__f16
 (3.141592653589793238462643383279502884Ë

	)

1106 
	#M_PI_2f16
 
	`__f16
 (1.570796326794896619231321691639751442Ë

	)

1107 
	#M_PI_4f16
 
	`__f16
 (0.785398163397448309615660845819875721Ë

	)

1108 
	#M_1_PIf16
 
	`__f16
 (0.318309886183790671537767526745028724Ë

	)

1109 
	#M_2_PIf16
 
	`__f16
 (0.636619772367581343075535053490057448Ë

	)

1110 
	#M_2_SQRTPIf16
 
	`__f16
 (1.128379167095512573896158903121545172Ë

	)

1111 
	#M_SQRT2f16
 
	`__f16
 (1.414213562373095048801688724209698079Ë

	)

1112 
	#M_SQRT1_2f16
 
	`__f16
 (0.707106781186547524400844362104849039Ë

	)

1115 #i‡
__HAVE_FLOAT32
 && 
deföed
 
__USE_GNU


1116 
	#M_Ef32
 
	`__f32
 (2.718281828459045235360287471352662498Ë

	)

1117 
	#M_LOG2Ef32
 
	`__f32
 (1.442695040888963407359924681001892137Ë

	)

1118 
	#M_LOG10Ef32
 
	`__f32
 (0.434294481903251827651128918916605082Ë

	)

1119 
	#M_LN2f32
 
	`__f32
 (0.693147180559945309417232121458176568Ë

	)

1120 
	#M_LN10f32
 
	`__f32
 (2.302585092994045684017991454684364208Ë

	)

1121 
	#M_PIf32
 
	`__f32
 (3.141592653589793238462643383279502884Ë

	)

1122 
	#M_PI_2f32
 
	`__f32
 (1.570796326794896619231321691639751442Ë

	)

1123 
	#M_PI_4f32
 
	`__f32
 (0.785398163397448309615660845819875721Ë

	)

1124 
	#M_1_PIf32
 
	`__f32
 (0.318309886183790671537767526745028724Ë

	)

1125 
	#M_2_PIf32
 
	`__f32
 (0.636619772367581343075535053490057448Ë

	)

1126 
	#M_2_SQRTPIf32
 
	`__f32
 (1.128379167095512573896158903121545172Ë

	)

1127 
	#M_SQRT2f32
 
	`__f32
 (1.414213562373095048801688724209698079Ë

	)

1128 
	#M_SQRT1_2f32
 
	`__f32
 (0.707106781186547524400844362104849039Ë

	)

1131 #i‡
__HAVE_FLOAT64
 && 
deföed
 
__USE_GNU


1132 
	#M_Ef64
 
	`__f64
 (2.718281828459045235360287471352662498Ë

	)

1133 
	#M_LOG2Ef64
 
	`__f64
 (1.442695040888963407359924681001892137Ë

	)

1134 
	#M_LOG10Ef64
 
	`__f64
 (0.434294481903251827651128918916605082Ë

	)

1135 
	#M_LN2f64
 
	`__f64
 (0.693147180559945309417232121458176568Ë

	)

1136 
	#M_LN10f64
 
	`__f64
 (2.302585092994045684017991454684364208Ë

	)

1137 
	#M_PIf64
 
	`__f64
 (3.141592653589793238462643383279502884Ë

	)

1138 
	#M_PI_2f64
 
	`__f64
 (1.570796326794896619231321691639751442Ë

	)

1139 
	#M_PI_4f64
 
	`__f64
 (0.785398163397448309615660845819875721Ë

	)

1140 
	#M_1_PIf64
 
	`__f64
 (0.318309886183790671537767526745028724Ë

	)

1141 
	#M_2_PIf64
 
	`__f64
 (0.636619772367581343075535053490057448Ë

	)

1142 
	#M_2_SQRTPIf64
 
	`__f64
 (1.128379167095512573896158903121545172Ë

	)

1143 
	#M_SQRT2f64
 
	`__f64
 (1.414213562373095048801688724209698079Ë

	)

1144 
	#M_SQRT1_2f64
 
	`__f64
 (0.707106781186547524400844362104849039Ë

	)

1147 #i‡
__HAVE_FLOAT128
 && 
deföed
 
__USE_GNU


1148 
	#M_Ef128
 
	`__f128
 (2.718281828459045235360287471352662498Ë

	)

1149 
	#M_LOG2Ef128
 
	`__f128
 (1.442695040888963407359924681001892137Ë

	)

1150 
	#M_LOG10Ef128
 
	`__f128
 (0.434294481903251827651128918916605082Ë

	)

1151 
	#M_LN2f128
 
	`__f128
 (0.693147180559945309417232121458176568Ë

	)

1152 
	#M_LN10f128
 
	`__f128
 (2.302585092994045684017991454684364208Ë

	)

1153 
	#M_PIf128
 
	`__f128
 (3.141592653589793238462643383279502884Ë

	)

1154 
	#M_PI_2f128
 
	`__f128
 (1.570796326794896619231321691639751442Ë

	)

1155 
	#M_PI_4f128
 
	`__f128
 (0.785398163397448309615660845819875721Ë

	)

1156 
	#M_1_PIf128
 
	`__f128
 (0.318309886183790671537767526745028724Ë

	)

1157 
	#M_2_PIf128
 
	`__f128
 (0.636619772367581343075535053490057448Ë

	)

1158 
	#M_2_SQRTPIf128
 
	`__f128
 (1.128379167095512573896158903121545172Ë

	)

1159 
	#M_SQRT2f128
 
	`__f128
 (1.414213562373095048801688724209698079Ë

	)

1160 
	#M_SQRT1_2f128
 
	`__f128
 (0.707106781186547524400844362104849039Ë

	)

1163 #i‡
__HAVE_FLOAT32X
 && 
deföed
 
__USE_GNU


1164 
	#M_Ef32x
 
	`__f32x
 (2.718281828459045235360287471352662498Ë

	)

1165 
	#M_LOG2Ef32x
 
	`__f32x
 (1.442695040888963407359924681001892137Ë

	)

1166 
	#M_LOG10Ef32x
 
	`__f32x
 (0.434294481903251827651128918916605082Ë

	)

1167 
	#M_LN2f32x
 
	`__f32x
 (0.693147180559945309417232121458176568Ë

	)

1168 
	#M_LN10f32x
 
	`__f32x
 (2.302585092994045684017991454684364208Ë

	)

1169 
	#M_PIf32x
 
	`__f32x
 (3.141592653589793238462643383279502884Ë

	)

1170 
	#M_PI_2f32x
 
	`__f32x
 (1.570796326794896619231321691639751442Ë

	)

1171 
	#M_PI_4f32x
 
	`__f32x
 (0.785398163397448309615660845819875721Ë

	)

1172 
	#M_1_PIf32x
 
	`__f32x
 (0.318309886183790671537767526745028724Ë

	)

1173 
	#M_2_PIf32x
 
	`__f32x
 (0.636619772367581343075535053490057448Ë

	)

1174 
	#M_2_SQRTPIf32x
 
	`__f32x
 (1.128379167095512573896158903121545172Ë

	)

1175 
	#M_SQRT2f32x
 
	`__f32x
 (1.414213562373095048801688724209698079Ë

	)

1176 
	#M_SQRT1_2f32x
 
	`__f32x
 (0.707106781186547524400844362104849039Ë

	)

1179 #i‡
__HAVE_FLOAT64X
 && 
deföed
 
__USE_GNU


1180 
	#M_Ef64x
 
	`__f64x
 (2.718281828459045235360287471352662498Ë

	)

1181 
	#M_LOG2Ef64x
 
	`__f64x
 (1.442695040888963407359924681001892137Ë

	)

1182 
	#M_LOG10Ef64x
 
	`__f64x
 (0.434294481903251827651128918916605082Ë

	)

1183 
	#M_LN2f64x
 
	`__f64x
 (0.693147180559945309417232121458176568Ë

	)

1184 
	#M_LN10f64x
 
	`__f64x
 (2.302585092994045684017991454684364208Ë

	)

1185 
	#M_PIf64x
 
	`__f64x
 (3.141592653589793238462643383279502884Ë

	)

1186 
	#M_PI_2f64x
 
	`__f64x
 (1.570796326794896619231321691639751442Ë

	)

1187 
	#M_PI_4f64x
 
	`__f64x
 (0.785398163397448309615660845819875721Ë

	)

1188 
	#M_1_PIf64x
 
	`__f64x
 (0.318309886183790671537767526745028724Ë

	)

1189 
	#M_2_PIf64x
 
	`__f64x
 (0.636619772367581343075535053490057448Ë

	)

1190 
	#M_2_SQRTPIf64x
 
	`__f64x
 (1.128379167095512573896158903121545172Ë

	)

1191 
	#M_SQRT2f64x
 
	`__f64x
 (1.414213562373095048801688724209698079Ë

	)

1192 
	#M_SQRT1_2f64x
 
	`__f64x
 (0.707106781186547524400844362104849039Ë

	)

1195 #i‡
__HAVE_FLOAT128X
 && 
deföed
 
__USE_GNU


1202 #i‡
deföed
 
__STRICT_ANSI__
 && !deföed 
__NO_MATH_INLINES


1203 
	#__NO_MATH_INLINES
 1

	)

1206 #ifde‡
__USE_ISOC99


1207 #i‡
__GNUC_PREREQ
 (3, 1)

1214 
	#isgª©î
(
x
, 
y
Ë
	`__buûtö_isgª©î
(x, y)

	)

1215 
	#isgª©îequÆ
(
x
, 
y
Ë
	`__buûtö_isgª©îequÆ
(x, y)

	)

1216 
	#i¶ess
(
x
, 
y
Ë
	`__buûtö_i¶ess
(x, y)

	)

1217 
	#i¶es£quÆ
(
x
, 
y
Ë
	`__buûtö_i¶es£quÆ
(x, y)

	)

1218 
	#i¶essgª©î
(
x
, 
y
Ë
	`__buûtö_i¶essgª©î
(x, y)

	)

1219 
	#isun‹dîed
(
x
, 
y
Ë
	`__buûtö_isun‹dîed
(x, y)

	)

1221 
	#isgª©î
(
x
, 
y
) \

1222 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__x
 = (x); __ty≥of__ (
y
Ë
__y
 = (y); \

1223 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x > __y; }))

	)

1224 
	#isgª©îequÆ
(
x
, 
y
) \

1225 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__x
 = (x); __ty≥of__ (
y
Ë
__y
 = (y); \

1226 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x >__y; }))

	)

1227 
	#i¶ess
(
x
, 
y
) \

1228 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__x
 = (x); __ty≥of__ (
y
Ë
__y
 = (y); \

1229 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x < __y; }))

	)

1230 
	#i¶es£quÆ
(
x
, 
y
) \

1231 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__x
 = (x); __ty≥of__ (
y
Ë
__y
 = (y); \

1232 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x <__y; }))

	)

1233 
	#i¶essgª©î
(
x
, 
y
) \

1234 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__x
 = (x); __ty≥of__ (
y
Ë
__y
 = (y); \

1235 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x !__y; }))

	)

1237 
	#isun‹dîed
(
x
, 
y
) \

1238 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__u
 = (x); __ty≥of__ (
y
Ë
__v
 = (y); \

1239 
__u
 !
__v
 && (__u !__u || __v !__v); }))

	)

1244 #ifde‡
__USE_EXTERN_INLINES


1245 
	~<bôs/m©hölöe.h
>

1249 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

1252 #i‡
__FLT_EVAL_METHOD__
 == 2 || __FLT_EVAL_METHOD__ > 64

1253 
	#__MATH_EVAL_FMT2
(
x
, 
y
Ë((xË+ (yË+ 0.0L)

	)

1254 #ñi‡
__FLT_EVAL_METHOD__
 == 1 || __FLT_EVAL_METHOD__ > 32

1255 
	#__MATH_EVAL_FMT2
(
x
, 
y
Ë((xË+ (yË+ 0.0)

	)

1256 #ñi‡
__FLT_EVAL_METHOD__
 == 0 || __FLT_EVAL_METHOD__ == 32

1257 
	#__MATH_EVAL_FMT2
(
x
, 
y
Ë((xË+ (yË+ 0.0f)

	)

1259 
	#__MATH_EVAL_FMT2
(
x
, 
y
Ë((xË+ (y))

	)

1264 #i‡!
deföed
 
__˝lu•lus
 || (__˝lu•lu†< 201103L && !deföed 
__GNUC__
)

1265 
	#i£qsig
(
x
, 
y
) \

1266 
	`__MATH_TG
 (
	`__MATH_EVAL_FMT2
 (
x
, 
y
), 
__i£qsig
, ((x), (y)))

	)

1279 
ãm∂©e
<
ty≥«me
> 
__i£qsig_ty≥
;

1281 
ãm∂©e
<> 
__i£qsig_ty≥
<>

1283 
__ˇŒ
 (
__x
, 
__y
Ë
throw
 ()

1285  
__i£qsigf
 (
__x
, 
__y
);

1289 
ãm∂©e
<> 
__i£qsig_ty≥
<>

1291 
__ˇŒ
 (
__x
, 
__y
Ë
throw
 ()

1293  
__i£qsig
 (
__x
, 
__y
);

1297 
ãm∂©e
<> 
__i£qsig_ty≥
<>

1299 
__ˇŒ
 (
__x
, 
__y
Ë
throw
 ()

1301 #i‚de‡
__NO_LONG_DOUBLE_MATH


1302  
__i£qsigl
 (
__x
, 
__y
);

1304  
__i£qsig
 (
__x
, 
__y
);

1309 #i‡
__HAVE_FLOAT128_UNLIKE_LDBL


1312 
ãm∂©e
<> 
__i£qsig_ty≥
<
_Flﬂt128
>

1314 
__ˇŒ
 (
_Flﬂt128
 
__x
, _Flﬂt128 
__y
Ë
throw
 ()

1316  
__i£qsigf128
 (
__x
, 
__y
);

1321 
ãm∂©e
<
ty≥«me
 
_T1
,Åy≥«mê
_T2
>

1322 
ölöe
 

1323 
i£qsig
 (
_T1
 
__x
, 
_T2
 
__y
Ë
throw
 ()

1325 #i‡
__˝lu•lus
 >= 201103L

1326 
de˛ty≥
 (
	t__MATH_EVAL_FMT2
 (
	t__x
, 
	t__y
)Ë
	t_T3
;

1328 
__ty≥of
 (
	t__MATH_EVAL_FMT2
 (
	t__x
, 
	t__y
)Ë
	t_T3
;

1330  
__i£qsig_ty≥
<
_T3
>::
__ˇŒ
 (
__x
, 
__y
);

1338 
__END_DECLS


	@/usr/include/stdint.h

22 #i‚de‡
_STDINT_H


23 
	#_STDINT_H
 1

	)

25 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

26 
	~<bôs/libc-hódî-°¨t.h
>

27 
	~<bôs/ty≥s.h
>

28 
	~<bôs/wch¨.h
>

29 
	~<bôs/w‹dsize.h
>

34 
	~<bôs/°döt-öä.h
>

37 
	~<bôs/°döt-uöä.h
>

43 
__öt_Àa°8_t
 
	töt_Àa°8_t
;

44 
__öt_Àa°16_t
 
	töt_Àa°16_t
;

45 
__öt_Àa°32_t
 
	töt_Àa°32_t
;

46 
__öt_Àa°64_t
 
	töt_Àa°64_t
;

49 
__uöt_Àa°8_t
 
	tuöt_Àa°8_t
;

50 
__uöt_Àa°16_t
 
	tuöt_Àa°16_t
;

51 
__uöt_Àa°32_t
 
	tuöt_Àa°32_t
;

52 
__uöt_Àa°64_t
 
	tuöt_Àa°64_t
;

58 sig√d 
	töt_Á°8_t
;

59 #i‡
__WORDSIZE
 == 64

60 
	töt_Á°16_t
;

61 
	töt_Á°32_t
;

62 
	töt_Á°64_t
;

64 
	töt_Á°16_t
;

65 
	töt_Á°32_t
;

66 
__exãnsi⁄__


67 
	töt_Á°64_t
;

71 
	tuöt_Á°8_t
;

72 #i‡
__WORDSIZE
 == 64

73 
	tuöt_Á°16_t
;

74 
	tuöt_Á°32_t
;

75 
	tuöt_Á°64_t
;

77 
	tuöt_Á°16_t
;

78 
	tuöt_Á°32_t
;

79 
__exãnsi⁄__


80 
	tuöt_Á°64_t
;

85 #i‡
__WORDSIZE
 == 64

86 #i‚de‡
__öçå_t_deföed


87 
	töçå_t
;

88 
	#__öçå_t_deföed


	)

90 
	tuöçå_t
;

92 #i‚de‡
__öçå_t_deföed


93 
	töçå_t
;

94 
	#__öçå_t_deföed


	)

96 
	tuöçå_t
;

101 
__ötmax_t
 
	tötmax_t
;

102 
__uötmax_t
 
	tuötmax_t
;

105 #i‡
__WORDSIZE
 == 64

106 
	#__INT64_C
(
c
Ë¯## 
L


	)

107 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

109 
	#__INT64_C
(
c
Ë¯## 
LL


	)

110 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

116 
	#INT8_MIN
 (-128)

	)

117 
	#INT16_MIN
 (-32767-1)

	)

118 
	#INT32_MIN
 (-2147483647-1)

	)

119 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

121 
	#INT8_MAX
 (127)

	)

122 
	#INT16_MAX
 (32767)

	)

123 
	#INT32_MAX
 (2147483647)

	)

124 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

127 
	#UINT8_MAX
 (255)

	)

128 
	#UINT16_MAX
 (65535)

	)

129 
	#UINT32_MAX
 (4294967295U)

	)

130 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

134 
	#INT_LEAST8_MIN
 (-128)

	)

135 
	#INT_LEAST16_MIN
 (-32767-1)

	)

136 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

137 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

139 
	#INT_LEAST8_MAX
 (127)

	)

140 
	#INT_LEAST16_MAX
 (32767)

	)

141 
	#INT_LEAST32_MAX
 (2147483647)

	)

142 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

145 
	#UINT_LEAST8_MAX
 (255)

	)

146 
	#UINT_LEAST16_MAX
 (65535)

	)

147 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

148 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

152 
	#INT_FAST8_MIN
 (-128)

	)

153 #i‡
__WORDSIZE
 == 64

154 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

155 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

157 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

158 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

160 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

162 
	#INT_FAST8_MAX
 (127)

	)

163 #i‡
__WORDSIZE
 == 64

164 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

165 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

167 
	#INT_FAST16_MAX
 (2147483647)

	)

168 
	#INT_FAST32_MAX
 (2147483647)

	)

170 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

173 
	#UINT_FAST8_MAX
 (255)

	)

174 #i‡
__WORDSIZE
 == 64

175 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

176 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

178 
	#UINT_FAST16_MAX
 (4294967295U)

	)

179 
	#UINT_FAST32_MAX
 (4294967295U)

	)

181 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

185 #i‡
__WORDSIZE
 == 64

186 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

187 
	#INTPTR_MAX
 (9223372036854775807L)

	)

188 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

190 
	#INTPTR_MIN
 (-2147483647-1)

	)

191 
	#INTPTR_MAX
 (2147483647)

	)

192 
	#UINTPTR_MAX
 (4294967295U)

	)

197 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

199 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

202 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

208 #i‡
__WORDSIZE
 == 64

209 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

210 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

212 #i‡
__WORDSIZE32_PTRDIFF_LONG


213 
	#PTRDIFF_MIN
 (-2147483647L-1)

	)

214 
	#PTRDIFF_MAX
 (2147483647L)

	)

216 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

217 
	#PTRDIFF_MAX
 (2147483647)

	)

222 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

223 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

226 #i‡
__WORDSIZE
 == 64

227 
	#SIZE_MAX
 (18446744073709551615UL)

	)

229 #i‡
__WORDSIZE32_SIZE_ULONG


230 
	#SIZE_MAX
 (4294967295UL)

	)

232 
	#SIZE_MAX
 (4294967295U)

	)

237 #i‚de‡
WCHAR_MIN


239 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

240 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

244 
	#WINT_MIN
 (0u)

	)

245 
	#WINT_MAX
 (4294967295u)

	)

248 
	#INT8_C
(
c
Ë
	)
c

249 
	#INT16_C
(
c
Ë
	)
c

250 
	#INT32_C
(
c
Ë
	)
c

251 #i‡
__WORDSIZE
 == 64

252 
	#INT64_C
(
c
Ë¯## 
L


	)

254 
	#INT64_C
(
c
Ë¯## 
LL


	)

258 
	#UINT8_C
(
c
Ë
	)
c

259 
	#UINT16_C
(
c
Ë
	)
c

260 
	#UINT32_C
(
c
Ë¯## 
U


	)

261 #i‡
__WORDSIZE
 == 64

262 
	#UINT64_C
(
c
Ë¯## 
UL


	)

264 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

268 #i‡
__WORDSIZE
 == 64

269 
	#INTMAX_C
(
c
Ë¯## 
L


	)

270 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

272 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

273 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

276 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

278 
	#INT8_WIDTH
 8

	)

279 
	#UINT8_WIDTH
 8

	)

280 
	#INT16_WIDTH
 16

	)

281 
	#UINT16_WIDTH
 16

	)

282 
	#INT32_WIDTH
 32

	)

283 
	#UINT32_WIDTH
 32

	)

284 
	#INT64_WIDTH
 64

	)

285 
	#UINT64_WIDTH
 64

	)

287 
	#INT_LEAST8_WIDTH
 8

	)

288 
	#UINT_LEAST8_WIDTH
 8

	)

289 
	#INT_LEAST16_WIDTH
 16

	)

290 
	#UINT_LEAST16_WIDTH
 16

	)

291 
	#INT_LEAST32_WIDTH
 32

	)

292 
	#UINT_LEAST32_WIDTH
 32

	)

293 
	#INT_LEAST64_WIDTH
 64

	)

294 
	#UINT_LEAST64_WIDTH
 64

	)

296 
	#INT_FAST8_WIDTH
 8

	)

297 
	#UINT_FAST8_WIDTH
 8

	)

298 
	#INT_FAST16_WIDTH
 
__WORDSIZE


	)

299 
	#UINT_FAST16_WIDTH
 
__WORDSIZE


	)

300 
	#INT_FAST32_WIDTH
 
__WORDSIZE


	)

301 
	#UINT_FAST32_WIDTH
 
__WORDSIZE


	)

302 
	#INT_FAST64_WIDTH
 64

	)

303 
	#UINT_FAST64_WIDTH
 64

	)

305 
	#INTPTR_WIDTH
 
__WORDSIZE


	)

306 
	#UINTPTR_WIDTH
 
__WORDSIZE


	)

308 
	#INTMAX_WIDTH
 64

	)

309 
	#UINTMAX_WIDTH
 64

	)

311 
	#PTRDIFF_WIDTH
 
__WORDSIZE


	)

312 
	#SIG_ATOMIC_WIDTH
 32

	)

313 
	#SIZE_WIDTH
 
__WORDSIZE


	)

314 
	#WCHAR_WIDTH
 32

	)

315 
	#WINT_WIDTH
 32

	)

	@/usr/include/stdio.h

23 #i‚de‡
_STDIO_H


24 
	#_STDIO_H
 1

	)

26 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

27 
	~<bôs/libc-hódî-°¨t.h
>

29 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	#__√ed___va_li°


	)

36 
	~<°d¨g.h
>

38 
	~<bôs/ty≥s.h
>

39 
	~<bôs/ty≥s/__Âos_t.h
>

40 
	~<bôs/ty≥s/__Âos64_t.h
>

41 
	~<bôs/ty≥s/__FILE.h
>

42 
	~<bôs/ty≥s/FILE.h
>

43 
	~<bôs/ty≥s/°ru˘_FILE.h
>

45 #ifde‡
__USE_GNU


46 
	~<bôs/ty≥s/cookõ_io_fun˘i⁄s_t.h
>

49 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


50 #ifde‡
__GNUC__


51 #i‚de‡
_VA_LIST_DEFINED


52 
__gnuc_va_li°
 
	tva_li°
;

53 
	#_VA_LIST_DEFINED


	)

56 
	~<°d¨g.h
>

60 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


61 #i‚de‡
__off_t_deföed


62 #i‚de‡
__USE_FILE_OFFSET64


63 
__off_t
 
	toff_t
;

65 
__off64_t
 
	toff_t
;

67 
	#__off_t_deföed


	)

69 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


70 
__off64_t
 
	toff64_t
;

71 
	#__off64_t_deföed


	)

75 #ifde‡
__USE_XOPEN2K8


76 #i‚de‡
__ssize_t_deföed


77 
__ssize_t
 
	tssize_t
;

78 
	#__ssize_t_deföed


	)

83 #i‚de‡
__USE_FILE_OFFSET64


84 
__Âos_t
 
	tÂos_t
;

86 
__Âos64_t
 
	tÂos_t
;

88 #ifde‡
__USE_LARGEFILE64


89 
__Âos64_t
 
	tÂos64_t
;

93 
	#_IOFBF
 0

	)

94 
	#_IOLBF
 1

	)

95 
	#_IONBF
 2

	)

99 
	#BUFSIZ
 8192

	)

104 
	#EOF
 (-1)

	)

109 
	#SEEK_SET
 0

	)

110 
	#SEEK_CUR
 1

	)

111 
	#SEEK_END
 2

	)

112 #ifde‡
__USE_GNU


113 
	#SEEK_DATA
 3

	)

114 
	#SEEK_HOLE
 4

	)

118 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


120 
	#P_tmpdú
 "/tmp"

	)

133 
	~<bôs/°dio_lim.h
>

137 
FILE
 *
°dö
;

138 
FILE
 *
°dout
;

139 
FILE
 *
°dîr
;

141 
	#°dö
 
°dö


	)

142 
	#°dout
 
°dout


	)

143 
	#°dîr
 
°dîr


	)

146 
	$ªmove
 (c⁄° *
__fûíame
Ë
__THROW
;

148 
	$ª«me
 (c⁄° *
__ﬁd
, c⁄° *
__√w
Ë
__THROW
;

150 #ifde‡
__USE_ATFILE


152 
	$ª«mót
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

153 c⁄° *
__√w
Ë
__THROW
;

156 #ifde‡
__USE_GNU


158 
	#RENAME_NOREPLACE
 (1 << 0)

	)

159 
	#RENAME_EXCHANGE
 (1 << 1)

	)

160 
	#RENAME_WHITEOUT
 (1 << 2)

	)

164 
	$ª«mót2
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

165 c⁄° *
__√w
, 
__Êags
Ë
__THROW
;

172 #i‚de‡
__USE_FILE_OFFSET64


173 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

175 #ifde‡
__REDIRECT


176 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

178 
	#tmpfûe
 
tmpfûe64


	)

182 #ifde‡
__USE_LARGEFILE64


183 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

187 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

189 #ifde‡
__USE_MISC


192 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

196 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


204 *
	$ãm≤am
 (c⁄° *
__dú
, c⁄° *
__pfx
)

205 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

213 
	`f˛o£
 (
FILE
 *
__°ªam
);

218 
	`fÊush
 (
FILE
 *
__°ªam
);

220 #ifde‡
__USE_MISC


227 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

230 #ifde‡
__USE_GNU


237 
	`f˛o£Æl
 ();

241 #i‚de‡
__USE_FILE_OFFSET64


246 
FILE
 *
	$f›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

247 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

252 
FILE
 *
	$‰e›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

253 c⁄° *
__ª°ri˘
 
__modes
,

254 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

256 #ifde‡
__REDIRECT


257 
FILE
 *
	`__REDIRECT
 (
f›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

258 c⁄° *
__ª°ri˘
 
__modes
), 
f›í64
)

259 
__wur
;

260 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

261 c⁄° *
__ª°ri˘
 
__modes
,

262 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

263 
__wur
;

265 
	#f›í
 
f›í64


	)

266 
	#‰e›í
 
‰e›í64


	)

269 #ifde‡
__USE_LARGEFILE64


270 
FILE
 *
	$f›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

271 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

272 
FILE
 *
	$‰e›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

273 c⁄° *
__ª°ri˘
 
__modes
,

274 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

277 #ifdef 
__USE_POSIX


279 
FILE
 *
	$fd›í
 (
__fd
, c⁄° *
__modes
Ë
__THROW
 
__wur
;

282 #ifdef 
__USE_GNU


285 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

286 c⁄° *
__ª°ri˘
 
__modes
,

287 
cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

290 #i‡
deföed
 
__USE_XOPEN2K8
 || 
	`__GLIBC_USE
 (
LIB_EXT2
)

292 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, c⁄° *
__modes
)

293 
__THROW
 
__wur
;

298 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

304 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

308 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

309 
__modes
, 
size_t
 
__n
Ë
__THROW
;

311 #ifdef 
__USE_MISC


314 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

315 
size_t
 
__size
Ë
__THROW
;

318 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

326 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

327 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

332 
	`¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

334 
	$•rötf
 (*
__ª°ri˘
 
__s
,

335 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

341 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

342 
__gnuc_va_li°
 
__¨g
);

347 
	`v¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
);

349 
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

350 
__gnuc_va_li°
 
__¨g
Ë
__THROWNL
;

352 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


354 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

355 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

356 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

358 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

359 c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
)

360 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

363 #i‡
	`__GLIBC_USE
 (
LIB_EXT2
)

366 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__f
,

367 
__gnuc_va_li°
 
__¨g
)

368 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

369 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

370 c⁄° *
__ª°ri˘
 
__fmt
, ...)

371 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

372 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

373 c⁄° *
__ª°ri˘
 
__fmt
, ...)

374 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

377 #ifde‡
__USE_XOPEN2K8


379 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
,

380 
__gnuc_va_li°
 
__¨g
)

381 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

382 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

383 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

391 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

392 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

397 
	$sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

399 
	$ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

400 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

405 #i‡!
	`__GLIBC_USE
 (
DEPRECATED_SCANF
Ë&& !
deföed
 
__LDBL_COMPAT


406 #ifde‡
__REDIRECT


407 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

408 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

409 
__isoc99_fsˇnf
Ë
__wur
;

410 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

411 
__isoc99_sˇnf
Ë
__wur
;

412 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

413 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

414 
__isoc99_ssˇnf
);

416 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

417 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

418 
	$__isoc99_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

419 
	$__isoc99_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

420 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

421 
	#fsˇnf
 
__isoc99_fsˇnf


	)

422 
	#sˇnf
 
__isoc99_sˇnf


	)

423 
	#ssˇnf
 
__isoc99_ssˇnf


	)

427 #ifdef 
__USE_ISOC99


432 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

433 
__gnuc_va_li°
 
__¨g
)

434 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

440 
	$vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
)

441 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

444 
	$vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

445 c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
)

446 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

449 #i‡!
	`__GLIBC_USE
 (
DEPRECATED_SCANF
)

450 #i‡
deföed
 
__REDIRECT
 && !deföed 
__LDBL_COMPAT


451 
	`__REDIRECT
 (
vfsˇnf
,

452 (
FILE
 *
__ª°ri˘
 
__s
,

453 c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
),

454 
__isoc99_vfsˇnf
)

455 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

456 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

457 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

458 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

459 
	`__REDIRECT_NTH
 (
vssˇnf
,

460 (c⁄° *
__ª°ri˘
 
__s
,

461 c⁄° *
__ª°ri˘
 
__f‹m©
,

462 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

463 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

464 #ñi‡!
deföed
 
__REDIRECT


465 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

466 c⁄° *
__ª°ri˘
 
__f‹m©
,

467 
__gnuc_va_li°
 
__¨g
Ë
__wur
;

468 
	$__isoc99_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

469 
__gnuc_va_li°
 
__¨g
Ë
__wur
;

470 
	$__isoc99_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

471 c⁄° *
__ª°ri˘
 
__f‹m©
,

472 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

473 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

474 
	#vsˇnf
 
__isoc99_vsˇnf


	)

475 
	#vssˇnf
 
__isoc99_vssˇnf


	)

485 
	`fgëc
 (
FILE
 *
__°ªam
);

486 
	`gëc
 (
FILE
 *
__°ªam
);

492 
	`gëch¨
 ();

494 #ifde‡
__USE_POSIX199506


499 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

500 
	`gëch¨_u∆ocked
 ();

503 #ifde‡
__USE_MISC


510 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

521 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

522 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

528 
	`putch¨
 (
__c
);

530 #ifde‡
__USE_MISC


537 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

540 #ifde‡
__USE_POSIX199506


545 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

546 
	`putch¨_u∆ocked
 (
__c
);

550 #i‡
deföed
 
__USE_MISC
 \

551 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

553 
	`gëw
 (
FILE
 *
__°ªam
);

556 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

564 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

565 
__wur
;

567 #i‡
	`__GLIBC_USE
 (
DEPRECATED_GETS
)

577 *
	$gës
 (*
__s
Ë
__wur
 
__©åibuã_dïªˇãd__
;

580 #ifde‡
__USE_GNU


587 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

588 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

592 #i‡
deföed
 
__USE_XOPEN2K8
 || 
	`__GLIBC_USE
 (
LIB_EXT2
)

603 
__ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

604 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

605 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

606 
__ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

607 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

608 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

616 
__ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

617 
size_t
 *
__ª°ri˘
 
__n
,

618 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

626 
	`Âuts
 (c⁄° *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

632 
	`puts
 (c⁄° *
__s
);

639 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

646 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

647 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

652 
size_t
 
	`fwrôe
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

653 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

655 #ifde‡
__USE_GNU


662 
	`Âuts_u∆ocked
 (c⁄° *
__ª°ri˘
 
__s
,

663 
FILE
 *
__ª°ri˘
 
__°ªam
);

666 #ifde‡
__USE_MISC


673 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

674 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

675 
size_t
 
	`fwrôe_u∆ocked
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

676 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

684 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

689 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

694 
	`ªwöd
 (
FILE
 *
__°ªam
);

701 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


702 #i‚de‡
__USE_FILE_OFFSET64


707 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

712 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

714 #ifde‡
__REDIRECT


715 
	`__REDIRECT
 (
f£eko
,

716 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

717 
f£eko64
);

718 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

720 
	#f£eko
 
f£eko64


	)

721 
	#·ñlo
 
·ñlo64


	)

726 #i‚de‡
__USE_FILE_OFFSET64


731 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

736 
	`f£ços
 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
);

738 #ifde‡
__REDIRECT


739 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

740 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

741 
	`__REDIRECT
 (
f£ços
,

742 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
), 
f£ços64
);

744 
	#fgëpos
 
fgëpos64


	)

745 
	#f£ços
 
f£ços64


	)

749 #ifde‡
__USE_LARGEFILE64


750 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

751 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

752 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

753 
	`f£ços64
 (
FILE
 *
__°ªam
, c⁄° 
Âos64_t
 *
__pos
);

757 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

759 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

761 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

763 #ifde‡
__USE_MISC


765 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

766 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

767 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

775 
	`≥º‹
 (c⁄° *
__s
);

781 
	~<bôs/sys_îæi°.h
>

784 #ifdef 
__USE_POSIX


786 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

789 #ifde‡
__USE_MISC


791 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

795 #ifde‡
__USE_POSIX2


800 
FILE
 *
	$p›í
 (c⁄° *
__comm™d
, c⁄° *
__modes
Ë
__wur
;

806 
	`p˛o£
 (
FILE
 *
__°ªam
);

810 #ifdef 
__USE_POSIX


812 *
	$˘îmid
 (*
__s
Ë
__THROW
;

816 #i‡(
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
Ë|| deföed 
__USE_GNU


818 *
	`cu£rid
 (*
__s
);

822 #ifdef 
__USE_GNU


823 
ob°ack
;

826 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

827 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

828 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

829 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

830 c⁄° *
__ª°ri˘
 
__f‹m©
,

831 
__gnuc_va_li°
 
__¨gs
)

832 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

836 #ifde‡
__USE_POSIX199506


840 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

844 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

847 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

850 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


853 
	~<bôs/gë›t_posix.h
>

858 
	`__uÊow
 (
FILE
 *);

859 
	`__ovîÊow
 (
FILE
 *, );

863 #ifde‡
__USE_EXTERN_INLINES


864 
	~<bôs/°dio.h
>

866 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


867 
	~<bôs/°dio2.h
>

869 #ifde‡
__LDBL_COMPAT


870 
	~<bôs/°dio-ldbl.h
>

873 
__END_DECLS


	@/usr/include/stdlib.h

22 #i‚def 
_STDLIB_H


24 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

25 
	~<bôs/libc-hódî-°¨t.h
>

28 
	#__√ed_size_t


	)

29 
	#__√ed_wch¨_t


	)

30 
	#__√ed_NULL


	)

31 
	~<°ddef.h
>

33 
	g__BEGIN_DECLS


35 
	#_STDLIB_H
 1

	)

37 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


39 
	~<bôs/waôÊags.h
>

40 
	~<bôs/waô°©us.h
>

43 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (°©us)

	)

44 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (°©us)

	)

45 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (°©us)

	)

46 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (°©us)

	)

47 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (°©us)

	)

48 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (°©us)

	)

49 #ifde‡
__WIFCONTINUED


50 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (°©us)

	)

55 
	~<bôs/Êﬂä.h
>

60 
	mquŸ
;

61 
	mªm
;

62 } 
	tdiv_t
;

65 #i‚de‡
__ldiv_t_deföed


68 
	mquŸ
;

69 
	mªm
;

70 } 
	tldiv_t
;

71 
	#__ldiv_t_deföed
 1

	)

74 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


76 
__exãnsi⁄__
 struct

78 
	mquŸ
;

79 
	mªm
;

80 } 
	tŒdiv_t
;

81 
	#__Œdiv_t_deföed
 1

	)

86 
	#RAND_MAX
 2147483647

	)

91 
	#EXIT_FAILURE
 1

	)

92 
	#EXIT_SUCCESS
 0

	)

96 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

97 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

101 
	$©of
 (c⁄° *
__≈å
)

102 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

104 
	$©oi
 (c⁄° *
__≈å
)

105 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

107 
	$©ﬁ
 (c⁄° *
__≈å
)

108 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

110 #ifde‡
__USE_ISOC99


112 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

113 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

117 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

118 **
__ª°ri˘
 
__íd±r
)

119 
__THROW
 
	`__n⁄nuŒ
 ((1));

121 #ifdef 
__USE_ISOC99


123 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

124 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

126 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

127 **
__ª°ri˘
 
__íd±r
)

128 
__THROW
 
	`__n⁄nuŒ
 ((1));

133 #i‡
__HAVE_FLOAT16
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

134 
_Flﬂt16
 
	$°πof16
 (c⁄° *
__ª°ri˘
 
__≈å
,

135 **
__ª°ri˘
 
__íd±r
)

136 
__THROW
 
	`__n⁄nuŒ
 ((1));

139 #i‡
__HAVE_FLOAT32
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

140 
_Flﬂt32
 
	$°πof32
 (c⁄° *
__ª°ri˘
 
__≈å
,

141 **
__ª°ri˘
 
__íd±r
)

142 
__THROW
 
	`__n⁄nuŒ
 ((1));

145 #i‡
__HAVE_FLOAT64
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

146 
_Flﬂt64
 
	$°πof64
 (c⁄° *
__ª°ri˘
 
__≈å
,

147 **
__ª°ri˘
 
__íd±r
)

148 
__THROW
 
	`__n⁄nuŒ
 ((1));

151 #i‡
__HAVE_FLOAT128
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

152 
_Flﬂt128
 
	$°πof128
 (c⁄° *
__ª°ri˘
 
__≈å
,

153 **
__ª°ri˘
 
__íd±r
)

154 
__THROW
 
	`__n⁄nuŒ
 ((1));

157 #i‡
__HAVE_FLOAT32X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

158 
_Flﬂt32x
 
	$°πof32x
 (c⁄° *
__ª°ri˘
 
__≈å
,

159 **
__ª°ri˘
 
__íd±r
)

160 
__THROW
 
	`__n⁄nuŒ
 ((1));

163 #i‡
__HAVE_FLOAT64X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

164 
_Flﬂt64x
 
	$°πof64x
 (c⁄° *
__ª°ri˘
 
__≈å
,

165 **
__ª°ri˘
 
__íd±r
)

166 
__THROW
 
	`__n⁄nuŒ
 ((1));

169 #i‡
__HAVE_FLOAT128X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

170 
_Flﬂt128x
 
	$°πof128x
 (c⁄° *
__ª°ri˘
 
__≈å
,

171 **
__ª°ri˘
 
__íd±r
)

172 
__THROW
 
	`__n⁄nuŒ
 ((1));

176 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

177 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

178 
__THROW
 
	`__n⁄nuŒ
 ((1));

180 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

181 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

182 
__THROW
 
	`__n⁄nuŒ
 ((1));

184 #ifde‡
__USE_MISC


186 
__exãnsi⁄__


187 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

188 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

189 
__THROW
 
	`__n⁄nuŒ
 ((1));

191 
__exãnsi⁄__


192 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

193 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

194 
__THROW
 
	`__n⁄nuŒ
 ((1));

197 #ifde‡
__USE_ISOC99


199 
__exãnsi⁄__


200 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

201 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

202 
__THROW
 
	`__n⁄nuŒ
 ((1));

204 
__exãnsi⁄__


205 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

206 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

207 
__THROW
 
	`__n⁄nuŒ
 ((1));

211 #i‡
	`__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

212 
	$°r‰omd
 (*
__de°
, 
size_t
 
__size
, c⁄° *
__f‹m©
,

213 
__f
)

214 
__THROW
 
	`__n⁄nuŒ
 ((3));

216 
	$°r‰omf
 (*
__de°
, 
size_t
 
__size
, c⁄° *
__f‹m©
,

217 
__f
)

218 
__THROW
 
	`__n⁄nuŒ
 ((3));

220 
	$°r‰oml
 (*
__de°
, 
size_t
 
__size
, c⁄° *
__f‹m©
,

221 
__f
)

222 
__THROW
 
	`__n⁄nuŒ
 ((3));

225 #i‡
__HAVE_FLOAT16
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

226 
	$°r‰omf16
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

227 
_Flﬂt16
 
__f
)

228 
__THROW
 
	`__n⁄nuŒ
 ((3));

231 #i‡
__HAVE_FLOAT32
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

232 
	$°r‰omf32
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

233 
_Flﬂt32
 
__f
)

234 
__THROW
 
	`__n⁄nuŒ
 ((3));

237 #i‡
__HAVE_FLOAT64
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

238 
	$°r‰omf64
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

239 
_Flﬂt64
 
__f
)

240 
__THROW
 
	`__n⁄nuŒ
 ((3));

243 #i‡
__HAVE_FLOAT128
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

244 
	$°r‰omf128
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

245 
_Flﬂt128
 
__f
)

246 
__THROW
 
	`__n⁄nuŒ
 ((3));

249 #i‡
__HAVE_FLOAT32X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

250 
	$°r‰omf32x
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

251 
_Flﬂt32x
 
__f
)

252 
__THROW
 
	`__n⁄nuŒ
 ((3));

255 #i‡
__HAVE_FLOAT64X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

256 
	$°r‰omf64x
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

257 
_Flﬂt64x
 
__f
)

258 
__THROW
 
	`__n⁄nuŒ
 ((3));

261 #i‡
__HAVE_FLOAT128X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

262 
	$°r‰omf128x
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

263 
_Flﬂt128x
 
__f
)

264 
__THROW
 
	`__n⁄nuŒ
 ((3));

268 #ifde‡
__USE_GNU


272 
	~<bôs/ty≥s/loˇÀ_t.h
>

274 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

275 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

276 
loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

278 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

279 **
__ª°ri˘
 
__íd±r
,

280 
__ba£
, 
loˇÀ_t
 
__loc
)

281 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

283 
__exãnsi⁄__


284 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

285 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

286 
loˇÀ_t
 
__loc
)

287 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

289 
__exãnsi⁄__


290 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

291 **
__ª°ri˘
 
__íd±r
,

292 
__ba£
, 
loˇÀ_t
 
__loc
)

293 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

295 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

296 **
__ª°ri˘
 
__íd±r
, 
loˇÀ_t
 
__loc
)

297 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

299 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

300 **
__ª°ri˘
 
__íd±r
, 
loˇÀ_t
 
__loc
)

301 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

303 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

304 **
__ª°ri˘
 
__íd±r
,

305 
loˇÀ_t
 
__loc
)

306 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

308 #i‡
__HAVE_FLOAT16


309 
_Flﬂt16
 
	$°πof16_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

310 **
__ª°ri˘
 
__íd±r
,

311 
loˇÀ_t
 
__loc
)

312 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

315 #i‡
__HAVE_FLOAT32


316 
_Flﬂt32
 
	$°πof32_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

317 **
__ª°ri˘
 
__íd±r
,

318 
loˇÀ_t
 
__loc
)

319 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

322 #i‡
__HAVE_FLOAT64


323 
_Flﬂt64
 
	$°πof64_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

324 **
__ª°ri˘
 
__íd±r
,

325 
loˇÀ_t
 
__loc
)

326 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

329 #i‡
__HAVE_FLOAT128


330 
_Flﬂt128
 
	$°πof128_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

331 **
__ª°ri˘
 
__íd±r
,

332 
loˇÀ_t
 
__loc
)

333 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

336 #i‡
__HAVE_FLOAT32X


337 
_Flﬂt32x
 
	$°πof32x_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

338 **
__ª°ri˘
 
__íd±r
,

339 
loˇÀ_t
 
__loc
)

340 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

343 #i‡
__HAVE_FLOAT64X


344 
_Flﬂt64x
 
	$°πof64x_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

345 **
__ª°ri˘
 
__íd±r
,

346 
loˇÀ_t
 
__loc
)

347 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

350 #i‡
__HAVE_FLOAT128X


351 
_Flﬂt128x
 
	$°πof128x_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

352 **
__ª°ri˘
 
__íd±r
,

353 
loˇÀ_t
 
__loc
)

354 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

359 #ifde‡
__USE_EXTERN_INLINES


360 
__exã∫_ölöe
 

361 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

363  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

364 
	}
}

365 
__exã∫_ölöe
 

366 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

368  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

369 
	}
}

371 #ifde‡
__USE_ISOC99


372 
__exãnsi⁄__
 
__exã∫_ölöe
 

373 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

375  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

376 
	}
}

381 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


385 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

388 
	$a64l
 (c⁄° *
__s
)

389 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

393 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


394 
	~<sys/ty≥s.h
>

401 
	$øndom
 (Ë
__THROW
;

404 
	$§™dom
 (
__£ed
Ë
__THROW
;

410 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

411 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

415 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

418 #ifde‡
__USE_MISC


423 
	søndom_d©a


425 
öt32_t
 *
Âå
;

426 
öt32_t
 *
Ωå
;

427 
öt32_t
 *
°©e
;

428 
ønd_ty≥
;

429 
ønd_deg
;

430 
ønd_£p
;

431 
öt32_t
 *
íd_±r
;

434 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

435 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

437 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

438 
__THROW
 
	`__n⁄nuŒ
 ((2));

440 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

441 
size_t
 
__°©ñí
,

442 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

443 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

445 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

446 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

447 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

453 
	$ønd
 (Ë
__THROW
;

455 
	$§™d
 (
__£ed
Ë
__THROW
;

457 #ifde‡
__USE_POSIX199506


459 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

463 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


467 
	$dønd48
 (Ë
__THROW
;

468 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

471 
	$Ã™d48
 (Ë
__THROW
;

472 
	$ƒ™d48
 (
__xsubi
[3])

473 
__THROW
 
	`__n⁄nuŒ
 ((1));

476 
	$mønd48
 (Ë
__THROW
;

477 
	$jønd48
 (
__xsubi
[3])

478 
__THROW
 
	`__n⁄nuŒ
 ((1));

481 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

482 *
	$£ed48
 (
__£ed16v
[3])

483 
__THROW
 
	`__n⁄nuŒ
 ((1));

484 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

486 #ifde‡
__USE_MISC


490 
	sdønd48_d©a


492 
__x
[3];

493 
__ﬁd_x
[3];

494 
__c
;

495 
__öô
;

496 
__exãnsi⁄__
 
__a
;

501 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

502 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

503 
	$î™d48_r
 (
__xsubi
[3],

504 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

505 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

508 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

509 *
__ª°ri˘
 
__ªsu…
)

510 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

511 
	$ƒ™d48_r
 (
__xsubi
[3],

512 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

513 *
__ª°ri˘
 
__ªsu…
)

514 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

517 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

518 *
__ª°ri˘
 
__ªsu…
)

519 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

520 
	$jønd48_r
 (
__xsubi
[3],

521 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

522 *
__ª°ri˘
 
__ªsu…
)

523 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

526 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

527 
__THROW
 
	`__n⁄nuŒ
 ((2));

529 
	$£ed48_r
 (
__£ed16v
[3],

530 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

532 
	$lc⁄g48_r
 (
__∑øm
[7],

533 
dønd48_d©a
 *
__buf„r
)

534 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

539 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__


540 
	`__©åibuã_Æloc_size__
 ((1)Ë
__wur
;

542 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

543 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((1, 2)Ë
__wur
;

550 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

551 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
 
	`__©åibuã_Æloc_size__
 ((2));

553 #ifde‡
__USE_MISC


559 *
	$ªÆloˇºay
 (*
__±r
, 
size_t
 
__nmemb
, size_à
__size
)

560 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__


561 
	`__©åibuã_Æloc_size__
 ((2, 3));

565 
	$‰ì
 (*
__±r
Ë
__THROW
;

567 #ifde‡
__USE_MISC


568 
	~<Æloˇ.h
>

571 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

572 || 
deföed
 
__USE_MISC


574 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__


575 
	`__©åibuã_Æloc_size__
 ((1)Ë
__wur
;

578 #ifde‡
__USE_XOPEN2K


580 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

581 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

584 #ifde‡
__USE_ISOC11


586 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

587 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((2)Ë
__wur
;

591 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

595 
	$©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

597 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


599 #ifde‡
__˝lu•lus


600 "C++" 
	$©_quick_exô
 ((*
__func
) ())

601 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

603 
	$©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

607 #ifdef 
__USE_MISC


610 
	$⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

611 
__THROW
 
	`__n⁄nuŒ
 ((1));

617 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

619 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


623 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

626 #ifde‡
__USE_ISOC99


629 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

634 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

636 #ifde‡
__USE_GNU


639 *
	$£cuª_gëív
 (c⁄° *
__«me
)

640 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

643 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


647 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

650 #ifde‡
__USE_XOPEN2K


653 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

654 
__THROW
 
	`__n⁄nuŒ
 ((2));

657 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

660 #ifdef 
__USE_MISC


664 
	$˛óªnv
 (Ë
__THROW
;

668 #i‡
deföed
 
__USE_MISC
 \

669 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

675 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

678 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


687 #i‚de‡
__USE_FILE_OFFSET64


688 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

690 #ifde‡
__REDIRECT


691 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

692 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

694 
	#mk°emp
 
mk°emp64


	)

697 #ifde‡
__USE_LARGEFILE64


698 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

702 #ifde‡
__USE_MISC


709 #i‚de‡
__USE_FILE_OFFSET64


710 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

712 #ifde‡
__REDIRECT


713 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

714 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

716 
	#mk°emps
 
mk°emps64


	)

719 #ifde‡
__USE_LARGEFILE64


720 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

721 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

725 #ifde‡
__USE_XOPEN2K8


731 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

734 #ifde‡
__USE_GNU


741 #i‚de‡
__USE_FILE_OFFSET64


742 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

744 #ifde‡
__REDIRECT


745 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

746 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

748 
	#mko°emp
 
mko°emp64


	)

751 #ifde‡
__USE_LARGEFILE64


752 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

761 #i‚de‡
__USE_FILE_OFFSET64


762 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

763 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

765 #ifde‡
__REDIRECT


766 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

767 
__Êags
), 
mko°emps64
)

768 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

770 
	#mko°emps
 
mko°emps64


	)

773 #ifde‡
__USE_LARGEFILE64


774 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

775 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

784 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

787 #ifdef 
__USE_GNU


790 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

791 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

794 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


800 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

801 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

806 #i‚de‡
__COMPAR_FN_T


807 
	#__COMPAR_FN_T


	)

808 (*
	t__com∑r_‚_t
) (const *, const *);

810 #ifdef 
__USE_GNU


811 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

814 #ifde‡
__USE_GNU


815 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

820 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

821 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

822 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

824 #ifde‡
__USE_EXTERN_INLINES


825 
	~<bôs/°dlib-b£¨ch.h
>

830 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

831 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

832 #ifde‡
__USE_GNU


833 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

834 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

835 
	`__n⁄nuŒ
 ((1, 4));

840 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

841 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

843 #ifde‡
__USE_ISOC99


844 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

845 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

852 
div_t
 
	$div
 (
__numî
, 
__díom
)

853 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

854 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

855 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

857 #ifde‡
__USE_ISOC99


858 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

859 
__díom
)

860 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

864 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

865 || 
deföed
 
__USE_MISC


872 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

873 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

878 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

879 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

884 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

885 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

888 #ifde‡
__USE_MISC


890 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

891 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

892 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

893 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

894 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

895 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

896 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

897 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

902 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

903 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

904 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

905 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

906 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

907 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

909 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

910 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

911 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

912 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

913 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

914 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

915 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

916 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

922 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
;

925 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

926 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

929 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
;

933 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

934 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

936 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

937 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

938 
__THROW
;

941 #ifde‡
__USE_MISC


946 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

950 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


957 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

958 *c⁄° *
__ª°ri˘
 
__tokís
,

959 **
__ª°ri˘
 
__vÆuï
)

960 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

966 #ifde‡
__USE_XOPEN2KXSI


968 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

971 #ifde‡
__USE_XOPEN_EXTENDED


976 
	$gø¡±
 (
__fd
Ë
__THROW
;

980 
	$u∆ock±
 (
__fd
Ë
__THROW
;

985 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

988 #ifde‡
__USE_GNU


992 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

993 
__THROW
 
	`__n⁄nuŒ
 ((2));

996 
	`gë±
 ();

999 #ifde‡
__USE_MISC


1003 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

1004 
__THROW
 
	`__n⁄nuŒ
 ((1));

1007 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K


1010 
	$ây¶Ÿ
 (Ë
__THROW
;

1013 
	~<bôs/°dlib-Êﬂt.h
>

1016 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1017 
	~<bôs/°dlib.h
>

1019 #ifde‡
__LDBL_COMPAT


1020 
	~<bôs/°dlib-ldbl.h
>

1023 
__END_DECLS


	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

26 
	~<bôs/libc-hódî-°¨t.h
>

28 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

36 #i‡
deföed
 
__˝lu•lus
 && (
__GNUC_PREREQ
 (4, 4) \

37 || 
	$__glibc_˛™g_¥îeq
 (3, 5))

38 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

43 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

44 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

47 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

48 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

53 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || 
	`__GLIBC_USE
 (
ISOC2X
)

54 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

55 
__c
, 
size_t
 
__n
)

56 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

61 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

64 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

65 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

68 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


71 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

72 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

73 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

74 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

76 #ifde‡
__OPTIMIZE__


77 
__exã∫_Æways_ölöe
 *

78 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


80  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

83 
__exã∫_Æways_ölöe
 const *

84 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


86  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

89 
	}
}

91 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

92 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

95 #ifde‡
__USE_GNU


98 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


99 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

100 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

101 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

102 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

104 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

105 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

109 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


110 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

111 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

112 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

113 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

115 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

116 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

122 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

123 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

125 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

126 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

127 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

130 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

131 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

133 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

134 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

137 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

138 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

140 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

141 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

144 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

147 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

148 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

149 
__THROW
 
	`__n⁄nuŒ
 ((2));

151 #ifde‡
__USE_XOPEN2K8


153 
	~<bôs/ty≥s/loˇÀ_t.h
>

156 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
loˇÀ_t
 
__l
)

157 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

160 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

161 
loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

164 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8
 \

165 || 
	`__GLIBC_USE
 (
LIB_EXT2
Ë|| 
	$__GLIBC_USE
 (
ISOC2X
))

167 *
	$°rdup
 (c⁄° *
__s
)

168 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

174 #i‡
deföed
 
__USE_XOPEN2K8
 || 
	`__GLIBC_USE
 (
LIB_EXT2
Ë|| __GLIBC_USE (
ISOC2X
)

175 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

176 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

179 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


181 
	#°rdu∑
(
s
) \

182 (
__exãnsi⁄__
 \

184 c⁄° *
__ﬁd
 = (
s
); \

185 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

186 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

187 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

188 
	}
}))

	)

191 
	#°∫du∑
(
s
, 
n
) \

192 (
__exãnsi⁄__
 \

194 c⁄° *
__ﬁd
 = (
s
); \

195 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

196 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

197 
__√w
[
__Àn
] = '\0'; \

198 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

199 }))

	)

203 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


206 *
°rchr
 (*
__s
, 
__c
)

207 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

208 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

209 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

211 #ifde‡
__OPTIMIZE__


212 
__exã∫_Æways_ölöe
 *

213 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


215  
__buûtö_°rchr
 (
__s
, 
__c
);

218 
__exã∫_Æways_ölöe
 const *

219 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


221  
__buûtö_°rchr
 (
__s
, 
__c
);

226 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

227 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

230 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


233 *
	`°ºchr
 (*
__s
, 
__c
)

234 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

235 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

236 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

238 #ifde‡
__OPTIMIZE__


239 
__exã∫_Æways_ölöe
 *

240 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


242  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

245 
__exã∫_Æways_ölöe
 const *

246 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


248  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

251 
	}
}

253 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

254 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

257 #ifde‡
__USE_GNU


260 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


261 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

262 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

263 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

264 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

266 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

267 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

273 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

274 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

277 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

278 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

280 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


283 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

284 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

285 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

286 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

288 #ifde‡
__OPTIMIZE__


289 
__exã∫_Æways_ölöe
 *

290 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


292  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

295 
__exã∫_Æways_ölöe
 const *

296 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


298  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

301 
	}
}

303 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

304 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

307 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


310 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

311 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

312 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

313 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

315 #ifde‡
__OPTIMIZE__


316 
__exã∫_Æways_ölöe
 *

317 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


319  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

322 
__exã∫_Æways_ölöe
 const *

323 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


325  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

328 
	}
}

330 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

331 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

336 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

337 
__THROW
 
	`__n⁄nuŒ
 ((2));

341 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

342 c⁄° *
__ª°ri˘
 
__dñim
,

343 **
__ª°ri˘
 
__ßve_±r
)

344 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

345 #ifde‡
__USE_POSIX


346 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

347 **
__ª°ri˘
 
__ßve_±r
)

348 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

351 #ifde‡
__USE_GNU


353 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


354 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

355 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

356 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

357 c⁄° *
__√edÀ
)

358 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

360 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

361 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

365 #ifde‡
__USE_GNU


369 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

370 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

371 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

375 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

376 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

377 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

378 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

379 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

380 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

385 
size_t
 
	$°æí
 (c⁄° *
__s
)

386 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

388 #ifdef 
__USE_XOPEN2K8


391 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

392 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

397 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

398 #ifde‡
__USE_XOPEN2K


406 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


409 #ifde‡
__REDIRECT_NTH


410 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

411 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

412 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

414 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

415 
__THROW
 
	`__n⁄nuŒ
 ((2));

416 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

421 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

422 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

426 #ifde‡
__USE_XOPEN2K8


428 *
	$°ªº‹_l
 (
__î∫um
, 
loˇÀ_t
 
__l
Ë
__THROW
;

431 #ifde‡
__USE_MISC


432 
	~<°rögs.h
>

436 
	$ex∂icô_bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

440 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

441 c⁄° *
__ª°ri˘
 
__dñim
)

442 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

445 #ifdef 
__USE_XOPEN2K8


447 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

450 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

451 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

452 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

453 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

457 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

458 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

459 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

460 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

461 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

462 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

465 #ifdef 
__USE_GNU


467 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

468 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

471 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

474 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

476 #i‚de‡
ba£«me


481 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


482 "C++" *
	$ba£«me
 (*
__fûíame
)

483 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

484 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

485 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

487 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

492 #i‡
	`__GNUC_PREREQ
 (3,4)

493 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


495 
	~<bôs/°rög_f‹tifõd.h
>

499 
__END_DECLS


	@/usr/include/time.h

22 #i‚def 
_TIME_H


23 
	#_TIME_H
 1

	)

25 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 
	#__√ed_NULL


	)

29 
	~<°ddef.h
>

33 
	~<bôs/time.h
>

37 
	~<bôs/ty≥s/˛ock_t.h
>

38 
	~<bôs/ty≥s/time_t.h
>

39 
	~<bôs/ty≥s/°ru˘_tm.h
>

41 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_ISOC11


42 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

45 #ifde‡
__USE_POSIX199309


46 
	~<bôs/ty≥s/˛ockid_t.h
>

47 
	~<bôs/ty≥s/timî_t.h
>

48 
	~<bôs/ty≥s/°ru˘_ôimî•ec.h
>

49 
	gsigevít
;

52 #ifde‡
__USE_XOPEN2K


53 #i‚de‡
__pid_t_deföed


54 
__pid_t
 
	tpid_t
;

55 
	#__pid_t_deföed


	)

59 #ifde‡
__USE_XOPEN2K8


60 
	~<bôs/ty≥s/loˇÀ_t.h
>

63 #ifde‡
__USE_ISOC11


65 
	#TIME_UTC
 1

	)

68 
__BEGIN_DECLS


72 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

75 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

78 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

79 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

82 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

88 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

89 c⁄° *
__ª°ri˘
 
__f‹m©
,

90 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

92 #ifde‡
__USE_XOPEN


95 *
	$°Ωtime
 (c⁄° *
__ª°ri˘
 
__s
,

96 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

97 
__THROW
;

100 #ifde‡
__USE_XOPEN2K8


104 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

105 c⁄° *
__ª°ri˘
 
__f‹m©
,

106 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

107 
loˇÀ_t
 
__loc
Ë
__THROW
;

110 #ifde‡
__USE_GNU


111 *
	$°Ωtime_l
 (c⁄° *
__ª°ri˘
 
__s
,

112 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

113 
loˇÀ_t
 
__loc
Ë
__THROW
;

119 
tm
 *
	$gmtime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

123 
tm
 *
	$loˇ…ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

125 #i‡
deföed
 
__USE_POSIX
 || 
	`__GLIBC_USE
 (
ISOC2X
)

128 
tm
 *
	$gmtime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

129 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

133 
tm
 *
	$loˇ…ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

134 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

139 *
	$as˘ime
 (c⁄° 
tm
 *
__ç
Ë
__THROW
;

142 *
	$˘ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

144 #i‡
deföed
 
__USE_POSIX
 || 
	`__GLIBC_USE
 (
ISOC2X
)

149 *
	$as˘ime_r
 (c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

150 *
__ª°ri˘
 
__buf
Ë
__THROW
;

153 *
	$˘ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

154 *
__ª°ri˘
 
__buf
Ë
__THROW
;

159 *
__tz«me
[2];

160 
__daylight
;

161 
__timez⁄e
;

164 #ifdef 
__USE_POSIX


166 *
tz«me
[2];

170 
	$tz£t
 (Ë
__THROW
;

173 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


174 
daylight
;

175 
timez⁄e
;

181 
	#__i¶óp
(
yór
) \

182 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

185 #ifde‡
__USE_MISC


190 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

193 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

196 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

200 #ifde‡
__USE_POSIX199309


205 
	`«no¶ìp
 (c⁄° 
time•ec
 *
__ªque°ed_time
,

206 
time•ec
 *
__ªmaöög
);

210 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

213 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

216 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, c⁄° 
time•ec
 *
__ç
)

217 
__THROW
;

219 #ifde‡
__USE_XOPEN2K


224 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

225 c⁄° 
time•ec
 *
__ªq
,

226 
time•ec
 *
__ªm
);

229 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

234 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

235 
sigevít
 *
__ª°ri˘
 
__evp
,

236 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

239 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

242 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

243 c⁄° 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

244 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

247 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

248 
__THROW
;

251 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

255 #ifde‡
__USE_ISOC11


257 
	$time•ec_gë
 (
time•ec
 *
__ts
, 
__ba£
)

258 
__THROW
 
	`__n⁄nuŒ
 ((1));

262 #ifde‡
__USE_XOPEN_EXTENDED


274 
gëd©e_îr
;

283 
tm
 *
	`gëd©e
 (c⁄° *
__°rög
);

286 #ifde‡
__USE_GNU


297 
	`gëd©e_r
 (c⁄° *
__ª°ri˘
 
__°rög
,

298 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

301 
__END_DECLS


	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

120 #unde‡
__USE_ISOC11


121 #unde‡
__USE_ISOC99


122 #unde‡
__USE_ISOC95


123 #unde‡
__USE_ISOCXX11


124 #unde‡
__USE_POSIX


125 #unde‡
__USE_POSIX2


126 #unde‡
__USE_POSIX199309


127 #unde‡
__USE_POSIX199506


128 #unde‡
__USE_XOPEN


129 #unde‡
__USE_XOPEN_EXTENDED


130 #unde‡
__USE_UNIX98


131 #unde‡
__USE_XOPEN2K


132 #unde‡
__USE_XOPEN2KXSI


133 #unde‡
__USE_XOPEN2K8


134 #unde‡
__USE_XOPEN2K8XSI


135 #unde‡
__USE_LARGEFILE


136 #unde‡
__USE_LARGEFILE64


137 #unde‡
__USE_FILE_OFFSET64


138 #unde‡
__USE_MISC


139 #unde‡
__USE_ATFILE


140 #unde‡
__USE_GNU


141 #unde‡
__USE_FORTIFY_LEVEL


142 #unde‡
__KERNEL_STRICT_NAMES


143 #unde‡
__GLIBC_USE_ISOC2X


144 #unde‡
__GLIBC_USE_DEPRECATED_GETS


145 #unde‡
__GLIBC_USE_DEPRECATED_SCANF


149 #i‚de‡
_LOOSE_KERNEL_NAMES


150 
	#__KERNEL_STRICT_NAMES


	)

160 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


161 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

162 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

164 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

171 #i‡
deföed
 
__˛™g_maj‹__
 && deföed 
__˛™g_mö‹__


172 
	#__glibc_˛™g_¥îeq
(
maj
, 
mö
) \

173 ((
__˛™g_maj‹__
 << 16Ë+ 
__˛™g_mö‹__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

175 
	#__glibc_˛™g_¥îeq
(
maj
, 
mö
Ë0

	)

179 
	#__GLIBC_USE
(
F
Ë
__GLIBC_USE_
 ## 
	)
F

185 #i‡(
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE
) \

186 && !
deföed
 
	g_DEFAULT_SOURCE


188 #unde‡
_DEFAULT_SOURCE


189 
	#_DEFAULT_SOURCE
 1

	)

193 #ifde‡
_GNU_SOURCE


194 #unde‡
_ISOC95_SOURCE


195 
	#_ISOC95_SOURCE
 1

	)

196 #unde‡
_ISOC99_SOURCE


197 
	#_ISOC99_SOURCE
 1

	)

198 #unde‡
_ISOC11_SOURCE


199 
	#_ISOC11_SOURCE
 1

	)

200 #unde‡
_ISOC2X_SOURCE


201 
	#_ISOC2X_SOURCE
 1

	)

202 #unde‡
_POSIX_SOURCE


203 
	#_POSIX_SOURCE
 1

	)

204 #unde‡
_POSIX_C_SOURCE


205 
	#_POSIX_C_SOURCE
 200809L

	)

206 #unde‡
_XOPEN_SOURCE


207 
	#_XOPEN_SOURCE
 700

	)

208 #unde‡
_XOPEN_SOURCE_EXTENDED


209 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

210 #unde‡
_LARGEFILE64_SOURCE


211 
	#_LARGEFILE64_SOURCE
 1

	)

212 #unde‡
_DEFAULT_SOURCE


213 
	#_DEFAULT_SOURCE
 1

	)

214 #unde‡
_ATFILE_SOURCE


215 
	#_ATFILE_SOURCE
 1

	)

220 #i‡(
deföed
 
_DEFAULT_SOURCE
 \

221 || (!
deföed
 
	g__STRICT_ANSI__
 \

222 && !
deföed
 
	g_ISOC99_SOURCE
 && !deföed 
	g_ISOC11_SOURCE
 \

223 && !
deföed
 
	g_ISOC2X_SOURCE
 \

224 && !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 \

225 && !
deföed
 
	g_XOPEN_SOURCE
))

226 #unde‡
_DEFAULT_SOURCE


227 
	#_DEFAULT_SOURCE
 1

	)

231 #i‡(
deföed
 
_ISOC2X_SOURCE
 \

232 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ > 201710L))

233 
	#__GLIBC_USE_ISOC2X
 1

	)

235 
	#__GLIBC_USE_ISOC2X
 0

	)

239 #i‡(
deföed
 
_ISOC11_SOURCE
 || deföed 
_ISOC2X_SOURCE
 \

240 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

241 
	#__USE_ISOC11
 1

	)

245 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

246 || 
deföed
 
_ISOC2X_SOURCE
 \

247 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

248 
	#__USE_ISOC99
 1

	)

252 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

253 || 
deföed
 
_ISOC2X_SOURCE
 \

254 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

255 
	#__USE_ISOC95
 1

	)

258 #ifde‡
__˝lu•lus


260 #i‡
__˝lu•lus
 >= 201703L

261 
	#__USE_ISOC11
 1

	)

265 #i‡
__˝lu•lus
 >201103L || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__


266 
	#__USE_ISOCXX11
 1

	)

267 
	#__USE_ISOC99
 1

	)

274 #ifde‡
_DEFAULT_SOURCE


275 #i‡!
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE


276 
	#__USE_POSIX_IMPLICITLY
 1

	)

278 #unde‡
_POSIX_SOURCE


279 
	#_POSIX_SOURCE
 1

	)

280 #unde‡
_POSIX_C_SOURCE


281 
	#_POSIX_C_SOURCE
 200809L

	)

284 #i‡((!
deföed
 
__STRICT_ANSI__
 \

285 || (
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) >= 500)) \

286 && !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

287 
	#_POSIX_SOURCE
 1

	)

288 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

289 
	#_POSIX_C_SOURCE
 2

	)

290 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

291 
	#_POSIX_C_SOURCE
 199506L

	)

292 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

293 
	#_POSIX_C_SOURCE
 200112L

	)

295 
	#_POSIX_C_SOURCE
 200809L

	)

297 
	#__USE_POSIX_IMPLICITLY
 1

	)

306 #i‡((!
deföed
 
_POSIX_C_SOURCE
 || (_POSIX_C_SOURCE - 0) < 199506L) \

307 && (
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE
))

308 
	#_POSIX_SOURCE
 1

	)

309 #unde‡
_POSIX_C_SOURCE


310 
	#_POSIX_C_SOURCE
 199506L

	)

313 #i‡(
deföed
 
_POSIX_SOURCE
 \

314 || (
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >= 1) \

315 || 
deföed
 
_XOPEN_SOURCE
)

316 
	#__USE_POSIX
 1

	)

319 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


320 
	#__USE_POSIX2
 1

	)

323 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199309L

324 
	#__USE_POSIX199309
 1

	)

327 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199506L

328 
	#__USE_POSIX199506
 1

	)

331 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200112L

332 
	#__USE_XOPEN2K
 1

	)

333 #unde‡
__USE_ISOC95


334 
	#__USE_ISOC95
 1

	)

335 #unde‡
__USE_ISOC99


336 
	#__USE_ISOC99
 1

	)

339 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200809L

340 
	#__USE_XOPEN2K8
 1

	)

341 #unde‡
_ATFILE_SOURCE


342 
	#_ATFILE_SOURCE
 1

	)

345 #ifdef 
_XOPEN_SOURCE


346 
	#__USE_XOPEN
 1

	)

347 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

348 
	#__USE_XOPEN_EXTENDED
 1

	)

349 
	#__USE_UNIX98
 1

	)

350 #unde‡
_LARGEFILE_SOURCE


351 
	#_LARGEFILE_SOURCE
 1

	)

352 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

353 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

354 
	#__USE_XOPEN2K8
 1

	)

355 
	#__USE_XOPEN2K8XSI
 1

	)

357 
	#__USE_XOPEN2K
 1

	)

358 
	#__USE_XOPEN2KXSI
 1

	)

359 #unde‡
__USE_ISOC95


360 
	#__USE_ISOC95
 1

	)

361 #unde‡
__USE_ISOC99


362 
	#__USE_ISOC99
 1

	)

365 #ifde‡
_XOPEN_SOURCE_EXTENDED


366 
	#__USE_XOPEN_EXTENDED
 1

	)

371 #ifde‡
_LARGEFILE_SOURCE


372 
	#__USE_LARGEFILE
 1

	)

375 #ifde‡
_LARGEFILE64_SOURCE


376 
	#__USE_LARGEFILE64
 1

	)

379 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

380 
	#__USE_FILE_OFFSET64
 1

	)

383 #i‡
deföed
 
_DEFAULT_SOURCE


384 
	#__USE_MISC
 1

	)

387 #ifdef 
_ATFILE_SOURCE


388 
	#__USE_ATFILE
 1

	)

391 #ifdef 
_GNU_SOURCE


392 
	#__USE_GNU
 1

	)

395 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

396 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

397 #i‡
_FORTIFY_SOURCE
 > 1

398 
	#__USE_FORTIFY_LEVEL
 2

	)

400 
	#__USE_FORTIFY_LEVEL
 1

	)

403 
	#__USE_FORTIFY_LEVEL
 0

	)

410 #i‡
deföed
 
__˝lu•lus
 ? __˝lu•lu†>201402L : deföed 
__USE_ISOC11


411 
	#__GLIBC_USE_DEPRECATED_GETS
 0

	)

413 
	#__GLIBC_USE_DEPRECATED_GETS
 1

	)

428 #i‡(
deföed
 
__USE_GNU
 \

429 && (
deföed
 
	g__˝lu•lus
 \

430 ? (
	g__˝lu•lus
 < 201103L && !
deföed
 
	g__GXX_EXPERIMENTAL_CXX0X__
) \

431 : (!
deföed
 
__STDC_VERSION__
 || __STDC_VERSION__ < 199901L)))

432 
	#__GLIBC_USE_DEPRECATED_SCANF
 1

	)

434 
	#__GLIBC_USE_DEPRECATED_SCANF
 0

	)

439 
	~<°dc-¥edef.h
>

447 #unde‡
__GNU_LIBRARY__


448 
	#__GNU_LIBRARY__
 6

	)

452 
	#__GLIBC__
 2

	)

453 
	#__GLIBC_MINOR__
 31

	)

455 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

456 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

459 #i‚de‡
__ASSEMBLER__


460 #i‚de‡
_SYS_CDEFS_H


461 
	~<sys/cdefs.h
>

466 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


467 
	#__USE_LARGEFILE
 1

	)

468 
	#__USE_LARGEFILE64
 1

	)

474 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

475 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

476 && 
deföed
 
	g__exã∫_ölöe


477 
	#__USE_EXTERN_INLINES
 1

	)

485 
	~<gnu/°ubs.h
>

	@/usr/include/strings.h

18 #i‚def 
_STRINGS_H


19 
	#_STRINGS_H
 1

	)

21 
	~<„©uªs.h
>

22 
	#__√ed_size_t


	)

23 
	~<°ddef.h
>

26 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

27 
	#__CORRECT_ISO_CPP_STRINGS_H_PROTO


	)

30 
	g__BEGIN_DECLS


32 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


34 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

35 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

38 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

39 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

42 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

45 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


48 *
	`ödex
 (*
__s
, 
__c
)

49 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

50 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

51 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

53 #i‡
deföed
 
__OPTIMIZE__


54 
__exã∫_Æways_ölöe
 *

55 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


57  
	`__buûtö_ödex
 (
__s
, 
__c
);

60 
__exã∫_Æways_ölöe
 const *

61 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


63  
	`__buûtö_ödex
 (
__s
, 
__c
);

66 
	}
}

68 *
	$ödex
 (c⁄° *
__s
, 
__c
)

69 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

73 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


76 *
	`rödex
 (*
__s
, 
__c
)

77 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

78 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

79 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

81 #i‡
deföed
 
__OPTIMIZE__


82 
__exã∫_Æways_ölöe
 *

83 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


85  
	`__buûtö_rödex
 (
__s
, 
__c
);

88 
__exã∫_Æways_ölöe
 const *

89 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


91  
	`__buûtö_rödex
 (
__s
, 
__c
);

94 
	}
}

96 *
	$rödex
 (c⁄° *
__s
, 
__c
)

97 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

101 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8
 || deföed 
__USE_XOPEN2K8XSI


104 
	$ffs
 (
__i
Ë
__THROW
 
__©åibuã_c⁄°__
;

109 #ifdef 
__USE_MISC


110 
	$ff¶
 (
__l
Ë
__THROW
 
__©åibuã_c⁄°__
;

111 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

112 
__THROW
 
__©åibuã_c⁄°__
;

116 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

117 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

120 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

121 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

123 #ifdef 
__USE_XOPEN2K8


125 
	~<bôs/ty≥s/loˇÀ_t.h
>

128 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
loˇÀ_t
 
__loc
)

129 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

133 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

134 
size_t
 
__n
, 
loˇÀ_t
 
__loc
)

135 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

138 
__END_DECLS


140 #i‡
	`__GNUC_PREREQ
 (3,4Ë&& 
__USE_FORTIFY_LEVEL
 > 0 \

141 && 
deföed
 
__f‹tify_fun˘i⁄


143 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


144 
	~<bôs/°rögs_f‹tifõd.h
>

	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

36 #ifde‡
__GCC_IEC_559


37 #i‡
__GCC_IEC_559
 > 0

38 
	#__STDC_IEC_559__
 1

	)

41 
	#__STDC_IEC_559__
 1

	)

44 #ifde‡
__GCC_IEC_559_COMPLEX


45 #i‡
__GCC_IEC_559_COMPLEX
 > 0

46 
	#__STDC_IEC_559_COMPLEX__
 1

	)

49 
	#__STDC_IEC_559_COMPLEX__
 1

	)

58 
	#__STDC_ISO_10646__
 201706L

	)

	@
1
.
1
/usr/include
39
896
Examples/dr_mp3.h
Examples/dr_wav.h
Examples/rnnoise_demo.c
rnnoise/config.h
rnnoise/examples/dr_mp3.h
rnnoise/examples/dr_wav.h
rnnoise/examples/rnnoise_demo.c
rnnoise/examples_bak/rnnoise_demo.c
rnnoise/include/rnnoise.h
rnnoise/src/_kiss_fft_guts.h
rnnoise/src/arch.h
rnnoise/src/celt_lpc.c
rnnoise/src/celt_lpc.h
rnnoise/src/common.h
rnnoise/src/denoise.c
rnnoise/src/kiss_fft.c
rnnoise/src/kiss_fft.h
rnnoise/src/opus_types.h
rnnoise/src/pitch.c
rnnoise/src/pitch.h
rnnoise/src/rnn.c
rnnoise/src/rnn.h
rnnoise/src/rnn_data.c
rnnoise/src/rnn_data.h
rnnoise/src/rnn_reader.c
rnnoise/src/tansig_table.h
/usr/include/assert.h
/usr/include/inttypes.h
/usr/include/limits.h
/usr/include/math.h
/usr/include/stdint.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/time.h
/usr/include/alloca.h
/usr/include/features.h
/usr/include/strings.h
/usr/include/stdc-predef.h
