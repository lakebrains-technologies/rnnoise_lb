!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ABORT	rnn_denoise.js	/^var ABORT = false;$/;"	v
ABORT	rnn_denoise_bak.js	/^var ABORT = false;$/;"	v
ABS16	rnnoise/src/arch.h	121;"	d
ABS16	rnnoise/src/arch.h	186;"	d
ABS32	rnnoise/src/arch.h	122;"	d
ABS32	rnnoise/src/arch.h	187;"	d
ACLOCAL	rnnoise/Makefile	/^ACLOCAL = ${SHELL} \/home\/lb\/rnnoise_test\/rnnoise-wasm\/rnnoise\/missing aclocal-1.16$/;"	m
ACLOCAL_AMFLAGS	rnnoise/Makefile	/^ACLOCAL_AMFLAGS = -I m4$/;"	m
ACLOCAL_M4	rnnoise/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACTIVATION_RELU	rnnoise/src/rnn.h	40;"	d
ACTIVATION_SIGMOID	rnnoise/src/rnn.h	39;"	d
ACTIVATION_TANH	rnnoise/src/rnn.h	38;"	d
ADD16	rnnoise/src/arch.h	215;"	d
ADD32	rnnoise/src/arch.h	217;"	d
ADD32_ovflw	rnnoise/src/arch.h	219;"	d
ALLOC_DYNAMIC	rnn_denoise_bak.js	/^var ALLOC_DYNAMIC = 2; \/\/ Cannot be freed except through sbrk$/;"	v
ALLOC_LAYER	rnnoise/src/rnn_reader.c	56;"	d	file:
ALLOC_NONE	rnn_denoise_bak.js	/^var ALLOC_NONE = 3; \/\/ Do not allocate$/;"	v
ALLOC_NORMAL	rnn_denoise.js	/^var ALLOC_NORMAL = 0; \/\/ Tries to use _malloc()$/;"	v
ALLOC_NORMAL	rnn_denoise_bak.js	/^var ALLOC_NORMAL = 0; \/\/ Tries to use _malloc()$/;"	v
ALLOC_STACK	rnn_denoise.js	/^var ALLOC_STACK = 1; \/\/ Lives for the duration of the current function call$/;"	v
ALLOC_STACK	rnn_denoise_bak.js	/^var ALLOC_STACK = 1; \/\/ Lives for the duration of the current function call$/;"	v
AMTAR	rnnoise/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AM_CFLAGS	rnnoise/Makefile	/^AM_CFLAGS = -I$(top_srcdir)\/include $(DEPS_CFLAGS)$/;"	m
AM_DEFAULT_VERBOSITY	rnnoise/Makefile	/^AM_DEFAULT_VERBOSITY = 0$/;"	m
AM_RECURSIVE_TARGETS	rnnoise/Makefile	/^AM_RECURSIVE_TARGETS = cscope$/;"	m
AM_V_CC	rnnoise/Makefile	/^AM_V_CC = $(am__v_CC_$(V))$/;"	m
AM_V_CCLD	rnnoise/Makefile	/^AM_V_CCLD = $(am__v_CCLD_$(V))$/;"	m
AM_V_GEN	rnnoise/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_P	rnnoise/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_at	rnnoise/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_lt	rnnoise/Makefile	/^AM_V_lt = $(am__v_lt_$(V))$/;"	m
AR	rnnoise/Makefile	/^AR = \/home\/lb\/rnnoise_test\/emsdk\/upstream\/emscripten\/emar$/;"	m
ARCH_H	rnnoise/src/arch.h	35;"	d
ASMJS_PAGE_SIZE	rnn_denoise_bak.js	/^var ASMJS_PAGE_SIZE = 16777216;$/;"	v
ASM_CONSTS	rnn_denoise.js	/^var ASM_CONSTS = {$/;"	v
ASM_CONSTS	rnn_denoise_bak.js	/^var ASM_CONSTS = {$/;"	v
ASSERTIONS	rnn_denoise.js	/^var ASSERTIONS = false;$/;"	v
ASSERTIONS	rnn_denoise_bak.js	/^var ASSERTIONS = false;$/;"	v
AUTOCONF	rnnoise/Makefile	/^AUTOCONF = ${SHELL} \/home\/lb\/rnnoise_test\/rnnoise-wasm\/rnnoise\/missing autoconf$/;"	m
AUTOHEADER	rnnoise/Makefile	/^AUTOHEADER = ${SHELL} \/home\/lb\/rnnoise_test\/rnnoise-wasm\/rnnoise\/missing autoheader$/;"	m
AUTOMAKE	rnnoise/Makefile	/^AUTOMAKE = ${SHELL} \/home\/lb\/rnnoise_test\/rnnoise-wasm\/rnnoise\/missing automake-1.16$/;"	m
AWK	rnnoise/Makefile	/^AWK = mawk$/;"	m
AsciiToString	rnn_denoise.js	/^function AsciiToString(ptr) {$/;"	f
AsciiToString	rnn_denoise_bak.js	/^function AsciiToString(ptr) {$/;"	f
BUFF_SIZE	rnn_denoise.js	/^var BUFF_SIZE = 16384;$/;"	v
BUFF_SIZE	rnn_denoise_bak.js	/^var BUFF_SIZE = 16384;$/;"	v
CC	rnnoise/Makefile	/^CC = \/home\/lb\/rnnoise_test\/emsdk\/upstream\/emscripten\/emcc$/;"	m
CCDEPMODE	rnnoise/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCLD	rnnoise/Makefile	/^CCLD = $(CC)$/;"	m
CELT_SIG_SCALE	rnnoise/src/arch.h	49;"	d
CEPS_MEM	rnnoise/src/denoise.c	58;"	d	file:
CFLAGS	rnnoise/Makefile	/^CFLAGS = -g -O2 -pedantic -Wall -Wextra -Wno-sign-compare -Wno-parentheses -Wno-long-long -fvisibility=hidden$/;"	m
CHECK_OVERFLOW_OP	rnnoise/src/_kiss_fft_guts.h	123;"	d
CLOCK_MONOTONIC	Examples/rnnoise_demo.c	36;"	d	file:
CLOCK_MONOTONIC	rnnoise/examples/rnnoise_demo.c	36;"	d	file:
COMMON_H	rnnoise/src/common.h	4;"	d
COMPILE	rnnoise/Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
CONFIG_CLEAN_FILES	rnnoise/Makefile	/^CONFIG_CLEAN_FILES = rnnoise.pc rnnoise-uninstalled.pc doc\/Doxyfile$/;"	m
CONFIG_CLEAN_VPATH_FILES	rnnoise/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_HEADER	rnnoise/Makefile	/^CONFIG_HEADER = config.h$/;"	m
CPP	rnnoise/Makefile	/^CPP = \/home\/lb\/rnnoise_test\/emsdk\/upstream\/emscripten\/emcc -E$/;"	m
CPPFLAGS	rnnoise/Makefile	/^CPPFLAGS = $/;"	m
CSCOPE	rnnoise/Makefile	/^CSCOPE = cscope$/;"	m
CTAGS	rnnoise/Makefile	/^CTAGS = ctags$/;"	m
CUSTOM_MODES	rnnoise/src/kiss_fft.c	39;"	d	file:
CYGPATH_W	rnnoise/Makefile	/^CYGPATH_W = echo$/;"	m
C_ADD	rnnoise/src/_kiss_fft_guts.h	127;"	d
C_ADD	rnnoise/src/_kiss_fft_guts.h	79;"	d
C_ADDTO	rnnoise/src/_kiss_fft_guts.h	139;"	d
C_ADDTO	rnnoise/src/_kiss_fft_guts.h	85;"	d
C_FIXDIV	rnnoise/src/_kiss_fft_guts.h	116;"	d
C_FIXDIV	rnnoise/src/_kiss_fft_guts.h	75;"	d
C_MUL	rnnoise/src/_kiss_fft_guts.h	107;"	d
C_MUL	rnnoise/src/_kiss_fft_guts.h	60;"	d
C_MUL4	rnnoise/src/_kiss_fft_guts.h	114;"	d
C_MULBYSCALAR	rnnoise/src/_kiss_fft_guts.h	117;"	d
C_MULBYSCALAR	rnnoise/src/_kiss_fft_guts.h	68;"	d
C_MULC	rnnoise/src/_kiss_fft_guts.h	110;"	d
C_MULC	rnnoise/src/_kiss_fft_guts.h	64;"	d
C_SUB	rnnoise/src/_kiss_fft_guts.h	133;"	d
C_SUB	rnnoise/src/_kiss_fft_guts.h	82;"	d
C_SUBFROM	rnnoise/src/_kiss_fft_guts.h	146;"	d
C_SUBFROM	rnnoise/src/_kiss_fft_guts.h	89;"	d
CommonState	rnnoise/src/denoise.c	/^} CommonState;$/;"	t	typeref:struct:__anon35	file:
CreateProcess	rnnoise/libtool	/^   CreateProcess().  We must quote the arguments since Win32 CreateProcess()$/;"	f
CreateProcess	rnnoise/ltmain.sh	/^   CreateProcess().  We must quote the arguments since Win32 CreateProcess()$/;"	f
DATA	rnnoise/Makefile	/^DATA = $(dist_doc_DATA) $(pkgconfig_DATA)$/;"	m
DB_SHIFT	rnnoise/src/arch.h	111;"	d
DEFAULT_INCLUDES	rnnoise/Makefile	/^DEFAULT_INCLUDES = -I.$/;"	m
DEFS	rnnoise/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEPDIR	rnnoise/Makefile	/^DEPDIR = .deps$/;"	m
DISTFILES	rnnoise/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DIST_ARCHIVES	rnnoise/Makefile	/^DIST_ARCHIVES = $(distdir).tar.gz $(distdir).zip$/;"	m
DIST_COMMON	rnnoise/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(top_srcdir)\/configure \\$/;"	m
DIST_SOURCES	rnnoise/Makefile	/^DIST_SOURCES = $(librnnoise_la_SOURCES) \\$/;"	m
DIST_TARGETS	rnnoise/Makefile	/^DIST_TARGETS = dist-gzip dist-zip$/;"	m
DIV32	rnnoise/src/arch.h	244;"	d
DIV32_16	rnnoise/src/arch.h	243;"	d
DIVSCALAR	rnnoise/src/_kiss_fft_guts.h	72;"	d
DLLTOOL	rnnoise/Makefile	/^DLLTOOL = false$/;"	m
DRMP3_ASSERT	Examples/dr_mp3.h	2201;"	d
DRMP3_ASSERT	rnnoise/examples/dr_mp3.h	2201;"	d
DRMP3_BITS_DEQUANTIZER_OUT	Examples/dr_mp3.h	383;"	d
DRMP3_BITS_DEQUANTIZER_OUT	rnnoise/examples/dr_mp3.h	383;"	d
DRMP3_BSPOS	Examples/dr_mp3.h	1167;"	d
DRMP3_BSPOS	rnnoise/examples/dr_mp3.h	1167;"	d
DRMP3_CHECK_BITS	Examples/dr_mp3.h	1166;"	d
DRMP3_CHECK_BITS	rnnoise/examples/dr_mp3.h	1166;"	d
DRMP3_COPY_MEMORY	Examples/dr_mp3.h	2204;"	d
DRMP3_COPY_MEMORY	rnnoise/examples/dr_mp3.h	2204;"	d
DRMP3_DATA_CHUNK_SIZE	Examples/dr_mp3.h	2231;"	d
DRMP3_DATA_CHUNK_SIZE	rnnoise/examples/dr_mp3.h	2231;"	d
DRMP3_DEQ_COUNT1	Examples/dr_mp3.h	1225;"	d
DRMP3_DEQ_COUNT1	rnnoise/examples/dr_mp3.h	1225;"	d
DRMP3_DQ	Examples/dr_mp3.h	646;"	d
DRMP3_DQ	rnnoise/examples/dr_mp3.h	646;"	d
DRMP3_FALSE	Examples/dr_mp3.h	90;"	d
DRMP3_FALSE	rnnoise/examples/dr_mp3.h	90;"	d
DRMP3_FLUSH_BITS	Examples/dr_mp3.h	1165;"	d
DRMP3_FLUSH_BITS	rnnoise/examples/dr_mp3.h	1165;"	d
DRMP3_FREE	Examples/dr_mp3.h	2217;"	d
DRMP3_FREE	rnnoise/examples/dr_mp3.h	2217;"	d
DRMP3_HAVE_SIMD	Examples/dr_mp3.h	405;"	d
DRMP3_HAVE_SIMD	Examples/dr_mp3.h	473;"	d
DRMP3_HAVE_SIMD	Examples/dr_mp3.h	490;"	d
DRMP3_HAVE_SIMD	Examples/dr_mp3.h	498;"	d
DRMP3_HAVE_SIMD	rnnoise/examples/dr_mp3.h	405;"	d
DRMP3_HAVE_SIMD	rnnoise/examples/dr_mp3.h	473;"	d
DRMP3_HAVE_SIMD	rnnoise/examples/dr_mp3.h	490;"	d
DRMP3_HAVE_SIMD	rnnoise/examples/dr_mp3.h	498;"	d
DRMP3_HAVE_SSE	Examples/dr_mp3.h	404;"	d
DRMP3_HAVE_SSE	rnnoise/examples/dr_mp3.h	404;"	d
DRMP3_HDR_GET_BITRATE	Examples/dr_mp3.h	377;"	d
DRMP3_HDR_GET_BITRATE	rnnoise/examples/dr_mp3.h	377;"	d
DRMP3_HDR_GET_LAYER	Examples/dr_mp3.h	376;"	d
DRMP3_HDR_GET_LAYER	rnnoise/examples/dr_mp3.h	376;"	d
DRMP3_HDR_GET_MY_SAMPLE_RATE	Examples/dr_mp3.h	379;"	d
DRMP3_HDR_GET_MY_SAMPLE_RATE	rnnoise/examples/dr_mp3.h	379;"	d
DRMP3_HDR_GET_SAMPLE_RATE	Examples/dr_mp3.h	378;"	d
DRMP3_HDR_GET_SAMPLE_RATE	rnnoise/examples/dr_mp3.h	378;"	d
DRMP3_HDR_GET_STEREO_MODE	Examples/dr_mp3.h	374;"	d
DRMP3_HDR_GET_STEREO_MODE	rnnoise/examples/dr_mp3.h	374;"	d
DRMP3_HDR_GET_STEREO_MODE_EXT	Examples/dr_mp3.h	375;"	d
DRMP3_HDR_GET_STEREO_MODE_EXT	rnnoise/examples/dr_mp3.h	375;"	d
DRMP3_HDR_IS_CRC	Examples/dr_mp3.h	368;"	d
DRMP3_HDR_IS_CRC	rnnoise/examples/dr_mp3.h	368;"	d
DRMP3_HDR_IS_FRAME_576	Examples/dr_mp3.h	380;"	d
DRMP3_HDR_IS_FRAME_576	rnnoise/examples/dr_mp3.h	380;"	d
DRMP3_HDR_IS_FREE_FORMAT	Examples/dr_mp3.h	367;"	d
DRMP3_HDR_IS_FREE_FORMAT	rnnoise/examples/dr_mp3.h	367;"	d
DRMP3_HDR_IS_LAYER_1	Examples/dr_mp3.h	381;"	d
DRMP3_HDR_IS_LAYER_1	rnnoise/examples/dr_mp3.h	381;"	d
DRMP3_HDR_IS_MONO	Examples/dr_mp3.h	365;"	d
DRMP3_HDR_IS_MONO	rnnoise/examples/dr_mp3.h	365;"	d
DRMP3_HDR_IS_MS_STEREO	Examples/dr_mp3.h	366;"	d
DRMP3_HDR_IS_MS_STEREO	rnnoise/examples/dr_mp3.h	366;"	d
DRMP3_HDR_SIZE	Examples/dr_mp3.h	364;"	d
DRMP3_HDR_SIZE	rnnoise/examples/dr_mp3.h	364;"	d
DRMP3_HDR_TEST_I_STEREO	Examples/dr_mp3.h	372;"	d
DRMP3_HDR_TEST_I_STEREO	rnnoise/examples/dr_mp3.h	372;"	d
DRMP3_HDR_TEST_MPEG1	Examples/dr_mp3.h	370;"	d
DRMP3_HDR_TEST_MPEG1	rnnoise/examples/dr_mp3.h	370;"	d
DRMP3_HDR_TEST_MS_STEREO	Examples/dr_mp3.h	373;"	d
DRMP3_HDR_TEST_MS_STEREO	rnnoise/examples/dr_mp3.h	373;"	d
DRMP3_HDR_TEST_NOT_MPEG25	Examples/dr_mp3.h	371;"	d
DRMP3_HDR_TEST_NOT_MPEG25	rnnoise/examples/dr_mp3.h	371;"	d
DRMP3_HDR_TEST_PADDING	Examples/dr_mp3.h	369;"	d
DRMP3_HDR_TEST_PADDING	rnnoise/examples/dr_mp3.h	369;"	d
DRMP3_MALLOC	Examples/dr_mp3.h	2211;"	d
DRMP3_MALLOC	rnnoise/examples/dr_mp3.h	2211;"	d
DRMP3_MAX	Examples/dr_mp3.h	388;"	d
DRMP3_MAX	rnnoise/examples/dr_mp3.h	388;"	d
DRMP3_MAX_BITRESERVOIR_BYTES	Examples/dr_mp3.h	359;"	d
DRMP3_MAX_BITRESERVOIR_BYTES	rnnoise/examples/dr_mp3.h	359;"	d
DRMP3_MAX_FRAME_SYNC_MATCHES	Examples/dr_mp3.h	354;"	d
DRMP3_MAX_FRAME_SYNC_MATCHES	rnnoise/examples/dr_mp3.h	354;"	d
DRMP3_MAX_FREE_FORMAT_FRAME_SIZE	Examples/dr_mp3.h	352;"	d
DRMP3_MAX_FREE_FORMAT_FRAME_SIZE	rnnoise/examples/dr_mp3.h	352;"	d
DRMP3_MAX_L3_FRAME_PAYLOAD_BYTES	Examples/dr_mp3.h	357;"	d
DRMP3_MAX_L3_FRAME_PAYLOAD_BYTES	rnnoise/examples/dr_mp3.h	357;"	d
DRMP3_MAX_PCM_FRAMES_PER_MP3_FRAME	Examples/dr_mp3.h	92;"	d
DRMP3_MAX_PCM_FRAMES_PER_MP3_FRAME	rnnoise/examples/dr_mp3.h	92;"	d
DRMP3_MAX_SAMPLES_PER_FRAME	Examples/dr_mp3.h	93;"	d
DRMP3_MAX_SAMPLES_PER_FRAME	rnnoise/examples/dr_mp3.h	93;"	d
DRMP3_MAX_SCF	Examples/dr_mp3.h	384;"	d
DRMP3_MAX_SCF	rnnoise/examples/dr_mp3.h	384;"	d
DRMP3_MAX_SCFI	Examples/dr_mp3.h	385;"	d
DRMP3_MAX_SCFI	rnnoise/examples/dr_mp3.h	385;"	d
DRMP3_MIN	Examples/dr_mp3.h	387;"	d
DRMP3_MIN	rnnoise/examples/dr_mp3.h	387;"	d
DRMP3_MODE_JOINT_STEREO	Examples/dr_mp3.h	363;"	d
DRMP3_MODE_JOINT_STEREO	rnnoise/examples/dr_mp3.h	363;"	d
DRMP3_MODE_MONO	Examples/dr_mp3.h	362;"	d
DRMP3_MODE_MONO	rnnoise/examples/dr_mp3.h	362;"	d
DRMP3_OFFSET_PTR	Examples/dr_mp3.h	350;"	d
DRMP3_OFFSET_PTR	rnnoise/examples/dr_mp3.h	350;"	d
DRMP3_PEEK_BITS	Examples/dr_mp3.h	1164;"	d
DRMP3_PEEK_BITS	rnnoise/examples/dr_mp3.h	1164;"	d
DRMP3_REALLOC	Examples/dr_mp3.h	2214;"	d
DRMP3_REALLOC	rnnoise/examples/dr_mp3.h	2214;"	d
DRMP3_RELOAD_SCALEFACTOR	Examples/dr_mp3.h	1224;"	d
DRMP3_RELOAD_SCALEFACTOR	rnnoise/examples/dr_mp3.h	1224;"	d
DRMP3_SEEK_LEADING_MP3_FRAMES	Examples/dr_mp3.h	2192;"	d
DRMP3_SEEK_LEADING_MP3_FRAMES	rnnoise/examples/dr_mp3.h	2192;"	d
DRMP3_SHORT_BLOCK_TYPE	Examples/dr_mp3.h	360;"	d
DRMP3_SHORT_BLOCK_TYPE	rnnoise/examples/dr_mp3.h	360;"	d
DRMP3_SIZE_MAX	Examples/dr_mp3.h	2175;"	d
DRMP3_SIZE_MAX	Examples/dr_mp3.h	2178;"	d
DRMP3_SIZE_MAX	Examples/dr_mp3.h	2180;"	d
DRMP3_SIZE_MAX	rnnoise/examples/dr_mp3.h	2175;"	d
DRMP3_SIZE_MAX	rnnoise/examples/dr_mp3.h	2178;"	d
DRMP3_SIZE_MAX	rnnoise/examples/dr_mp3.h	2180;"	d
DRMP3_SRC_CACHE_SIZE_IN_FRAMES	Examples/dr_mp3.h	133;"	d
DRMP3_SRC_CACHE_SIZE_IN_FRAMES	rnnoise/examples/dr_mp3.h	133;"	d
DRMP3_STOP_BLOCK_TYPE	Examples/dr_mp3.h	361;"	d
DRMP3_STOP_BLOCK_TYPE	rnnoise/examples/dr_mp3.h	361;"	d
DRMP3_TRUE	Examples/dr_mp3.h	89;"	d
DRMP3_TRUE	rnnoise/examples/dr_mp3.h	89;"	d
DRMP3_V0	Examples/dr_mp3.h	1838;"	d
DRMP3_V0	rnnoise/examples/dr_mp3.h	1838;"	d
DRMP3_V1	Examples/dr_mp3.h	1839;"	d
DRMP3_V1	rnnoise/examples/dr_mp3.h	1839;"	d
DRMP3_V2	Examples/dr_mp3.h	1840;"	d
DRMP3_V2	rnnoise/examples/dr_mp3.h	1840;"	d
DRMP3_VADD	Examples/dr_mp3.h	409;"	d
DRMP3_VADD	Examples/dr_mp3.h	477;"	d
DRMP3_VADD	rnnoise/examples/dr_mp3.h	409;"	d
DRMP3_VADD	rnnoise/examples/dr_mp3.h	477;"	d
DRMP3_VLD	Examples/dr_mp3.h	407;"	d
DRMP3_VLD	Examples/dr_mp3.h	475;"	d
DRMP3_VLD	rnnoise/examples/dr_mp3.h	407;"	d
DRMP3_VLD	rnnoise/examples/dr_mp3.h	475;"	d
DRMP3_VLOAD	Examples/dr_mp3.h	1837;"	d
DRMP3_VLOAD	rnnoise/examples/dr_mp3.h	1837;"	d
DRMP3_VMAC	Examples/dr_mp3.h	412;"	d
DRMP3_VMAC	Examples/dr_mp3.h	480;"	d
DRMP3_VMAC	rnnoise/examples/dr_mp3.h	412;"	d
DRMP3_VMAC	rnnoise/examples/dr_mp3.h	480;"	d
DRMP3_VMSB	Examples/dr_mp3.h	413;"	d
DRMP3_VMSB	Examples/dr_mp3.h	481;"	d
DRMP3_VMSB	rnnoise/examples/dr_mp3.h	413;"	d
DRMP3_VMSB	rnnoise/examples/dr_mp3.h	481;"	d
DRMP3_VMUL	Examples/dr_mp3.h	411;"	d
DRMP3_VMUL	Examples/dr_mp3.h	479;"	d
DRMP3_VMUL	rnnoise/examples/dr_mp3.h	411;"	d
DRMP3_VMUL	rnnoise/examples/dr_mp3.h	479;"	d
DRMP3_VMUL_S	Examples/dr_mp3.h	414;"	d
DRMP3_VMUL_S	Examples/dr_mp3.h	482;"	d
DRMP3_VMUL_S	rnnoise/examples/dr_mp3.h	414;"	d
DRMP3_VMUL_S	rnnoise/examples/dr_mp3.h	482;"	d
DRMP3_VREV	Examples/dr_mp3.h	415;"	d
DRMP3_VREV	Examples/dr_mp3.h	483;"	d
DRMP3_VREV	rnnoise/examples/dr_mp3.h	415;"	d
DRMP3_VREV	rnnoise/examples/dr_mp3.h	483;"	d
DRMP3_VSAVE2	Examples/dr_mp3.h	1654;"	d
DRMP3_VSAVE2	rnnoise/examples/dr_mp3.h	1654;"	d
DRMP3_VSAVE4	Examples/dr_mp3.h	1670;"	d
DRMP3_VSAVE4	rnnoise/examples/dr_mp3.h	1670;"	d
DRMP3_VSET	Examples/dr_mp3.h	408;"	d
DRMP3_VSET	Examples/dr_mp3.h	476;"	d
DRMP3_VSET	rnnoise/examples/dr_mp3.h	408;"	d
DRMP3_VSET	rnnoise/examples/dr_mp3.h	476;"	d
DRMP3_VSTORE	Examples/dr_mp3.h	406;"	d
DRMP3_VSTORE	Examples/dr_mp3.h	474;"	d
DRMP3_VSTORE	rnnoise/examples/dr_mp3.h	406;"	d
DRMP3_VSTORE	rnnoise/examples/dr_mp3.h	474;"	d
DRMP3_VSUB	Examples/dr_mp3.h	410;"	d
DRMP3_VSUB	Examples/dr_mp3.h	478;"	d
DRMP3_VSUB	rnnoise/examples/dr_mp3.h	410;"	d
DRMP3_VSUB	rnnoise/examples/dr_mp3.h	478;"	d
DRMP3_ZERO_MEMORY	Examples/dr_mp3.h	2207;"	d
DRMP3_ZERO_MEMORY	rnnoise/examples/dr_mp3.h	2207;"	d
DRMP3_ZERO_OBJECT	Examples/dr_mp3.h	2209;"	d
DRMP3_ZERO_OBJECT	rnnoise/examples/dr_mp3.h	2209;"	d
DRWAV_ASSERT	Examples/dr_wav.h	847;"	d
DRWAV_ASSERT	rnnoise/examples/dr_wav.h	847;"	d
DRWAV_COPY_MEMORY	Examples/dr_wav.h	859;"	d
DRWAV_COPY_MEMORY	rnnoise/examples/dr_wav.h	859;"	d
DRWAV_EOF	Examples/dr_wav.h	881;"	d
DRWAV_EOF	rnnoise/examples/dr_wav.h	881;"	d
DRWAV_ERROR	Examples/dr_wav.h	877;"	d
DRWAV_ERROR	rnnoise/examples/dr_wav.h	877;"	d
DRWAV_FALSE	Examples/dr_wav.h	176;"	d
DRWAV_FALSE	rnnoise/examples/dr_wav.h	176;"	d
DRWAV_FREE	Examples/dr_wav.h	856;"	d
DRWAV_FREE	rnnoise/examples/dr_wav.h	856;"	d
DRWAV_INLINE	Examples/dr_wav.h	886;"	d
DRWAV_INLINE	Examples/dr_wav.h	889;"	d
DRWAV_INLINE	Examples/dr_wav.h	891;"	d
DRWAV_INLINE	rnnoise/examples/dr_wav.h	886;"	d
DRWAV_INLINE	rnnoise/examples/dr_wav.h	889;"	d
DRWAV_INLINE	rnnoise/examples/dr_wav.h	891;"	d
DRWAV_INVALID_ARGS	Examples/dr_wav.h	878;"	d
DRWAV_INVALID_ARGS	rnnoise/examples/dr_wav.h	878;"	d
DRWAV_INVALID_FILE	Examples/dr_wav.h	880;"	d
DRWAV_INVALID_FILE	rnnoise/examples/dr_wav.h	880;"	d
DRWAV_INVALID_OPERATION	Examples/dr_wav.h	879;"	d
DRWAV_INVALID_OPERATION	rnnoise/examples/dr_wav.h	879;"	d
DRWAV_MALLOC	Examples/dr_wav.h	850;"	d
DRWAV_MALLOC	rnnoise/examples/dr_wav.h	850;"	d
DRWAV_MAX_SIMD_VECTOR_SIZE	Examples/dr_wav.h	883;"	d
DRWAV_MAX_SIMD_VECTOR_SIZE	rnnoise/examples/dr_wav.h	883;"	d
DRWAV_MAX_SMPL_LOOPS	Examples/dr_wav.h	193;"	d
DRWAV_MAX_SMPL_LOOPS	rnnoise/examples/dr_wav.h	193;"	d
DRWAV_REALLOC	Examples/dr_wav.h	853;"	d
DRWAV_REALLOC	rnnoise/examples/dr_wav.h	853;"	d
DRWAV_SEQUENTIAL	Examples/dr_wav.h	197;"	d
DRWAV_SEQUENTIAL	rnnoise/examples/dr_wav.h	197;"	d
DRWAV_SIZE_MAX	Examples/dr_wav.h	896;"	d
DRWAV_SIZE_MAX	Examples/dr_wav.h	899;"	d
DRWAV_SIZE_MAX	Examples/dr_wav.h	901;"	d
DRWAV_SIZE_MAX	rnnoise/examples/dr_wav.h	896;"	d
DRWAV_SIZE_MAX	rnnoise/examples/dr_wav.h	899;"	d
DRWAV_SIZE_MAX	rnnoise/examples/dr_wav.h	901;"	d
DRWAV_SUCCESS	Examples/dr_wav.h	876;"	d
DRWAV_SUCCESS	rnnoise/examples/dr_wav.h	876;"	d
DRWAV_TRUE	Examples/dr_wav.h	175;"	d
DRWAV_TRUE	rnnoise/examples/dr_wav.h	175;"	d
DRWAV_ZERO_MEMORY	Examples/dr_wav.h	862;"	d
DRWAV_ZERO_MEMORY	rnnoise/examples/dr_wav.h	862;"	d
DR_MP3_DEFAULT_CHANNELS	Examples/dr_mp3.h	2186;"	d
DR_MP3_DEFAULT_CHANNELS	rnnoise/examples/dr_mp3.h	2186;"	d
DR_MP3_DEFAULT_SAMPLE_RATE	Examples/dr_mp3.h	2189;"	d
DR_MP3_DEFAULT_SAMPLE_RATE	rnnoise/examples/dr_mp3.h	2189;"	d
DR_MP3_IMPLEMENTATION	Examples/rnnoise_demo.c	15;"	d	file:
DR_MP3_IMPLEMENTATION	rnnoise/examples/rnnoise_demo.c	15;"	d	file:
DR_MP3_NO_SIMD	Examples/dr_mp3.h	347;"	d
DR_MP3_NO_SIMD	rnnoise/examples/dr_mp3.h	347;"	d
DR_MP3_ONLY_SIMD	Examples/dr_mp3.h	394;"	d
DR_MP3_ONLY_SIMD	rnnoise/examples/dr_mp3.h	394;"	d
DR_WAVE_FORMAT_ADPCM	Examples/dr_wav.h	184;"	d
DR_WAVE_FORMAT_ADPCM	rnnoise/examples/dr_wav.h	184;"	d
DR_WAVE_FORMAT_ALAW	Examples/dr_wav.h	186;"	d
DR_WAVE_FORMAT_ALAW	rnnoise/examples/dr_wav.h	186;"	d
DR_WAVE_FORMAT_DVI_ADPCM	Examples/dr_wav.h	188;"	d
DR_WAVE_FORMAT_DVI_ADPCM	rnnoise/examples/dr_wav.h	188;"	d
DR_WAVE_FORMAT_EXTENSIBLE	Examples/dr_wav.h	189;"	d
DR_WAVE_FORMAT_EXTENSIBLE	rnnoise/examples/dr_wav.h	189;"	d
DR_WAVE_FORMAT_IEEE_FLOAT	Examples/dr_wav.h	185;"	d
DR_WAVE_FORMAT_IEEE_FLOAT	rnnoise/examples/dr_wav.h	185;"	d
DR_WAVE_FORMAT_MULAW	Examples/dr_wav.h	187;"	d
DR_WAVE_FORMAT_MULAW	rnnoise/examples/dr_wav.h	187;"	d
DR_WAVE_FORMAT_PCM	Examples/dr_wav.h	183;"	d
DR_WAVE_FORMAT_PCM	rnnoise/examples/dr_wav.h	183;"	d
DR_WAV_IMPLEMENTATION	Examples/rnnoise_demo.c	19;"	d	file:
DR_WAV_IMPLEMENTATION	rnnoise/examples/rnnoise_demo.c	19;"	d	file:
DSYMUTIL	rnnoise/Makefile	/^DSYMUTIL = $/;"	m
DUMPBIN	rnnoise/Makefile	/^DUMPBIN = $/;"	m
DenoiseState	rnnoise/include/rnnoise.h	/^typedef struct DenoiseState DenoiseState;$/;"	t	typeref:struct:DenoiseState
DenoiseState	rnnoise/src/denoise.c	/^struct DenoiseState {$/;"	s	file:
DenseLayer	rnnoise/src/rnn.h	/^} DenseLayer;$/;"	t	typeref:struct:__anon36
ECHO_C	rnnoise/Makefile	/^ECHO_C = $/;"	m
ECHO_N	rnnoise/Makefile	/^ECHO_N = -n$/;"	m
ECHO_T	rnnoise/Makefile	/^ECHO_T = $/;"	m
EGREP	rnnoise/Makefile	/^EGREP = \/usr\/bin\/grep -E$/;"	m
EMSCRIPTEN_KEEPALVE	rnnoise/examples/rnnoise_demo.c	7;"	d	file:
ENVIRONMENT_IS_NODE	rnn_denoise.js	/^var ENVIRONMENT_IS_NODE = typeof process == 'object' && typeof process.versions == 'object' && typeof process.versions.node == 'string';$/;"	v
ENVIRONMENT_IS_NODE	rnn_denoise_bak.js	/^var ENVIRONMENT_IS_NODE = false;$/;"	v
ENVIRONMENT_IS_SHELL	rnn_denoise.js	/^var ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;$/;"	v
ENVIRONMENT_IS_SHELL	rnn_denoise_bak.js	/^var ENVIRONMENT_IS_SHELL = false;$/;"	v
ENVIRONMENT_IS_WEB	rnn_denoise.js	/^var ENVIRONMENT_IS_WEB = typeof window == 'object';$/;"	v
ENVIRONMENT_IS_WEB	rnn_denoise_bak.js	/^var ENVIRONMENT_IS_WEB = false;$/;"	v
ENVIRONMENT_IS_WORKER	rnn_denoise.js	/^var ENVIRONMENT_IS_WORKER = typeof importScripts == 'function';$/;"	v
ENVIRONMENT_IS_WORKER	rnn_denoise_bak.js	/^var ENVIRONMENT_IS_WORKER = false;$/;"	v
EPSILON	rnnoise/src/arch.h	113;"	d
EPSILON	rnnoise/src/arch.h	180;"	d
ETAGS	rnnoise/Makefile	/^ETAGS = etags$/;"	m
EXEEXT	rnnoise/Makefile	/^EXEEXT = $/;"	m
EXITSTATUS	rnn_denoise.js	/^var EXITSTATUS;$/;"	v
EXITSTATUS	rnn_denoise_bak.js	/^var EXITSTATUS = 0;$/;"	v
EXTEND32	rnnoise/src/arch.h	196;"	d
EXTRACT16	rnnoise/src/arch.h	195;"	d
EXTRA_DIST	rnnoise/Makefile	/^EXTRA_DIST = \\$/;"	m
ExitStatus	rnn_denoise.js	/^function ExitStatus(status) {$/;"	c
ExitStatus	rnn_denoise_bak.js	/^function ExitStatus(status) {$/;"	c
FGREP	rnnoise/Makefile	/^FGREP = \/usr\/bin\/grep -F$/;"	m
FRAME_SIZE	rnnoise/examples_bak/rnnoise_demo.c	31;"	d	file:
FRAME_SIZE	rnnoise/src/denoise.c	45;"	d	file:
FRAME_SIZE_SHIFT	rnnoise/src/denoise.c	44;"	d	file:
FREE_DENSE	rnnoise/src/rnn_reader.c	143;"	d	file:
FREE_GRU	rnnoise/src/rnn_reader.c	150;"	d	file:
FREE_MAYBE	rnnoise/src/rnn_reader.c	142;"	d	file:
FREQ_SIZE	rnnoise/src/denoise.c	47;"	d	file:
F_ACTIVATION_RELU	rnnoise/src/rnn_reader.c	43;"	d	file:
F_ACTIVATION_SIGMOID	rnnoise/src/rnn_reader.c	42;"	d	file:
F_ACTIVATION_TANH	rnnoise/src/rnn_reader.c	41;"	d	file:
GLOBAL_BASE	rnn_denoise_bak.js	/^var GLOBAL_BASE = 1024;$/;"	v
GLOBAL_STACK_SIZE	rnnoise/src/arch.h	255;"	d
GLOBAL_STACK_SIZE	rnnoise/src/arch.h	257;"	d
GREP	rnnoise/Makefile	/^GREP = \/usr\/bin\/grep$/;"	m
GRULayer	rnnoise/src/rnn.h	/^} GRULayer;$/;"	t	typeref:struct:__anon37
GZIP_ENV	rnnoise/Makefile	/^GZIP_ENV = --best$/;"	m
HALF16	rnnoise/src/arch.h	212;"	d
HALF32	rnnoise/src/arch.h	213;"	d
HALF_OF	rnnoise/src/_kiss_fft_guts.h	159;"	d
HALF_OF	rnnoise/src/_kiss_fft_guts.h	163;"	d
HALF_OF	rnnoise/src/_kiss_fft_guts.h	167;"	d
HAVE_DLFCN_H	rnnoise/config.h	5;"	d
HAVE_DOT	rnnoise/Makefile	/^HAVE_DOT = yes$/;"	m
HAVE_DOXYGEN	rnnoise/Makefile	/^HAVE_DOXYGEN = no$/;"	m
HAVE_INTTYPES_H	rnnoise/config.h	8;"	d
HAVE_MEMORY_H	rnnoise/config.h	11;"	d
HAVE_STDINT_H	rnnoise/config.h	14;"	d
HAVE_STDLIB_H	rnnoise/config.h	17;"	d
HAVE_STRINGS_H	rnnoise/config.h	20;"	d
HAVE_STRING_H	rnnoise/config.h	23;"	d
HAVE_SYS_STAT_H	rnnoise/config.h	26;"	d
HAVE_SYS_TYPES_H	rnnoise/config.h	29;"	d
HAVE_UNISTD_H	rnnoise/config.h	32;"	d
HEADERS	rnnoise/Makefile	/^HEADERS = $(include_HEADERS) $(noinst_HEADERS)$/;"	m
HEAP	rnn_denoise.js	/^var HEAP,$/;"	v
HEAP	rnn_denoise_bak.js	/^var HEAP,$/;"	v
IMAX	rnnoise/src/arch.h	77;"	d
IMIN	rnnoise/src/arch.h	76;"	d
IMUL32	rnnoise/src/arch.h	70;"	d
INPUT_ACTIVATION	rnnoise/src/rnn_reader.c	80;"	d	file:
INPUT_ARRAY	rnnoise/src/rnn_reader.c	95;"	d	file:
INPUT_DENSE	rnnoise/src/rnn_reader.c	111;"	d	file:
INPUT_GRU	rnnoise/src/rnn_reader.c	120;"	d	file:
INPUT_SIZE	rnnoise/src/rnn.c	158;"	d	file:
INPUT_VAL	rnnoise/src/rnn_reader.c	72;"	d	file:
INSTALL	rnnoise/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL_DATA	rnnoise/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_HEADER	rnnoise/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_PROGRAM	rnnoise/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_SCRIPT	rnnoise/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_STRIP_PROGRAM	rnnoise/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
KF_SUFFIX	rnnoise/src/kiss_fft.h	64;"	d
KISS_FFT_COS	rnnoise/src/_kiss_fft_guts.h	157;"	d
KISS_FFT_COS	rnnoise/src/_kiss_fft_guts.h	161;"	d
KISS_FFT_COS	rnnoise/src/_kiss_fft_guts.h	165;"	d
KISS_FFT_GUTS_H	rnnoise/src/_kiss_fft_guts.h	27;"	d
KISS_FFT_H	rnnoise/src/kiss_fft.h	30;"	d
KISS_FFT_MALLOC	rnnoise/src/kiss_fft.h	47;"	d
KISS_FFT_MALLOC	rnnoise/src/kiss_fft.h	49;"	d
KISS_FFT_SIN	rnnoise/src/_kiss_fft_guts.h	158;"	d
KISS_FFT_SIN	rnnoise/src/_kiss_fft_guts.h	162;"	d
KISS_FFT_SIN	rnnoise/src/_kiss_fft_guts.h	166;"	d
LD	rnnoise/Makefile	/^LD = \/home\/lb\/rnnoise_test\/emsdk\/upstream\/emscripten\/emcc$/;"	m
LDFLAGS	rnnoise/Makefile	/^LDFLAGS = $/;"	m
LIBM	rnnoise/Makefile	/^LIBM = -lm$/;"	m
LIBOBJS	rnnoise/Makefile	/^LIBOBJS = $/;"	m
LIBS	rnnoise/Makefile	/^LIBS = $/;"	m
LIBTOOL	rnnoise/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LINK	rnnoise/Makefile	/^LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LIPO	rnnoise/Makefile	/^LIPO = $/;"	m
LN_S	rnnoise/Makefile	/^LN_S = ln -s$/;"	m
LPC_ORDER	rnnoise/src/celt_lpc.h	38;"	d
LTCOMPILE	rnnoise/Makefile	/^LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LTLIBOBJS	rnnoise/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBRARIES	rnnoise/Makefile	/^LTLIBRARIES = $(lib_LTLIBRARIES)$/;"	m
LT_OBJDIR	rnnoise/config.h	35;"	d
LT_SYS_LIBRARY_PATH	rnnoise/Makefile	/^LT_SYS_LIBRARY_PATH = $/;"	m
MAC16_16	rnnoise/src/arch.h	223;"	d
MAC16_32_Q15	rnnoise/src/arch.h	230;"	d
MAC16_32_Q16	rnnoise/src/arch.h	231;"	d
MAINT	rnnoise/Makefile	/^MAINT = $/;"	m
MAKEINFO	rnnoise/Makefile	/^MAKEINFO = ${SHELL} \/home\/lb\/rnnoise_test\/rnnoise-wasm\/rnnoise\/missing makeinfo$/;"	m
MANIFEST_TOOL	rnnoise/Makefile	/^MANIFEST_TOOL = :$/;"	m
MAX	rnnoise/src/_kiss_fft_guts.h	30;"	d
MAX16	rnnoise/src/arch.h	73;"	d
MAX32	rnnoise/src/arch.h	75;"	d
MAXFACTORS	rnnoise/src/kiss_fft.h	78;"	d
MAX_NEURONS	rnnoise/src/rnn.h	36;"	d
MIN	rnnoise/src/_kiss_fft_guts.h	29;"	d
MIN16	rnnoise/src/arch.h	72;"	d
MIN32	rnnoise/src/arch.h	74;"	d
MKDIR_P	rnnoise/Makefile	/^MKDIR_P = \/usr\/bin\/mkdir -p$/;"	m
MULT16_16	rnnoise/src/arch.h	222;"	d
MULT16_16_16	rnnoise/src/arch.h	221;"	d
MULT16_16_P13	rnnoise/src/arch.h	239;"	d
MULT16_16_P14	rnnoise/src/arch.h	240;"	d
MULT16_16_P15	rnnoise/src/arch.h	238;"	d
MULT16_16_Q11	rnnoise/src/arch.h	234;"	d
MULT16_16_Q11_32	rnnoise/src/arch.h	233;"	d
MULT16_16_Q13	rnnoise/src/arch.h	235;"	d
MULT16_16_Q14	rnnoise/src/arch.h	236;"	d
MULT16_16_Q15	rnnoise/src/arch.h	237;"	d
MULT16_32_P16	rnnoise/src/arch.h	241;"	d
MULT16_32_Q15	rnnoise/src/arch.h	225;"	d
MULT16_32_Q16	rnnoise/src/arch.h	226;"	d
MULT32_32_Q31	rnnoise/src/arch.h	228;"	d
Math_abs	rnn_denoise_bak.js	/^var Math_abs = Math.abs;$/;"	v
Math_acos	rnn_denoise_bak.js	/^var Math_acos = Math.acos;$/;"	v
Math_asin	rnn_denoise_bak.js	/^var Math_asin = Math.asin;$/;"	v
Math_atan	rnn_denoise_bak.js	/^var Math_atan = Math.atan;$/;"	v
Math_atan2	rnn_denoise_bak.js	/^var Math_atan2 = Math.atan2;$/;"	v
Math_ceil	rnn_denoise_bak.js	/^var Math_ceil = Math.ceil;$/;"	v
Math_clz32	rnn_denoise_bak.js	/^var Math_clz32 = Math.clz32;$/;"	v
Math_cos	rnn_denoise_bak.js	/^var Math_cos = Math.cos;$/;"	v
Math_exp	rnn_denoise_bak.js	/^var Math_exp = Math.exp;$/;"	v
Math_floor	rnn_denoise_bak.js	/^var Math_floor = Math.floor;$/;"	v
Math_fround	rnn_denoise_bak.js	/^var Math_fround = Math.fround;$/;"	v
Math_imul	rnn_denoise_bak.js	/^var Math_imul = Math.imul;$/;"	v
Math_log	rnn_denoise_bak.js	/^var Math_log = Math.log;$/;"	v
Math_max	rnn_denoise_bak.js	/^var Math_max = Math.max;$/;"	v
Math_min	rnn_denoise_bak.js	/^var Math_min = Math.min;$/;"	v
Math_pow	rnn_denoise_bak.js	/^var Math_pow = Math.pow;$/;"	v
Math_round	rnn_denoise_bak.js	/^var Math_round = Math.round;$/;"	v
Math_sin	rnn_denoise_bak.js	/^var Math_sin = Math.sin;$/;"	v
Math_sqrt	rnn_denoise_bak.js	/^var Math_sqrt = Math.sqrt;$/;"	v
Math_tan	rnn_denoise_bak.js	/^var Math_tan = Math.tan;$/;"	v
Math_trunc	rnn_denoise_bak.js	/^var Math_trunc = Math.trunc;$/;"	v
Module	rnn_denoise.js	/^  Module['inspect'] = function () { return '[Emscripten Module object]'; };$/;"	f
Module	rnn_denoise_bak.js	/^  Module['inspect'] = function () { return '[Emscripten Module object]'; };$/;"	f
NB_BANDS	rnnoise/src/denoise.c	56;"	d	file:
NB_DELTA_CEPS	rnnoise/src/denoise.c	59;"	d	file:
NB_FEATURES	rnnoise/src/denoise.c	61;"	d	file:
NEG16	rnnoise/src/arch.h	192;"	d
NEG32	rnnoise/src/arch.h	193;"	d
NEG32_ovflw	rnnoise/src/arch.h	194;"	d
NM	rnnoise/Makefile	/^NM = \/home\/lb\/rnnoise_test\/emsdk\/upstream\/bin\/llvm-nm$/;"	m
NMEDIT	rnnoise/Makefile	/^NMEDIT = $/;"	m
NORMAL_INSTALL	rnnoise/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_UNINSTALL	rnnoise/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORM_SCALING	rnnoise/src/arch.h	109;"	d
NORM_SCALING	rnnoise/src/arch.h	178;"	d
NO_DOXYGEN	rnnoise/Makefile	/^librnnoise install-librnnoise: NO_DOXYGEN = 1$/;"	m
OBJDUMP	rnnoise/Makefile	/^OBJDUMP = objdump$/;"	m
OBJEXT	rnnoise/Makefile	/^OBJEXT = o$/;"	m
OPUS_FAST_INT64	rnnoise/src/arch.h	85;"	d
OPUS_FAST_INT64	rnnoise/src/arch.h	87;"	d
OPUS_INLINE	rnnoise/src/common.h	10;"	d
OPUS_TYPES_H	rnnoise/src/opus_types.h	34;"	d
OP_LT_AGE	rnnoise/Makefile	/^OP_LT_AGE = 4$/;"	m
OP_LT_CURRENT	rnnoise/Makefile	/^OP_LT_CURRENT = 4$/;"	m
OP_LT_REVISION	rnnoise/Makefile	/^OP_LT_REVISION = 1$/;"	m
OTOOL	rnnoise/Makefile	/^OTOOL = $/;"	m
OTOOL64	rnnoise/Makefile	/^OTOOL64 = $/;"	m
PACKAGE	rnnoise/Makefile	/^PACKAGE = rnnoise$/;"	m
PACKAGE_BUGREPORT	rnnoise/Makefile	/^PACKAGE_BUGREPORT = jmvalin@jmvalin.ca$/;"	m
PACKAGE_BUGREPORT	rnnoise/config.h	41;"	d
PACKAGE_NAME	rnnoise/Makefile	/^PACKAGE_NAME = rnnoise$/;"	m
PACKAGE_NAME	rnnoise/config.h	44;"	d
PACKAGE_STRING	rnnoise/Makefile	/^PACKAGE_STRING = rnnoise unknown$/;"	m
PACKAGE_STRING	rnnoise/config.h	47;"	d
PACKAGE_TARNAME	rnnoise/Makefile	/^PACKAGE_TARNAME = rnnoise$/;"	m
PACKAGE_TARNAME	rnnoise/config.h	50;"	d
PACKAGE_URL	rnnoise/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	rnnoise/config.h	53;"	d
PACKAGE_VERSION	rnnoise/Makefile	/^PACKAGE_VERSION = unknown$/;"	m
PACKAGE_VERSION	rnnoise/config.h	56;"	d
PAGE_SIZE	rnn_denoise_bak.js	/^var PAGE_SIZE = 16384;$/;"	v
PATH_SEPARATOR	rnnoise/Makefile	/^PATH_SEPARATOR = :$/;"	m
PITCH_BUF_SIZE	rnnoise/src/denoise.c	52;"	d	file:
PITCH_FRAME_SIZE	rnnoise/src/denoise.c	51;"	d	file:
PITCH_H	rnnoise/src/pitch.h	35;"	d
PITCH_MAX_PERIOD	rnnoise/src/denoise.c	50;"	d	file:
PITCH_MIN_PERIOD	rnnoise/src/denoise.c	49;"	d	file:
PLC_H	rnnoise/src/celt_lpc.h	29;"	d
POINTER_SIZE	rnn_denoise.js	/^var POINTER_SIZE = 4;$/;"	v
POST_INSTALL	rnnoise/Makefile	/^POST_INSTALL = :$/;"	m
POST_UNINSTALL	rnnoise/Makefile	/^POST_UNINSTALL = :$/;"	m
PRE_INSTALL	rnnoise/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_UNINSTALL	rnnoise/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRINT_MIPS	rnnoise/src/arch.h	90;"	d
PROGRAMS	rnnoise/Makefile	/^PROGRAMS = $(noinst_PROGRAMS)$/;"	m
PSHR	rnnoise/src/arch.h	204;"	d
PSHR32	rnnoise/src/arch.h	201;"	d
Q15ONE	rnnoise/src/arch.h	102;"	d
Q15ONE	rnnoise/src/arch.h	176;"	d
Q15_ONE	rnnoise/src/arch.h	116;"	d
Q15_ONE	rnnoise/src/arch.h	183;"	d
QCONST16	rnnoise/src/arch.h	189;"	d
QCONST32	rnnoise/src/arch.h	190;"	d
RANLIB	rnnoise/Makefile	/^RANLIB = \/home\/lb\/rnnoise_test\/emsdk\/upstream\/emscripten\/emranlib$/;"	m
RNNModel	rnnoise/include/rnnoise.h	/^typedef struct RNNModel RNNModel;$/;"	t	typeref:struct:RNNModel
RNNModel	rnnoise/src/rnn_data.h	/^struct RNNModel {$/;"	s
RNNOISE_BUILD	rnnoise/config.h	59;"	d
RNNOISE_EXPORT	rnnoise/include/rnnoise.h	40;"	d
RNNOISE_EXPORT	rnnoise/include/rnnoise.h	42;"	d
RNNOISE_EXPORT	rnnoise/include/rnnoise.h	45;"	d
RNNOISE_EXPORT	rnnoise/include/rnnoise.h	47;"	d
RNNOISE_H	rnnoise/include/rnnoise.h	29;"	d
RNNState	rnnoise/src/rnn.h	/^typedef struct RNNState RNNState;$/;"	t	typeref:struct:RNNState
RNNState	rnnoise/src/rnn_data.h	/^struct RNNState {$/;"	s
RNN_CLEAR	rnnoise/src/common.h	43;"	d
RNN_COPY	rnnoise/src/common.h	32;"	d
RNN_DATA_H	rnnoise/src/rnn_data.h	2;"	d
RNN_H_	rnnoise/src/rnn.h	28;"	d
RNN_INLINE	rnnoise/src/common.h	9;"	d
RNN_MOVE	rnnoise/src/common.h	38;"	d
ROUND16	rnnoise/src/arch.h	210;"	d
Resample_f32	Examples/rnnoise_demo.c	/^uint64_t Resample_f32(const float *input, float *output, int inSampleRate, int outSampleRate, uint64_t inputSize,$/;"	f
Resample_f32	rnnoise/examples/rnnoise_demo.c	/^uint64_t Resample_f32(const float *input, float *output, int inSampleRate, int outSampleRate, uint64_t inputSize,$/;"	f
SAMP_MAX	rnnoise/src/_kiss_fft_guts.h	51;"	d
SAMP_MIN	rnnoise/src/_kiss_fft_guts.h	55;"	d
SAT16	rnnoise/src/arch.h	/^static OPUS_INLINE opus_int16 SAT16(opus_int32 x) {$/;"	f
SATURATE	rnnoise/src/arch.h	207;"	d
SATURATE16	rnnoise/src/arch.h	208;"	d
SCALEIN	rnnoise/src/arch.h	118;"	d
SCALEIN	rnnoise/src/arch.h	246;"	d
SCALEOUT	rnnoise/src/arch.h	119;"	d
SCALEOUT	rnnoise/src/arch.h	247;"	d
SED	rnnoise/Makefile	/^SED = \/usr\/bin\/sed$/;"	m
SET_MAKE	rnnoise/Makefile	/^SET_MAKE = $/;"	m
SHELL	rnnoise/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHL	rnnoise/src/arch.h	206;"	d
SHL16	rnnoise/src/arch.h	198;"	d
SHL32	rnnoise/src/arch.h	200;"	d
SHR	rnnoise/src/arch.h	205;"	d
SHR16	rnnoise/src/arch.h	197;"	d
SHR32	rnnoise/src/arch.h	199;"	d
SIG2WORD16	rnnoise/src/arch.h	249;"	d
SIG_SAT	rnnoise/src/arch.h	107;"	d
SIG_SHIFT	rnnoise/src/arch.h	104;"	d
SOURCES	rnnoise/Makefile	/^SOURCES = $(librnnoise_la_SOURCES) $(examples_rnnoise_demo_SOURCES)$/;"	m
SQUARE	rnnoise/src/denoise.c	54;"	d	file:
SROUND16	rnnoise/src/arch.h	211;"	d
STATIC_BASE	rnn_denoise_bak.js	/^var STATIC_BASE = 1024,$/;"	v
STDC_HEADERS	rnnoise/config.h	62;"	d
STRIP	rnnoise/Makefile	/^STRIP = strip$/;"	m
SUB16	rnnoise/src/arch.h	216;"	d
SUB32	rnnoise/src/arch.h	218;"	d
SUB32_ovflw	rnnoise/src/arch.h	220;"	d
SUPPORT_ATTRIBUTE_VISIBILITY_DEFAULT	rnnoise/config.h	67;"	d
SUPPORT_FLAG_VISIBILITY	rnnoise/config.h	70;"	d
S_MUL	rnnoise/src/_kiss_fft_guts.h	106;"	d
S_MUL	rnnoise/src/_kiss_fft_guts.h	58;"	d
TOTAL_STACK	rnn_denoise.js	/^var TOTAL_STACK = 5242880;$/;"	v
TOTAL_STACK	rnn_denoise_bak.js	/^var TOTAL_STACK = 5242880;$/;"	v
TRAINING	rnnoise/src/denoise.c	65;"	d	file:
TRIG_UPSCALE	rnnoise/src/_kiss_fft_guts.h	53;"	d
TWID_MAX	rnnoise/src/_kiss_fft_guts.h	52;"	d
UADD32	rnnoise/src/arch.h	78;"	d
USUB32	rnnoise/src/arch.h	79;"	d
UTF16Decoder	rnn_denoise.js	/^var UTF16Decoder = typeof TextDecoder != 'undefined' ? new TextDecoder('utf-16le') : undefined;$/;"	v
UTF16Decoder	rnn_denoise_bak.js	/^var UTF16Decoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf-16le') : undefined;$/;"	v
UTF16ToString	rnn_denoise.js	/^function UTF16ToString(ptr, maxBytesToRead) {$/;"	f
UTF16ToString	rnn_denoise_bak.js	/^function UTF16ToString(ptr, maxBytesToRead) {$/;"	f
UTF32ToString	rnn_denoise.js	/^function UTF32ToString(ptr, maxBytesToRead) {$/;"	f
UTF32ToString	rnn_denoise_bak.js	/^function UTF32ToString(ptr, maxBytesToRead) {$/;"	f
UTF8ArrayToString	rnn_denoise.js	/^function UTF8ArrayToString(heapOrArray, idx, maxBytesToRead) {$/;"	f
UTF8ArrayToString	rnn_denoise_bak.js	/^function UTF8ArrayToString(heap, idx, maxBytesToRead) {$/;"	f
UTF8Decoder	rnn_denoise.js	/^var UTF8Decoder = typeof TextDecoder != 'undefined' ? new TextDecoder('utf8') : undefined;$/;"	v
UTF8Decoder	rnn_denoise_bak.js	/^var UTF8Decoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf8') : undefined;$/;"	v
UTF8ToString	rnn_denoise.js	/^function UTF8ToString(ptr, maxBytesToRead) {$/;"	f
UTF8ToString	rnn_denoise_bak.js	/^function UTF8ToString(ptr, maxBytesToRead) {$/;"	f
VERSION	rnnoise/Makefile	/^VERSION = unknown$/;"	m
VERY_LARGE16	rnnoise/src/arch.h	115;"	d
VERY_LARGE16	rnnoise/src/arch.h	182;"	d
VERY_SMALL	rnnoise/src/arch.h	114;"	d
VERY_SMALL	rnnoise/src/arch.h	181;"	d
VSHR32	rnnoise/src/arch.h	202;"	d
WASM_PAGE_SIZE	rnn_denoise_bak.js	/^var WASM_PAGE_SIZE = 65536;$/;"	v
WEIGHTS_SCALE	rnnoise/src/rnn.h	34;"	d
WIN32_LEAN_AND_MEAN	Examples/rnnoise_demo.c	27;"	d	file:
WIN32_LEAN_AND_MEAN	rnnoise/examples/rnnoise_demo.c	27;"	d	file:
WINDOW_SIZE	rnnoise/src/denoise.c	46;"	d	file:
WeightClip	rnnoise/training/rnn_train.py	/^class WeightClip(Constraint):$/;"	c
_ALL_SOURCE	rnnoise/config.h	74;"	d
_DARWIN_USE_64_BIT_INODE	rnnoise/config.h	96;"	d
_GNU_SOURCE	rnnoise/config.h	78;"	d
_POSIX_PTHREAD_SEMANTICS	rnnoise/config.h	82;"	d
_TANDEM_SOURCE	rnnoise/config.h	86;"	d
__ATEXIT__	rnn_denoise.js	/^var __ATEXIT__    = []; \/\/ functions called during shutdown$/;"	v
__ATEXIT__	rnn_denoise_bak.js	/^var __ATEXIT__    = []; \/\/ functions called during shutdown$/;"	v
__ATINIT__	rnn_denoise.js	/^var __ATINIT__    = []; \/\/ functions called during startup$/;"	v
__ATINIT__	rnn_denoise_bak.js	/^var __ATINIT__    = []; \/\/ functions called during startup$/;"	v
__ATMAIN__	rnn_denoise_bak.js	/^var __ATMAIN__    = []; \/\/ functions called when main() is to be run$/;"	v
__ATPOSTRUN__	rnn_denoise.js	/^var __ATPOSTRUN__ = []; \/\/ functions called after the main() is called$/;"	v
__ATPOSTRUN__	rnn_denoise_bak.js	/^var __ATPOSTRUN__ = []; \/\/ functions called after the main() is called$/;"	v
__ATPRERUN__	rnn_denoise.js	/^var __ATPRERUN__  = []; \/\/ functions called before the runtime is initialized$/;"	v
__ATPRERUN__	rnn_denoise_bak.js	/^var __ATPRERUN__  = []; \/\/ functions called before the runtime is initialized$/;"	v
__EXTENSIONS__	rnnoise/config.h	90;"	d
__GNUC_PREREQ	rnnoise/src/arch.h	42;"	d
__GNUC_PREREQ	rnnoise/src/arch.h	45;"	d
__call__	rnnoise/training/rnn_train.py	/^    def __call__(self, p):$/;"	m	class:WeightClip	file:
__emscripten_date_now	rnn_denoise.js	/^  function __emscripten_date_now() {$/;"	f
__emscripten_get_now_is_monotonic	rnn_denoise.js	/^  function __emscripten_get_now_is_monotonic() {$/;"	f
__init__	rnnoise/training/rnn_train.py	/^    def __init__(self, c=2):$/;"	m	class:WeightClip
_celt_autocorr	rnnoise/src/celt_lpc.c	/^int _celt_autocorr($/;"	f
_celt_fatal	rnnoise/src/arch.h	/^static OPUS_INLINE void _celt_fatal(const char *str, const char *file, int line)$/;"	f
_celt_lpc	rnnoise/src/celt_lpc.c	/^void _celt_lpc($/;"	f
_clamp	Examples/rnnoise_demo.c	12;"	d	file:
_clamp	rnnoise/examples/rnnoise_demo.c	12;"	d	file:
_clock_gettime	rnn_denoise_bak.js	/^    }function _clock_gettime(clk_id, tp) {$/;"	f
_emscripten_date_now	rnn_denoise.js	/^  "_emscripten_date_now": __emscripten_date_now,$/;"	p	class:asmLibraryArg
_emscripten_get_heap_size	rnn_denoise_bak.js	/^  function _emscripten_get_heap_size() {$/;"	f
_emscripten_get_now	rnn_denoise.js	/^  var _emscripten_get_now;if (ENVIRONMENT_IS_NODE) {$/;"	v
_emscripten_get_now	rnn_denoise_bak.js	/^    _emscripten_get_now = function() {$/;"	f
_emscripten_get_now	rnn_denoise_bak.js	/^  var _emscripten_get_now;if (ENVIRONMENT_IS_NODE) {$/;"	v
_emscripten_get_now_is_monotonic	rnn_denoise.js	/^  "_emscripten_get_now_is_monotonic": __emscripten_get_now_is_monotonic,$/;"	p	class:asmLibraryArg
_emscripten_get_now_is_monotonic	rnn_denoise_bak.js	/^  var _emscripten_get_now_is_monotonic=true;;$/;"	v
_emscripten_get_sbrk_ptr	rnn_denoise_bak.js	/^  function _emscripten_get_sbrk_ptr() {$/;"	f
_emscripten_memcpy_big	rnn_denoise.js	/^  function _emscripten_memcpy_big(dest, src, num) {$/;"	f
_emscripten_memcpy_big	rnn_denoise_bak.js	/^  function _emscripten_memcpy_big(dest, src, num) {$/;"	f
_emscripten_resize_heap	rnn_denoise.js	/^  function _emscripten_resize_heap(requestedSize) {$/;"	f
_emscripten_resize_heap	rnn_denoise_bak.js	/^    }function _emscripten_resize_heap(requestedSize) {$/;"	f
_fd_close	rnn_denoise.js	/^  function _fd_close(fd) {$/;"	f
_fd_close	rnn_denoise_bak.js	/^      }};function _fd_close(fd) {$/;"	f
_fd_seek	rnn_denoise.js	/^  function _fd_seek(fd, offset_low, offset_high, whence, newOffset) {$/;"	f
_fd_seek	rnn_denoise_bak.js	/^  function _fd_seek(fd, offset_low, offset_high, whence, newOffset) {$/;"	f
_fd_write	rnn_denoise.js	/^  function _fd_write(fd, iov, iovcnt, pnum) {$/;"	f
_fd_write	rnn_denoise_bak.js	/^    }function _fd_write(fd, iov, iovcnt, pnum) {$/;"	f
_max	Examples/rnnoise_demo.c	11;"	d	file:
_max	rnnoise/examples/rnnoise_demo.c	11;"	d	file:
_min	Examples/rnnoise_demo.c	10;"	d	file:
_min	rnnoise/examples/rnnoise_demo.c	10;"	d	file:
_setTempRet0	rnn_denoise.js	/^  function _setTempRet0(val) {$/;"	f
_setTempRet0	rnn_denoise_bak.js	/^  function _setTempRet0($i) {$/;"	f
abort	rnn_denoise.js	/^function abort(what) {$/;"	f
abort	rnn_denoise_bak.js	/^function abort(what) {$/;"	f
abs_builddir	rnnoise/Makefile	/^abs_builddir = \/home\/lb\/rnnoise_test\/rnnoise-wasm\/rnnoise$/;"	m
abs_srcdir	rnnoise/Makefile	/^abs_srcdir = \/home\/lb\/rnnoise_test\/rnnoise-wasm\/rnnoise$/;"	m
abs_top_builddir	rnnoise/Makefile	/^abs_top_builddir = \/home\/lb\/rnnoise_test\/rnnoise-wasm\/rnnoise$/;"	m
abs_top_srcdir	rnnoise/Makefile	/^abs_top_srcdir = \/home\/lb\/rnnoise_test\/rnnoise-wasm\/rnnoise$/;"	m
ac_ct_AR	rnnoise/Makefile	/^ac_ct_AR = $/;"	m
ac_ct_CC	rnnoise/Makefile	/^ac_ct_CC = \/home\/lb\/rnnoise_test\/emsdk\/upstream\/emscripten\/emcc$/;"	m
ac_ct_DUMPBIN	rnnoise/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_fn_c_check_func	rnnoise/configure	/^ac_fn_c_check_func ()$/;"	f
ac_fn_c_check_header_compile	rnnoise/configure	/^ac_fn_c_check_header_compile ()$/;"	f
ac_fn_c_check_header_mongrel	rnnoise/configure	/^ac_fn_c_check_header_mongrel ()$/;"	f
ac_fn_c_try_compile	rnnoise/configure	/^ac_fn_c_try_compile ()$/;"	f
ac_fn_c_try_cpp	rnnoise/configure	/^ac_fn_c_try_cpp ()$/;"	f
ac_fn_c_try_link	rnnoise/configure	/^ac_fn_c_try_link ()$/;"	f
ac_fn_c_try_run	rnnoise/configure	/^ac_fn_c_try_run ()$/;"	f
activation	rnnoise/src/rnn.h	/^  int activation;$/;"	m	struct:__anon36
activation	rnnoise/src/rnn.h	/^  int activation;$/;"	m	struct:__anon37
addFunction	rnn_denoise.js	/^function addFunction(func, sig) {$/;"	f
addFunction	rnn_denoise_bak.js	/^function addFunction(func, sig) {$/;"	f
addFunctionWasm	rnn_denoise_bak.js	/^function addFunctionWasm(func, sig) {$/;"	f
addOnExit	rnn_denoise.js	/^function addOnExit(cb) {$/;"	f
addOnExit	rnn_denoise_bak.js	/^function addOnExit(cb) {$/;"	f
addOnInit	rnn_denoise.js	/^function addOnInit(cb) {$/;"	f
addOnInit	rnn_denoise_bak.js	/^function addOnInit(cb) {$/;"	f
addOnPostRun	rnn_denoise.js	/^function addOnPostRun(cb) {$/;"	f
addOnPostRun	rnn_denoise_bak.js	/^function addOnPostRun(cb) {$/;"	f
addOnPreMain	rnn_denoise_bak.js	/^function addOnPreMain(cb) {$/;"	f
addOnPreRun	rnn_denoise.js	/^function addOnPreRun(cb) {$/;"	f
addOnPreRun	rnn_denoise_bak.js	/^function addOnPreRun(cb) {$/;"	f
addRunDependency	rnn_denoise.js	/^function addRunDependency(id) {$/;"	f
addRunDependency	rnn_denoise_bak.js	/^function addRunDependency(id) {$/;"	f
aix_post_process_depfile	rnnoise/depcomp	/^aix_post_process_depfile ()$/;"	f
algo	Examples/dr_mp3.h	/^    } algo;$/;"	m	struct:drmp3_src	typeref:union:drmp3_src::__anon43
algo	rnnoise/examples/dr_mp3.h	/^    } algo;$/;"	m	struct:drmp3_src	typeref:union:drmp3_src::__anon6
algorithm	Examples/dr_mp3.h	/^    drmp3_src_algorithm algorithm;$/;"	m	struct:__anon42
algorithm	rnnoise/examples/dr_mp3.h	/^    drmp3_src_algorithm algorithm;$/;"	m	struct:__anon5
alignMemory	rnn_denoise_bak.js	/^function alignMemory(size, factor) {$/;"	f	function:function
alignUp	rnn_denoise_bak.js	/^function alignUp(x, multiple) {$/;"	f
all_data	rnnoise/src/rnn_train.py	/^    all_data = hf['denoise_data'][:]$/;"	v
all_data	rnnoise/src/rnn_train.py	/^all_data = 0;$/;"	v
all_data	rnnoise/training/rnn_train.py	/^    all_data = hf['data'][:]$/;"	v
all_data	rnnoise/training/rnn_train.py	/^all_data = 0;$/;"	v
allocate	rnn_denoise.js	/^function allocate(slab, allocator) {$/;"	f
allocate	rnn_denoise_bak.js	/^function allocate(slab, types, allocator, ptr) {$/;"	f
allocateUTF8	rnn_denoise.js	/^function allocateUTF8(str) {$/;"	f
allocateUTF8	rnn_denoise_bak.js	/^function allocateUTF8(str) {$/;"	f
allocateUTF8OnStack	rnn_denoise.js	/^function allocateUTF8OnStack(str) {$/;"	f
allocateUTF8OnStack	rnn_denoise_bak.js	/^function allocateUTF8OnStack(str) {$/;"	f
alpha	Examples/dr_mp3.h	/^            double alpha;$/;"	m	struct:drmp3_src::__anon43::__anon44
alpha	rnnoise/examples/dr_mp3.h	/^            double alpha;$/;"	m	struct:drmp3_src::__anon6::__anon7
am__CONFIG_DISTCLEAN_FILES	rnnoise/Makefile	/^am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \\$/;"	m
am__DEPENDENCIES_1	rnnoise/Makefile	/^am__DEPENDENCIES_1 =$/;"	m
am__DIST_COMMON	rnnoise/Makefile	/^am__DIST_COMMON = $(srcdir)\/Makefile.in $(srcdir)\/config.h.in \\$/;"	m
am__aclocal_m4_deps	rnnoise/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/attributes.m4 \\$/;"	m
am__base_list	rnnoise/Makefile	/^am__base_list = \\$/;"	m
am__can_run_installinfo	rnnoise/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__cd	rnnoise/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__configure_deps	rnnoise/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__define_uniq_tagged_files	rnnoise/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__depfiles_remade	rnnoise/Makefile	/^am__depfiles_remade = examples\/$(DEPDIR)\/rnnoise_demo.Po \\$/;"	m
am__dirstamp	rnnoise/Makefile	/^am__dirstamp = $(am__leading_dot)dirstamp$/;"	m
am__distuninstallcheck_listfiles	rnnoise/Makefile	/^am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \\$/;"	m
am__include	rnnoise/Makefile	/^am__include = include$/;"	m
am__install_max	rnnoise/Makefile	/^am__install_max = 40$/;"	m
am__installdirs	rnnoise/Makefile	/^am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(docdir)" \\$/;"	m
am__is_gnu_make	rnnoise/Makefile	/^am__is_gnu_make = { \\$/;"	m
am__leading_dot	rnnoise/Makefile	/^am__leading_dot = .$/;"	m
am__make_dryrun	rnnoise/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	rnnoise/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_running_with_option	rnnoise/Makefile	/^am__make_running_with_option = \\$/;"	m
am__maybe_remake_depfiles	rnnoise/Makefile	/^am__maybe_remake_depfiles = depfiles$/;"	m
am__mv	rnnoise/Makefile	/^am__mv = mv -f$/;"	m
am__nobase_list	rnnoise/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_strip	rnnoise/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip_setup	rnnoise/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__post_remove_distdir	rnnoise/Makefile	/^am__post_remove_distdir = $(am__remove_distdir)$/;"	m
am__quote	rnnoise/Makefile	/^am__quote = $/;"	m
am__remove_distdir	rnnoise/Makefile	/^am__remove_distdir = \\$/;"	m
am__strip_dir	rnnoise/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__tagged_files	rnnoise/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) \\$/;"	m
am__tar	rnnoise/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__uninstall_files_from_dir	rnnoise/Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__uniquify_input	rnnoise/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__untar	rnnoise/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__v_CCLD_	rnnoise/Makefile	/^am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CCLD_0	rnnoise/Makefile	/^am__v_CCLD_0 = @echo "  CCLD    " $@;$/;"	m
am__v_CCLD_1	rnnoise/Makefile	/^am__v_CCLD_1 = $/;"	m
am__v_CC_	rnnoise/Makefile	/^am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CC_0	rnnoise/Makefile	/^am__v_CC_0 = @echo "  CC      " $@;$/;"	m
am__v_CC_1	rnnoise/Makefile	/^am__v_CC_1 = $/;"	m
am__v_GEN_	rnnoise/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_0	rnnoise/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_1	rnnoise/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_P_	rnnoise/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_0	rnnoise/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_1	rnnoise/Makefile	/^am__v_P_1 = :$/;"	m
am__v_at_	rnnoise/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_0	rnnoise/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_1	rnnoise/Makefile	/^am__v_at_1 = $/;"	m
am__v_lt_	rnnoise/Makefile	/^am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_lt_0	rnnoise/Makefile	/^am__v_lt_0 = --silent$/;"	m
am__v_lt_1	rnnoise/Makefile	/^am__v_lt_1 = $/;"	m
am__vpath_adj	rnnoise/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj_setup	rnnoise/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am_examples_rnnoise_demo_OBJECTS	rnnoise/Makefile	/^am_examples_rnnoise_demo_OBJECTS = examples\/rnnoise_demo.$(OBJEXT)$/;"	m
am_librnnoise_la_OBJECTS	rnnoise/Makefile	/^am_librnnoise_la_OBJECTS = src\/denoise.lo src\/rnn.lo src\/rnn_data.lo \\$/;"	m
analysis_mem	rnnoise/src/denoise.c	/^  float analysis_mem[FRAME_SIZE];$/;"	m	struct:DenoiseState	file:
apply_window	rnnoise/src/denoise.c	/^static void apply_window(float *x) {$/;"	f	file:
arch_fft	rnnoise/src/kiss_fft.h	/^    arch_fft_state *arch_fft;$/;"	m	struct:kiss_fft_state
arch_fft_state	rnnoise/src/kiss_fft.h	/^typedef struct arch_fft_state{$/;"	s
arch_fft_state	rnnoise/src/kiss_fft.h	/^} arch_fft_state;$/;"	t	typeref:struct:arch_fft_state
arguments_	rnn_denoise.js	/^var arguments_ = [];$/;"	v
arguments_	rnn_denoise_bak.js	/^var arguments_ = [];$/;"	v
array	rnn_denoise.js	/^    'array': function(arr) {$/;"	m	class:toC
array	rnn_denoise_bak.js	/^    'array': function(arr) {$/;"	m	class:toC
as_fn_append	rnnoise/config.status	/^  as_fn_append ()$/;"	f
as_fn_append	rnnoise/configure	/^  as_fn_append ()$/;"	f
as_fn_arith	rnnoise/config.status	/^  as_fn_arith ()$/;"	f
as_fn_arith	rnnoise/configure	/^  as_fn_arith ()$/;"	f
as_fn_error	rnnoise/config.status	/^as_fn_error ()$/;"	f
as_fn_error	rnnoise/configure	/^as_fn_error ()$/;"	f
as_fn_executable_p	rnnoise/config.status	/^as_fn_executable_p ()$/;"	f
as_fn_executable_p	rnnoise/configure	/^as_fn_executable_p ()$/;"	f
as_fn_exit	rnnoise/config.status	/^as_fn_exit ()$/;"	f
as_fn_exit	rnnoise/configure	/^as_fn_exit ()$/;"	f
as_fn_failure	rnnoise/configure	/^as_fn_failure () { as_fn_return 1; }$/;"	f
as_fn_mkdir_p	rnnoise/config.status	/^as_fn_mkdir_p ()$/;"	f
as_fn_mkdir_p	rnnoise/configure	/^as_fn_mkdir_p ()$/;"	f
as_fn_ret_failure	rnnoise/configure	/^as_fn_ret_failure () { return 1; }$/;"	f
as_fn_ret_success	rnnoise/configure	/^as_fn_ret_success () { return 0; }$/;"	f
as_fn_set_status	rnnoise/config.status	/^as_fn_set_status ()$/;"	f
as_fn_set_status	rnnoise/configure	/^as_fn_set_status ()$/;"	f
as_fn_success	rnnoise/configure	/^as_fn_success () { as_fn_return 0; }$/;"	f
as_fn_unset	rnnoise/config.status	/^as_fn_unset ()$/;"	f
as_fn_unset	rnnoise/configure	/^as_fn_unset ()$/;"	f
asmGlobalArg	rnn_denoise_bak.js	/^var asmGlobalArg = {};$/;"	v
assert	rnn_denoise.js	/^function assert(condition, text) {$/;"	f
assert	rnn_denoise_bak.js	/^function assert(condition, text) {$/;"	f
atEnd	Examples/dr_mp3.h	/^    drmp3_bool32 atEnd : 1;$/;"	m	struct:__anon48
atEnd	rnnoise/examples/dr_mp3.h	/^    drmp3_bool32 atEnd : 1;$/;"	m	struct:__anon11
avgBytesPerSec	Examples/dr_wav.h	/^    drwav_uint32 avgBytesPerSec;$/;"	m	struct:__anon63
avgBytesPerSec	rnnoise/examples/dr_wav.h	/^    drwav_uint32 avgBytesPerSec;$/;"	m	struct:__anon26
band_count	Examples/dr_mp3.h	/^    drmp3_uint8 tab_offset, code_tab_width, band_count;$/;"	m	struct:__anon52
band_count	rnnoise/examples/dr_mp3.h	/^    drmp3_uint8 tab_offset, code_tab_width, band_count;$/;"	m	struct:__anon15
band_lp	rnnoise/src/denoise.c	/^int band_lp = NB_BANDS;$/;"	v
basename	rnn_denoise_bak.js	/^      },basename:function(path) {$/;"	m	class:PATH
batch_size	rnnoise/src/rnn_train.py	/^          batch_size=batch_size,$/;"	v
batch_size	rnnoise/src/rnn_train.py	/^batch_size = 32$/;"	v
batch_size	rnnoise/training/rnn_train.py	/^batch_size = 32$/;"	v
bias	rnnoise/src/rnn.h	/^  const rnn_weight *bias;$/;"	m	struct:__anon36
bias	rnnoise/src/rnn.h	/^  const rnn_weight *bias;$/;"	m	struct:__anon37
big_values	Examples/dr_mp3.h	/^    drmp3_uint16 part_23_length, big_values, scalefac_compress;$/;"	m	struct:__anon53
big_values	rnnoise/examples/dr_mp3.h	/^    drmp3_uint16 part_23_length, big_values, scalefac_compress;$/;"	m	struct:__anon16
bin	Examples/dr_mp3.h	/^    float bin[256];$/;"	m	struct:drmp3_src
bin	rnnoise/examples/dr_mp3.h	/^    float bin[256];$/;"	m	struct:drmp3_src
bindir	rnnoise/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
biquad	rnnoise/src/denoise.c	/^static void biquad(float *y, float mem[2], const float *x, const float *b, const float *a, int N) {$/;"	f	file:
bitalloc	Examples/dr_mp3.h	/^    drmp3_uint8 total_bands, stereo_bands, bitalloc[64], scfcod[64];$/;"	m	struct:__anon51
bitalloc	rnnoise/examples/dr_mp3.h	/^    drmp3_uint8 total_bands, stereo_bands, bitalloc[64], scfcod[64];$/;"	m	struct:__anon14
bitrate_kbps	Examples/dr_mp3.h	/^    int frame_bytes, channels, hz, layer, bitrate_kbps;$/;"	m	struct:__anon38
bitrate_kbps	rnnoise/examples/dr_mp3.h	/^    int frame_bytes, channels, hz, layer, bitrate_kbps;$/;"	m	struct:__anon1
bitrev	rnnoise/src/kiss_fft.h	/^    const opus_int16 *bitrev;$/;"	m	struct:kiss_fft_state
bitsPerSample	Examples/dr_wav.h	/^    drwav_uint16 bitsPerSample;$/;"	m	struct:__anon63
bitsPerSample	Examples/dr_wav.h	/^    drwav_uint16 bitsPerSample;$/;"	m	struct:__anon66
bitsPerSample	Examples/dr_wav.h	/^    drwav_uint32 bitsPerSample;$/;"	m	struct:__anon62
bitsPerSample	rnnoise/examples/dr_wav.h	/^    drwav_uint16 bitsPerSample;$/;"	m	struct:__anon26
bitsPerSample	rnnoise/examples/dr_wav.h	/^    drwav_uint16 bitsPerSample;$/;"	m	struct:__anon29
bitsPerSample	rnnoise/examples/dr_wav.h	/^    drwav_uint32 bitsPerSample;$/;"	m	struct:__anon25
blobIn	rnn_denoise.js	/^var blobIn = null;$/;"	v
blobIn	rnn_denoise_bak.js	/^var blobIn = null;$/;"	v
blobOut	rnn_denoise.js	/^var blobOut = null;$/;"	v
blobOut	rnn_denoise_bak.js	/^var blobOut = null;$/;"	v
blockAlign	Examples/dr_wav.h	/^    drwav_uint16 blockAlign;$/;"	m	struct:__anon63
blockAlign	rnnoise/examples/dr_wav.h	/^    drwav_uint16 blockAlign;$/;"	m	struct:__anon26
block_type	Examples/dr_mp3.h	/^    drmp3_uint8 global_gain, block_type, mixed_block_flag, n_long_sfb, n_short_sfb;$/;"	m	struct:__anon53
block_type	rnnoise/examples/dr_mp3.h	/^    drmp3_uint8 global_gain, block_type, mixed_block_flag, n_long_sfb, n_short_sfb;$/;"	m	struct:__anon16
bs	Examples/dr_mp3.h	/^    drmp3_bs bs;$/;"	m	struct:__anon54
bs	rnnoise/examples/dr_mp3.h	/^    drmp3_bs bs;$/;"	m	struct:__anon17
buf	Examples/dr_mp3.h	/^    const drmp3_uint8 *buf;$/;"	m	struct:__anon50
buf	rnnoise/examples/dr_mp3.h	/^    const drmp3_uint8 *buf;$/;"	m	struct:__anon13
build	rnnoise/Makefile	/^build = x86_64-pc-linux-gnu$/;"	m
build_alias	rnnoise/Makefile	/^build_alias = $/;"	m
build_cpu	rnnoise/Makefile	/^build_cpu = x86_64$/;"	m
build_os	rnnoise/Makefile	/^build_os = linux-gnu$/;"	m
build_triplet	rnnoise/Makefile	/^build_triplet = x86_64-pc-linux-gnu$/;"	m
build_vendor	rnnoise/Makefile	/^build_vendor = pc$/;"	m
builddir	rnnoise/Makefile	/^builddir = .$/;"	m
bytePos	Examples/dr_mp3.h	/^    drmp3_uint64 bytePos;$/;"	m	struct:__anon55
bytePos	rnnoise/examples/dr_mp3.h	/^    drmp3_uint64 bytePos;$/;"	m	struct:__anon18
bytesRemaining	Examples/dr_wav.h	/^    drwav_uint64 bytesRemaining;$/;"	m	struct:__anon66
bytesRemaining	rnnoise/examples/dr_wav.h	/^    drwav_uint64 bytesRemaining;$/;"	m	struct:__anon29
bytesRemainingInBlock	Examples/dr_wav.h	/^        drwav_uint32 bytesRemainingInBlock;$/;"	m	struct:__anon66::__anon68
bytesRemainingInBlock	Examples/dr_wav.h	/^        drwav_uint32 bytesRemainingInBlock;$/;"	m	struct:__anon66::__anon69
bytesRemainingInBlock	rnnoise/examples/dr_wav.h	/^        drwav_uint32 bytesRemainingInBlock;$/;"	m	struct:__anon29::__anon31
bytesRemainingInBlock	rnnoise/examples/dr_wav.h	/^        drwav_uint32 bytesRemainingInBlock;$/;"	m	struct:__anon29::__anon32
cache	Examples/dr_mp3.h	/^    drmp3_src_cache cache;    \/\/ <-- For simplifying and optimizing client -> memory reading.$/;"	m	struct:drmp3_src
cache	rnnoise/examples/dr_mp3.h	/^    drmp3_src_cache cache;    \/\/ <-- For simplifying and optimizing client -> memory reading.$/;"	m	struct:drmp3_src
cacheSizeInFrames	Examples/dr_mp3.h	/^    drmp3_uint32 cacheSizeInFrames;  \/\/ The number of frames to read from the client at a time.$/;"	m	struct:__anon42
cacheSizeInFrames	rnnoise/examples/dr_mp3.h	/^    drmp3_uint32 cacheSizeInFrames;  \/\/ The number of frames to read from the client at a time.$/;"	m	struct:__anon5
cachedFrameCount	Examples/dr_mp3.h	/^    drmp3_uint32 cachedFrameCount;$/;"	m	struct:__anon41
cachedFrameCount	rnnoise/examples/dr_mp3.h	/^    drmp3_uint32 cachedFrameCount;$/;"	m	struct:__anon4
cachedSampleCount	Examples/dr_wav.h	/^        drwav_uint32 cachedSampleCount;$/;"	m	struct:__anon66::__anon68
cachedSampleCount	Examples/dr_wav.h	/^        drwav_uint32 cachedSampleCount;$/;"	m	struct:__anon66::__anon69
cachedSampleCount	rnnoise/examples/dr_wav.h	/^        drwav_uint32 cachedSampleCount;$/;"	m	struct:__anon29::__anon31
cachedSampleCount	rnnoise/examples/dr_wav.h	/^        drwav_uint32 cachedSampleCount;$/;"	m	struct:__anon29::__anon32
cachedSamples	Examples/dr_wav.h	/^        drwav_int32  cachedSamples[16]; \/\/ Samples are stored in this cache during decoding.$/;"	m	struct:__anon66::__anon69
cachedSamples	Examples/dr_wav.h	/^        drwav_int32  cachedSamples[4];  \/\/ Samples are stored in this cache during decoding.$/;"	m	struct:__anon66::__anon68
cachedSamples	rnnoise/examples/dr_wav.h	/^        drwav_int32  cachedSamples[16]; \/\/ Samples are stored in this cache during decoding.$/;"	m	struct:__anon29::__anon32
cachedSamples	rnnoise/examples/dr_wav.h	/^        drwav_int32  cachedSamples[4];  \/\/ Samples are stored in this cache during decoding.$/;"	m	struct:__anon29::__anon31
calcElapsed	Examples/rnnoise_demo.c	/^static double calcElapsed(double start, double end) {$/;"	f	file:
calcElapsed	rnnoise/examples/rnnoise_demo.c	/^static double calcElapsed(double start, double end) {$/;"	f	file:
callMain	rnn_denoise_bak.js	/^function callMain(args) {$/;"	f
callRuntimeCallbacks	rnn_denoise.js	/^  function callRuntimeCallbacks(callbacks) {$/;"	f
callRuntimeCallbacks	rnn_denoise_bak.js	/^function callRuntimeCallbacks(callbacks) {$/;"	f
calledMain	rnn_denoise.js	/^var calledMain = false;$/;"	v
calledMain	rnn_denoise_bak.js	/^var calledMain = false;$/;"	v
calledRun	rnn_denoise.js	/^var calledRun;$/;"	v
calledRun	rnn_denoise_bak.js	/^var calledRun;$/;"	v
ccall	rnn_denoise.js	/^function ccall(ident, returnType, argTypes, args, opts) {$/;"	f
ccall	rnn_denoise_bak.js	/^function ccall(ident, returnType, argTypes, args, opts) {$/;"	f
celt_assert	rnnoise/src/arch.h	63;"	d
celt_assert	rnnoise/src/arch.h	66;"	d
celt_assert2	rnnoise/src/arch.h	64;"	d
celt_assert2	rnnoise/src/arch.h	67;"	d
celt_ener	rnnoise/src/arch.h	/^typedef float celt_ener;$/;"	t
celt_ener	rnnoise/src/arch.h	/^typedef opus_val32 celt_ener;$/;"	t
celt_fatal	rnnoise/src/arch.h	51;"	d
celt_fir	rnnoise/src/celt_lpc.c	/^void celt_fir($/;"	f
celt_fir5	rnnoise/src/pitch.c	/^static void celt_fir5(const opus_val16 *x,$/;"	f	file:
celt_iir	rnnoise/src/celt_lpc.c	/^void celt_iir(const opus_val32 *_x,$/;"	f
celt_inner_prod	rnnoise/src/pitch.h	/^static OPUS_INLINE opus_val32 celt_inner_prod(const opus_val16 *x,$/;"	f
celt_isnan	rnnoise/src/arch.h	/^static OPUS_INLINE int celt_isnan(float x)$/;"	f
celt_isnan	rnnoise/src/arch.h	173;"	d
celt_norm	rnnoise/src/arch.h	/^typedef float celt_norm;$/;"	t
celt_norm	rnnoise/src/arch.h	/^typedef opus_val16 celt_norm;$/;"	t
celt_pitch_xcorr	rnnoise/src/pitch.c	/^void celt_pitch_xcorr(const opus_val16 *_x, const opus_val16 *_y,$/;"	f
celt_sig	rnnoise/src/arch.h	/^typedef float celt_sig;$/;"	t
celt_sig	rnnoise/src/arch.h	/^typedef opus_val32 celt_sig;$/;"	t
cepstral_mem	rnnoise/src/denoise.c	/^  float cepstral_mem[CEPS_MEM][NB_BANDS];$/;"	m	struct:DenoiseState	file:
channelMask	Examples/dr_wav.h	/^    drwav_uint32 channelMask;$/;"	m	struct:__anon63
channelMask	rnnoise/examples/dr_wav.h	/^    drwav_uint32 channelMask;$/;"	m	struct:__anon26
channels	Examples/dr_mp3.h	/^    drmp3_uint32 channels;$/;"	m	struct:__anon42
channels	Examples/dr_mp3.h	/^    drmp3_uint32 channels;$/;"	m	struct:__anon48
channels	Examples/dr_mp3.h	/^    int frame_bytes, channels, hz, layer, bitrate_kbps;$/;"	m	struct:__anon38
channels	Examples/dr_wav.h	/^    drwav_uint16 channels;$/;"	m	struct:__anon63
channels	Examples/dr_wav.h	/^    drwav_uint16 channels;$/;"	m	struct:__anon66
channels	Examples/dr_wav.h	/^    drwav_uint32 channels;$/;"	m	struct:__anon62
channels	Examples/rnnoise_demo.c	/^uint32_t channels = 0;$/;"	v
channels	rnnoise/examples/dr_mp3.h	/^    drmp3_uint32 channels;$/;"	m	struct:__anon11
channels	rnnoise/examples/dr_mp3.h	/^    drmp3_uint32 channels;$/;"	m	struct:__anon5
channels	rnnoise/examples/dr_mp3.h	/^    int frame_bytes, channels, hz, layer, bitrate_kbps;$/;"	m	struct:__anon1
channels	rnnoise/examples/dr_wav.h	/^    drwav_uint16 channels;$/;"	m	struct:__anon26
channels	rnnoise/examples/dr_wav.h	/^    drwav_uint16 channels;$/;"	m	struct:__anon29
channels	rnnoise/examples/dr_wav.h	/^    drwav_uint32 channels;$/;"	m	struct:__anon25
channels	rnnoise/examples/rnnoise_demo.c	/^uint32_t channels = 0;$/;"	v
check_init	rnnoise/src/denoise.c	/^static void check_init() {$/;"	f	file:
clock_gettime	rnn_denoise_bak.js	/^var asmLibraryArg = { "clock_gettime": _clock_gettime, "emscripten_get_sbrk_ptr": _emscripten_get_sbrk_ptr, "emscripten_memcpy_big": _emscripten_memcpy_big, "emscripten_resize_heap": _emscripten_resize_heap, "fd_close": _fd_close, "fd_seek": _fd_seek, "fd_write": _fd_write, "memory": wasmMemory, "setTempRet0": _setTempRet0, "table": wasmTable };$/;"	p	class:asmLibraryArg
code_tab_width	Examples/dr_mp3.h	/^    drmp3_uint8 tab_offset, code_tab_width, band_count;$/;"	m	struct:__anon52
code_tab_width	rnnoise/examples/dr_mp3.h	/^    drmp3_uint8 tab_offset, code_tab_width, band_count;$/;"	m	struct:__anon15
common	rnnoise/src/denoise.c	/^CommonState common;$/;"	v
compressed	Examples/dr_wav.h	/^    } compressed;$/;"	m	struct:__anon66	typeref:struct:__anon66::__anon67
compressed	rnnoise/examples/dr_wav.h	/^    } compressed;$/;"	m	struct:__anon29	typeref:struct:__anon29::__anon30
compute_band_corr	rnnoise/src/denoise.c	/^void compute_band_corr(float *bandE, const kiss_fft_cpx *X, const kiss_fft_cpx *P) {$/;"	f
compute_band_energy	rnnoise/src/denoise.c	/^void compute_band_energy(float *bandE, const kiss_fft_cpx *X) {$/;"	f
compute_bitrev_table	rnnoise/src/kiss_fft.c	/^void compute_bitrev_table($/;"	f	file:
compute_dense	rnnoise/src/rnn.c	/^void compute_dense(const DenseLayer *layer, float *output, const float *input)$/;"	f
compute_frame_features	rnnoise/src/denoise.c	/^static int compute_frame_features(DenoiseState *st, kiss_fft_cpx *X, kiss_fft_cpx *P,$/;"	f	file:
compute_gru	rnnoise/src/rnn.c	/^void compute_gru(const GRULayer *gru, float *state, const float *input)$/;"	f
compute_pitch_gain	rnnoise/src/pitch.c	/^static opus_val16 compute_pitch_gain(opus_val32 xy, opus_val32 xx, opus_val32 yy)$/;"	f	file:
compute_rnn	rnnoise/src/rnn.c	/^void compute_rnn(RNNState *rnn, float *gains, float *vad, const float *input) {$/;"	f
compute_twiddles	rnnoise/src/kiss_fft.c	/^static void compute_twiddles(kiss_twiddle_cpx *twiddles, int nfft)$/;"	f	file:
config	Examples/dr_mp3.h	/^    drmp3_src_config config;$/;"	m	struct:drmp3_src
config	rnnoise/examples/dr_mp3.h	/^    drmp3_src_config config;$/;"	m	struct:drmp3_src
constraint	rnnoise/training/rnn_train.py	/^constraint = WeightClip(0.499)$/;"	v
container	Examples/dr_wav.h	/^    drwav_container container;  \/\/ RIFF, W64.$/;"	m	struct:__anon62
container	Examples/dr_wav.h	/^    drwav_container container;$/;"	m	struct:__anon66
container	rnnoise/examples/dr_wav.h	/^    drwav_container container;  \/\/ RIFF, W64.$/;"	m	struct:__anon25
container	rnnoise/examples/dr_wav.h	/^    drwav_container container;$/;"	m	struct:__anon29
context	rnn_denoise.js	/^var context = null;$/;"	v
context	rnn_denoise_bak.js	/^var context = null;$/;"	v
convertI32PairToI53Checked	rnn_denoise.js	/^  function convertI32PairToI53Checked(lo, hi) {$/;"	f
convertJsFunctionToWasm	rnn_denoise.js	/^function convertJsFunctionToWasm(func, sig) {$/;"	f
convertJsFunctionToWasm	rnn_denoise_bak.js	/^function convertJsFunctionToWasm(func, sig) {$/;"	f
convertReturnValue	rnn_denoise.js	/^  function convertReturnValue(ret) {$/;"	f	function:ccall
convertReturnValue	rnn_denoise_bak.js	/^  function convertReturnValue(ret) {$/;"	f	function:ccall
count1_table	Examples/dr_mp3.h	/^    drmp3_uint8 preflag, scalefac_scale, count1_table, scfsi;$/;"	m	struct:__anon53
count1_table	rnnoise/examples/dr_mp3.h	/^    drmp3_uint8 preflag, scalefac_scale, count1_table, scfsi;$/;"	m	struct:__anon16
createWasm	rnn_denoise.js	/^function createWasm() {$/;"	f
createWasm	rnn_denoise_bak.js	/^function createWasm() {$/;"	f
cuePointId	Examples/dr_wav.h	/^    drwav_uint32 cuePointId;$/;"	m	struct:__anon64
cuePointId	rnnoise/examples/dr_wav.h	/^    drwav_uint32 cuePointId;$/;"	m	struct:__anon27
currentPCMFrame	Examples/dr_mp3.h	/^    drmp3_uint64 currentPCMFrame;       \/\/ The current PCM frame, globally, based on the output sample rate. Mainly used for seeking.$/;"	m	struct:__anon48
currentPCMFrame	rnnoise/examples/dr_mp3.h	/^    drmp3_uint64 currentPCMFrame;       \/\/ The current PCM frame, globally, based on the output sample rate. Mainly used for seeking.$/;"	m	struct:__anon11
currentReadPos	Examples/dr_mp3.h	/^        size_t currentReadPos;$/;"	m	struct:__anon48::__anon49
currentReadPos	Examples/dr_wav.h	/^    size_t currentReadPos;$/;"	m	struct:__anon60
currentReadPos	rnnoise/examples/dr_mp3.h	/^        size_t currentReadPos;$/;"	m	struct:__anon11::__anon12
currentReadPos	rnnoise/examples/dr_wav.h	/^    size_t currentReadPos;$/;"	m	struct:__anon23
currentWritePos	Examples/dr_wav.h	/^    size_t currentWritePos;$/;"	m	struct:__anon61
currentWritePos	rnnoise/examples/dr_wav.h	/^    size_t currentWritePos;$/;"	m	struct:__anon24
cwrap	rnn_denoise.js	/^function cwrap(ident, returnType, argTypes, opts) {$/;"	f
cwrap	rnn_denoise_bak.js	/^function cwrap(ident, returnType, argTypes, opts) {$/;"	f
d	rnn_denoise.js	/^      'd': 'f64',$/;"	p	class:var.typeNames
d	rnn_denoise.js	/^    'd': 0x7c, \/\/ f64$/;"	p	class:convertJsFunctionToWasm.typeCodes
d	rnn_denoise_bak.js	/^      'd': 'f64'$/;"	p	class:var.typeNames
d	rnn_denoise_bak.js	/^    'd': 0x7c, \/\/ f64$/;"	p	class:convertJsFunctionToWasm.typeCodes
data	Examples/dr_wav.h	/^    const drwav_uint8* data;$/;"	m	struct:__anon60
data	rnnoise/examples/dr_wav.h	/^    const drwav_uint8* data;$/;"	m	struct:__anon23
data	rnnoise/training/bin2hdf5.py	/^data = np.fromfile(sys.argv[1], dtype='float32');$/;"	v
data	rnnoise/training/bin2hdf5.py	/^data = np.reshape(data, (int(sys.argv[2]), int(sys.argv[3])));$/;"	v
dataCapacity	Examples/dr_mp3.h	/^    size_t dataCapacity;$/;"	m	struct:__anon48
dataCapacity	Examples/dr_wav.h	/^    size_t dataCapacity;$/;"	m	struct:__anon61
dataCapacity	rnnoise/examples/dr_mp3.h	/^    size_t dataCapacity;$/;"	m	struct:__anon11
dataCapacity	rnnoise/examples/dr_wav.h	/^    size_t dataCapacity;$/;"	m	struct:__anon24
dataChunkDataPos	Examples/dr_wav.h	/^    drwav_uint64 dataChunkDataPos;$/;"	m	struct:__anon66
dataChunkDataPos	rnnoise/examples/dr_wav.h	/^    drwav_uint64 dataChunkDataPos;$/;"	m	struct:__anon29
dataChunkDataSize	Examples/dr_wav.h	/^    drwav_uint64 dataChunkDataSize;$/;"	m	struct:__anon66
dataChunkDataSize	rnnoise/examples/dr_wav.h	/^    drwav_uint64 dataChunkDataSize;$/;"	m	struct:__anon29
dataChunkDataSizeTargetWrite	Examples/dr_wav.h	/^    drwav_uint64 dataChunkDataSizeTargetWrite;$/;"	m	struct:__anon66
dataChunkDataSizeTargetWrite	rnnoise/examples/dr_wav.h	/^    drwav_uint64 dataChunkDataSizeTargetWrite;$/;"	m	struct:__anon29
dataSize	Examples/dr_mp3.h	/^        size_t dataSize;$/;"	m	struct:__anon48::__anon49
dataSize	Examples/dr_mp3.h	/^    size_t dataSize;$/;"	m	struct:__anon48
dataSize	Examples/dr_wav.h	/^    size_t dataSize;$/;"	m	struct:__anon60
dataSize	Examples/dr_wav.h	/^    size_t dataSize;$/;"	m	struct:__anon61
dataSize	rnnoise/examples/dr_mp3.h	/^        size_t dataSize;$/;"	m	struct:__anon11::__anon12
dataSize	rnnoise/examples/dr_mp3.h	/^    size_t dataSize;$/;"	m	struct:__anon11
dataSize	rnnoise/examples/dr_wav.h	/^    size_t dataSize;$/;"	m	struct:__anon23
dataSize	rnnoise/examples/dr_wav.h	/^    size_t dataSize;$/;"	m	struct:__anon24
dataURIPrefix	rnn_denoise.js	/^var dataURIPrefix = 'data:application\/octet-stream;base64,';$/;"	v
dataURIPrefix	rnn_denoise_bak.js	/^var dataURIPrefix = 'data:application\/octet-stream;base64,';$/;"	v
datadir	rnnoise/Makefile	/^datadir = ${datarootdir}$/;"	m
datarootdir	rnnoise/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
dct	rnnoise/src/denoise.c	/^static void dct(float *out, const float *in) {$/;"	f	file:
dct_table	rnnoise/src/denoise.c	/^  float dct_table[NB_BANDS*NB_BANDS];$/;"	m	struct:__anon35	file:
decoder	Examples/dr_mp3.h	/^    drmp3dec decoder;$/;"	m	struct:__anon48
decoder	rnnoise/examples/dr_mp3.h	/^    drmp3dec decoder;$/;"	m	struct:__anon11
delta	Examples/dr_wav.h	/^        drwav_int32  delta[2];$/;"	m	struct:__anon66::__anon68
delta	rnnoise/examples/dr_wav.h	/^        drwav_int32  delta[2];$/;"	m	struct:__anon29::__anon31
demangle	rnn_denoise.js	/^  function demangle(func) {$/;"	f
demangle	rnn_denoise_bak.js	/^  function demangle(func) {$/;"	f
demangleAll	rnn_denoise.js	/^  function demangleAll(text) {$/;"	f
demangleAll	rnn_denoise_bak.js	/^  function demangleAll(text) {$/;"	f
denoise_gru	rnnoise/src/rnn_data.c	/^static const GRULayer denoise_gru = {$/;"	v	file:
denoise_gru	rnnoise/src/rnn_data.h	/^  const GRULayer *denoise_gru;$/;"	m	struct:RNNModel
denoise_gru	rnnoise/training/rnn_train.py	/^denoise_gru = GRU(96, activation='tanh', recurrent_activation='sigmoid', return_sequences=True, name='denoise_gru', kernel_regularizer=regularizers.l2(reg), recurrent_regularizer=regularizers.l2(reg), kernel_constraint=constraint, recurrent_constraint=constraint, bias_constraint=constraint)(denoise_input)$/;"	v
denoise_gru_bias	rnnoise/src/rnn_data.c	/^static const rnn_weight denoise_gru_bias[288] = {$/;"	v	file:
denoise_gru_recurrent_weights	rnnoise/src/rnn_data.c	/^static const rnn_weight denoise_gru_recurrent_weights[27648] = {$/;"	v	file:
denoise_gru_size	rnnoise/src/rnn_data.h	/^  int denoise_gru_size;$/;"	m	struct:RNNModel
denoise_gru_state	rnnoise/src/rnn_data.h	/^  float *denoise_gru_state;$/;"	m	struct:RNNState
denoise_gru_weights	rnnoise/src/rnn_data.c	/^static const rnn_weight denoise_gru_weights[32832] = {$/;"	v	file:
denoise_input	rnnoise/training/rnn_train.py	/^denoise_input = keras.layers.concatenate([vad_gru, noise_gru, main_input])$/;"	v
denoise_output	rnnoise/src/rnn_data.c	/^static const DenseLayer denoise_output = {$/;"	v	file:
denoise_output	rnnoise/src/rnn_data.h	/^  const DenseLayer *denoise_output;$/;"	m	struct:RNNModel
denoise_output	rnnoise/training/rnn_train.py	/^denoise_output = Dense(22, activation='sigmoid', name='denoise_output', kernel_constraint=constraint, bias_constraint=constraint)(denoise_gru)$/;"	v
denoise_output_bias	rnnoise/src/rnn_data.c	/^static const rnn_weight denoise_output_bias[22] = {$/;"	v	file:
denoise_output_size	rnnoise/src/rnn_data.h	/^  int denoise_output_size;$/;"	m	struct:RNNModel
denoise_output_weights	rnnoise/src/rnn_data.c	/^static const rnn_weight denoise_output_weights[2112] = {$/;"	v	file:
denoise_proc	Examples/rnnoise_demo.c	/^void denoise_proc(float *input, uint32_t sampleRate, uint32_t channels, uint64_t sampleCount) {$/;"	f
denoise_proc	rnnoise/examples/rnnoise_demo.c	/^void denoise_proc(float *input, uint32_t sampleRate, uint32_t channels, uint64_t sampleCount) {$/;"	f
denoisedchannel	rnn_denoise.js	/^var denoisedchannel = [];$/;"	v
denoisedchannel	rnn_denoise_bak.js	/^var denoisedchannel = [];$/;"	v
depcomp	rnnoise/Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/depcomp$/;"	m
dependenciesFulfilled	rnn_denoise.js	/^dependenciesFulfilled = function runCaller() {$/;"	f
dependenciesFulfilled	rnn_denoise.js	/^var dependenciesFulfilled = null; \/\/ overridden to take different actions when all run dependencies are fulfilled$/;"	v
dependenciesFulfilled	rnn_denoise_bak.js	/^dependenciesFulfilled = function runCaller() {$/;"	f
dependenciesFulfilled	rnn_denoise_bak.js	/^var dependenciesFulfilled = null; \/\/ overridden to take different actions when all run dependencies are fulfilled$/;"	v
dirname	rnn_denoise_bak.js	/^      },dirname:function(path) {$/;"	m	class:PATH
dist_doc_DATA	rnnoise/Makefile	/^dist_doc_DATA = COPYING AUTHORS README$/;"	m
distcleancheck_listfiles	rnnoise/Makefile	/^distcleancheck_listfiles = find . -type f -print$/;"	m
distdir	rnnoise/Makefile	/^distdir = $(PACKAGE)-$(VERSION)$/;"	m
distuninstallcheck_listfiles	rnnoise/Makefile	/^distuninstallcheck_listfiles = find . -type f -print$/;"	m
doRun	rnn_denoise.js	/^  function doRun() {$/;"	f	function:run
docdir	rnnoise/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
dr_mp3_h	Examples/dr_mp3.h	57;"	d
dr_mp3_h	rnnoise/examples/dr_mp3.h	57;"	d
dr_wav_h	Examples/dr_wav.h	149;"	d
dr_wav_h	rnnoise/examples/dr_wav.h	149;"	d
drmp3	Examples/dr_mp3.h	/^} drmp3;$/;"	t	typeref:struct:__anon48
drmp3	rnnoise/examples/dr_mp3.h	/^} drmp3;$/;"	t	typeref:struct:__anon11
drmp3_L12_apply_scf_384	Examples/dr_mp3.h	/^static void drmp3_L12_apply_scf_384(drmp3_L12_scale_info *sci, const float *scf, float *dst) {$/;"	f
drmp3_L12_apply_scf_384	rnnoise/examples/dr_mp3.h	/^static void drmp3_L12_apply_scf_384(drmp3_L12_scale_info *sci, const float *scf, float *dst) {$/;"	f
drmp3_L12_dequantize_granule	Examples/dr_mp3.h	/^static int drmp3_L12_dequantize_granule(float *grbuf, drmp3_bs *bs, drmp3_L12_scale_info *sci, int group_size) {$/;"	f
drmp3_L12_dequantize_granule	rnnoise/examples/dr_mp3.h	/^static int drmp3_L12_dequantize_granule(float *grbuf, drmp3_bs *bs, drmp3_L12_scale_info *sci, int group_size) {$/;"	f
drmp3_L12_read_scale_info	Examples/dr_mp3.h	/^static void drmp3_L12_read_scale_info(const drmp3_uint8 *hdr, drmp3_bs *bs, drmp3_L12_scale_info *sci) {$/;"	f
drmp3_L12_read_scale_info	rnnoise/examples/dr_mp3.h	/^static void drmp3_L12_read_scale_info(const drmp3_uint8 *hdr, drmp3_bs *bs, drmp3_L12_scale_info *sci) {$/;"	f
drmp3_L12_read_scalefactors	Examples/dr_mp3.h	/^static void drmp3_L12_read_scalefactors(drmp3_bs *bs, drmp3_uint8 *pba, drmp3_uint8 *scfcod, int bands, float *scf) {$/;"	f
drmp3_L12_read_scalefactors	rnnoise/examples/dr_mp3.h	/^static void drmp3_L12_read_scalefactors(drmp3_bs *bs, drmp3_uint8 *pba, drmp3_uint8 *scfcod, int bands, float *scf) {$/;"	f
drmp3_L12_scale_info	Examples/dr_mp3.h	/^} drmp3_L12_scale_info;$/;"	t	typeref:struct:__anon51
drmp3_L12_scale_info	rnnoise/examples/dr_mp3.h	/^} drmp3_L12_scale_info;$/;"	t	typeref:struct:__anon14
drmp3_L12_subband_alloc	Examples/dr_mp3.h	/^} drmp3_L12_subband_alloc;$/;"	t	typeref:struct:__anon52
drmp3_L12_subband_alloc	rnnoise/examples/dr_mp3.h	/^} drmp3_L12_subband_alloc;$/;"	t	typeref:struct:__anon15
drmp3_L12_subband_alloc_table	Examples/dr_mp3.h	/^static const drmp3_L12_subband_alloc *drmp3_L12_subband_alloc_table(const drmp3_uint8 *hdr, drmp3_L12_scale_info *sci) {$/;"	f
drmp3_L12_subband_alloc_table	rnnoise/examples/dr_mp3.h	/^static const drmp3_L12_subband_alloc *drmp3_L12_subband_alloc_table(const drmp3_uint8 *hdr, drmp3_L12_scale_info *sci) {$/;"	f
drmp3_L3_antialias	Examples/dr_mp3.h	/^static void drmp3_L3_antialias(float *grbuf, int nbands) {$/;"	f
drmp3_L3_antialias	rnnoise/examples/dr_mp3.h	/^static void drmp3_L3_antialias(float *grbuf, int nbands) {$/;"	f
drmp3_L3_change_sign	Examples/dr_mp3.h	/^static void drmp3_L3_change_sign(float *grbuf) {$/;"	f
drmp3_L3_change_sign	rnnoise/examples/dr_mp3.h	/^static void drmp3_L3_change_sign(float *grbuf) {$/;"	f
drmp3_L3_dct3_9	Examples/dr_mp3.h	/^static void drmp3_L3_dct3_9(float *y) {$/;"	f
drmp3_L3_dct3_9	rnnoise/examples/dr_mp3.h	/^static void drmp3_L3_dct3_9(float *y) {$/;"	f
drmp3_L3_decode	Examples/dr_mp3.h	/^static void drmp3_L3_decode(drmp3dec *h, drmp3dec_scratch *s, drmp3_L3_gr_info *gr_info, int nch) {$/;"	f
drmp3_L3_decode	rnnoise/examples/dr_mp3.h	/^static void drmp3_L3_decode(drmp3dec *h, drmp3dec_scratch *s, drmp3_L3_gr_info *gr_info, int nch) {$/;"	f
drmp3_L3_decode_scalefactors	Examples/dr_mp3.h	/^drmp3_L3_decode_scalefactors(const drmp3_uint8 *hdr, drmp3_uint8 *ist_pos, drmp3_bs *bs, const drmp3_L3_gr_info *gr,$/;"	f
drmp3_L3_decode_scalefactors	rnnoise/examples/dr_mp3.h	/^drmp3_L3_decode_scalefactors(const drmp3_uint8 *hdr, drmp3_uint8 *ist_pos, drmp3_bs *bs, const drmp3_L3_gr_info *gr,$/;"	f
drmp3_L3_gr_info	Examples/dr_mp3.h	/^} drmp3_L3_gr_info;$/;"	t	typeref:struct:__anon53
drmp3_L3_gr_info	rnnoise/examples/dr_mp3.h	/^} drmp3_L3_gr_info;$/;"	t	typeref:struct:__anon16
drmp3_L3_huffman	Examples/dr_mp3.h	/^drmp3_L3_huffman(float *dst, drmp3_bs *bs, const drmp3_L3_gr_info *gr_info, const float *scf, int layer3gr_limit) {$/;"	f
drmp3_L3_huffman	rnnoise/examples/dr_mp3.h	/^drmp3_L3_huffman(float *dst, drmp3_bs *bs, const drmp3_L3_gr_info *gr_info, const float *scf, int layer3gr_limit) {$/;"	f
drmp3_L3_idct3	Examples/dr_mp3.h	/^static void drmp3_L3_idct3(float x0, float x1, float x2, float *dst) {$/;"	f
drmp3_L3_idct3	rnnoise/examples/dr_mp3.h	/^static void drmp3_L3_idct3(float x0, float x1, float x2, float *dst) {$/;"	f
drmp3_L3_imdct12	Examples/dr_mp3.h	/^static void drmp3_L3_imdct12(float *x, float *dst, float *overlap) {$/;"	f
drmp3_L3_imdct12	rnnoise/examples/dr_mp3.h	/^static void drmp3_L3_imdct12(float *x, float *dst, float *overlap) {$/;"	f
drmp3_L3_imdct36	Examples/dr_mp3.h	/^static void drmp3_L3_imdct36(float *grbuf, float *overlap, const float *window, int nbands) {$/;"	f
drmp3_L3_imdct36	rnnoise/examples/dr_mp3.h	/^static void drmp3_L3_imdct36(float *grbuf, float *overlap, const float *window, int nbands) {$/;"	f
drmp3_L3_imdct_gr	Examples/dr_mp3.h	/^static void drmp3_L3_imdct_gr(float *grbuf, float *overlap, unsigned block_type, unsigned n_long_bands) {$/;"	f
drmp3_L3_imdct_gr	rnnoise/examples/dr_mp3.h	/^static void drmp3_L3_imdct_gr(float *grbuf, float *overlap, unsigned block_type, unsigned n_long_bands) {$/;"	f
drmp3_L3_imdct_short	Examples/dr_mp3.h	/^static void drmp3_L3_imdct_short(float *grbuf, float *overlap, int nbands) {$/;"	f
drmp3_L3_imdct_short	rnnoise/examples/dr_mp3.h	/^static void drmp3_L3_imdct_short(float *grbuf, float *overlap, int nbands) {$/;"	f
drmp3_L3_intensity_stereo	Examples/dr_mp3.h	/^drmp3_L3_intensity_stereo(float *left, drmp3_uint8 *ist_pos, const drmp3_L3_gr_info *gr, const drmp3_uint8 *hdr) {$/;"	f
drmp3_L3_intensity_stereo	rnnoise/examples/dr_mp3.h	/^drmp3_L3_intensity_stereo(float *left, drmp3_uint8 *ist_pos, const drmp3_L3_gr_info *gr, const drmp3_uint8 *hdr) {$/;"	f
drmp3_L3_intensity_stereo_band	Examples/dr_mp3.h	/^static void drmp3_L3_intensity_stereo_band(float *left, int n, float kl, float kr) {$/;"	f
drmp3_L3_intensity_stereo_band	rnnoise/examples/dr_mp3.h	/^static void drmp3_L3_intensity_stereo_band(float *left, int n, float kl, float kr) {$/;"	f
drmp3_L3_ldexp_q2	Examples/dr_mp3.h	/^static float drmp3_L3_ldexp_q2(float y, int exp_q2) {$/;"	f
drmp3_L3_ldexp_q2	rnnoise/examples/dr_mp3.h	/^static float drmp3_L3_ldexp_q2(float y, int exp_q2) {$/;"	f
drmp3_L3_midside_stereo	Examples/dr_mp3.h	/^static void drmp3_L3_midside_stereo(float *left, int n) {$/;"	f
drmp3_L3_midside_stereo	rnnoise/examples/dr_mp3.h	/^static void drmp3_L3_midside_stereo(float *left, int n) {$/;"	f
drmp3_L3_pow_43	Examples/dr_mp3.h	/^static float drmp3_L3_pow_43(int x) {$/;"	f
drmp3_L3_pow_43	rnnoise/examples/dr_mp3.h	/^static float drmp3_L3_pow_43(int x) {$/;"	f
drmp3_L3_read_scalefactors	Examples/dr_mp3.h	/^static void drmp3_L3_read_scalefactors(drmp3_uint8 *scf, drmp3_uint8 *ist_pos, const drmp3_uint8 *scf_size,$/;"	f
drmp3_L3_read_scalefactors	rnnoise/examples/dr_mp3.h	/^static void drmp3_L3_read_scalefactors(drmp3_uint8 *scf, drmp3_uint8 *ist_pos, const drmp3_uint8 *scf_size,$/;"	f
drmp3_L3_read_side_info	Examples/dr_mp3.h	/^static int drmp3_L3_read_side_info(drmp3_bs *bs, drmp3_L3_gr_info *gr, const drmp3_uint8 *hdr) {$/;"	f
drmp3_L3_read_side_info	rnnoise/examples/dr_mp3.h	/^static int drmp3_L3_read_side_info(drmp3_bs *bs, drmp3_L3_gr_info *gr, const drmp3_uint8 *hdr) {$/;"	f
drmp3_L3_reorder	Examples/dr_mp3.h	/^static void drmp3_L3_reorder(float *grbuf, float *scratch, const drmp3_uint8 *sfb) {$/;"	f
drmp3_L3_reorder	rnnoise/examples/dr_mp3.h	/^static void drmp3_L3_reorder(float *grbuf, float *scratch, const drmp3_uint8 *sfb) {$/;"	f
drmp3_L3_restore_reservoir	Examples/dr_mp3.h	/^static int drmp3_L3_restore_reservoir(drmp3dec *h, drmp3_bs *bs, drmp3dec_scratch *s, int main_data_begin) {$/;"	f
drmp3_L3_restore_reservoir	rnnoise/examples/dr_mp3.h	/^static int drmp3_L3_restore_reservoir(drmp3dec *h, drmp3_bs *bs, drmp3dec_scratch *s, int main_data_begin) {$/;"	f
drmp3_L3_save_reservoir	Examples/dr_mp3.h	/^static void drmp3_L3_save_reservoir(drmp3dec *h, drmp3dec_scratch *s) {$/;"	f
drmp3_L3_save_reservoir	rnnoise/examples/dr_mp3.h	/^static void drmp3_L3_save_reservoir(drmp3dec *h, drmp3dec_scratch *s) {$/;"	f
drmp3_L3_stereo_process	Examples/dr_mp3.h	/^drmp3_L3_stereo_process(float *left, const drmp3_uint8 *ist_pos, const drmp3_uint8 *sfb, const drmp3_uint8 *hdr,$/;"	f
drmp3_L3_stereo_process	rnnoise/examples/dr_mp3.h	/^drmp3_L3_stereo_process(float *left, const drmp3_uint8 *ist_pos, const drmp3_uint8 *sfb, const drmp3_uint8 *hdr,$/;"	f
drmp3_L3_stereo_top_band	Examples/dr_mp3.h	/^static void drmp3_L3_stereo_top_band(const float *right, const drmp3_uint8 *sfb, int nbands, int max_band[3]) {$/;"	f
drmp3_L3_stereo_top_band	rnnoise/examples/dr_mp3.h	/^static void drmp3_L3_stereo_top_band(const float *right, const drmp3_uint8 *sfb, int nbands, int max_band[3]) {$/;"	f
drmp3__accumulate_running_pcm_frame_count	Examples/dr_mp3.h	/^void drmp3__accumulate_running_pcm_frame_count(drmp3 *pMP3, drmp3_uint32 pcmFrameCountIn,$/;"	f
drmp3__accumulate_running_pcm_frame_count	rnnoise/examples/dr_mp3.h	/^void drmp3__accumulate_running_pcm_frame_count(drmp3 *pMP3, drmp3_uint32 pcmFrameCountIn,$/;"	f
drmp3__full_read_and_close_f32	Examples/dr_mp3.h	/^float *drmp3__full_read_and_close_f32(drmp3 *pMP3, drmp3_config *pConfig, drmp3_uint64 *pTotalFrameCount) {$/;"	f
drmp3__full_read_and_close_f32	rnnoise/examples/dr_mp3.h	/^float *drmp3__full_read_and_close_f32(drmp3 *pMP3, drmp3_config *pConfig, drmp3_uint64 *pTotalFrameCount) {$/;"	f
drmp3__on_read	Examples/dr_mp3.h	/^static size_t drmp3__on_read(drmp3 *pMP3, void *pBufferOut, size_t bytesToRead) {$/;"	f
drmp3__on_read	rnnoise/examples/dr_mp3.h	/^static size_t drmp3__on_read(drmp3 *pMP3, void *pBufferOut, size_t bytesToRead) {$/;"	f
drmp3__on_read_memory	Examples/dr_mp3.h	/^static size_t drmp3__on_read_memory(void *pUserData, void *pBufferOut, size_t bytesToRead) {$/;"	f
drmp3__on_read_memory	rnnoise/examples/dr_mp3.h	/^static size_t drmp3__on_read_memory(void *pUserData, void *pBufferOut, size_t bytesToRead) {$/;"	f
drmp3__on_read_stdio	Examples/dr_mp3.h	/^static size_t drmp3__on_read_stdio(void *pUserData, void *pBufferOut, size_t bytesToRead) {$/;"	f
drmp3__on_read_stdio	rnnoise/examples/dr_mp3.h	/^static size_t drmp3__on_read_stdio(void *pUserData, void *pBufferOut, size_t bytesToRead) {$/;"	f
drmp3__on_seek	Examples/dr_mp3.h	/^static drmp3_bool32 drmp3__on_seek(drmp3 *pMP3, int offset, drmp3_seek_origin origin) {$/;"	f
drmp3__on_seek	rnnoise/examples/dr_mp3.h	/^static drmp3_bool32 drmp3__on_seek(drmp3 *pMP3, int offset, drmp3_seek_origin origin) {$/;"	f
drmp3__on_seek_64	Examples/dr_mp3.h	/^static drmp3_bool32 drmp3__on_seek_64(drmp3 *pMP3, drmp3_uint64 offset, drmp3_seek_origin origin) {$/;"	f
drmp3__on_seek_64	rnnoise/examples/dr_mp3.h	/^static drmp3_bool32 drmp3__on_seek_64(drmp3 *pMP3, drmp3_uint64 offset, drmp3_seek_origin origin) {$/;"	f
drmp3__on_seek_memory	Examples/dr_mp3.h	/^static drmp3_bool32 drmp3__on_seek_memory(void *pUserData, int byteOffset, drmp3_seek_origin origin) {$/;"	f
drmp3__on_seek_memory	rnnoise/examples/dr_mp3.h	/^static drmp3_bool32 drmp3__on_seek_memory(void *pUserData, int byteOffset, drmp3_seek_origin origin) {$/;"	f
drmp3__on_seek_stdio	Examples/dr_mp3.h	/^static drmp3_bool32 drmp3__on_seek_stdio(void *pUserData, int offset, drmp3_seek_origin origin) {$/;"	f
drmp3__on_seek_stdio	rnnoise/examples/dr_mp3.h	/^static drmp3_bool32 drmp3__on_seek_stdio(void *pUserData, int offset, drmp3_seek_origin origin) {$/;"	f
drmp3__seeking_mp3_frame_info	Examples/dr_mp3.h	/^} drmp3__seeking_mp3_frame_info;$/;"	t	typeref:struct:__anon55
drmp3__seeking_mp3_frame_info	rnnoise/examples/dr_mp3.h	/^} drmp3__seeking_mp3_frame_info;$/;"	t	typeref:struct:__anon18
drmp3_assert	Examples/dr_mp3.h	2220;"	d
drmp3_assert	rnnoise/examples/dr_mp3.h	2220;"	d
drmp3_bind_seek_table	Examples/dr_mp3.h	/^drmp3_bool32 drmp3_bind_seek_table(drmp3 *pMP3, drmp3_uint32 seekPointCount, drmp3_seek_point *pSeekPoints) {$/;"	f
drmp3_bind_seek_table	rnnoise/examples/dr_mp3.h	/^drmp3_bool32 drmp3_bind_seek_table(drmp3 *pMP3, drmp3_uint32 seekPointCount, drmp3_seek_point *pSeekPoints) {$/;"	f
drmp3_blend_f32	Examples/dr_mp3.h	/^static void drmp3_blend_f32(float *pOut, float *pInA, float *pInB, float factor, drmp3_uint32 channels) {$/;"	f
drmp3_blend_f32	rnnoise/examples/dr_mp3.h	/^static void drmp3_blend_f32(float *pOut, float *pInA, float *pInB, float factor, drmp3_uint32 channels) {$/;"	f
drmp3_bool32	Examples/dr_mp3.h	/^typedef drmp3_uint32 drmp3_bool32;$/;"	t
drmp3_bool32	rnnoise/examples/dr_mp3.h	/^typedef drmp3_uint32 drmp3_bool32;$/;"	t
drmp3_bool8	Examples/dr_mp3.h	/^typedef drmp3_uint8 drmp3_bool8;$/;"	t
drmp3_bool8	rnnoise/examples/dr_mp3.h	/^typedef drmp3_uint8 drmp3_bool8;$/;"	t
drmp3_bs	Examples/dr_mp3.h	/^} drmp3_bs;$/;"	t	typeref:struct:__anon50
drmp3_bs	rnnoise/examples/dr_mp3.h	/^} drmp3_bs;$/;"	t	typeref:struct:__anon13
drmp3_bs_get_bits	Examples/dr_mp3.h	/^static drmp3_uint32 drmp3_bs_get_bits(drmp3_bs *bs, int n) {$/;"	f
drmp3_bs_get_bits	rnnoise/examples/dr_mp3.h	/^static drmp3_uint32 drmp3_bs_get_bits(drmp3_bs *bs, int n) {$/;"	f
drmp3_bs_init	Examples/dr_mp3.h	/^static void drmp3_bs_init(drmp3_bs *bs, const drmp3_uint8 *data, int bytes) {$/;"	f
drmp3_bs_init	rnnoise/examples/dr_mp3.h	/^static void drmp3_bs_init(drmp3_bs *bs, const drmp3_uint8 *data, int bytes) {$/;"	f
drmp3_calculate_seek_points	Examples/dr_mp3.h	/^drmp3_bool32 drmp3_calculate_seek_points(drmp3 *pMP3, drmp3_uint32 *pSeekPointCount, drmp3_seek_point *pSeekPoints) {$/;"	f
drmp3_calculate_seek_points	rnnoise/examples/dr_mp3.h	/^drmp3_bool32 drmp3_calculate_seek_points(drmp3 *pMP3, drmp3_uint32 *pSeekPointCount, drmp3_seek_point *pSeekPoints) {$/;"	f
drmp3_config	Examples/dr_mp3.h	/^} drmp3_config;$/;"	t	typeref:struct:__anon47
drmp3_config	rnnoise/examples/dr_mp3.h	/^} drmp3_config;$/;"	t	typeref:struct:__anon10
drmp3_copy_memory	Examples/dr_mp3.h	2221;"	d
drmp3_copy_memory	rnnoise/examples/dr_mp3.h	2221;"	d
drmp3_countof	Examples/dr_mp3.h	2227;"	d
drmp3_countof	rnnoise/examples/dr_mp3.h	2227;"	d
drmp3_cpuid	Examples/dr_mp3.h	/^                                                                                                                        static __inline__ __attribute__((always_inline)) void drmp3_cpuid(int CPUInfo[], const int InfoType)$/;"	f
drmp3_cpuid	Examples/dr_mp3.h	418;"	d
drmp3_cpuid	rnnoise/examples/dr_mp3.h	/^                                                                                                                        static __inline__ __attribute__((always_inline)) void drmp3_cpuid(int CPUInfo[], const int InfoType)$/;"	f
drmp3_cpuid	rnnoise/examples/dr_mp3.h	418;"	d
drmp3_decode_next_frame	Examples/dr_mp3.h	/^static drmp3_uint32 drmp3_decode_next_frame(drmp3 *pMP3) {$/;"	f
drmp3_decode_next_frame	rnnoise/examples/dr_mp3.h	/^static drmp3_uint32 drmp3_decode_next_frame(drmp3 *pMP3) {$/;"	f
drmp3_decode_next_frame_ex	Examples/dr_mp3.h	/^static drmp3_uint32 drmp3_decode_next_frame_ex(drmp3 *pMP3, drmp3d_sample_t *pPCMFrames, drmp3_bool32 discard) {$/;"	f
drmp3_decode_next_frame_ex	rnnoise/examples/dr_mp3.h	/^static drmp3_uint32 drmp3_decode_next_frame_ex(drmp3 *pMP3, drmp3d_sample_t *pPCMFrames, drmp3_bool32 discard) {$/;"	f
drmp3_f4	Examples/dr_mp3.h	/^typedef __m128 drmp3_f4;$/;"	t
drmp3_f4	Examples/dr_mp3.h	/^typedef float32x4_t drmp3_f4;$/;"	t
drmp3_f4	rnnoise/examples/dr_mp3.h	/^typedef __m128 drmp3_f4;$/;"	t
drmp3_f4	rnnoise/examples/dr_mp3.h	/^typedef float32x4_t drmp3_f4;$/;"	t
drmp3_find_closest_seek_point	Examples/dr_mp3.h	/^drmp3_bool32 drmp3_find_closest_seek_point(drmp3 *pMP3, drmp3_uint64 frameIndex, drmp3_uint32 *pSeekPointIndex) {$/;"	f
drmp3_find_closest_seek_point	rnnoise/examples/dr_mp3.h	/^drmp3_bool32 drmp3_find_closest_seek_point(drmp3 *pMP3, drmp3_uint64 frameIndex, drmp3_uint32 *pSeekPointIndex) {$/;"	f
drmp3_free	Examples/dr_mp3.h	/^void drmp3_free(void *p) {$/;"	f
drmp3_free	rnnoise/examples/dr_mp3.h	/^void drmp3_free(void *p) {$/;"	f
drmp3_get_cached_pcm_frame_count_from_src	Examples/dr_mp3.h	/^float drmp3_get_cached_pcm_frame_count_from_src(drmp3 *pMP3) {$/;"	f
drmp3_get_cached_pcm_frame_count_from_src	rnnoise/examples/dr_mp3.h	/^float drmp3_get_cached_pcm_frame_count_from_src(drmp3 *pMP3) {$/;"	f
drmp3_get_mp3_and_pcm_frame_count	Examples/dr_mp3.h	/^drmp3_get_mp3_and_pcm_frame_count(drmp3 *pMP3, drmp3_uint64 *pMP3FrameCount, drmp3_uint64 *pPCMFrameCount) {$/;"	f
drmp3_get_mp3_and_pcm_frame_count	rnnoise/examples/dr_mp3.h	/^drmp3_get_mp3_and_pcm_frame_count(drmp3 *pMP3, drmp3_uint64 *pMP3FrameCount, drmp3_uint64 *pPCMFrameCount) {$/;"	f
drmp3_get_mp3_frame_count	Examples/dr_mp3.h	/^drmp3_uint64 drmp3_get_mp3_frame_count(drmp3 *pMP3) {$/;"	f
drmp3_get_mp3_frame_count	rnnoise/examples/dr_mp3.h	/^drmp3_uint64 drmp3_get_mp3_frame_count(drmp3 *pMP3) {$/;"	f
drmp3_get_pcm_frame_count	Examples/dr_mp3.h	/^drmp3_uint64 drmp3_get_pcm_frame_count(drmp3 *pMP3) {$/;"	f
drmp3_get_pcm_frame_count	rnnoise/examples/dr_mp3.h	/^drmp3_uint64 drmp3_get_pcm_frame_count(drmp3 *pMP3) {$/;"	f
drmp3_get_pcm_frames_remaining_in_mp3_frame	Examples/dr_mp3.h	/^float drmp3_get_pcm_frames_remaining_in_mp3_frame(drmp3 *pMP3) {$/;"	f
drmp3_get_pcm_frames_remaining_in_mp3_frame	rnnoise/examples/dr_mp3.h	/^float drmp3_get_pcm_frames_remaining_in_mp3_frame(drmp3 *pMP3) {$/;"	f
drmp3_have_simd	Examples/dr_mp3.h	/^static int drmp3_have_simd() {$/;"	f
drmp3_have_simd	Examples/dr_mp3.h	/^static int drmp3_have_simd()$/;"	f
drmp3_have_simd	rnnoise/examples/dr_mp3.h	/^static int drmp3_have_simd() {$/;"	f
drmp3_have_simd	rnnoise/examples/dr_mp3.h	/^static int drmp3_have_simd()$/;"	f
drmp3_hdr_bitrate_kbps	Examples/dr_mp3.h	/^static unsigned drmp3_hdr_bitrate_kbps(const drmp3_uint8 *h) {$/;"	f
drmp3_hdr_bitrate_kbps	rnnoise/examples/dr_mp3.h	/^static unsigned drmp3_hdr_bitrate_kbps(const drmp3_uint8 *h) {$/;"	f
drmp3_hdr_compare	Examples/dr_mp3.h	/^static int drmp3_hdr_compare(const drmp3_uint8 *h1, const drmp3_uint8 *h2) {$/;"	f
drmp3_hdr_compare	rnnoise/examples/dr_mp3.h	/^static int drmp3_hdr_compare(const drmp3_uint8 *h1, const drmp3_uint8 *h2) {$/;"	f
drmp3_hdr_frame_bytes	Examples/dr_mp3.h	/^static int drmp3_hdr_frame_bytes(const drmp3_uint8 *h, int free_format_size) {$/;"	f
drmp3_hdr_frame_bytes	rnnoise/examples/dr_mp3.h	/^static int drmp3_hdr_frame_bytes(const drmp3_uint8 *h, int free_format_size) {$/;"	f
drmp3_hdr_frame_samples	Examples/dr_mp3.h	/^static unsigned drmp3_hdr_frame_samples(const drmp3_uint8 *h) {$/;"	f
drmp3_hdr_frame_samples	rnnoise/examples/dr_mp3.h	/^static unsigned drmp3_hdr_frame_samples(const drmp3_uint8 *h) {$/;"	f
drmp3_hdr_padding	Examples/dr_mp3.h	/^static int drmp3_hdr_padding(const drmp3_uint8 *h) {$/;"	f
drmp3_hdr_padding	rnnoise/examples/dr_mp3.h	/^static int drmp3_hdr_padding(const drmp3_uint8 *h) {$/;"	f
drmp3_hdr_sample_rate_hz	Examples/dr_mp3.h	/^static unsigned drmp3_hdr_sample_rate_hz(const drmp3_uint8 *h) {$/;"	f
drmp3_hdr_sample_rate_hz	rnnoise/examples/dr_mp3.h	/^static unsigned drmp3_hdr_sample_rate_hz(const drmp3_uint8 *h) {$/;"	f
drmp3_hdr_valid	Examples/dr_mp3.h	/^static int drmp3_hdr_valid(const drmp3_uint8 *h) {$/;"	f
drmp3_hdr_valid	rnnoise/examples/dr_mp3.h	/^static int drmp3_hdr_valid(const drmp3_uint8 *h) {$/;"	f
drmp3_init	Examples/dr_mp3.h	/^drmp3_init(drmp3 *pMP3, drmp3_read_proc onRead, drmp3_seek_proc onSeek, void *pUserData, const drmp3_config *pConfig) {$/;"	f
drmp3_init	rnnoise/examples/dr_mp3.h	/^drmp3_init(drmp3 *pMP3, drmp3_read_proc onRead, drmp3_seek_proc onSeek, void *pUserData, const drmp3_config *pConfig) {$/;"	f
drmp3_init_file	Examples/dr_mp3.h	/^drmp3_bool32 drmp3_init_file(drmp3 *pMP3, const char *filePath, const drmp3_config *pConfig) {$/;"	f
drmp3_init_file	rnnoise/examples/dr_mp3.h	/^drmp3_bool32 drmp3_init_file(drmp3 *pMP3, const char *filePath, const drmp3_config *pConfig) {$/;"	f
drmp3_init_internal	Examples/dr_mp3.h	/^drmp3_bool32 drmp3_init_internal(drmp3 *pMP3, drmp3_read_proc onRead, drmp3_seek_proc onSeek, void *pUserData,$/;"	f
drmp3_init_internal	rnnoise/examples/dr_mp3.h	/^drmp3_bool32 drmp3_init_internal(drmp3 *pMP3, drmp3_read_proc onRead, drmp3_seek_proc onSeek, void *pUserData,$/;"	f
drmp3_init_memory	Examples/dr_mp3.h	/^drmp3_bool32 drmp3_init_memory(drmp3 *pMP3, const void *pData, size_t dataSize, const drmp3_config *pConfig) {$/;"	f
drmp3_init_memory	rnnoise/examples/dr_mp3.h	/^drmp3_bool32 drmp3_init_memory(drmp3 *pMP3, const void *pData, size_t dataSize, const drmp3_config *pConfig) {$/;"	f
drmp3_int16	Examples/dr_mp3.h	/^typedef   signed short   drmp3_int16;$/;"	t
drmp3_int16	Examples/dr_mp3.h	/^typedef int16_t drmp3_int16;$/;"	t
drmp3_int16	rnnoise/examples/dr_mp3.h	/^typedef   signed short   drmp3_int16;$/;"	t
drmp3_int16	rnnoise/examples/dr_mp3.h	/^typedef int16_t drmp3_int16;$/;"	t
drmp3_int32	Examples/dr_mp3.h	/^typedef   signed int     drmp3_int32;$/;"	t
drmp3_int32	Examples/dr_mp3.h	/^typedef int32_t drmp3_int32;$/;"	t
drmp3_int32	rnnoise/examples/dr_mp3.h	/^typedef   signed int     drmp3_int32;$/;"	t
drmp3_int32	rnnoise/examples/dr_mp3.h	/^typedef int32_t drmp3_int32;$/;"	t
drmp3_int64	Examples/dr_mp3.h	/^typedef   signed __int64 drmp3_int64;$/;"	t
drmp3_int64	Examples/dr_mp3.h	/^typedef int64_t drmp3_int64;$/;"	t
drmp3_int64	rnnoise/examples/dr_mp3.h	/^typedef   signed __int64 drmp3_int64;$/;"	t
drmp3_int64	rnnoise/examples/dr_mp3.h	/^typedef int64_t drmp3_int64;$/;"	t
drmp3_int8	Examples/dr_mp3.h	/^                                                                                                                        typedef   signed char    drmp3_int8;$/;"	t
drmp3_int8	Examples/dr_mp3.h	/^typedef int8_t drmp3_int8;$/;"	t
drmp3_int8	rnnoise/examples/dr_mp3.h	/^                                                                                                                        typedef   signed char    drmp3_int8;$/;"	t
drmp3_int8	rnnoise/examples/dr_mp3.h	/^typedef int8_t drmp3_int8;$/;"	t
drmp3_malloc	Examples/dr_mp3.h	2224;"	d
drmp3_malloc	rnnoise/examples/dr_mp3.h	2224;"	d
drmp3_max	Examples/dr_mp3.h	2228;"	d
drmp3_max	rnnoise/examples/dr_mp3.h	2228;"	d
drmp3_min	Examples/dr_mp3.h	2229;"	d
drmp3_min	rnnoise/examples/dr_mp3.h	2229;"	d
drmp3_mix_f32	Examples/dr_mp3.h	/^static inline float drmp3_mix_f32(float x, float y, float a) {$/;"	f
drmp3_mix_f32	rnnoise/examples/dr_mp3.h	/^static inline float drmp3_mix_f32(float x, float y, float a) {$/;"	f
drmp3_open_and_read_f32	Examples/dr_mp3.h	/^float *drmp3_open_and_read_f32(drmp3_read_proc onRead, drmp3_seek_proc onSeek, void *pUserData, drmp3_config *pConfig,$/;"	f
drmp3_open_and_read_f32	rnnoise/examples/dr_mp3.h	/^float *drmp3_open_and_read_f32(drmp3_read_proc onRead, drmp3_seek_proc onSeek, void *pUserData, drmp3_config *pConfig,$/;"	f
drmp3_open_file_and_read_f32	Examples/dr_mp3.h	/^float *drmp3_open_file_and_read_f32(const char *filePath, drmp3_config *pConfig, drmp3_uint64 *pTotalFrameCount) {$/;"	f
drmp3_open_file_and_read_f32	rnnoise/examples/dr_mp3.h	/^float *drmp3_open_file_and_read_f32(const char *filePath, drmp3_config *pConfig, drmp3_uint64 *pTotalFrameCount) {$/;"	f
drmp3_open_memory_and_read_f32	Examples/dr_mp3.h	/^float *drmp3_open_memory_and_read_f32(const void *pData, size_t dataSize, drmp3_config *pConfig,$/;"	f
drmp3_open_memory_and_read_f32	rnnoise/examples/dr_mp3.h	/^float *drmp3_open_memory_and_read_f32(const void *pData, size_t dataSize, drmp3_config *pConfig,$/;"	f
drmp3_read_pcm_frames_f32	Examples/dr_mp3.h	/^drmp3_uint64 drmp3_read_pcm_frames_f32(drmp3 *pMP3, drmp3_uint64 framesToRead, float *pBufferOut) {$/;"	f
drmp3_read_pcm_frames_f32	rnnoise/examples/dr_mp3.h	/^drmp3_uint64 drmp3_read_pcm_frames_f32(drmp3 *pMP3, drmp3_uint64 framesToRead, float *pBufferOut) {$/;"	f
drmp3_read_proc	Examples/dr_mp3.h	/^typedef size_t (*drmp3_read_proc)(void *pUserData, void *pBufferOut, size_t bytesToRead);$/;"	t
drmp3_read_proc	rnnoise/examples/dr_mp3.h	/^typedef size_t (*drmp3_read_proc)(void *pUserData, void *pBufferOut, size_t bytesToRead);$/;"	t
drmp3_read_src	Examples/dr_mp3.h	/^static drmp3_uint64 drmp3_read_src(drmp3_src *pSRC, drmp3_uint64 frameCount, void *pFramesOut, void *pUserData) {$/;"	f
drmp3_read_src	rnnoise/examples/dr_mp3.h	/^static drmp3_uint64 drmp3_read_src(drmp3_src *pSRC, drmp3_uint64 frameCount, void *pFramesOut, void *pUserData) {$/;"	f
drmp3_realloc	Examples/dr_mp3.h	2225;"	d
drmp3_realloc	rnnoise/examples/dr_mp3.h	2225;"	d
drmp3_reset	Examples/dr_mp3.h	/^void drmp3_reset(drmp3 *pMP3) {$/;"	f
drmp3_reset	rnnoise/examples/dr_mp3.h	/^void drmp3_reset(drmp3 *pMP3) {$/;"	f
drmp3_seek_forward_by_pcm_frames__brute_force	Examples/dr_mp3.h	/^drmp3_bool32 drmp3_seek_forward_by_pcm_frames__brute_force(drmp3 *pMP3, drmp3_uint64 frameOffset) {$/;"	f
drmp3_seek_forward_by_pcm_frames__brute_force	rnnoise/examples/dr_mp3.h	/^drmp3_bool32 drmp3_seek_forward_by_pcm_frames__brute_force(drmp3 *pMP3, drmp3_uint64 frameOffset) {$/;"	f
drmp3_seek_origin	Examples/dr_mp3.h	/^} drmp3_seek_origin;$/;"	t	typeref:enum:__anon45
drmp3_seek_origin	rnnoise/examples/dr_mp3.h	/^} drmp3_seek_origin;$/;"	t	typeref:enum:__anon8
drmp3_seek_origin_current	Examples/dr_mp3.h	/^    drmp3_seek_origin_current$/;"	e	enum:__anon45
drmp3_seek_origin_current	rnnoise/examples/dr_mp3.h	/^    drmp3_seek_origin_current$/;"	e	enum:__anon8
drmp3_seek_origin_start	Examples/dr_mp3.h	/^    drmp3_seek_origin_start,$/;"	e	enum:__anon45
drmp3_seek_origin_start	rnnoise/examples/dr_mp3.h	/^    drmp3_seek_origin_start,$/;"	e	enum:__anon8
drmp3_seek_point	Examples/dr_mp3.h	/^} drmp3_seek_point;$/;"	t	typeref:struct:__anon46
drmp3_seek_point	rnnoise/examples/dr_mp3.h	/^} drmp3_seek_point;$/;"	t	typeref:struct:__anon9
drmp3_seek_proc	Examples/dr_mp3.h	/^typedef drmp3_bool32 (*drmp3_seek_proc)(void *pUserData, int offset, drmp3_seek_origin origin);$/;"	t
drmp3_seek_proc	rnnoise/examples/dr_mp3.h	/^typedef drmp3_bool32 (*drmp3_seek_proc)(void *pUserData, int offset, drmp3_seek_origin origin);$/;"	t
drmp3_seek_to_pcm_frame	Examples/dr_mp3.h	/^drmp3_bool32 drmp3_seek_to_pcm_frame(drmp3 *pMP3, drmp3_uint64 frameIndex) {$/;"	f
drmp3_seek_to_pcm_frame	rnnoise/examples/dr_mp3.h	/^drmp3_bool32 drmp3_seek_to_pcm_frame(drmp3 *pMP3, drmp3_uint64 frameIndex) {$/;"	f
drmp3_seek_to_pcm_frame__brute_force	Examples/dr_mp3.h	/^drmp3_bool32 drmp3_seek_to_pcm_frame__brute_force(drmp3 *pMP3, drmp3_uint64 frameIndex) {$/;"	f
drmp3_seek_to_pcm_frame__brute_force	rnnoise/examples/dr_mp3.h	/^drmp3_bool32 drmp3_seek_to_pcm_frame__brute_force(drmp3 *pMP3, drmp3_uint64 frameIndex) {$/;"	f
drmp3_seek_to_pcm_frame__seek_table	Examples/dr_mp3.h	/^drmp3_bool32 drmp3_seek_to_pcm_frame__seek_table(drmp3 *pMP3, drmp3_uint64 frameIndex) {$/;"	f
drmp3_seek_to_pcm_frame__seek_table	rnnoise/examples/dr_mp3.h	/^drmp3_bool32 drmp3_seek_to_pcm_frame__seek_table(drmp3 *pMP3, drmp3_uint64 frameIndex) {$/;"	f
drmp3_seek_to_start_of_stream	Examples/dr_mp3.h	/^drmp3_bool32 drmp3_seek_to_start_of_stream(drmp3 *pMP3) {$/;"	f
drmp3_seek_to_start_of_stream	rnnoise/examples/dr_mp3.h	/^drmp3_bool32 drmp3_seek_to_start_of_stream(drmp3 *pMP3) {$/;"	f
drmp3_src	Examples/dr_mp3.h	/^struct drmp3_src {$/;"	s
drmp3_src	Examples/dr_mp3.h	/^typedef struct drmp3_src drmp3_src;$/;"	t	typeref:struct:drmp3_src
drmp3_src	rnnoise/examples/dr_mp3.h	/^struct drmp3_src {$/;"	s
drmp3_src	rnnoise/examples/dr_mp3.h	/^typedef struct drmp3_src drmp3_src;$/;"	t	typeref:struct:drmp3_src
drmp3_src_algorithm	Examples/dr_mp3.h	/^} drmp3_src_algorithm;$/;"	t	typeref:enum:__anon40
drmp3_src_algorithm	rnnoise/examples/dr_mp3.h	/^} drmp3_src_algorithm;$/;"	t	typeref:enum:__anon3
drmp3_src_algorithm_linear	Examples/dr_mp3.h	/^    drmp3_src_algorithm_linear$/;"	e	enum:__anon40
drmp3_src_algorithm_linear	rnnoise/examples/dr_mp3.h	/^    drmp3_src_algorithm_linear$/;"	e	enum:__anon3
drmp3_src_algorithm_none	Examples/dr_mp3.h	/^    drmp3_src_algorithm_none,$/;"	e	enum:__anon40
drmp3_src_algorithm_none	rnnoise/examples/dr_mp3.h	/^    drmp3_src_algorithm_none,$/;"	e	enum:__anon3
drmp3_src_cache	Examples/dr_mp3.h	/^} drmp3_src_cache;$/;"	t	typeref:struct:__anon41
drmp3_src_cache	rnnoise/examples/dr_mp3.h	/^} drmp3_src_cache;$/;"	t	typeref:struct:__anon4
drmp3_src_cache_init	Examples/dr_mp3.h	/^void drmp3_src_cache_init(drmp3_src *pSRC, drmp3_src_cache *pCache) {$/;"	f
drmp3_src_cache_init	rnnoise/examples/dr_mp3.h	/^void drmp3_src_cache_init(drmp3_src *pSRC, drmp3_src_cache *pCache) {$/;"	f
drmp3_src_cache_read_frames	Examples/dr_mp3.h	/^drmp3_uint64 drmp3_src_cache_read_frames(drmp3_src_cache *pCache, drmp3_uint64 frameCount, float *pFramesOut) {$/;"	f
drmp3_src_cache_read_frames	rnnoise/examples/dr_mp3.h	/^drmp3_uint64 drmp3_src_cache_read_frames(drmp3_src_cache *pCache, drmp3_uint64 frameCount, float *pFramesOut) {$/;"	f
drmp3_src_config	Examples/dr_mp3.h	/^} drmp3_src_config;$/;"	t	typeref:struct:__anon42
drmp3_src_config	rnnoise/examples/dr_mp3.h	/^} drmp3_src_config;$/;"	t	typeref:struct:__anon5
drmp3_src_init	Examples/dr_mp3.h	/^drmp3_src_init(const drmp3_src_config *pConfig, drmp3_src_read_proc onRead, void *pUserData, drmp3_src *pSRC) {$/;"	f
drmp3_src_init	rnnoise/examples/dr_mp3.h	/^drmp3_src_init(const drmp3_src_config *pConfig, drmp3_src_read_proc onRead, void *pUserData, drmp3_src *pSRC) {$/;"	f
drmp3_src_read_frames	Examples/dr_mp3.h	/^drmp3_uint64 drmp3_src_read_frames(drmp3_src *pSRC, drmp3_uint64 frameCount, void *pFramesOut) {$/;"	f
drmp3_src_read_frames	rnnoise/examples/dr_mp3.h	/^drmp3_uint64 drmp3_src_read_frames(drmp3_src *pSRC, drmp3_uint64 frameCount, void *pFramesOut) {$/;"	f
drmp3_src_read_frames_ex	Examples/dr_mp3.h	/^drmp3_uint64 drmp3_src_read_frames_ex(drmp3_src *pSRC, drmp3_uint64 frameCount, void *pFramesOut, drmp3_bool32 flush) {$/;"	f
drmp3_src_read_frames_ex	rnnoise/examples/dr_mp3.h	/^drmp3_uint64 drmp3_src_read_frames_ex(drmp3_src *pSRC, drmp3_uint64 frameCount, void *pFramesOut, drmp3_bool32 flush) {$/;"	f
drmp3_src_read_frames_linear	Examples/dr_mp3.h	/^drmp3_src_read_frames_linear(drmp3_src *pSRC, drmp3_uint64 frameCount, void *pFramesOut, drmp3_bool32 flush) {$/;"	f
drmp3_src_read_frames_linear	rnnoise/examples/dr_mp3.h	/^drmp3_src_read_frames_linear(drmp3_src *pSRC, drmp3_uint64 frameCount, void *pFramesOut, drmp3_bool32 flush) {$/;"	f
drmp3_src_read_frames_passthrough	Examples/dr_mp3.h	/^drmp3_src_read_frames_passthrough(drmp3_src *pSRC, drmp3_uint64 frameCount, void *pFramesOut, drmp3_bool32 flush) {$/;"	f
drmp3_src_read_frames_passthrough	rnnoise/examples/dr_mp3.h	/^drmp3_src_read_frames_passthrough(drmp3_src *pSRC, drmp3_uint64 frameCount, void *pFramesOut, drmp3_bool32 flush) {$/;"	f
drmp3_src_read_proc	Examples/dr_mp3.h	/^typedef drmp3_uint64 (*drmp3_src_read_proc)(drmp3_src *pSRC, drmp3_uint64 frameCount, void *pFramesOut,$/;"	t
drmp3_src_read_proc	rnnoise/examples/dr_mp3.h	/^typedef drmp3_uint64 (*drmp3_src_read_proc)(drmp3_src *pSRC, drmp3_uint64 frameCount, void *pFramesOut,$/;"	t
drmp3_src_set_input_sample_rate	Examples/dr_mp3.h	/^drmp3_bool32 drmp3_src_set_input_sample_rate(drmp3_src *pSRC, drmp3_uint32 sampleRateIn) {$/;"	f
drmp3_src_set_input_sample_rate	rnnoise/examples/dr_mp3.h	/^drmp3_bool32 drmp3_src_set_input_sample_rate(drmp3_src *pSRC, drmp3_uint32 sampleRateIn) {$/;"	f
drmp3_src_set_output_sample_rate	Examples/dr_mp3.h	/^drmp3_bool32 drmp3_src_set_output_sample_rate(drmp3_src *pSRC, drmp3_uint32 sampleRateOut) {$/;"	f
drmp3_src_set_output_sample_rate	rnnoise/examples/dr_mp3.h	/^drmp3_bool32 drmp3_src_set_output_sample_rate(drmp3_src *pSRC, drmp3_uint32 sampleRateOut) {$/;"	f
drmp3_uint16	Examples/dr_mp3.h	/^typedef uint16_t drmp3_uint16;$/;"	t
drmp3_uint16	Examples/dr_mp3.h	/^typedef unsigned short   drmp3_uint16;$/;"	t
drmp3_uint16	rnnoise/examples/dr_mp3.h	/^typedef uint16_t drmp3_uint16;$/;"	t
drmp3_uint16	rnnoise/examples/dr_mp3.h	/^typedef unsigned short   drmp3_uint16;$/;"	t
drmp3_uint32	Examples/dr_mp3.h	/^typedef uint32_t drmp3_uint32;$/;"	t
drmp3_uint32	Examples/dr_mp3.h	/^typedef unsigned int     drmp3_uint32;$/;"	t
drmp3_uint32	rnnoise/examples/dr_mp3.h	/^typedef uint32_t drmp3_uint32;$/;"	t
drmp3_uint32	rnnoise/examples/dr_mp3.h	/^typedef unsigned int     drmp3_uint32;$/;"	t
drmp3_uint64	Examples/dr_mp3.h	/^typedef uint64_t drmp3_uint64;$/;"	t
drmp3_uint64	Examples/dr_mp3.h	/^typedef unsigned __int64 drmp3_uint64;$/;"	t
drmp3_uint64	rnnoise/examples/dr_mp3.h	/^typedef uint64_t drmp3_uint64;$/;"	t
drmp3_uint64	rnnoise/examples/dr_mp3.h	/^typedef unsigned __int64 drmp3_uint64;$/;"	t
drmp3_uint8	Examples/dr_mp3.h	/^typedef uint8_t drmp3_uint8;$/;"	t
drmp3_uint8	Examples/dr_mp3.h	/^typedef unsigned char    drmp3_uint8;$/;"	t
drmp3_uint8	rnnoise/examples/dr_mp3.h	/^typedef uint8_t drmp3_uint8;$/;"	t
drmp3_uint8	rnnoise/examples/dr_mp3.h	/^typedef unsigned char    drmp3_uint8;$/;"	t
drmp3_uninit	Examples/dr_mp3.h	/^void drmp3_uninit(drmp3 *pMP3) {$/;"	f
drmp3_uninit	rnnoise/examples/dr_mp3.h	/^void drmp3_uninit(drmp3 *pMP3) {$/;"	f
drmp3_zero_memory	Examples/dr_mp3.h	2222;"	d
drmp3_zero_memory	rnnoise/examples/dr_mp3.h	2222;"	d
drmp3_zero_object	Examples/dr_mp3.h	2223;"	d
drmp3_zero_object	rnnoise/examples/dr_mp3.h	2223;"	d
drmp3d_DCT_II	Examples/dr_mp3.h	/^static void drmp3d_DCT_II(float *grbuf, int n) {$/;"	f
drmp3d_DCT_II	rnnoise/examples/dr_mp3.h	/^static void drmp3d_DCT_II(float *grbuf, int n) {$/;"	f
drmp3d_find_frame	Examples/dr_mp3.h	/^static int drmp3d_find_frame(const drmp3_uint8 *mp3, int mp3_bytes, int *free_format_bytes, int *ptr_frame_bytes) {$/;"	f
drmp3d_find_frame	rnnoise/examples/dr_mp3.h	/^static int drmp3d_find_frame(const drmp3_uint8 *mp3, int mp3_bytes, int *free_format_bytes, int *ptr_frame_bytes) {$/;"	f
drmp3d_match_frame	Examples/dr_mp3.h	/^static int drmp3d_match_frame(const drmp3_uint8 *hdr, int mp3_bytes, int frame_bytes) {$/;"	f
drmp3d_match_frame	rnnoise/examples/dr_mp3.h	/^static int drmp3d_match_frame(const drmp3_uint8 *hdr, int mp3_bytes, int frame_bytes) {$/;"	f
drmp3d_sample_t	Examples/dr_mp3.h	/^                                                                                                                        typedef float drmp3d_sample_t;$/;"	t
drmp3d_sample_t	Examples/dr_mp3.h	/^typedef drmp3_int16 drmp3d_sample_t;$/;"	t
drmp3d_sample_t	rnnoise/examples/dr_mp3.h	/^                                                                                                                        typedef float drmp3d_sample_t;$/;"	t
drmp3d_sample_t	rnnoise/examples/dr_mp3.h	/^typedef drmp3_int16 drmp3d_sample_t;$/;"	t
drmp3d_scale_pcm	Examples/dr_mp3.h	/^static drmp3_int16 drmp3d_scale_pcm(float sample) {$/;"	f
drmp3d_scale_pcm	Examples/dr_mp3.h	/^static float drmp3d_scale_pcm(float sample)$/;"	f
drmp3d_scale_pcm	rnnoise/examples/dr_mp3.h	/^static drmp3_int16 drmp3d_scale_pcm(float sample) {$/;"	f
drmp3d_scale_pcm	rnnoise/examples/dr_mp3.h	/^static float drmp3d_scale_pcm(float sample)$/;"	f
drmp3d_synth	Examples/dr_mp3.h	/^static void drmp3d_synth(float *xl, drmp3d_sample_t *dstl, int nch, float *lins) {$/;"	f
drmp3d_synth	rnnoise/examples/dr_mp3.h	/^static void drmp3d_synth(float *xl, drmp3d_sample_t *dstl, int nch, float *lins) {$/;"	f
drmp3d_synth_granule	Examples/dr_mp3.h	/^drmp3d_synth_granule(float *qmf_state, float *grbuf, int nbands, int nch, drmp3d_sample_t *pcm, float *lins) {$/;"	f
drmp3d_synth_granule	rnnoise/examples/dr_mp3.h	/^drmp3d_synth_granule(float *qmf_state, float *grbuf, int nbands, int nch, drmp3d_sample_t *pcm, float *lins) {$/;"	f
drmp3d_synth_pair	Examples/dr_mp3.h	/^static void drmp3d_synth_pair(drmp3d_sample_t *pcm, int nch, const float *z) {$/;"	f
drmp3d_synth_pair	rnnoise/examples/dr_mp3.h	/^static void drmp3d_synth_pair(drmp3d_sample_t *pcm, int nch, const float *z) {$/;"	f
drmp3dec	Examples/dr_mp3.h	/^} drmp3dec;$/;"	t	typeref:struct:__anon39
drmp3dec	rnnoise/examples/dr_mp3.h	/^} drmp3dec;$/;"	t	typeref:struct:__anon2
drmp3dec_decode_frame	Examples/dr_mp3.h	/^drmp3dec_decode_frame(drmp3dec *dec, const unsigned char *mp3, int mp3_bytes, void *pcm, drmp3dec_frame_info *info) {$/;"	f
drmp3dec_decode_frame	rnnoise/examples/dr_mp3.h	/^drmp3dec_decode_frame(drmp3dec *dec, const unsigned char *mp3, int mp3_bytes, void *pcm, drmp3dec_frame_info *info) {$/;"	f
drmp3dec_f32_to_s16	Examples/dr_mp3.h	/^void drmp3dec_f32_to_s16(const float *in, drmp3_int16 *out, int num_samples) {$/;"	f
drmp3dec_f32_to_s16	rnnoise/examples/dr_mp3.h	/^void drmp3dec_f32_to_s16(const float *in, drmp3_int16 *out, int num_samples) {$/;"	f
drmp3dec_frame_info	Examples/dr_mp3.h	/^} drmp3dec_frame_info;$/;"	t	typeref:struct:__anon38
drmp3dec_frame_info	rnnoise/examples/dr_mp3.h	/^} drmp3dec_frame_info;$/;"	t	typeref:struct:__anon1
drmp3dec_init	Examples/dr_mp3.h	/^void drmp3dec_init(drmp3dec *dec) {$/;"	f
drmp3dec_init	rnnoise/examples/dr_mp3.h	/^void drmp3dec_init(drmp3dec *dec) {$/;"	f
drmp3dec_scratch	Examples/dr_mp3.h	/^} drmp3dec_scratch;$/;"	t	typeref:struct:__anon54
drmp3dec_scratch	rnnoise/examples/dr_mp3.h	/^} drmp3dec_scratch;$/;"	t	typeref:struct:__anon17
drwav	Examples/dr_wav.h	/^} drwav;$/;"	t	typeref:struct:__anon66
drwav	rnnoise/examples/dr_wav.h	/^} drwav;$/;"	t	typeref:struct:__anon29
drwavGUID_W64_DATA	Examples/dr_wav.h	/^static const drwav_uint8 drwavGUID_W64_DATA[16] = {0x64,0x61,0x74,0x61, 0xF3,0xAC, 0xD3,0x11, 0x8C,0xD1, 0x00,0xC0,0x4F,0x8E,0xDB,0x8A};    \/\/ 61746164-ACF3-11D3-8CD1-00C04F8EDB8A$/;"	v
drwavGUID_W64_DATA	rnnoise/examples/dr_wav.h	/^static const drwav_uint8 drwavGUID_W64_DATA[16] = {0x64,0x61,0x74,0x61, 0xF3,0xAC, 0xD3,0x11, 0x8C,0xD1, 0x00,0xC0,0x4F,0x8E,0xDB,0x8A};    \/\/ 61746164-ACF3-11D3-8CD1-00C04F8EDB8A$/;"	v
drwavGUID_W64_FACT	Examples/dr_wav.h	/^static const drwav_uint8 drwavGUID_W64_FACT[16] = {0x66,0x61,0x63,0x74, 0xF3,0xAC, 0xD3,0x11, 0x8C,0xD1, 0x00,0xC0,0x4F,0x8E,0xDB,0x8A};    \/\/ 74636166-ACF3-11D3-8CD1-00C04F8EDB8A$/;"	v
drwavGUID_W64_FACT	rnnoise/examples/dr_wav.h	/^static const drwav_uint8 drwavGUID_W64_FACT[16] = {0x66,0x61,0x63,0x74, 0xF3,0xAC, 0xD3,0x11, 0x8C,0xD1, 0x00,0xC0,0x4F,0x8E,0xDB,0x8A};    \/\/ 74636166-ACF3-11D3-8CD1-00C04F8EDB8A$/;"	v
drwavGUID_W64_FMT	Examples/dr_wav.h	/^static const drwav_uint8 drwavGUID_W64_FMT [16] = {0x66,0x6D,0x74,0x20, 0xF3,0xAC, 0xD3,0x11, 0x8C,0xD1, 0x00,0xC0,0x4F,0x8E,0xDB,0x8A};    \/\/ 20746D66-ACF3-11D3-8CD1-00C04F8EDB8A$/;"	v
drwavGUID_W64_FMT	rnnoise/examples/dr_wav.h	/^static const drwav_uint8 drwavGUID_W64_FMT [16] = {0x66,0x6D,0x74,0x20, 0xF3,0xAC, 0xD3,0x11, 0x8C,0xD1, 0x00,0xC0,0x4F,0x8E,0xDB,0x8A};    \/\/ 20746D66-ACF3-11D3-8CD1-00C04F8EDB8A$/;"	v
drwavGUID_W64_JUNK	Examples/dr_wav.h	/^static const drwav_uint8 drwavGUID_W64_JUNK[16] = {0x6A,0x75,0x6E,0x6B, 0xF3,0xAC, 0xD3,0x11, 0x8C,0xD1, 0x00,0xC0,0x4F,0x8E,0xDB,0x8A};    \/\/ 6B6E756A-ACF3-11D3-8CD1-00C04F8EDB8A$/;"	v
drwavGUID_W64_JUNK	rnnoise/examples/dr_wav.h	/^static const drwav_uint8 drwavGUID_W64_JUNK[16] = {0x6A,0x75,0x6E,0x6B, 0xF3,0xAC, 0xD3,0x11, 0x8C,0xD1, 0x00,0xC0,0x4F,0x8E,0xDB,0x8A};    \/\/ 6B6E756A-ACF3-11D3-8CD1-00C04F8EDB8A$/;"	v
drwavGUID_W64_RIFF	Examples/dr_wav.h	/^static const drwav_uint8 drwavGUID_W64_RIFF[16] = {0x72,0x69,0x66,0x66, 0x2E,0x91, 0xCF,0x11, 0xA5,0xD6, 0x28,0xDB,0x04,0xC1,0x00,0x00};    \/\/ 66666972-912E-11CF-A5D6-28DB04C10000$/;"	v
drwavGUID_W64_RIFF	rnnoise/examples/dr_wav.h	/^static const drwav_uint8 drwavGUID_W64_RIFF[16] = {0x72,0x69,0x66,0x66, 0x2E,0x91, 0xCF,0x11, 0xA5,0xD6, 0x28,0xDB,0x04,0xC1,0x00,0x00};    \/\/ 66666972-912E-11CF-A5D6-28DB04C10000$/;"	v
drwavGUID_W64_SMPL	Examples/dr_wav.h	/^static const drwav_uint8 drwavGUID_W64_SMPL[16] = {0x73,0x6D,0x70,0x6C, 0xF3,0xAC, 0xD3,0x11, 0x8C,0xD1, 0x00,0xC0,0x4F,0x8E,0xDB,0x8A};    \/\/ 6C706D73-ACF3-11D3-8CD1-00C04F8EDB8A$/;"	v
drwavGUID_W64_SMPL	rnnoise/examples/dr_wav.h	/^static const drwav_uint8 drwavGUID_W64_SMPL[16] = {0x73,0x6D,0x70,0x6C, 0xF3,0xAC, 0xD3,0x11, 0x8C,0xD1, 0x00,0xC0,0x4F,0x8E,0xDB,0x8A};    \/\/ 6C706D73-ACF3-11D3-8CD1-00C04F8EDB8A$/;"	v
drwavGUID_W64_WAVE	Examples/dr_wav.h	/^static const drwav_uint8 drwavGUID_W64_WAVE[16] = {0x77,0x61,0x76,0x65, 0xF3,0xAC, 0xD3,0x11, 0x8C,0xD1, 0x00,0xC0,0x4F,0x8E,0xDB,0x8A};    \/\/ 65766177-ACF3-11D3-8CD1-00C04F8EDB8A$/;"	v
drwavGUID_W64_WAVE	rnnoise/examples/dr_wav.h	/^static const drwav_uint8 drwavGUID_W64_WAVE[16] = {0x77,0x61,0x76,0x65, 0xF3,0xAC, 0xD3,0x11, 0x8C,0xD1, 0x00,0xC0,0x4F,0x8E,0xDB,0x8A};    \/\/ 65766177-ACF3-11D3-8CD1-00C04F8EDB8A$/;"	v
drwav__alaw_to_s16	Examples/dr_wav.h	/^static DRWAV_INLINE drwav_int16 drwav__alaw_to_s16(drwav_uint8 sampleIn)$/;"	f
drwav__alaw_to_s16	rnnoise/examples/dr_wav.h	/^static DRWAV_INLINE drwav_int16 drwav__alaw_to_s16(drwav_uint8 sampleIn)$/;"	f
drwav__bytes_to_guid	Examples/dr_wav.h	/^static DRWAV_INLINE void drwav__bytes_to_guid(const unsigned char* data, drwav_uint8* guid)$/;"	f
drwav__bytes_to_guid	rnnoise/examples/dr_wav.h	/^static DRWAV_INLINE void drwav__bytes_to_guid(const unsigned char* data, drwav_uint8* guid)$/;"	f
drwav__bytes_to_s16	Examples/dr_wav.h	/^static DRWAV_INLINE short drwav__bytes_to_s16(const unsigned char* data)$/;"	f
drwav__bytes_to_s16	rnnoise/examples/dr_wav.h	/^static DRWAV_INLINE short drwav__bytes_to_s16(const unsigned char* data)$/;"	f
drwav__bytes_to_u16	Examples/dr_wav.h	/^static DRWAV_INLINE unsigned short drwav__bytes_to_u16(const unsigned char* data)$/;"	f
drwav__bytes_to_u16	rnnoise/examples/dr_wav.h	/^static DRWAV_INLINE unsigned short drwav__bytes_to_u16(const unsigned char* data)$/;"	f
drwav__bytes_to_u32	Examples/dr_wav.h	/^static DRWAV_INLINE unsigned int drwav__bytes_to_u32(const unsigned char* data)$/;"	f
drwav__bytes_to_u32	rnnoise/examples/dr_wav.h	/^static DRWAV_INLINE unsigned int drwav__bytes_to_u32(const unsigned char* data)$/;"	f
drwav__bytes_to_u64	Examples/dr_wav.h	/^static DRWAV_INLINE drwav_uint64 drwav__bytes_to_u64(const unsigned char* data)$/;"	f
drwav__bytes_to_u64	rnnoise/examples/dr_wav.h	/^static DRWAV_INLINE drwav_uint64 drwav__bytes_to_u64(const unsigned char* data)$/;"	f
drwav__fourcc_equal	Examples/dr_wav.h	/^static DRWAV_INLINE drwav_bool32 drwav__fourcc_equal(const unsigned char* a, const char* b)$/;"	f
drwav__fourcc_equal	rnnoise/examples/dr_wav.h	/^static DRWAV_INLINE drwav_bool32 drwav__fourcc_equal(const unsigned char* a, const char* b)$/;"	f
drwav__guid_equal	Examples/dr_wav.h	/^static DRWAV_INLINE drwav_bool32 drwav__guid_equal(const drwav_uint8 a[16], const drwav_uint8 b[16])$/;"	f
drwav__guid_equal	rnnoise/examples/dr_wav.h	/^static DRWAV_INLINE drwav_bool32 drwav__guid_equal(const drwav_uint8 a[16], const drwav_uint8 b[16])$/;"	f
drwav__ieee_to_f32	Examples/dr_wav.h	/^static void drwav__ieee_to_f32(float* pOut, const unsigned char* pIn, size_t sampleCount, unsigned int bytesPerSample)$/;"	f
drwav__ieee_to_f32	rnnoise/examples/dr_wav.h	/^static void drwav__ieee_to_f32(float* pOut, const unsigned char* pIn, size_t sampleCount, unsigned int bytesPerSample)$/;"	f
drwav__ieee_to_s16	Examples/dr_wav.h	/^static void drwav__ieee_to_s16(drwav_int16* pOut, const unsigned char* pIn, size_t totalSampleCount, unsigned int bytesPerSample)$/;"	f
drwav__ieee_to_s16	rnnoise/examples/dr_wav.h	/^static void drwav__ieee_to_s16(drwav_int16* pOut, const unsigned char* pIn, size_t totalSampleCount, unsigned int bytesPerSample)$/;"	f
drwav__ieee_to_s32	Examples/dr_wav.h	/^static void drwav__ieee_to_s32(drwav_int32* pOut, const unsigned char* pIn, size_t totalSampleCount, unsigned int bytesPerSample)$/;"	f
drwav__ieee_to_s32	rnnoise/examples/dr_wav.h	/^static void drwav__ieee_to_s32(drwav_int32* pOut, const unsigned char* pIn, size_t totalSampleCount, unsigned int bytesPerSample)$/;"	f
drwav__is_compressed_format_tag	Examples/dr_wav.h	/^static DRWAV_INLINE drwav_bool32 drwav__is_compressed_format_tag(drwav_uint16 formatTag)$/;"	f
drwav__is_compressed_format_tag	rnnoise/examples/dr_wav.h	/^static DRWAV_INLINE drwav_bool32 drwav__is_compressed_format_tag(drwav_uint16 formatTag)$/;"	f
drwav__is_little_endian	Examples/dr_wav.h	/^static DRWAV_INLINE int drwav__is_little_endian()$/;"	f
drwav__is_little_endian	rnnoise/examples/dr_wav.h	/^static DRWAV_INLINE int drwav__is_little_endian()$/;"	f
drwav__memory_stream	Examples/dr_wav.h	/^} drwav__memory_stream;$/;"	t	typeref:struct:__anon60
drwav__memory_stream	rnnoise/examples/dr_wav.h	/^} drwav__memory_stream;$/;"	t	typeref:struct:__anon23
drwav__memory_stream_write	Examples/dr_wav.h	/^} drwav__memory_stream_write;$/;"	t	typeref:struct:__anon61
drwav__memory_stream_write	rnnoise/examples/dr_wav.h	/^} drwav__memory_stream_write;$/;"	t	typeref:struct:__anon24
drwav__mulaw_to_s16	Examples/dr_wav.h	/^static DRWAV_INLINE drwav_int16 drwav__mulaw_to_s16(drwav_uint8 sampleIn)$/;"	f
drwav__mulaw_to_s16	rnnoise/examples/dr_wav.h	/^static DRWAV_INLINE drwav_int16 drwav__mulaw_to_s16(drwav_uint8 sampleIn)$/;"	f
drwav__on_read	Examples/dr_wav.h	/^size_t drwav__on_read(drwav_read_proc onRead, void* pUserData, void* pBufferOut, size_t bytesToRead, drwav_uint64* pCursor)$/;"	f
drwav__on_read	rnnoise/examples/dr_wav.h	/^size_t drwav__on_read(drwav_read_proc onRead, void* pUserData, void* pBufferOut, size_t bytesToRead, drwav_uint64* pCursor)$/;"	f
drwav__on_read_memory	Examples/dr_wav.h	/^static size_t drwav__on_read_memory(void* pUserData, void* pBufferOut, size_t bytesToRead)$/;"	f
drwav__on_read_memory	rnnoise/examples/dr_wav.h	/^static size_t drwav__on_read_memory(void* pUserData, void* pBufferOut, size_t bytesToRead)$/;"	f
drwav__on_read_stdio	Examples/dr_wav.h	/^static size_t drwav__on_read_stdio(void* pUserData, void* pBufferOut, size_t bytesToRead)$/;"	f
drwav__on_read_stdio	rnnoise/examples/dr_wav.h	/^static size_t drwav__on_read_stdio(void* pUserData, void* pBufferOut, size_t bytesToRead)$/;"	f
drwav__on_seek	Examples/dr_wav.h	/^drwav_bool32 drwav__on_seek(drwav_seek_proc onSeek, void* pUserData, int offset, drwav_seek_origin origin, drwav_uint64* pCursor)$/;"	f
drwav__on_seek	rnnoise/examples/dr_wav.h	/^drwav_bool32 drwav__on_seek(drwav_seek_proc onSeek, void* pUserData, int offset, drwav_seek_origin origin, drwav_uint64* pCursor)$/;"	f
drwav__on_seek_memory	Examples/dr_wav.h	/^static drwav_bool32 drwav__on_seek_memory(void* pUserData, int offset, drwav_seek_origin origin)$/;"	f
drwav__on_seek_memory	rnnoise/examples/dr_wav.h	/^static drwav_bool32 drwav__on_seek_memory(void* pUserData, int offset, drwav_seek_origin origin)$/;"	f
drwav__on_seek_memory_write	Examples/dr_wav.h	/^static drwav_bool32 drwav__on_seek_memory_write(void* pUserData, int offset, drwav_seek_origin origin)$/;"	f
drwav__on_seek_memory_write	rnnoise/examples/dr_wav.h	/^static drwav_bool32 drwav__on_seek_memory_write(void* pUserData, int offset, drwav_seek_origin origin)$/;"	f
drwav__on_seek_stdio	Examples/dr_wav.h	/^static drwav_bool32 drwav__on_seek_stdio(void* pUserData, int offset, drwav_seek_origin origin)$/;"	f
drwav__on_seek_stdio	rnnoise/examples/dr_wav.h	/^static drwav_bool32 drwav__on_seek_stdio(void* pUserData, int offset, drwav_seek_origin origin)$/;"	f
drwav__on_write_memory	Examples/dr_wav.h	/^static size_t drwav__on_write_memory(void* pUserData, const void* pDataIn, size_t bytesToWrite)$/;"	f
drwav__on_write_memory	rnnoise/examples/dr_wav.h	/^static size_t drwav__on_write_memory(void* pUserData, const void* pDataIn, size_t bytesToWrite)$/;"	f
drwav__on_write_stdio	Examples/dr_wav.h	/^static size_t drwav__on_write_stdio(void* pUserData, const void* pData, size_t bytesToWrite)$/;"	f
drwav__on_write_stdio	rnnoise/examples/dr_wav.h	/^static size_t drwav__on_write_stdio(void* pUserData, const void* pData, size_t bytesToWrite)$/;"	f
drwav__pcm_to_f32	Examples/dr_wav.h	/^static void drwav__pcm_to_f32(float* pOut, const unsigned char* pIn, size_t sampleCount, unsigned int bytesPerSample)$/;"	f
drwav__pcm_to_f32	rnnoise/examples/dr_wav.h	/^static void drwav__pcm_to_f32(float* pOut, const unsigned char* pIn, size_t sampleCount, unsigned int bytesPerSample)$/;"	f
drwav__pcm_to_s16	Examples/dr_wav.h	/^static void drwav__pcm_to_s16(drwav_int16* pOut, const unsigned char* pIn, size_t totalSampleCount, unsigned int bytesPerSample)$/;"	f
drwav__pcm_to_s16	rnnoise/examples/dr_wav.h	/^static void drwav__pcm_to_s16(drwav_int16* pOut, const unsigned char* pIn, size_t totalSampleCount, unsigned int bytesPerSample)$/;"	f
drwav__pcm_to_s32	Examples/dr_wav.h	/^static void drwav__pcm_to_s32(drwav_int32* pOut, const unsigned char* pIn, size_t totalSampleCount, unsigned int bytesPerSample)$/;"	f
drwav__pcm_to_s32	rnnoise/examples/dr_wav.h	/^static void drwav__pcm_to_s32(drwav_int32* pOut, const unsigned char* pIn, size_t totalSampleCount, unsigned int bytesPerSample)$/;"	f
drwav__read_and_close_f32	Examples/dr_wav.h	/^float* drwav__read_and_close_f32(drwav* pWav, unsigned int* channels, unsigned int* sampleRate, drwav_uint64* totalSampleCount)$/;"	f
drwav__read_and_close_f32	rnnoise/examples/dr_wav.h	/^float* drwav__read_and_close_f32(drwav* pWav, unsigned int* channels, unsigned int* sampleRate, drwav_uint64* totalSampleCount)$/;"	f
drwav__read_and_close_s16	Examples/dr_wav.h	/^drwav_int16* drwav__read_and_close_s16(drwav* pWav, unsigned int* channels, unsigned int* sampleRate, drwav_uint64* totalSampleCount)$/;"	f
drwav__read_and_close_s16	rnnoise/examples/dr_wav.h	/^drwav_int16* drwav__read_and_close_s16(drwav* pWav, unsigned int* channels, unsigned int* sampleRate, drwav_uint64* totalSampleCount)$/;"	f
drwav__read_and_close_s32	Examples/dr_wav.h	/^drwav_int32* drwav__read_and_close_s32(drwav* pWav, unsigned int* channels, unsigned int* sampleRate, drwav_uint64* totalSampleCount)$/;"	f
drwav__read_and_close_s32	rnnoise/examples/dr_wav.h	/^drwav_int32* drwav__read_and_close_s32(drwav* pWav, unsigned int* channels, unsigned int* sampleRate, drwav_uint64* totalSampleCount)$/;"	f
drwav__read_chunk_header	Examples/dr_wav.h	/^static drwav_result drwav__read_chunk_header(drwav_read_proc onRead, void* pUserData, drwav_container container, drwav_uint64* pRunningBytesReadOut, drwav_chunk_header* pHeaderOut)$/;"	f
drwav__read_chunk_header	rnnoise/examples/dr_wav.h	/^static drwav_result drwav__read_chunk_header(drwav_read_proc onRead, void* pUserData, drwav_container container, drwav_uint64* pRunningBytesReadOut, drwav_chunk_header* pHeaderOut)$/;"	f
drwav__read_fmt	Examples/dr_wav.h	/^static drwav_bool32 drwav__read_fmt(drwav_read_proc onRead, drwav_seek_proc onSeek, void* pUserData, drwav_container container, drwav_uint64* pRunningBytesReadOut, drwav_fmt* fmtOut)$/;"	f
drwav__read_fmt	rnnoise/examples/dr_wav.h	/^static drwav_bool32 drwav__read_fmt(drwav_read_proc onRead, drwav_seek_proc onSeek, void* pUserData, drwav_container container, drwav_uint64* pRunningBytesReadOut, drwav_fmt* fmtOut)$/;"	f
drwav__seek_forward	Examples/dr_wav.h	/^static drwav_bool32 drwav__seek_forward(drwav_seek_proc onSeek, drwav_uint64 offset, void* pUserData)$/;"	f
drwav__seek_forward	rnnoise/examples/dr_wav.h	/^static drwav_bool32 drwav__seek_forward(drwav_seek_proc onSeek, drwav_uint64 offset, void* pUserData)$/;"	f
drwav__seek_from_start	Examples/dr_wav.h	/^static drwav_bool32 drwav__seek_from_start(drwav_seek_proc onSeek, drwav_uint64 offset, void* pUserData)$/;"	f
drwav__seek_from_start	rnnoise/examples/dr_wav.h	/^static drwav_bool32 drwav__seek_from_start(drwav_seek_proc onSeek, drwav_uint64 offset, void* pUserData)$/;"	f
drwav_alaw_to_f32	Examples/dr_wav.h	/^void drwav_alaw_to_f32(float* pOut, const drwav_uint8* pIn, size_t sampleCount)$/;"	f
drwav_alaw_to_f32	rnnoise/examples/dr_wav.h	/^void drwav_alaw_to_f32(float* pOut, const drwav_uint8* pIn, size_t sampleCount)$/;"	f
drwav_alaw_to_s16	Examples/dr_wav.h	/^void drwav_alaw_to_s16(drwav_int16* pOut, const drwav_uint8* pIn, size_t sampleCount)$/;"	f
drwav_alaw_to_s16	rnnoise/examples/dr_wav.h	/^void drwav_alaw_to_s16(drwav_int16* pOut, const drwav_uint8* pIn, size_t sampleCount)$/;"	f
drwav_alaw_to_s32	Examples/dr_wav.h	/^void drwav_alaw_to_s32(drwav_int32* pOut, const drwav_uint8* pIn, size_t sampleCount)$/;"	f
drwav_alaw_to_s32	rnnoise/examples/dr_wav.h	/^void drwav_alaw_to_s32(drwav_int32* pOut, const drwav_uint8* pIn, size_t sampleCount)$/;"	f
drwav_align	Examples/dr_wav.h	866;"	d
drwav_align	rnnoise/examples/dr_wav.h	866;"	d
drwav_assert	Examples/dr_wav.h	871;"	d
drwav_assert	rnnoise/examples/dr_wav.h	871;"	d
drwav_bool32	Examples/dr_wav.h	/^typedef drwav_uint32     drwav_bool32;$/;"	t
drwav_bool32	rnnoise/examples/dr_wav.h	/^typedef drwav_uint32     drwav_bool32;$/;"	t
drwav_bool8	Examples/dr_wav.h	/^typedef drwav_uint8      drwav_bool8;$/;"	t
drwav_bool8	rnnoise/examples/dr_wav.h	/^typedef drwav_uint8      drwav_bool8;$/;"	t
drwav_chunk_header	Examples/dr_wav.h	/^} drwav_chunk_header;$/;"	t	typeref:struct:__anon58
drwav_chunk_header	rnnoise/examples/dr_wav.h	/^} drwav_chunk_header;$/;"	t	typeref:struct:__anon21
drwav_chunk_proc	Examples/dr_wav.h	/^typedef drwav_uint64 (* drwav_chunk_proc)(void* pChunkUserData, drwav_read_proc onRead, drwav_seek_proc onSeek, void* pReadSeekUserData, const drwav_chunk_header* pChunkHeader);$/;"	t
drwav_chunk_proc	rnnoise/examples/dr_wav.h	/^typedef drwav_uint64 (* drwav_chunk_proc)(void* pChunkUserData, drwav_read_proc onRead, drwav_seek_proc onSeek, void* pReadSeekUserData, const drwav_chunk_header* pChunkHeader);$/;"	t
drwav_clamp	Examples/dr_wav.h	869;"	d
drwav_clamp	rnnoise/examples/dr_wav.h	869;"	d
drwav_close	Examples/dr_wav.h	/^void drwav_close(drwav* pWav)$/;"	f
drwav_close	rnnoise/examples/dr_wav.h	/^void drwav_close(drwav* pWav)$/;"	f
drwav_container	Examples/dr_wav.h	/^} drwav_container;$/;"	t	typeref:enum:__anon57
drwav_container	rnnoise/examples/dr_wav.h	/^} drwav_container;$/;"	t	typeref:enum:__anon20
drwav_container_riff	Examples/dr_wav.h	/^    drwav_container_riff,$/;"	e	enum:__anon57
drwav_container_riff	rnnoise/examples/dr_wav.h	/^    drwav_container_riff,$/;"	e	enum:__anon20
drwav_container_w64	Examples/dr_wav.h	/^    drwav_container_w64$/;"	e	enum:__anon57
drwav_container_w64	rnnoise/examples/dr_wav.h	/^    drwav_container_w64$/;"	e	enum:__anon20
drwav_copy_memory	Examples/dr_wav.h	872;"	d
drwav_copy_memory	rnnoise/examples/dr_wav.h	872;"	d
drwav_countof	Examples/dr_wav.h	865;"	d
drwav_countof	rnnoise/examples/dr_wav.h	865;"	d
drwav_data_chunk_size_riff	Examples/dr_wav.h	/^drwav_uint32 drwav_data_chunk_size_riff(drwav_uint64 dataChunkSize)$/;"	f
drwav_data_chunk_size_riff	rnnoise/examples/dr_wav.h	/^drwav_uint32 drwav_data_chunk_size_riff(drwav_uint64 dataChunkSize)$/;"	f
drwav_data_chunk_size_w64	Examples/dr_wav.h	/^drwav_uint64 drwav_data_chunk_size_w64(drwav_uint64 dataChunkSize)$/;"	f
drwav_data_chunk_size_w64	rnnoise/examples/dr_wav.h	/^drwav_uint64 drwav_data_chunk_size_w64(drwav_uint64 dataChunkSize)$/;"	f
drwav_data_format	Examples/dr_wav.h	/^} drwav_data_format;$/;"	t	typeref:struct:__anon62
drwav_data_format	rnnoise/examples/dr_wav.h	/^} drwav_data_format;$/;"	t	typeref:struct:__anon25
drwav_f32_to_s16	Examples/dr_wav.h	/^void drwav_f32_to_s16(drwav_int16* pOut, const float* pIn, size_t sampleCount)$/;"	f
drwav_f32_to_s16	rnnoise/examples/dr_wav.h	/^void drwav_f32_to_s16(drwav_int16* pOut, const float* pIn, size_t sampleCount)$/;"	f
drwav_f32_to_s32	Examples/dr_wav.h	/^void drwav_f32_to_s32(drwav_int32* pOut, const float* pIn, size_t sampleCount)$/;"	f
drwav_f32_to_s32	rnnoise/examples/dr_wav.h	/^void drwav_f32_to_s32(drwav_int32* pOut, const float* pIn, size_t sampleCount)$/;"	f
drwav_f64_to_f32	Examples/dr_wav.h	/^void drwav_f64_to_f32(float* pOut, const double* pIn, size_t sampleCount)$/;"	f
drwav_f64_to_f32	rnnoise/examples/dr_wav.h	/^void drwav_f64_to_f32(float* pOut, const double* pIn, size_t sampleCount)$/;"	f
drwav_f64_to_s16	Examples/dr_wav.h	/^void drwav_f64_to_s16(drwav_int16* pOut, const double* pIn, size_t sampleCount)$/;"	f
drwav_f64_to_s16	rnnoise/examples/dr_wav.h	/^void drwav_f64_to_s16(drwav_int16* pOut, const double* pIn, size_t sampleCount)$/;"	f
drwav_f64_to_s32	Examples/dr_wav.h	/^void drwav_f64_to_s32(drwav_int32* pOut, const double* pIn, size_t sampleCount)$/;"	f
drwav_f64_to_s32	rnnoise/examples/dr_wav.h	/^void drwav_f64_to_s32(drwav_int32* pOut, const double* pIn, size_t sampleCount)$/;"	f
drwav_fmt	Examples/dr_wav.h	/^} drwav_fmt;$/;"	t	typeref:struct:__anon63
drwav_fmt	rnnoise/examples/dr_wav.h	/^} drwav_fmt;$/;"	t	typeref:struct:__anon26
drwav_fopen	Examples/dr_wav.h	/^FILE* drwav_fopen(const char* filePath, const char* openMode)$/;"	f
drwav_fopen	rnnoise/examples/dr_wav.h	/^FILE* drwav_fopen(const char* filePath, const char* openMode)$/;"	f
drwav_free	Examples/dr_wav.h	/^void drwav_free(void* pDataReturnedByOpenAndRead)$/;"	f
drwav_free	rnnoise/examples/dr_wav.h	/^void drwav_free(void* pDataReturnedByOpenAndRead)$/;"	f
drwav_get_bytes_per_pcm_frame	Examples/dr_wav.h	/^static drwav_uint32 drwav_get_bytes_per_pcm_frame(drwav* pWav)$/;"	f
drwav_get_bytes_per_pcm_frame	rnnoise/examples/dr_wav.h	/^static drwav_uint32 drwav_get_bytes_per_pcm_frame(drwav* pWav)$/;"	f
drwav_get_bytes_per_sample	Examples/dr_wav.h	/^static drwav_uint32 drwav_get_bytes_per_sample(drwav* pWav)$/;"	f
drwav_get_bytes_per_sample	rnnoise/examples/dr_wav.h	/^static drwav_uint32 drwav_get_bytes_per_sample(drwav* pWav)$/;"	f
drwav_init	Examples/dr_wav.h	/^drwav_bool32 drwav_init(drwav* pWav, drwav_read_proc onRead, drwav_seek_proc onSeek, void* pUserData)$/;"	f
drwav_init	rnnoise/examples/dr_wav.h	/^drwav_bool32 drwav_init(drwav* pWav, drwav_read_proc onRead, drwav_seek_proc onSeek, void* pUserData)$/;"	f
drwav_init_ex	Examples/dr_wav.h	/^drwav_bool32 drwav_init_ex(drwav* pWav, drwav_read_proc onRead, drwav_seek_proc onSeek, drwav_chunk_proc onChunk, void* pReadSeekUserData, void* pChunkUserData, drwav_uint32 flags)$/;"	f
drwav_init_ex	rnnoise/examples/dr_wav.h	/^drwav_bool32 drwav_init_ex(drwav* pWav, drwav_read_proc onRead, drwav_seek_proc onSeek, drwav_chunk_proc onChunk, void* pReadSeekUserData, void* pChunkUserData, drwav_uint32 flags)$/;"	f
drwav_init_file	Examples/dr_wav.h	/^drwav_bool32 drwav_init_file(drwav* pWav, const char* filename)$/;"	f
drwav_init_file	rnnoise/examples/dr_wav.h	/^drwav_bool32 drwav_init_file(drwav* pWav, const char* filename)$/;"	f
drwav_init_file_ex	Examples/dr_wav.h	/^drwav_bool32 drwav_init_file_ex(drwav* pWav, const char* filename, drwav_chunk_proc onChunk, void* pChunkUserData, drwav_uint32 flags)$/;"	f
drwav_init_file_ex	rnnoise/examples/dr_wav.h	/^drwav_bool32 drwav_init_file_ex(drwav* pWav, const char* filename, drwav_chunk_proc onChunk, void* pChunkUserData, drwav_uint32 flags)$/;"	f
drwav_init_file_write	Examples/dr_wav.h	/^drwav_bool32 drwav_init_file_write(drwav* pWav, const char* filename, const drwav_data_format* pFormat)$/;"	f
drwav_init_file_write	rnnoise/examples/dr_wav.h	/^drwav_bool32 drwav_init_file_write(drwav* pWav, const char* filename, const drwav_data_format* pFormat)$/;"	f
drwav_init_file_write__internal	Examples/dr_wav.h	/^drwav_bool32 drwav_init_file_write__internal(drwav* pWav, const char* filename, const drwav_data_format* pFormat, drwav_uint64 totalSampleCount, drwav_bool32 isSequential)$/;"	f
drwav_init_file_write__internal	rnnoise/examples/dr_wav.h	/^drwav_bool32 drwav_init_file_write__internal(drwav* pWav, const char* filename, const drwav_data_format* pFormat, drwav_uint64 totalSampleCount, drwav_bool32 isSequential)$/;"	f
drwav_init_file_write_sequential	Examples/dr_wav.h	/^drwav_bool32 drwav_init_file_write_sequential(drwav* pWav, const char* filename, const drwav_data_format* pFormat, drwav_uint64 totalSampleCount)$/;"	f
drwav_init_file_write_sequential	rnnoise/examples/dr_wav.h	/^drwav_bool32 drwav_init_file_write_sequential(drwav* pWav, const char* filename, const drwav_data_format* pFormat, drwav_uint64 totalSampleCount)$/;"	f
drwav_init_memory	Examples/dr_wav.h	/^drwav_bool32 drwav_init_memory(drwav* pWav, const void* data, size_t dataSize)$/;"	f
drwav_init_memory	rnnoise/examples/dr_wav.h	/^drwav_bool32 drwav_init_memory(drwav* pWav, const void* data, size_t dataSize)$/;"	f
drwav_init_memory_ex	Examples/dr_wav.h	/^drwav_bool32 drwav_init_memory_ex(drwav* pWav, const void* data, size_t dataSize, drwav_chunk_proc onChunk, void* pChunkUserData, drwav_uint32 flags)$/;"	f
drwav_init_memory_ex	rnnoise/examples/dr_wav.h	/^drwav_bool32 drwav_init_memory_ex(drwav* pWav, const void* data, size_t dataSize, drwav_chunk_proc onChunk, void* pChunkUserData, drwav_uint32 flags)$/;"	f
drwav_init_memory_write	Examples/dr_wav.h	/^drwav_bool32 drwav_init_memory_write(drwav* pWav, void** ppData, size_t* pDataSize, const drwav_data_format* pFormat)$/;"	f
drwav_init_memory_write	rnnoise/examples/dr_wav.h	/^drwav_bool32 drwav_init_memory_write(drwav* pWav, void** ppData, size_t* pDataSize, const drwav_data_format* pFormat)$/;"	f
drwav_init_memory_write__internal	Examples/dr_wav.h	/^drwav_bool32 drwav_init_memory_write__internal(drwav* pWav, void** ppData, size_t* pDataSize, const drwav_data_format* pFormat, drwav_uint64 totalSampleCount, drwav_bool32 isSequential)$/;"	f
drwav_init_memory_write__internal	rnnoise/examples/dr_wav.h	/^drwav_bool32 drwav_init_memory_write__internal(drwav* pWav, void** ppData, size_t* pDataSize, const drwav_data_format* pFormat, drwav_uint64 totalSampleCount, drwav_bool32 isSequential)$/;"	f
drwav_init_memory_write_sequential	Examples/dr_wav.h	/^drwav_bool32 drwav_init_memory_write_sequential(drwav* pWav, void** ppData, size_t* pDataSize, const drwav_data_format* pFormat, drwav_uint64 totalSampleCount)$/;"	f
drwav_init_memory_write_sequential	rnnoise/examples/dr_wav.h	/^drwav_bool32 drwav_init_memory_write_sequential(drwav* pWav, void** ppData, size_t* pDataSize, const drwav_data_format* pFormat, drwav_uint64 totalSampleCount)$/;"	f
drwav_init_write	Examples/dr_wav.h	/^drwav_bool32 drwav_init_write(drwav* pWav, const drwav_data_format* pFormat, drwav_write_proc onWrite, drwav_seek_proc onSeek, void* pUserData)$/;"	f
drwav_init_write	rnnoise/examples/dr_wav.h	/^drwav_bool32 drwav_init_write(drwav* pWav, const drwav_data_format* pFormat, drwav_write_proc onWrite, drwav_seek_proc onSeek, void* pUserData)$/;"	f
drwav_init_write__internal	Examples/dr_wav.h	/^drwav_bool32 drwav_init_write__internal(drwav* pWav, const drwav_data_format* pFormat, drwav_uint64 totalSampleCount, drwav_bool32 isSequential, drwav_write_proc onWrite, drwav_seek_proc onSeek, void* pUserData)$/;"	f
drwav_init_write__internal	rnnoise/examples/dr_wav.h	/^drwav_bool32 drwav_init_write__internal(drwav* pWav, const drwav_data_format* pFormat, drwav_uint64 totalSampleCount, drwav_bool32 isSequential, drwav_write_proc onWrite, drwav_seek_proc onSeek, void* pUserData)$/;"	f
drwav_init_write_sequential	Examples/dr_wav.h	/^drwav_bool32 drwav_init_write_sequential(drwav* pWav, const drwav_data_format* pFormat, drwav_uint64 totalSampleCount, drwav_write_proc onWrite, void* pUserData)$/;"	f
drwav_init_write_sequential	rnnoise/examples/dr_wav.h	/^drwav_bool32 drwav_init_write_sequential(drwav* pWav, const drwav_data_format* pFormat, drwav_uint64 totalSampleCount, drwav_write_proc onWrite, void* pUserData)$/;"	f
drwav_int16	Examples/dr_wav.h	/^typedef   signed short   drwav_int16;$/;"	t
drwav_int16	Examples/dr_wav.h	/^typedef int16_t          drwav_int16;$/;"	t
drwav_int16	rnnoise/examples/dr_wav.h	/^typedef   signed short   drwav_int16;$/;"	t
drwav_int16	rnnoise/examples/dr_wav.h	/^typedef int16_t          drwav_int16;$/;"	t
drwav_int32	Examples/dr_wav.h	/^typedef   signed int     drwav_int32;$/;"	t
drwav_int32	Examples/dr_wav.h	/^typedef int32_t          drwav_int32;$/;"	t
drwav_int32	rnnoise/examples/dr_wav.h	/^typedef   signed int     drwav_int32;$/;"	t
drwav_int32	rnnoise/examples/dr_wav.h	/^typedef int32_t          drwav_int32;$/;"	t
drwav_int64	Examples/dr_wav.h	/^typedef   signed __int64 drwav_int64;$/;"	t
drwav_int64	Examples/dr_wav.h	/^typedef int64_t          drwav_int64;$/;"	t
drwav_int64	rnnoise/examples/dr_wav.h	/^typedef   signed __int64 drwav_int64;$/;"	t
drwav_int64	rnnoise/examples/dr_wav.h	/^typedef int64_t          drwav_int64;$/;"	t
drwav_int8	Examples/dr_wav.h	/^typedef   signed char    drwav_int8;$/;"	t
drwav_int8	Examples/dr_wav.h	/^typedef int8_t           drwav_int8;$/;"	t
drwav_int8	rnnoise/examples/dr_wav.h	/^typedef   signed char    drwav_int8;$/;"	t
drwav_int8	rnnoise/examples/dr_wav.h	/^typedef int8_t           drwav_int8;$/;"	t
drwav_max	Examples/dr_wav.h	868;"	d
drwav_max	rnnoise/examples/dr_wav.h	868;"	d
drwav_min	Examples/dr_wav.h	867;"	d
drwav_min	rnnoise/examples/dr_wav.h	867;"	d
drwav_mulaw_to_f32	Examples/dr_wav.h	/^void drwav_mulaw_to_f32(float* pOut, const drwav_uint8* pIn, size_t sampleCount)$/;"	f
drwav_mulaw_to_f32	rnnoise/examples/dr_wav.h	/^void drwav_mulaw_to_f32(float* pOut, const drwav_uint8* pIn, size_t sampleCount)$/;"	f
drwav_mulaw_to_s16	Examples/dr_wav.h	/^void drwav_mulaw_to_s16(drwav_int16* pOut, const drwav_uint8* pIn, size_t sampleCount)$/;"	f
drwav_mulaw_to_s16	rnnoise/examples/dr_wav.h	/^void drwav_mulaw_to_s16(drwav_int16* pOut, const drwav_uint8* pIn, size_t sampleCount)$/;"	f
drwav_mulaw_to_s32	Examples/dr_wav.h	/^void drwav_mulaw_to_s32(drwav_int32* pOut, const drwav_uint8* pIn, size_t sampleCount)$/;"	f
drwav_mulaw_to_s32	rnnoise/examples/dr_wav.h	/^void drwav_mulaw_to_s32(drwav_int32* pOut, const drwav_uint8* pIn, size_t sampleCount)$/;"	f
drwav_open	Examples/dr_wav.h	/^drwav* drwav_open(drwav_read_proc onRead, drwav_seek_proc onSeek, void* pUserData)$/;"	f
drwav_open	rnnoise/examples/dr_wav.h	/^drwav* drwav_open(drwav_read_proc onRead, drwav_seek_proc onSeek, void* pUserData)$/;"	f
drwav_open_and_read_f32	Examples/dr_wav.h	/^float* drwav_open_and_read_f32(drwav_read_proc onRead, drwav_seek_proc onSeek, void* pUserData, unsigned int* channels, unsigned int* sampleRate, drwav_uint64* totalSampleCount)$/;"	f
drwav_open_and_read_f32	rnnoise/examples/dr_wav.h	/^float* drwav_open_and_read_f32(drwav_read_proc onRead, drwav_seek_proc onSeek, void* pUserData, unsigned int* channels, unsigned int* sampleRate, drwav_uint64* totalSampleCount)$/;"	f
drwav_open_and_read_pcm_frames_f32	Examples/dr_wav.h	/^float* drwav_open_and_read_pcm_frames_f32(drwav_read_proc onRead, drwav_seek_proc onSeek, void* pUserData, unsigned int* channelsOut, unsigned int* sampleRateOut, drwav_uint64* totalFrameCountOut)$/;"	f
drwav_open_and_read_pcm_frames_f32	rnnoise/examples/dr_wav.h	/^float* drwav_open_and_read_pcm_frames_f32(drwav_read_proc onRead, drwav_seek_proc onSeek, void* pUserData, unsigned int* channelsOut, unsigned int* sampleRateOut, drwav_uint64* totalFrameCountOut)$/;"	f
drwav_open_and_read_pcm_frames_s16	Examples/dr_wav.h	/^drwav_int16* drwav_open_and_read_pcm_frames_s16(drwav_read_proc onRead, drwav_seek_proc onSeek, void* pUserData, unsigned int* channelsOut, unsigned int* sampleRateOut, drwav_uint64* totalFrameCountOut)$/;"	f
drwav_open_and_read_pcm_frames_s16	rnnoise/examples/dr_wav.h	/^drwav_int16* drwav_open_and_read_pcm_frames_s16(drwav_read_proc onRead, drwav_seek_proc onSeek, void* pUserData, unsigned int* channelsOut, unsigned int* sampleRateOut, drwav_uint64* totalFrameCountOut)$/;"	f
drwav_open_and_read_pcm_frames_s32	Examples/dr_wav.h	/^drwav_int32* drwav_open_and_read_pcm_frames_s32(drwav_read_proc onRead, drwav_seek_proc onSeek, void* pUserData, unsigned int* channelsOut, unsigned int* sampleRateOut, drwav_uint64* totalFrameCountOut)$/;"	f
drwav_open_and_read_pcm_frames_s32	rnnoise/examples/dr_wav.h	/^drwav_int32* drwav_open_and_read_pcm_frames_s32(drwav_read_proc onRead, drwav_seek_proc onSeek, void* pUserData, unsigned int* channelsOut, unsigned int* sampleRateOut, drwav_uint64* totalFrameCountOut)$/;"	f
drwav_open_and_read_s16	Examples/dr_wav.h	/^drwav_int16* drwav_open_and_read_s16(drwav_read_proc onRead, drwav_seek_proc onSeek, void* pUserData, unsigned int* channels, unsigned int* sampleRate, drwav_uint64* totalSampleCount)$/;"	f
drwav_open_and_read_s16	rnnoise/examples/dr_wav.h	/^drwav_int16* drwav_open_and_read_s16(drwav_read_proc onRead, drwav_seek_proc onSeek, void* pUserData, unsigned int* channels, unsigned int* sampleRate, drwav_uint64* totalSampleCount)$/;"	f
drwav_open_and_read_s32	Examples/dr_wav.h	/^drwav_int32* drwav_open_and_read_s32(drwav_read_proc onRead, drwav_seek_proc onSeek, void* pUserData, unsigned int* channels, unsigned int* sampleRate, drwav_uint64* totalSampleCount)$/;"	f
drwav_open_and_read_s32	rnnoise/examples/dr_wav.h	/^drwav_int32* drwav_open_and_read_s32(drwav_read_proc onRead, drwav_seek_proc onSeek, void* pUserData, unsigned int* channels, unsigned int* sampleRate, drwav_uint64* totalSampleCount)$/;"	f
drwav_open_ex	Examples/dr_wav.h	/^drwav* drwav_open_ex(drwav_read_proc onRead, drwav_seek_proc onSeek, drwav_chunk_proc onChunk, void* pReadSeekUserData, void* pChunkUserData, drwav_uint32 flags)$/;"	f
drwav_open_ex	rnnoise/examples/dr_wav.h	/^drwav* drwav_open_ex(drwav_read_proc onRead, drwav_seek_proc onSeek, drwav_chunk_proc onChunk, void* pReadSeekUserData, void* pChunkUserData, drwav_uint32 flags)$/;"	f
drwav_open_file	Examples/dr_wav.h	/^drwav* drwav_open_file(const char* filename)$/;"	f
drwav_open_file	rnnoise/examples/dr_wav.h	/^drwav* drwav_open_file(const char* filename)$/;"	f
drwav_open_file_and_read_f32	Examples/dr_wav.h	/^float* drwav_open_file_and_read_f32(const char* filename, unsigned int* channels, unsigned int* sampleRate, drwav_uint64* totalSampleCount)$/;"	f
drwav_open_file_and_read_f32	rnnoise/examples/dr_wav.h	/^float* drwav_open_file_and_read_f32(const char* filename, unsigned int* channels, unsigned int* sampleRate, drwav_uint64* totalSampleCount)$/;"	f
drwav_open_file_and_read_pcm_frames_f32	Examples/dr_wav.h	/^float* drwav_open_file_and_read_pcm_frames_f32(const char* filename, unsigned int* channelsOut, unsigned int* sampleRateOut, drwav_uint64* totalFrameCountOut)$/;"	f
drwav_open_file_and_read_pcm_frames_f32	rnnoise/examples/dr_wav.h	/^float* drwav_open_file_and_read_pcm_frames_f32(const char* filename, unsigned int* channelsOut, unsigned int* sampleRateOut, drwav_uint64* totalFrameCountOut)$/;"	f
drwav_open_file_and_read_pcm_frames_s16	Examples/dr_wav.h	/^drwav_int16* drwav_open_file_and_read_pcm_frames_s16(const char* filename, unsigned int* channelsOut, unsigned int* sampleRateOut, drwav_uint64* totalFrameCountOut)$/;"	f
drwav_open_file_and_read_pcm_frames_s16	rnnoise/examples/dr_wav.h	/^drwav_int16* drwav_open_file_and_read_pcm_frames_s16(const char* filename, unsigned int* channelsOut, unsigned int* sampleRateOut, drwav_uint64* totalFrameCountOut)$/;"	f
drwav_open_file_and_read_pcm_frames_s32	Examples/dr_wav.h	/^drwav_int32* drwav_open_file_and_read_pcm_frames_s32(const char* filename, unsigned int* channelsOut, unsigned int* sampleRateOut, drwav_uint64* totalFrameCountOut)$/;"	f
drwav_open_file_and_read_pcm_frames_s32	rnnoise/examples/dr_wav.h	/^drwav_int32* drwav_open_file_and_read_pcm_frames_s32(const char* filename, unsigned int* channelsOut, unsigned int* sampleRateOut, drwav_uint64* totalFrameCountOut)$/;"	f
drwav_open_file_and_read_s16	Examples/dr_wav.h	/^drwav_int16* drwav_open_file_and_read_s16(const char* filename, unsigned int* channels, unsigned int* sampleRate, drwav_uint64* totalSampleCount)$/;"	f
drwav_open_file_and_read_s16	rnnoise/examples/dr_wav.h	/^drwav_int16* drwav_open_file_and_read_s16(const char* filename, unsigned int* channels, unsigned int* sampleRate, drwav_uint64* totalSampleCount)$/;"	f
drwav_open_file_and_read_s32	Examples/dr_wav.h	/^drwav_int32* drwav_open_file_and_read_s32(const char* filename, unsigned int* channels, unsigned int* sampleRate, drwav_uint64* totalSampleCount)$/;"	f
drwav_open_file_and_read_s32	rnnoise/examples/dr_wav.h	/^drwav_int32* drwav_open_file_and_read_s32(const char* filename, unsigned int* channels, unsigned int* sampleRate, drwav_uint64* totalSampleCount)$/;"	f
drwav_open_file_ex	Examples/dr_wav.h	/^drwav* drwav_open_file_ex(const char* filename, drwav_chunk_proc onChunk, void* pChunkUserData, drwav_uint32 flags)$/;"	f
drwav_open_file_ex	rnnoise/examples/dr_wav.h	/^drwav* drwav_open_file_ex(const char* filename, drwav_chunk_proc onChunk, void* pChunkUserData, drwav_uint32 flags)$/;"	f
drwav_open_file_write	Examples/dr_wav.h	/^drwav* drwav_open_file_write(const char* filename, const drwav_data_format* pFormat)$/;"	f
drwav_open_file_write	rnnoise/examples/dr_wav.h	/^drwav* drwav_open_file_write(const char* filename, const drwav_data_format* pFormat)$/;"	f
drwav_open_file_write__internal	Examples/dr_wav.h	/^drwav* drwav_open_file_write__internal(const char* filename, const drwav_data_format* pFormat, drwav_uint64 totalSampleCount, drwav_bool32 isSequential)$/;"	f
drwav_open_file_write__internal	rnnoise/examples/dr_wav.h	/^drwav* drwav_open_file_write__internal(const char* filename, const drwav_data_format* pFormat, drwav_uint64 totalSampleCount, drwav_bool32 isSequential)$/;"	f
drwav_open_file_write_sequential	Examples/dr_wav.h	/^drwav* drwav_open_file_write_sequential(const char* filename, const drwav_data_format* pFormat, drwav_uint64 totalSampleCount)$/;"	f
drwav_open_file_write_sequential	rnnoise/examples/dr_wav.h	/^drwav* drwav_open_file_write_sequential(const char* filename, const drwav_data_format* pFormat, drwav_uint64 totalSampleCount)$/;"	f
drwav_open_memory	Examples/dr_wav.h	/^drwav* drwav_open_memory(const void* data, size_t dataSize)$/;"	f
drwav_open_memory	rnnoise/examples/dr_wav.h	/^drwav* drwav_open_memory(const void* data, size_t dataSize)$/;"	f
drwav_open_memory_and_read_f32	Examples/dr_wav.h	/^float* drwav_open_memory_and_read_f32(const void* data, size_t dataSize, unsigned int* channels, unsigned int* sampleRate, drwav_uint64* totalSampleCount)$/;"	f
drwav_open_memory_and_read_f32	rnnoise/examples/dr_wav.h	/^float* drwav_open_memory_and_read_f32(const void* data, size_t dataSize, unsigned int* channels, unsigned int* sampleRate, drwav_uint64* totalSampleCount)$/;"	f
drwav_open_memory_and_read_pcm_frames_f32	Examples/dr_wav.h	/^float* drwav_open_memory_and_read_pcm_frames_f32(const void* data, size_t dataSize, unsigned int* channelsOut, unsigned int* sampleRateOut, drwav_uint64* totalFrameCountOut)$/;"	f
drwav_open_memory_and_read_pcm_frames_f32	rnnoise/examples/dr_wav.h	/^float* drwav_open_memory_and_read_pcm_frames_f32(const void* data, size_t dataSize, unsigned int* channelsOut, unsigned int* sampleRateOut, drwav_uint64* totalFrameCountOut)$/;"	f
drwav_open_memory_and_read_pcm_frames_s16	Examples/dr_wav.h	/^drwav_int16* drwav_open_memory_and_read_pcm_frames_s16(const void* data, size_t dataSize, unsigned int* channelsOut, unsigned int* sampleRateOut, drwav_uint64* totalFrameCountOut)$/;"	f
drwav_open_memory_and_read_pcm_frames_s16	rnnoise/examples/dr_wav.h	/^drwav_int16* drwav_open_memory_and_read_pcm_frames_s16(const void* data, size_t dataSize, unsigned int* channelsOut, unsigned int* sampleRateOut, drwav_uint64* totalFrameCountOut)$/;"	f
drwav_open_memory_and_read_pcm_frames_s32	Examples/dr_wav.h	/^drwav_int32* drwav_open_memory_and_read_pcm_frames_s32(const void* data, size_t dataSize, unsigned int* channelsOut, unsigned int* sampleRateOut, drwav_uint64* totalFrameCountOut)$/;"	f
drwav_open_memory_and_read_pcm_frames_s32	rnnoise/examples/dr_wav.h	/^drwav_int32* drwav_open_memory_and_read_pcm_frames_s32(const void* data, size_t dataSize, unsigned int* channelsOut, unsigned int* sampleRateOut, drwav_uint64* totalFrameCountOut)$/;"	f
drwav_open_memory_and_read_s16	Examples/dr_wav.h	/^drwav_int16* drwav_open_memory_and_read_s16(const void* data, size_t dataSize, unsigned int* channels, unsigned int* sampleRate, drwav_uint64* totalSampleCount)$/;"	f
drwav_open_memory_and_read_s16	rnnoise/examples/dr_wav.h	/^drwav_int16* drwav_open_memory_and_read_s16(const void* data, size_t dataSize, unsigned int* channels, unsigned int* sampleRate, drwav_uint64* totalSampleCount)$/;"	f
drwav_open_memory_and_read_s32	Examples/dr_wav.h	/^drwav_int32* drwav_open_memory_and_read_s32(const void* data, size_t dataSize, unsigned int* channels, unsigned int* sampleRate, drwav_uint64* totalSampleCount)$/;"	f
drwav_open_memory_and_read_s32	rnnoise/examples/dr_wav.h	/^drwav_int32* drwav_open_memory_and_read_s32(const void* data, size_t dataSize, unsigned int* channels, unsigned int* sampleRate, drwav_uint64* totalSampleCount)$/;"	f
drwav_open_memory_ex	Examples/dr_wav.h	/^drwav* drwav_open_memory_ex(const void* data, size_t dataSize, drwav_chunk_proc onChunk, void* pChunkUserData, drwav_uint32 flags)$/;"	f
drwav_open_memory_ex	rnnoise/examples/dr_wav.h	/^drwav* drwav_open_memory_ex(const void* data, size_t dataSize, drwav_chunk_proc onChunk, void* pChunkUserData, drwav_uint32 flags)$/;"	f
drwav_open_memory_write	Examples/dr_wav.h	/^drwav* drwav_open_memory_write(void** ppData, size_t* pDataSize, const drwav_data_format* pFormat)$/;"	f
drwav_open_memory_write	rnnoise/examples/dr_wav.h	/^drwav* drwav_open_memory_write(void** ppData, size_t* pDataSize, const drwav_data_format* pFormat)$/;"	f
drwav_open_memory_write__internal	Examples/dr_wav.h	/^drwav* drwav_open_memory_write__internal(void** ppData, size_t* pDataSize, const drwav_data_format* pFormat, drwav_uint64 totalSampleCount, drwav_bool32 isSequential)$/;"	f
drwav_open_memory_write__internal	rnnoise/examples/dr_wav.h	/^drwav* drwav_open_memory_write__internal(void** ppData, size_t* pDataSize, const drwav_data_format* pFormat, drwav_uint64 totalSampleCount, drwav_bool32 isSequential)$/;"	f
drwav_open_memory_write_sequential	Examples/dr_wav.h	/^drwav* drwav_open_memory_write_sequential(void** ppData, size_t* pDataSize, const drwav_data_format* pFormat, drwav_uint64 totalSampleCount)$/;"	f
drwav_open_memory_write_sequential	rnnoise/examples/dr_wav.h	/^drwav* drwav_open_memory_write_sequential(void** ppData, size_t* pDataSize, const drwav_data_format* pFormat, drwav_uint64 totalSampleCount)$/;"	f
drwav_open_write	Examples/dr_wav.h	/^drwav* drwav_open_write(const drwav_data_format* pFormat, drwav_write_proc onWrite, drwav_seek_proc onSeek, void* pUserData)$/;"	f
drwav_open_write	rnnoise/examples/dr_wav.h	/^drwav* drwav_open_write(const drwav_data_format* pFormat, drwav_write_proc onWrite, drwav_seek_proc onSeek, void* pUserData)$/;"	f
drwav_open_write__internal	Examples/dr_wav.h	/^drwav* drwav_open_write__internal(const drwav_data_format* pFormat, drwav_uint64 totalSampleCount, drwav_bool32 isSequential, drwav_write_proc onWrite, drwav_seek_proc onSeek, void* pUserData)$/;"	f
drwav_open_write__internal	rnnoise/examples/dr_wav.h	/^drwav* drwav_open_write__internal(const drwav_data_format* pFormat, drwav_uint64 totalSampleCount, drwav_bool32 isSequential, drwav_write_proc onWrite, drwav_seek_proc onSeek, void* pUserData)$/;"	f
drwav_open_write_sequential	Examples/dr_wav.h	/^drwav* drwav_open_write_sequential(const drwav_data_format* pFormat, drwav_uint64 totalSampleCount, drwav_write_proc onWrite, void* pUserData)$/;"	f
drwav_open_write_sequential	rnnoise/examples/dr_wav.h	/^drwav* drwav_open_write_sequential(const drwav_data_format* pFormat, drwav_uint64 totalSampleCount, drwav_write_proc onWrite, void* pUserData)$/;"	f
drwav_read	Examples/dr_wav.h	/^drwav_uint64 drwav_read(drwav* pWav, drwav_uint64 samplesToRead, void* pBufferOut)$/;"	f
drwav_read	rnnoise/examples/dr_wav.h	/^drwav_uint64 drwav_read(drwav* pWav, drwav_uint64 samplesToRead, void* pBufferOut)$/;"	f
drwav_read_f32	Examples/dr_wav.h	/^drwav_uint64 drwav_read_f32(drwav* pWav, drwav_uint64 samplesToRead, float* pBufferOut)$/;"	f
drwav_read_f32	rnnoise/examples/dr_wav.h	/^drwav_uint64 drwav_read_f32(drwav* pWav, drwav_uint64 samplesToRead, float* pBufferOut)$/;"	f
drwav_read_f32__alaw	Examples/dr_wav.h	/^drwav_uint64 drwav_read_f32__alaw(drwav* pWav, drwav_uint64 samplesToRead, float* pBufferOut)$/;"	f
drwav_read_f32__alaw	rnnoise/examples/dr_wav.h	/^drwav_uint64 drwav_read_f32__alaw(drwav* pWav, drwav_uint64 samplesToRead, float* pBufferOut)$/;"	f
drwav_read_f32__ieee	Examples/dr_wav.h	/^drwav_uint64 drwav_read_f32__ieee(drwav* pWav, drwav_uint64 samplesToRead, float* pBufferOut)$/;"	f
drwav_read_f32__ieee	rnnoise/examples/dr_wav.h	/^drwav_uint64 drwav_read_f32__ieee(drwav* pWav, drwav_uint64 samplesToRead, float* pBufferOut)$/;"	f
drwav_read_f32__ima	Examples/dr_wav.h	/^drwav_uint64 drwav_read_f32__ima(drwav* pWav, drwav_uint64 samplesToRead, float* pBufferOut)$/;"	f
drwav_read_f32__ima	rnnoise/examples/dr_wav.h	/^drwav_uint64 drwav_read_f32__ima(drwav* pWav, drwav_uint64 samplesToRead, float* pBufferOut)$/;"	f
drwav_read_f32__msadpcm	Examples/dr_wav.h	/^drwav_uint64 drwav_read_f32__msadpcm(drwav* pWav, drwav_uint64 samplesToRead, float* pBufferOut)$/;"	f
drwav_read_f32__msadpcm	rnnoise/examples/dr_wav.h	/^drwav_uint64 drwav_read_f32__msadpcm(drwav* pWav, drwav_uint64 samplesToRead, float* pBufferOut)$/;"	f
drwav_read_f32__mulaw	Examples/dr_wav.h	/^drwav_uint64 drwav_read_f32__mulaw(drwav* pWav, drwav_uint64 samplesToRead, float* pBufferOut)$/;"	f
drwav_read_f32__mulaw	rnnoise/examples/dr_wav.h	/^drwav_uint64 drwav_read_f32__mulaw(drwav* pWav, drwav_uint64 samplesToRead, float* pBufferOut)$/;"	f
drwav_read_f32__pcm	Examples/dr_wav.h	/^drwav_uint64 drwav_read_f32__pcm(drwav* pWav, drwav_uint64 samplesToRead, float* pBufferOut)$/;"	f
drwav_read_f32__pcm	rnnoise/examples/dr_wav.h	/^drwav_uint64 drwav_read_f32__pcm(drwav* pWav, drwav_uint64 samplesToRead, float* pBufferOut)$/;"	f
drwav_read_pcm_frames	Examples/dr_wav.h	/^drwav_uint64 drwav_read_pcm_frames(drwav* pWav, drwav_uint64 framesToRead, void* pBufferOut)$/;"	f
drwav_read_pcm_frames	rnnoise/examples/dr_wav.h	/^drwav_uint64 drwav_read_pcm_frames(drwav* pWav, drwav_uint64 framesToRead, void* pBufferOut)$/;"	f
drwav_read_pcm_frames_f32	Examples/dr_wav.h	/^drwav_uint64 drwav_read_pcm_frames_f32(drwav* pWav, drwav_uint64 framesToRead, float* pBufferOut)$/;"	f
drwav_read_pcm_frames_f32	rnnoise/examples/dr_wav.h	/^drwav_uint64 drwav_read_pcm_frames_f32(drwav* pWav, drwav_uint64 framesToRead, float* pBufferOut)$/;"	f
drwav_read_pcm_frames_s16	Examples/dr_wav.h	/^drwav_uint64 drwav_read_pcm_frames_s16(drwav* pWav, drwav_uint64 framesToRead, drwav_int16* pBufferOut)$/;"	f
drwav_read_pcm_frames_s16	rnnoise/examples/dr_wav.h	/^drwav_uint64 drwav_read_pcm_frames_s16(drwav* pWav, drwav_uint64 framesToRead, drwav_int16* pBufferOut)$/;"	f
drwav_read_pcm_frames_s32	Examples/dr_wav.h	/^drwav_uint64 drwav_read_pcm_frames_s32(drwav* pWav, drwav_uint64 framesToRead, drwav_int32* pBufferOut)$/;"	f
drwav_read_pcm_frames_s32	rnnoise/examples/dr_wav.h	/^drwav_uint64 drwav_read_pcm_frames_s32(drwav* pWav, drwav_uint64 framesToRead, drwav_int32* pBufferOut)$/;"	f
drwav_read_proc	Examples/dr_wav.h	/^typedef size_t (* drwav_read_proc)(void* pUserData, void* pBufferOut, size_t bytesToRead);$/;"	t
drwav_read_proc	rnnoise/examples/dr_wav.h	/^typedef size_t (* drwav_read_proc)(void* pUserData, void* pBufferOut, size_t bytesToRead);$/;"	t
drwav_read_raw	Examples/dr_wav.h	/^size_t drwav_read_raw(drwav* pWav, size_t bytesToRead, void* pBufferOut)$/;"	f
drwav_read_raw	rnnoise/examples/dr_wav.h	/^size_t drwav_read_raw(drwav* pWav, size_t bytesToRead, void* pBufferOut)$/;"	f
drwav_read_s16	Examples/dr_wav.h	/^drwav_uint64 drwav_read_s16(drwav* pWav, drwav_uint64 samplesToRead, drwav_int16* pBufferOut)$/;"	f
drwav_read_s16	rnnoise/examples/dr_wav.h	/^drwav_uint64 drwav_read_s16(drwav* pWav, drwav_uint64 samplesToRead, drwav_int16* pBufferOut)$/;"	f
drwav_read_s16__alaw	Examples/dr_wav.h	/^drwav_uint64 drwav_read_s16__alaw(drwav* pWav, drwav_uint64 samplesToRead, drwav_int16* pBufferOut)$/;"	f
drwav_read_s16__alaw	rnnoise/examples/dr_wav.h	/^drwav_uint64 drwav_read_s16__alaw(drwav* pWav, drwav_uint64 samplesToRead, drwav_int16* pBufferOut)$/;"	f
drwav_read_s16__ieee	Examples/dr_wav.h	/^drwav_uint64 drwav_read_s16__ieee(drwav* pWav, drwav_uint64 samplesToRead, drwav_int16* pBufferOut)$/;"	f
drwav_read_s16__ieee	rnnoise/examples/dr_wav.h	/^drwav_uint64 drwav_read_s16__ieee(drwav* pWav, drwav_uint64 samplesToRead, drwav_int16* pBufferOut)$/;"	f
drwav_read_s16__ima	Examples/dr_wav.h	/^drwav_uint64 drwav_read_s16__ima(drwav* pWav, drwav_uint64 samplesToRead, drwav_int16* pBufferOut)$/;"	f
drwav_read_s16__ima	rnnoise/examples/dr_wav.h	/^drwav_uint64 drwav_read_s16__ima(drwav* pWav, drwav_uint64 samplesToRead, drwav_int16* pBufferOut)$/;"	f
drwav_read_s16__msadpcm	Examples/dr_wav.h	/^drwav_uint64 drwav_read_s16__msadpcm(drwav* pWav, drwav_uint64 samplesToRead, drwav_int16* pBufferOut)$/;"	f
drwav_read_s16__msadpcm	rnnoise/examples/dr_wav.h	/^drwav_uint64 drwav_read_s16__msadpcm(drwav* pWav, drwav_uint64 samplesToRead, drwav_int16* pBufferOut)$/;"	f
drwav_read_s16__mulaw	Examples/dr_wav.h	/^drwav_uint64 drwav_read_s16__mulaw(drwav* pWav, drwav_uint64 samplesToRead, drwav_int16* pBufferOut)$/;"	f
drwav_read_s16__mulaw	rnnoise/examples/dr_wav.h	/^drwav_uint64 drwav_read_s16__mulaw(drwav* pWav, drwav_uint64 samplesToRead, drwav_int16* pBufferOut)$/;"	f
drwav_read_s16__pcm	Examples/dr_wav.h	/^drwav_uint64 drwav_read_s16__pcm(drwav* pWav, drwav_uint64 samplesToRead, drwav_int16* pBufferOut)$/;"	f
drwav_read_s16__pcm	rnnoise/examples/dr_wav.h	/^drwav_uint64 drwav_read_s16__pcm(drwav* pWav, drwav_uint64 samplesToRead, drwav_int16* pBufferOut)$/;"	f
drwav_read_s32	Examples/dr_wav.h	/^drwav_uint64 drwav_read_s32(drwav* pWav, drwav_uint64 samplesToRead, drwav_int32* pBufferOut)$/;"	f
drwav_read_s32	rnnoise/examples/dr_wav.h	/^drwav_uint64 drwav_read_s32(drwav* pWav, drwav_uint64 samplesToRead, drwav_int32* pBufferOut)$/;"	f
drwav_read_s32__alaw	Examples/dr_wav.h	/^drwav_uint64 drwav_read_s32__alaw(drwav* pWav, drwav_uint64 samplesToRead, drwav_int32* pBufferOut)$/;"	f
drwav_read_s32__alaw	rnnoise/examples/dr_wav.h	/^drwav_uint64 drwav_read_s32__alaw(drwav* pWav, drwav_uint64 samplesToRead, drwav_int32* pBufferOut)$/;"	f
drwav_read_s32__ieee	Examples/dr_wav.h	/^drwav_uint64 drwav_read_s32__ieee(drwav* pWav, drwav_uint64 samplesToRead, drwav_int32* pBufferOut)$/;"	f
drwav_read_s32__ieee	rnnoise/examples/dr_wav.h	/^drwav_uint64 drwav_read_s32__ieee(drwav* pWav, drwav_uint64 samplesToRead, drwav_int32* pBufferOut)$/;"	f
drwav_read_s32__ima	Examples/dr_wav.h	/^drwav_uint64 drwav_read_s32__ima(drwav* pWav, drwav_uint64 samplesToRead, drwav_int32* pBufferOut)$/;"	f
drwav_read_s32__ima	rnnoise/examples/dr_wav.h	/^drwav_uint64 drwav_read_s32__ima(drwav* pWav, drwav_uint64 samplesToRead, drwav_int32* pBufferOut)$/;"	f
drwav_read_s32__msadpcm	Examples/dr_wav.h	/^drwav_uint64 drwav_read_s32__msadpcm(drwav* pWav, drwav_uint64 samplesToRead, drwav_int32* pBufferOut)$/;"	f
drwav_read_s32__msadpcm	rnnoise/examples/dr_wav.h	/^drwav_uint64 drwav_read_s32__msadpcm(drwav* pWav, drwav_uint64 samplesToRead, drwav_int32* pBufferOut)$/;"	f
drwav_read_s32__mulaw	Examples/dr_wav.h	/^drwav_uint64 drwav_read_s32__mulaw(drwav* pWav, drwav_uint64 samplesToRead, drwav_int32* pBufferOut)$/;"	f
drwav_read_s32__mulaw	rnnoise/examples/dr_wav.h	/^drwav_uint64 drwav_read_s32__mulaw(drwav* pWav, drwav_uint64 samplesToRead, drwav_int32* pBufferOut)$/;"	f
drwav_read_s32__pcm	Examples/dr_wav.h	/^drwav_uint64 drwav_read_s32__pcm(drwav* pWav, drwav_uint64 samplesToRead, drwav_int32* pBufferOut)$/;"	f
drwav_read_s32__pcm	rnnoise/examples/dr_wav.h	/^drwav_uint64 drwav_read_s32__pcm(drwav* pWav, drwav_uint64 samplesToRead, drwav_int32* pBufferOut)$/;"	f
drwav_result	Examples/dr_wav.h	/^typedef drwav_int32 drwav_result;$/;"	t
drwav_result	rnnoise/examples/dr_wav.h	/^typedef drwav_int32 drwav_result;$/;"	t
drwav_riff_chunk_size_riff	Examples/dr_wav.h	/^drwav_uint32 drwav_riff_chunk_size_riff(drwav_uint64 dataChunkSize)$/;"	f
drwav_riff_chunk_size_riff	rnnoise/examples/dr_wav.h	/^drwav_uint32 drwav_riff_chunk_size_riff(drwav_uint64 dataChunkSize)$/;"	f
drwav_riff_chunk_size_w64	Examples/dr_wav.h	/^drwav_uint64 drwav_riff_chunk_size_w64(drwav_uint64 dataChunkSize)$/;"	f
drwav_riff_chunk_size_w64	rnnoise/examples/dr_wav.h	/^drwav_uint64 drwav_riff_chunk_size_w64(drwav_uint64 dataChunkSize)$/;"	f
drwav_s16_to_f32	Examples/dr_wav.h	/^void drwav_s16_to_f32(float* pOut, const drwav_int16* pIn, size_t sampleCount)$/;"	f
drwav_s16_to_f32	rnnoise/examples/dr_wav.h	/^void drwav_s16_to_f32(float* pOut, const drwav_int16* pIn, size_t sampleCount)$/;"	f
drwav_s16_to_s32	Examples/dr_wav.h	/^void drwav_s16_to_s32(drwav_int32* pOut, const drwav_int16* pIn, size_t sampleCount)$/;"	f
drwav_s16_to_s32	rnnoise/examples/dr_wav.h	/^void drwav_s16_to_s32(drwav_int32* pOut, const drwav_int16* pIn, size_t sampleCount)$/;"	f
drwav_s24_to_f32	Examples/dr_wav.h	/^void drwav_s24_to_f32(float* pOut, const drwav_uint8* pIn, size_t sampleCount)$/;"	f
drwav_s24_to_f32	rnnoise/examples/dr_wav.h	/^void drwav_s24_to_f32(float* pOut, const drwav_uint8* pIn, size_t sampleCount)$/;"	f
drwav_s24_to_s16	Examples/dr_wav.h	/^void drwav_s24_to_s16(drwav_int16* pOut, const drwav_uint8* pIn, size_t sampleCount)$/;"	f
drwav_s24_to_s16	rnnoise/examples/dr_wav.h	/^void drwav_s24_to_s16(drwav_int16* pOut, const drwav_uint8* pIn, size_t sampleCount)$/;"	f
drwav_s24_to_s32	Examples/dr_wav.h	/^void drwav_s24_to_s32(drwav_int32* pOut, const drwav_uint8* pIn, size_t sampleCount)$/;"	f
drwav_s24_to_s32	rnnoise/examples/dr_wav.h	/^void drwav_s24_to_s32(drwav_int32* pOut, const drwav_uint8* pIn, size_t sampleCount)$/;"	f
drwav_s32_to_f32	Examples/dr_wav.h	/^void drwav_s32_to_f32(float* pOut, const drwav_int32* pIn, size_t sampleCount)$/;"	f
drwav_s32_to_f32	rnnoise/examples/dr_wav.h	/^void drwav_s32_to_f32(float* pOut, const drwav_int32* pIn, size_t sampleCount)$/;"	f
drwav_s32_to_s16	Examples/dr_wav.h	/^void drwav_s32_to_s16(drwav_int16* pOut, const drwav_int32* pIn, size_t sampleCount)$/;"	f
drwav_s32_to_s16	rnnoise/examples/dr_wav.h	/^void drwav_s32_to_s16(drwav_int16* pOut, const drwav_int32* pIn, size_t sampleCount)$/;"	f
drwav_seek_origin	Examples/dr_wav.h	/^} drwav_seek_origin;$/;"	t	typeref:enum:__anon56
drwav_seek_origin	rnnoise/examples/dr_wav.h	/^} drwav_seek_origin;$/;"	t	typeref:enum:__anon19
drwav_seek_origin_current	Examples/dr_wav.h	/^    drwav_seek_origin_current$/;"	e	enum:__anon56
drwav_seek_origin_current	rnnoise/examples/dr_wav.h	/^    drwav_seek_origin_current$/;"	e	enum:__anon19
drwav_seek_origin_start	Examples/dr_wav.h	/^    drwav_seek_origin_start,$/;"	e	enum:__anon56
drwav_seek_origin_start	rnnoise/examples/dr_wav.h	/^    drwav_seek_origin_start,$/;"	e	enum:__anon19
drwav_seek_proc	Examples/dr_wav.h	/^typedef drwav_bool32 (* drwav_seek_proc)(void* pUserData, int offset, drwav_seek_origin origin);$/;"	t
drwav_seek_proc	rnnoise/examples/dr_wav.h	/^typedef drwav_bool32 (* drwav_seek_proc)(void* pUserData, int offset, drwav_seek_origin origin);$/;"	t
drwav_seek_to_first_pcm_frame	Examples/dr_wav.h	/^drwav_bool32 drwav_seek_to_first_pcm_frame(drwav* pWav)$/;"	f
drwav_seek_to_first_pcm_frame	rnnoise/examples/dr_wav.h	/^drwav_bool32 drwav_seek_to_first_pcm_frame(drwav* pWav)$/;"	f
drwav_seek_to_pcm_frame	Examples/dr_wav.h	/^drwav_bool32 drwav_seek_to_pcm_frame(drwav* pWav, drwav_uint64 targetFrameIndex)$/;"	f
drwav_seek_to_pcm_frame	rnnoise/examples/dr_wav.h	/^drwav_bool32 drwav_seek_to_pcm_frame(drwav* pWav, drwav_uint64 targetFrameIndex)$/;"	f
drwav_seek_to_sample	Examples/dr_wav.h	/^drwav_bool32 drwav_seek_to_sample(drwav* pWav, drwav_uint64 sample)$/;"	f
drwav_seek_to_sample	rnnoise/examples/dr_wav.h	/^drwav_bool32 drwav_seek_to_sample(drwav* pWav, drwav_uint64 sample)$/;"	f
drwav_smpl	Examples/dr_wav.h	/^} drwav_smpl;$/;"	t	typeref:struct:__anon65
drwav_smpl	rnnoise/examples/dr_wav.h	/^} drwav_smpl;$/;"	t	typeref:struct:__anon28
drwav_smpl_loop	Examples/dr_wav.h	/^} drwav_smpl_loop;$/;"	t	typeref:struct:__anon64
drwav_smpl_loop	rnnoise/examples/dr_wav.h	/^} drwav_smpl_loop;$/;"	t	typeref:struct:__anon27
drwav_u8_to_f32	Examples/dr_wav.h	/^void drwav_u8_to_f32(float* pOut, const drwav_uint8* pIn, size_t sampleCount)$/;"	f
drwav_u8_to_f32	rnnoise/examples/dr_wav.h	/^void drwav_u8_to_f32(float* pOut, const drwav_uint8* pIn, size_t sampleCount)$/;"	f
drwav_u8_to_s16	Examples/dr_wav.h	/^void drwav_u8_to_s16(drwav_int16* pOut, const drwav_uint8* pIn, size_t sampleCount)$/;"	f
drwav_u8_to_s16	rnnoise/examples/dr_wav.h	/^void drwav_u8_to_s16(drwav_int16* pOut, const drwav_uint8* pIn, size_t sampleCount)$/;"	f
drwav_u8_to_s32	Examples/dr_wav.h	/^void drwav_u8_to_s32(drwav_int32* pOut, const drwav_uint8* pIn, size_t sampleCount)$/;"	f
drwav_u8_to_s32	rnnoise/examples/dr_wav.h	/^void drwav_u8_to_s32(drwav_int32* pOut, const drwav_uint8* pIn, size_t sampleCount)$/;"	f
drwav_uint16	Examples/dr_wav.h	/^typedef uint16_t         drwav_uint16;$/;"	t
drwav_uint16	Examples/dr_wav.h	/^typedef unsigned short   drwav_uint16;$/;"	t
drwav_uint16	rnnoise/examples/dr_wav.h	/^typedef uint16_t         drwav_uint16;$/;"	t
drwav_uint16	rnnoise/examples/dr_wav.h	/^typedef unsigned short   drwav_uint16;$/;"	t
drwav_uint32	Examples/dr_wav.h	/^typedef uint32_t         drwav_uint32;$/;"	t
drwav_uint32	Examples/dr_wav.h	/^typedef unsigned int     drwav_uint32;$/;"	t
drwav_uint32	rnnoise/examples/dr_wav.h	/^typedef uint32_t         drwav_uint32;$/;"	t
drwav_uint32	rnnoise/examples/dr_wav.h	/^typedef unsigned int     drwav_uint32;$/;"	t
drwav_uint64	Examples/dr_wav.h	/^typedef uint64_t         drwav_uint64;$/;"	t
drwav_uint64	Examples/dr_wav.h	/^typedef unsigned __int64 drwav_uint64;$/;"	t
drwav_uint64	rnnoise/examples/dr_wav.h	/^typedef uint64_t         drwav_uint64;$/;"	t
drwav_uint64	rnnoise/examples/dr_wav.h	/^typedef unsigned __int64 drwav_uint64;$/;"	t
drwav_uint8	Examples/dr_wav.h	/^typedef uint8_t          drwav_uint8;$/;"	t
drwav_uint8	Examples/dr_wav.h	/^typedef unsigned char    drwav_uint8;$/;"	t
drwav_uint8	rnnoise/examples/dr_wav.h	/^typedef uint8_t          drwav_uint8;$/;"	t
drwav_uint8	rnnoise/examples/dr_wav.h	/^typedef unsigned char    drwav_uint8;$/;"	t
drwav_uninit	Examples/dr_wav.h	/^void drwav_uninit(drwav* pWav)$/;"	f
drwav_uninit	rnnoise/examples/dr_wav.h	/^void drwav_uninit(drwav* pWav)$/;"	f
drwav_write	Examples/dr_wav.h	/^drwav_uint64 drwav_write(drwav* pWav, drwav_uint64 samplesToWrite, const void* pData)$/;"	f
drwav_write	rnnoise/examples/dr_wav.h	/^drwav_uint64 drwav_write(drwav* pWav, drwav_uint64 samplesToWrite, const void* pData)$/;"	f
drwav_write_pcm_frames	Examples/dr_wav.h	/^drwav_uint64 drwav_write_pcm_frames(drwav* pWav, drwav_uint64 framesToWrite, const void* pData)$/;"	f
drwav_write_pcm_frames	rnnoise/examples/dr_wav.h	/^drwav_uint64 drwav_write_pcm_frames(drwav* pWav, drwav_uint64 framesToWrite, const void* pData)$/;"	f
drwav_write_proc	Examples/dr_wav.h	/^typedef size_t (* drwav_write_proc)(void* pUserData, const void* pData, size_t bytesToWrite);$/;"	t
drwav_write_proc	rnnoise/examples/dr_wav.h	/^typedef size_t (* drwav_write_proc)(void* pUserData, const void* pData, size_t bytesToWrite);$/;"	t
drwav_write_raw	Examples/dr_wav.h	/^size_t drwav_write_raw(drwav* pWav, size_t bytesToWrite, const void* pData)$/;"	f
drwav_write_raw	rnnoise/examples/dr_wav.h	/^size_t drwav_write_raw(drwav* pWav, size_t bytesToWrite, const void* pData)$/;"	f
drwav_zero_memory	Examples/dr_wav.h	873;"	d
drwav_zero_memory	rnnoise/examples/dr_wav.h	873;"	d
dual_inner_prod	rnnoise/src/pitch.h	/^static OPUS_INLINE void dual_inner_prod(const opus_val16 *x, const opus_val16 *y01, const opus_val16 *y02,$/;"	f
dvidir	rnnoise/Makefile	/^dvidir = ${docdir}$/;"	m
dynCall	rnn_denoise_bak.js	/^function dynCall(sig, ptr, args) {$/;"	f
dynCall_wrapper	rnn_denoise_bak.js	/^      sigCache[func] = function dynCall_wrapper() {$/;"	f
dynamicAlloc	rnn_denoise_bak.js	/^function dynamicAlloc(size) {$/;"	f	function:function
eband5ms	rnnoise/src/denoise.c	/^static const opus_int16 eband5ms[] = {$/;"	v	file:
emscripten_get_now	rnn_denoise.js	/^  "emscripten_get_now": _emscripten_get_now,$/;"	p	class:asmLibraryArg
emscripten_get_sbrk_ptr	rnn_denoise_bak.js	/^var asmLibraryArg = { "clock_gettime": _clock_gettime, "emscripten_get_sbrk_ptr": _emscripten_get_sbrk_ptr, "emscripten_memcpy_big": _emscripten_memcpy_big, "emscripten_resize_heap": _emscripten_resize_heap, "fd_close": _fd_close, "fd_seek": _fd_seek, "fd_write": _fd_write, "memory": wasmMemory, "setTempRet0": _setTempRet0, "table": wasmTable };$/;"	p	class:asmLibraryArg
emscripten_memcpy_big	rnn_denoise.js	/^  "emscripten_memcpy_big": _emscripten_memcpy_big,$/;"	p	class:asmLibraryArg
emscripten_memcpy_big	rnn_denoise_bak.js	/^var asmLibraryArg = { "clock_gettime": _clock_gettime, "emscripten_get_sbrk_ptr": _emscripten_get_sbrk_ptr, "emscripten_memcpy_big": _emscripten_memcpy_big, "emscripten_resize_heap": _emscripten_resize_heap, "fd_close": _fd_close, "fd_seek": _fd_seek, "fd_write": _fd_write, "memory": wasmMemory, "setTempRet0": _setTempRet0, "table": wasmTable };$/;"	p	class:asmLibraryArg
emscripten_realloc_buffer	rnn_denoise.js	/^  function emscripten_realloc_buffer(size) {$/;"	f
emscripten_realloc_buffer	rnn_denoise_bak.js	/^  function emscripten_realloc_buffer(size) {$/;"	f
emscripten_resize_heap	rnn_denoise.js	/^  "emscripten_resize_heap": _emscripten_resize_heap,$/;"	p	class:asmLibraryArg
emscripten_resize_heap	rnn_denoise_bak.js	/^var asmLibraryArg = { "clock_gettime": _clock_gettime, "emscripten_get_sbrk_ptr": _emscripten_get_sbrk_ptr, "emscripten_memcpy_big": _emscripten_memcpy_big, "emscripten_resize_heap": _emscripten_resize_heap, "fd_close": _fd_close, "fd_seek": _fd_seek, "fd_write": _fd_write, "memory": wasmMemory, "setTempRet0": _setTempRet0, "table": wasmTable };$/;"	p	class:asmLibraryArg
end	Examples/dr_wav.h	/^    drwav_uint32 end;$/;"	m	struct:__anon64
end	rnnoise/examples/dr_wav.h	/^    drwav_uint32 end;$/;"	m	struct:__anon27
env	rnn_denoise.js	/^    'env': asmLibraryArg,$/;"	p	class:createWasm.info
env	rnn_denoise_bak.js	/^    'env': asmLibraryArg,$/;"	p	class:createWasm.info
epochs	rnnoise/src/rnn_train.py	/^          epochs=200,$/;"	v
examples_rnnoise_demo_DEPENDENCIES	rnnoise/Makefile	/^examples_rnnoise_demo_DEPENDENCIES = librnnoise.la$/;"	m
examples_rnnoise_demo_LDADD	rnnoise/Makefile	/^examples_rnnoise_demo_LDADD = librnnoise.la$/;"	m
examples_rnnoise_demo_OBJECTS	rnnoise/Makefile	/^examples_rnnoise_demo_OBJECTS = $(am_examples_rnnoise_demo_OBJECTS)$/;"	m
examples_rnnoise_demo_SOURCES	rnnoise/Makefile	/^examples_rnnoise_demo_SOURCES = examples\/rnnoise_demo.c$/;"	m
exec_prefix	rnnoise/Makefile	/^exec_prefix = ${prefix}$/;"	m
exit	rnn_denoise.js	/^function exit(status, implicit) {$/;"	f
exit	rnn_denoise_bak.js	/^function exit(status, implicit) {$/;"	f
exitRuntime	rnn_denoise_bak.js	/^function exitRuntime() {$/;"	f
extendedSize	Examples/dr_wav.h	/^    drwav_uint16 extendedSize;$/;"	m	struct:__anon63
extendedSize	rnnoise/examples/dr_wav.h	/^    drwav_uint16 extendedSize;$/;"	m	struct:__anon26
extname	rnn_denoise_bak.js	/^      },extname:function(path) {$/;"	m	class:PATH
f	rnn_denoise.js	/^      'f': 'f32',$/;"	p	class:var.typeNames
f	rnn_denoise.js	/^    'f': 0x7d, \/\/ f32$/;"	p	class:convertJsFunctionToWasm.typeCodes
f	rnn_denoise_bak.js	/^      'f': 'f32',$/;"	p	class:var.typeNames
f	rnn_denoise_bak.js	/^    'f': 0x7d, \/\/ f32$/;"	p	class:convertJsFunctionToWasm.typeCodes
f	rnnoise/training/dump_rnn.py	/^f = open(sys.argv[2], 'w')$/;"	v
factors	rnnoise/src/kiss_fft.h	/^    opus_int16 factors[2*MAXFACTORS];$/;"	m	struct:kiss_fft_state
fd_close	rnn_denoise.js	/^  "fd_close": _fd_close,$/;"	p	class:asmLibraryArg
fd_close	rnn_denoise_bak.js	/^var asmLibraryArg = { "clock_gettime": _clock_gettime, "emscripten_get_sbrk_ptr": _emscripten_get_sbrk_ptr, "emscripten_memcpy_big": _emscripten_memcpy_big, "emscripten_resize_heap": _emscripten_resize_heap, "fd_close": _fd_close, "fd_seek": _fd_seek, "fd_write": _fd_write, "memory": wasmMemory, "setTempRet0": _setTempRet0, "table": wasmTable };$/;"	p	class:asmLibraryArg
fd_seek	rnn_denoise.js	/^  "fd_seek": _fd_seek,$/;"	p	class:asmLibraryArg
fd_seek	rnn_denoise_bak.js	/^var asmLibraryArg = { "clock_gettime": _clock_gettime, "emscripten_get_sbrk_ptr": _emscripten_get_sbrk_ptr, "emscripten_memcpy_big": _emscripten_memcpy_big, "emscripten_resize_heap": _emscripten_resize_heap, "fd_close": _fd_close, "fd_seek": _fd_seek, "fd_write": _fd_write, "memory": wasmMemory, "setTempRet0": _setTempRet0, "table": wasmTable };$/;"	p	class:asmLibraryArg
fd_write	rnn_denoise.js	/^  "fd_write": _fd_write,$/;"	p	class:asmLibraryArg
fd_write	rnn_denoise_bak.js	/^var asmLibraryArg = { "clock_gettime": _clock_gettime, "emscripten_get_sbrk_ptr": _emscripten_get_sbrk_ptr, "emscripten_memcpy_big": _emscripten_memcpy_big, "emscripten_resize_heap": _emscripten_resize_heap, "fd_close": _fd_close, "fd_seek": _fd_seek, "fd_write": _fd_write, "memory": wasmMemory, "setTempRet0": _setTempRet0, "table": wasmTable };$/;"	p	class:asmLibraryArg
fileContents	rnn_denoise.js	/^var fileContents = null;$/;"	v
fileContents	rnn_denoise_bak.js	/^var fileContents = null;$/;"	v
fileElem	rnn_denoise.js	/^var fileElem = document.getElementById('file-input');$/;"	v
fileElem	rnn_denoise_bak.js	/^var fileElem = document.getElementById('file-input');$/;"	v
fileURIPrefix	rnn_denoise_bak.js	/^var fileURIPrefix = "file:\/\/";$/;"	v
find_best_pitch	rnnoise/src/pitch.c	/^static void find_best_pitch(opus_val32 *xcorr, opus_val16 *y, int len,$/;"	f	file:
flattenArray	rnn_denoise.js	/^function flattenArray(channelBuffer, recordingLength) {$/;"	f
flattenArray	rnn_denoise_bak.js	/^function flattenArray(channelBuffer, recordingLength) {$/;"	f
flush_NO_FILESYSTEM	rnn_denoise.js	/^  function flush_NO_FILESYSTEM() {$/;"	f
flush_NO_FILESYSTEM	rnn_denoise_bak.js	/^  function flush_NO_FILESYSTEM() {$/;"	f
fmt	Examples/dr_wav.h	/^    drwav_fmt fmt;$/;"	m	struct:__anon66
fmt	rnnoise/examples/dr_wav.h	/^    drwav_fmt fmt;$/;"	m	struct:__anon29
foo	rnnoise/training/dump_rnn.py	/^def foo(c, name):$/;"	f
format	Examples/dr_wav.h	/^    drwav_uint32 format;        \/\/ DR_WAVE_FORMAT_*$/;"	m	struct:__anon62
format	rnnoise/examples/dr_wav.h	/^    drwav_uint32 format;        \/\/ DR_WAVE_FORMAT_*$/;"	m	struct:__anon25
formatTag	Examples/dr_wav.h	/^    drwav_uint16 formatTag;$/;"	m	struct:__anon63
formatTag	rnnoise/examples/dr_wav.h	/^    drwav_uint16 formatTag;$/;"	m	struct:__anon26
forward_transform	rnnoise/src/denoise.c	/^static void forward_transform(kiss_fft_cpx *out, const float *in) {$/;"	f	file:
fourcc	Examples/dr_wav.h	/^        drwav_uint8 fourcc[4];$/;"	m	union:__anon58::__anon59
fourcc	rnnoise/examples/dr_wav.h	/^        drwav_uint8 fourcc[4];$/;"	m	union:__anon21::__anon22
fraction	Examples/dr_wav.h	/^    drwav_uint32 fraction;$/;"	m	struct:__anon64
fraction	rnnoise/examples/dr_wav.h	/^    drwav_uint32 fraction;$/;"	m	struct:__anon27
frameInfo	Examples/dr_mp3.h	/^    drmp3dec_frame_info frameInfo;$/;"	m	struct:__anon48
frameInfo	rnnoise/examples/dr_mp3.h	/^    drmp3dec_frame_info frameInfo;$/;"	m	struct:__anon11
frame_analysis	rnnoise/src/denoise.c	/^static void frame_analysis(DenoiseState *st, kiss_fft_cpx *X, float *Ex, const float *in) {$/;"	f	file:
frame_bytes	Examples/dr_mp3.h	/^    int frame_bytes, channels, hz, layer, bitrate_kbps;$/;"	m	struct:__anon38
frame_bytes	rnnoise/examples/dr_mp3.h	/^    int frame_bytes, channels, hz, layer, bitrate_kbps;$/;"	m	struct:__anon1
frame_synthesis	rnnoise/src/denoise.c	/^static void frame_synthesis(DenoiseState *st, float *out, const kiss_fft_cpx *y) {$/;"	f	file:
freeBuffer	Examples/rnnoise_demo.c	/^void freeBuffer() { free(result_buffer);}$/;"	f
freeBuffer	rnnoise/examples/rnnoise_demo.c	/^void freeBuffer() { free(result_buffer);}$/;"	f
freeTableIndexes	rnn_denoise.js	/^var freeTableIndexes = [];$/;"	v
freeTableIndexes	rnn_denoise_bak.js	/^var freeTableIndexes = [];$/;"	v
free_format_bytes	Examples/dr_mp3.h	/^    int reserv, free_format_bytes;$/;"	m	struct:__anon39
free_format_bytes	rnnoise/examples/dr_mp3.h	/^    int reserv, free_format_bytes;$/;"	m	struct:__anon2
fs	rnn_denoise.js	/^var fs;$/;"	v
ft	rnnoise/training/dump_rnn.py	/^ft = open(sys.argv[3], 'w')$/;"	v
funcWrappers	rnn_denoise_bak.js	/^var funcWrappers = {};$/;"	v
func_add_hook	rnnoise/libtool	/^func_add_hook ()$/;"	f
func_add_hook	rnnoise/ltmain.sh	/^func_add_hook ()$/;"	f
func_append	rnnoise/libtool	/^  func_append ()$/;"	f
func_append	rnnoise/ltmain.sh	/^  func_append ()$/;"	f
func_append_quoted	rnnoise/libtool	/^  func_append_quoted ()$/;"	f
func_append_quoted	rnnoise/ltmain.sh	/^  func_append_quoted ()$/;"	f
func_append_uniq	rnnoise/libtool	/^func_append_uniq ()$/;"	f
func_append_uniq	rnnoise/ltmain.sh	/^func_append_uniq ()$/;"	f
func_arith	rnnoise/libtool	/^  func_arith ()$/;"	f
func_arith	rnnoise/ltmain.sh	/^  func_arith ()$/;"	f
func_cc_basename	rnnoise/config.status	/^func_cc_basename ()$/;"	f
func_cc_basename	rnnoise/configure	/^func_cc_basename ()$/;"	f
func_cc_basename	rnnoise/libtool	/^func_cc_basename ()$/;"	f
func_check_prog_grep	rnnoise/libtool	/^  func_check_prog_grep ()$/;"	f
func_check_prog_grep	rnnoise/ltmain.sh	/^  func_check_prog_grep ()$/;"	f
func_check_prog_sed	rnnoise/libtool	/^  func_check_prog_sed ()$/;"	f
func_check_prog_sed	rnnoise/ltmain.sh	/^  func_check_prog_sed ()$/;"	f
func_check_version_match	rnnoise/libtool	/^func_check_version_match ()$/;"	f
func_check_version_match	rnnoise/ltmain.sh	/^func_check_version_match ()$/;"	f
func_cl_dashL	rnnoise/compile	/^func_cl_dashL ()$/;"	f
func_cl_dashl	rnnoise/compile	/^func_cl_dashl ()$/;"	f
func_cl_wrapper	rnnoise/compile	/^func_cl_wrapper ()$/;"	f
func_config	rnnoise/libtool	/^func_config ()$/;"	f
func_config	rnnoise/ltmain.sh	/^func_config ()$/;"	f
func_convert_core_file_wine_to_w32	rnnoise/libtool	/^func_convert_core_file_wine_to_w32 ()$/;"	f
func_convert_core_file_wine_to_w32	rnnoise/ltmain.sh	/^func_convert_core_file_wine_to_w32 ()$/;"	f
func_convert_core_msys_to_w32	rnnoise/libtool	/^func_convert_core_msys_to_w32 ()$/;"	f
func_convert_core_msys_to_w32	rnnoise/ltmain.sh	/^func_convert_core_msys_to_w32 ()$/;"	f
func_convert_core_path_wine_to_w32	rnnoise/libtool	/^func_convert_core_path_wine_to_w32 ()$/;"	f
func_convert_core_path_wine_to_w32	rnnoise/ltmain.sh	/^func_convert_core_path_wine_to_w32 ()$/;"	f
func_convert_file_check	rnnoise/libtool	/^func_convert_file_check ()$/;"	f
func_convert_file_check	rnnoise/ltmain.sh	/^func_convert_file_check ()$/;"	f
func_convert_file_cygwin_to_w32	rnnoise/libtool	/^func_convert_file_cygwin_to_w32 ()$/;"	f
func_convert_file_cygwin_to_w32	rnnoise/ltmain.sh	/^func_convert_file_cygwin_to_w32 ()$/;"	f
func_convert_file_msys_to_cygwin	rnnoise/libtool	/^func_convert_file_msys_to_cygwin ()$/;"	f
func_convert_file_msys_to_cygwin	rnnoise/ltmain.sh	/^func_convert_file_msys_to_cygwin ()$/;"	f
func_convert_file_msys_to_w32	rnnoise/libtool	/^func_convert_file_msys_to_w32 ()$/;"	f
func_convert_file_msys_to_w32	rnnoise/ltmain.sh	/^func_convert_file_msys_to_w32 ()$/;"	f
func_convert_file_nix_to_cygwin	rnnoise/libtool	/^func_convert_file_nix_to_cygwin ()$/;"	f
func_convert_file_nix_to_cygwin	rnnoise/ltmain.sh	/^func_convert_file_nix_to_cygwin ()$/;"	f
func_convert_file_nix_to_w32	rnnoise/libtool	/^func_convert_file_nix_to_w32 ()$/;"	f
func_convert_file_nix_to_w32	rnnoise/ltmain.sh	/^func_convert_file_nix_to_w32 ()$/;"	f
func_convert_file_noop	rnnoise/libtool	/^func_convert_file_noop ()$/;"	f
func_convert_file_noop	rnnoise/ltmain.sh	/^func_convert_file_noop ()$/;"	f
func_convert_path_check	rnnoise/libtool	/^func_convert_path_check ()$/;"	f
func_convert_path_check	rnnoise/ltmain.sh	/^func_convert_path_check ()$/;"	f
func_convert_path_cygwin_to_w32	rnnoise/libtool	/^func_convert_path_cygwin_to_w32 ()$/;"	f
func_convert_path_cygwin_to_w32	rnnoise/ltmain.sh	/^func_convert_path_cygwin_to_w32 ()$/;"	f
func_convert_path_front_back_pathsep	rnnoise/libtool	/^func_convert_path_front_back_pathsep ()$/;"	f
func_convert_path_front_back_pathsep	rnnoise/ltmain.sh	/^func_convert_path_front_back_pathsep ()$/;"	f
func_convert_path_msys_to_cygwin	rnnoise/libtool	/^func_convert_path_msys_to_cygwin ()$/;"	f
func_convert_path_msys_to_cygwin	rnnoise/ltmain.sh	/^func_convert_path_msys_to_cygwin ()$/;"	f
func_convert_path_msys_to_w32	rnnoise/libtool	/^func_convert_path_msys_to_w32 ()$/;"	f
func_convert_path_msys_to_w32	rnnoise/ltmain.sh	/^func_convert_path_msys_to_w32 ()$/;"	f
func_convert_path_nix_to_cygwin	rnnoise/libtool	/^func_convert_path_nix_to_cygwin ()$/;"	f
func_convert_path_nix_to_cygwin	rnnoise/ltmain.sh	/^func_convert_path_nix_to_cygwin ()$/;"	f
func_convert_path_nix_to_w32	rnnoise/libtool	/^func_convert_path_nix_to_w32 ()$/;"	f
func_convert_path_nix_to_w32	rnnoise/ltmain.sh	/^func_convert_path_nix_to_w32 ()$/;"	f
func_convert_path_noop	rnnoise/libtool	/^func_convert_path_noop ()$/;"	f
func_convert_path_noop	rnnoise/ltmain.sh	/^func_convert_path_noop ()$/;"	f
func_cygming_dll_for_implib	rnnoise/libtool	/^func_cygming_dll_for_implib ()$/;"	f
func_cygming_dll_for_implib	rnnoise/ltmain.sh	/^func_cygming_dll_for_implib ()$/;"	f
func_cygming_dll_for_implib_fallback	rnnoise/libtool	/^func_cygming_dll_for_implib_fallback ()$/;"	f
func_cygming_dll_for_implib_fallback	rnnoise/ltmain.sh	/^func_cygming_dll_for_implib_fallback ()$/;"	f
func_cygming_dll_for_implib_fallback_core	rnnoise/libtool	/^func_cygming_dll_for_implib_fallback_core ()$/;"	f
func_cygming_dll_for_implib_fallback_core	rnnoise/ltmain.sh	/^func_cygming_dll_for_implib_fallback_core ()$/;"	f
func_cygming_gnu_implib_p	rnnoise/libtool	/^func_cygming_gnu_implib_p ()$/;"	f
func_cygming_gnu_implib_p	rnnoise/ltmain.sh	/^func_cygming_gnu_implib_p ()$/;"	f
func_cygming_ms_implib_p	rnnoise/libtool	/^func_cygming_ms_implib_p ()$/;"	f
func_cygming_ms_implib_p	rnnoise/ltmain.sh	/^func_cygming_ms_implib_p ()$/;"	f
func_cygpath	rnnoise/libtool	/^func_cygpath ()$/;"	f
func_cygpath	rnnoise/ltmain.sh	/^func_cygpath ()$/;"	f
func_dll_def_p	rnnoise/libtool	/^func_dll_def_p ()$/;"	f
func_dll_def_p	rnnoise/ltmain.sh	/^func_dll_def_p ()$/;"	f
func_echo	rnnoise/libtool	/^func_echo ()$/;"	f
func_echo	rnnoise/ltmain.sh	/^func_echo ()$/;"	f
func_echo_all	rnnoise/configure	/^func_echo_all ()$/;"	f
func_echo_all	rnnoise/libtool	/^func_echo_all ()$/;"	f
func_echo_all	rnnoise/ltmain.sh	/^func_echo_all ()$/;"	f
func_echo_infix_1	rnnoise/libtool	/^func_echo_infix_1 ()$/;"	f
func_echo_infix_1	rnnoise/ltmain.sh	/^func_echo_infix_1 ()$/;"	f
func_emit_cwrapperexe_src	rnnoise/libtool	/^func_emit_cwrapperexe_src ()$/;"	f
func_emit_cwrapperexe_src	rnnoise/ltmain.sh	/^func_emit_cwrapperexe_src ()$/;"	f
func_emit_wrapper	rnnoise/libtool	/^func_emit_wrapper ()$/;"	f
func_emit_wrapper	rnnoise/ltmain.sh	/^func_emit_wrapper ()$/;"	f
func_enable_tag	rnnoise/libtool	/^func_enable_tag ()$/;"	f
func_enable_tag	rnnoise/ltmain.sh	/^func_enable_tag ()$/;"	f
func_error	rnnoise/libtool	/^func_error ()$/;"	f
func_error	rnnoise/ltmain.sh	/^func_error ()$/;"	f
func_exec_program	rnnoise/examples/rnnoise_demo	/^func_exec_program ()$/;"	f
func_exec_program	rnnoise/libtool	/^func_exec_program ()$/;"	f
func_exec_program	rnnoise/ltmain.sh	/^func_exec_program ()$/;"	f
func_exec_program_core	rnnoise/examples/rnnoise_demo	/^func_exec_program_core ()$/;"	f
func_exec_program_core	rnnoise/libtool	/^func_exec_program_core ()$/;"	f
func_exec_program_core	rnnoise/ltmain.sh	/^func_exec_program_core ()$/;"	f
func_executable_p	rnnoise/libtool	/^func_executable_p ()$/;"	f
func_executable_p	rnnoise/ltmain.sh	/^func_executable_p ()$/;"	f
func_execute_cmds	rnnoise/libtool	/^func_execute_cmds ()$/;"	f
func_execute_cmds	rnnoise/ltmain.sh	/^func_execute_cmds ()$/;"	f
func_extract_an_archive	rnnoise/libtool	/^func_extract_an_archive ()$/;"	f
func_extract_an_archive	rnnoise/ltmain.sh	/^func_extract_an_archive ()$/;"	f
func_extract_archives	rnnoise/libtool	/^func_extract_archives ()$/;"	f
func_extract_archives	rnnoise/ltmain.sh	/^func_extract_archives ()$/;"	f
func_fallback_echo	rnnoise/config.status	/^func_fallback_echo ()$/;"	f
func_fallback_echo	rnnoise/configure	/^  func_fallback_echo ()$/;"	f
func_fallback_echo	rnnoise/configure	/^func_fallback_echo ()$/;"	f
func_fallback_echo	rnnoise/examples/rnnoise_demo	/^func_fallback_echo ()$/;"	f
func_fallback_echo	rnnoise/libtool	/^func_fallback_echo ()$/;"	f
func_fallback_echo	rnnoise/ltmain.sh	/^func_fallback_echo ()$/;"	f
func_fatal_configuration	rnnoise/libtool	/^func_fatal_configuration ()$/;"	f
func_fatal_configuration	rnnoise/ltmain.sh	/^func_fatal_configuration ()$/;"	f
func_fatal_error	rnnoise/libtool	/^func_fatal_error ()$/;"	f
func_fatal_error	rnnoise/ltmain.sh	/^func_fatal_error ()$/;"	f
func_fatal_help	rnnoise/libtool	/^func_fatal_help ()$/;"	f
func_fatal_help	rnnoise/ltmain.sh	/^func_fatal_help ()$/;"	f
func_features	rnnoise/libtool	/^func_features ()$/;"	f
func_features	rnnoise/ltmain.sh	/^func_features ()$/;"	f
func_file_conv	rnnoise/compile	/^func_file_conv ()$/;"	f
func_generate_dlsyms	rnnoise/libtool	/^func_generate_dlsyms ()$/;"	f
func_generate_dlsyms	rnnoise/ltmain.sh	/^func_generate_dlsyms ()$/;"	f
func_generated_by_libtool_p	rnnoise/libtool	/^func_generated_by_libtool_p ()$/;"	f
func_generated_by_libtool_p	rnnoise/ltmain.sh	/^func_generated_by_libtool_p ()$/;"	f
func_grep	rnnoise/libtool	/^func_grep ()$/;"	f
func_grep	rnnoise/ltmain.sh	/^func_grep ()$/;"	f
func_help	rnnoise/libtool	/^func_help ()$/;"	f
func_help	rnnoise/ltmain.sh	/^func_help ()$/;"	f
func_hookable	rnnoise/libtool	/^func_hookable ()$/;"	f
func_hookable	rnnoise/ltmain.sh	/^func_hookable ()$/;"	f
func_infer_tag	rnnoise/libtool	/^func_infer_tag ()$/;"	f
func_infer_tag	rnnoise/ltmain.sh	/^func_infer_tag ()$/;"	f
func_init_to_host_path_cmd	rnnoise/libtool	/^func_init_to_host_path_cmd ()$/;"	f
func_init_to_host_path_cmd	rnnoise/ltmain.sh	/^func_init_to_host_path_cmd ()$/;"	f
func_lalib_p	rnnoise/libtool	/^func_lalib_p ()$/;"	f
func_lalib_p	rnnoise/ltmain.sh	/^func_lalib_p ()$/;"	f
func_lalib_unsafe_p	rnnoise/libtool	/^func_lalib_unsafe_p ()$/;"	f
func_lalib_unsafe_p	rnnoise/ltmain.sh	/^func_lalib_unsafe_p ()$/;"	f
func_len	rnnoise/libtool	/^  func_len ()$/;"	f
func_len	rnnoise/ltmain.sh	/^  func_len ()$/;"	f
func_lo2o	rnnoise/libtool	/^  func_lo2o ()$/;"	f
func_lo2o	rnnoise/ltmain.sh	/^  func_lo2o ()$/;"	f
func_lt_dump_args	rnnoise/examples/rnnoise_demo	/^func_lt_dump_args ()$/;"	f
func_lt_dump_args	rnnoise/libtool	/^func_lt_dump_args ()$/;"	f
func_lt_dump_args	rnnoise/ltmain.sh	/^func_lt_dump_args ()$/;"	f
func_lt_ver	rnnoise/libtool	/^func_lt_ver ()$/;"	f
func_lt_ver	rnnoise/ltmain.sh	/^func_lt_ver ()$/;"	f
func_ltwrapper_executable_p	rnnoise/libtool	/^func_ltwrapper_executable_p ()$/;"	f
func_ltwrapper_executable_p	rnnoise/ltmain.sh	/^func_ltwrapper_executable_p ()$/;"	f
func_ltwrapper_p	rnnoise/libtool	/^func_ltwrapper_p ()$/;"	f
func_ltwrapper_p	rnnoise/ltmain.sh	/^func_ltwrapper_p ()$/;"	f
func_ltwrapper_script_p	rnnoise/libtool	/^func_ltwrapper_script_p ()$/;"	f
func_ltwrapper_script_p	rnnoise/ltmain.sh	/^func_ltwrapper_script_p ()$/;"	f
func_ltwrapper_scriptname	rnnoise/libtool	/^func_ltwrapper_scriptname ()$/;"	f
func_ltwrapper_scriptname	rnnoise/ltmain.sh	/^func_ltwrapper_scriptname ()$/;"	f
func_missing_arg	rnnoise/libtool	/^func_missing_arg ()$/;"	f
func_missing_arg	rnnoise/ltmain.sh	/^func_missing_arg ()$/;"	f
func_mkdir_p	rnnoise/libtool	/^func_mkdir_p ()$/;"	f
func_mkdir_p	rnnoise/ltmain.sh	/^func_mkdir_p ()$/;"	f
func_mktempdir	rnnoise/libtool	/^func_mktempdir ()$/;"	f
func_mktempdir	rnnoise/ltmain.sh	/^func_mktempdir ()$/;"	f
func_mode_compile	rnnoise/libtool	/^func_mode_compile ()$/;"	f
func_mode_compile	rnnoise/ltmain.sh	/^func_mode_compile ()$/;"	f
func_mode_execute	rnnoise/libtool	/^func_mode_execute ()$/;"	f
func_mode_execute	rnnoise/ltmain.sh	/^func_mode_execute ()$/;"	f
func_mode_finish	rnnoise/libtool	/^func_mode_finish ()$/;"	f
func_mode_finish	rnnoise/ltmain.sh	/^func_mode_finish ()$/;"	f
func_mode_help	rnnoise/libtool	/^func_mode_help ()$/;"	f
func_mode_help	rnnoise/ltmain.sh	/^func_mode_help ()$/;"	f
func_mode_install	rnnoise/libtool	/^func_mode_install ()$/;"	f
func_mode_install	rnnoise/ltmain.sh	/^func_mode_install ()$/;"	f
func_mode_link	rnnoise/libtool	/^func_mode_link ()$/;"	f
func_mode_link	rnnoise/ltmain.sh	/^func_mode_link ()$/;"	f
func_mode_uninstall	rnnoise/libtool	/^func_mode_uninstall ()$/;"	f
func_mode_uninstall	rnnoise/ltmain.sh	/^func_mode_uninstall ()$/;"	f
func_munge_path_list	rnnoise/config.status	/^func_munge_path_list ()$/;"	f
func_munge_path_list	rnnoise/configure	/^func_munge_path_list ()$/;"	f
func_munge_path_list	rnnoise/libtool	/^func_munge_path_list ()$/;"	f
func_normal_abspath	rnnoise/libtool	/^func_normal_abspath ()$/;"	f
func_normal_abspath	rnnoise/ltmain.sh	/^func_normal_abspath ()$/;"	f
func_notquiet	rnnoise/libtool	/^func_notquiet ()$/;"	f
func_notquiet	rnnoise/ltmain.sh	/^func_notquiet ()$/;"	f
func_options	rnnoise/libtool	/^func_options ()$/;"	f
func_options	rnnoise/ltmain.sh	/^func_options ()$/;"	f
func_options_finish	rnnoise/libtool	/^func_options_finish ()$/;"	f
func_options_finish	rnnoise/ltmain.sh	/^func_options_finish ()$/;"	f
func_options_prep	rnnoise/libtool	/^func_options_prep ()$/;"	f
func_options_prep	rnnoise/ltmain.sh	/^func_options_prep ()$/;"	f
func_parse_lt_options	rnnoise/examples/rnnoise_demo	/^func_parse_lt_options ()$/;"	f
func_parse_lt_options	rnnoise/libtool	/^func_parse_lt_options ()$/;"	f
func_parse_lt_options	rnnoise/ltmain.sh	/^func_parse_lt_options ()$/;"	f
func_parse_options	rnnoise/libtool	/^func_parse_options ()$/;"	f
func_parse_options	rnnoise/ltmain.sh	/^func_parse_options ()$/;"	f
func_path_progs	rnnoise/libtool	/^func_path_progs ()$/;"	f
func_path_progs	rnnoise/ltmain.sh	/^func_path_progs ()$/;"	f
func_quote_for_eval	rnnoise/libtool	/^func_quote_for_eval ()$/;"	f
func_quote_for_eval	rnnoise/ltmain.sh	/^func_quote_for_eval ()$/;"	f
func_quote_for_expand	rnnoise/libtool	/^func_quote_for_expand ()$/;"	f
func_quote_for_expand	rnnoise/ltmain.sh	/^func_quote_for_expand ()$/;"	f
func_relative_path	rnnoise/libtool	/^func_relative_path ()$/;"	f
func_relative_path	rnnoise/ltmain.sh	/^func_relative_path ()$/;"	f
func_remove_hook	rnnoise/libtool	/^func_remove_hook ()$/;"	f
func_remove_hook	rnnoise/ltmain.sh	/^func_remove_hook ()$/;"	f
func_replace_sysroot	rnnoise/libtool	/^func_replace_sysroot ()$/;"	f
func_replace_sysroot	rnnoise/ltmain.sh	/^func_replace_sysroot ()$/;"	f
func_require_term_colors	rnnoise/libtool	/^func_require_term_colors ()$/;"	f
func_require_term_colors	rnnoise/ltmain.sh	/^func_require_term_colors ()$/;"	f
func_resolve_sysroot	rnnoise/libtool	/^func_resolve_sysroot ()$/;"	f
func_resolve_sysroot	rnnoise/ltmain.sh	/^func_resolve_sysroot ()$/;"	f
func_run_hooks	rnnoise/libtool	/^func_run_hooks ()$/;"	f
func_run_hooks	rnnoise/ltmain.sh	/^func_run_hooks ()$/;"	f
func_show_eval	rnnoise/libtool	/^func_show_eval ()$/;"	f
func_show_eval	rnnoise/ltmain.sh	/^func_show_eval ()$/;"	f
func_show_eval_locale	rnnoise/libtool	/^func_show_eval_locale ()$/;"	f
func_show_eval_locale	rnnoise/ltmain.sh	/^func_show_eval_locale ()$/;"	f
func_sort_ver	rnnoise/libtool	/^func_sort_ver ()$/;"	f
func_sort_ver	rnnoise/ltmain.sh	/^func_sort_ver ()$/;"	f
func_source	rnnoise/libtool	/^func_source ()$/;"	f
func_source	rnnoise/ltmain.sh	/^func_source ()$/;"	f
func_split_equals	rnnoise/libtool	/^  func_split_equals ()$/;"	f
func_split_equals	rnnoise/ltmain.sh	/^  func_split_equals ()$/;"	f
func_split_short_opt	rnnoise/libtool	/^  func_split_short_opt ()$/;"	f
func_split_short_opt	rnnoise/ltmain.sh	/^  func_split_short_opt ()$/;"	f
func_stripname	rnnoise/libtool	/^  func_stripname ()$/;"	f
func_stripname	rnnoise/ltmain.sh	/^  func_stripname ()$/;"	f
func_suncc_cstd_abi	rnnoise/libtool	/^func_suncc_cstd_abi ()$/;"	f
func_suncc_cstd_abi	rnnoise/ltmain.sh	/^func_suncc_cstd_abi ()$/;"	f
func_to_host_file	rnnoise/libtool	/^func_to_host_file ()$/;"	f
func_to_host_file	rnnoise/ltmain.sh	/^func_to_host_file ()$/;"	f
func_to_host_path	rnnoise/libtool	/^func_to_host_path ()$/;"	f
func_to_host_path	rnnoise/ltmain.sh	/^func_to_host_path ()$/;"	f
func_to_tool_file	rnnoise/libtool	/^func_to_tool_file ()$/;"	f
func_to_tool_file	rnnoise/ltmain.sh	/^func_to_tool_file ()$/;"	f
func_tr_sh	rnnoise/libtool	/^func_tr_sh ()$/;"	f
func_tr_sh	rnnoise/ltmain.sh	/^func_tr_sh ()$/;"	f
func_usage	rnnoise/libtool	/^func_usage ()$/;"	f
func_usage	rnnoise/ltmain.sh	/^func_usage ()$/;"	f
func_usage_message	rnnoise/libtool	/^func_usage_message ()$/;"	f
func_usage_message	rnnoise/ltmain.sh	/^func_usage_message ()$/;"	f
func_validate_options	rnnoise/libtool	/^func_validate_options ()$/;"	f
func_validate_options	rnnoise/ltmain.sh	/^func_validate_options ()$/;"	f
func_verbose	rnnoise/libtool	/^func_verbose ()$/;"	f
func_verbose	rnnoise/ltmain.sh	/^func_verbose ()$/;"	f
func_version	rnnoise/libtool	/^func_version ()$/;"	f
func_version	rnnoise/ltmain.sh	/^func_version ()$/;"	f
func_warn_and_continue	rnnoise/libtool	/^func_warn_and_continue ()$/;"	f
func_warn_and_continue	rnnoise/ltmain.sh	/^func_warn_and_continue ()$/;"	f
func_warning	rnnoise/libtool	/^func_warning ()$/;"	f
func_warning	rnnoise/ltmain.sh	/^func_warning ()$/;"	f
func_win32_import_lib_p	rnnoise/libtool	/^func_win32_import_lib_p ()$/;"	f
func_win32_import_lib_p	rnnoise/ltmain.sh	/^func_win32_import_lib_p ()$/;"	f
func_win32_libid	rnnoise/libtool	/^func_win32_libid ()$/;"	f
func_win32_libid	rnnoise/ltmain.sh	/^func_win32_libid ()$/;"	f
func_write_libtool_object	rnnoise/libtool	/^func_write_libtool_object ()$/;"	f
func_write_libtool_object	rnnoise/ltmain.sh	/^func_write_libtool_object ()$/;"	f
func_xform	rnnoise/libtool	/^  func_xform ()$/;"	f
func_xform	rnnoise/ltmain.sh	/^  func_xform ()$/;"	f
functionsInTableMap	rnn_denoise.js	/^var functionsInTableMap;$/;"	v
functionsInTableMap	rnn_denoise_bak.js	/^var functionsInTableMap;$/;"	v
g_drmp3_pow43	Examples/dr_mp3.h	/^static const float g_drmp3_pow43[129 + 16] = {$/;"	v
g_drmp3_pow43	rnnoise/examples/dr_mp3.h	/^static const float g_drmp3_pow43[129 + 16] = {$/;"	v
g_drwavAlawTable	Examples/dr_wav.h	/^static unsigned short g_drwavAlawTable[256] = {$/;"	v
g_drwavAlawTable	rnnoise/examples/dr_wav.h	/^static unsigned short g_drwavAlawTable[256] = {$/;"	v
g_drwavMulawTable	Examples/dr_wav.h	/^static unsigned short g_drwavMulawTable[256] = {$/;"	v
g_drwavMulawTable	rnnoise/examples/dr_wav.h	/^static unsigned short g_drwavMulawTable[256] = {$/;"	v
get	rnn_denoise.js	/^  var SYSCALLS = {varargs:undefined,get:function() {$/;"	m	class:SYSCALLS
getBinary	rnn_denoise.js	/^function getBinary(file) {$/;"	f
getBinary	rnn_denoise_bak.js	/^function getBinary() {$/;"	f
getBinaryPromise	rnn_denoise.js	/^function getBinaryPromise() {$/;"	f
getBinaryPromise	rnn_denoise_bak.js	/^function getBinaryPromise() {$/;"	f
getCFunc	rnn_denoise.js	/^function getCFunc(ident) {$/;"	f
getCFunc	rnn_denoise_bak.js	/^function getCFunc(ident) {$/;"	f
getEmptyTableSlot	rnn_denoise.js	/^function getEmptyTableSlot() {$/;"	f
getFuncWrapper	rnn_denoise_bak.js	/^function getFuncWrapper(func, sig) {$/;"	f
getHeapMax	rnn_denoise.js	/^  function getHeapMax() {$/;"	f
getMemory	rnn_denoise_bak.js	/^function getMemory(size) {$/;"	f
getNativeTypeSize	rnn_denoise.js	/^function getNativeTypeSize(type) {$/;"	f
getNativeTypeSize	rnn_denoise_bak.js	/^function getNativeTypeSize(type) {$/;"	f	function:function
getResultPointer	Examples/rnnoise_demo.c	/^int getResultPointer() { return result[0];}$/;"	f
getResultPointer	rnnoise/examples/rnnoise_demo.c	/^int getResultPointer() { return result[0];}$/;"	f
getResultSize	Examples/rnnoise_demo.c	/^int getResultSize() { return result[1];}$/;"	f
getResultSize	rnnoise/examples/rnnoise_demo.c	/^int getResultSize() { return result[1];}$/;"	f
getStr	rnn_denoise.js	/^      },getStr:function(ptr) {$/;"	m	class:SYSCALLS
getTempRet0	rnn_denoise_bak.js	/^var getTempRet0 = function() {$/;"	f
getUniqueRunDependency	rnn_denoise.js	/^function getUniqueRunDependency(id) {$/;"	f
getUniqueRunDependency	rnn_denoise_bak.js	/^function getUniqueRunDependency(id) {$/;"	f
getValue	rnn_denoise.js	/^  function getValue(ptr, type = 'i8') {$/;"	f
getValue	rnn_denoise_bak.js	/^function getValue(ptr, type, noSafe) {$/;"	f
getWasmTableEntry	rnn_denoise.js	/^  function getWasmTableEntry(funcPtr) {$/;"	f
get_config	rnnoise/training/rnn_train.py	/^    def get_config(self):$/;"	m	class:WeightClip
get_rnnDenoise_rawmem_time	Examples/rnnoise_demo.c	/^double get_rnnDenoise_rawmem_time() { return time_interval;}$/;"	f
get_rnnDenoise_rawmem_time	rnnoise/examples/rnnoise_demo.c	/^double get_rnnDenoise_rawmem_time() { return time_interval;}$/;"	f
getchannels	Examples/rnnoise_demo.c	/^int getchannels() { return channels;}$/;"	f
getchannels	rnnoise/examples/rnnoise_demo.c	/^int getchannels() { return channels;}$/;"	f
getsampleCount	Examples/rnnoise_demo.c	/^int getsampleCount() { return (int) sampleCount;}$/;"	f
getsampleCount	rnnoise/examples/rnnoise_demo.c	/^int getsampleCount() { return (int) sampleCount;}$/;"	f
getsampleRate	Examples/rnnoise_demo.c	/^int getsampleRate() { return sampleRate;}$/;"	f
getsampleRate	rnnoise/examples/rnnoise_demo.c	/^int getsampleRate() { return sampleRate;}$/;"	f
give_advice	rnnoise/missing	/^give_advice ()$/;"	f
global_gain	Examples/dr_mp3.h	/^    drmp3_uint8 global_gain, block_type, mixed_block_flag, n_long_sfb, n_short_sfb;$/;"	m	struct:__anon53
global_gain	rnnoise/examples/dr_mp3.h	/^    drmp3_uint8 global_gain, block_type, mixed_block_flag, n_long_sfb, n_short_sfb;$/;"	m	struct:__anon16
gr_info	Examples/dr_mp3.h	/^    drmp3_L3_gr_info gr_info[4];$/;"	m	struct:__anon54
gr_info	rnnoise/examples/dr_mp3.h	/^    drmp3_L3_gr_info gr_info[4];$/;"	m	struct:__anon17
grbuf	Examples/dr_mp3.h	/^    float grbuf[2][576], scf[40], syn[18 + 15][2 * 32];$/;"	m	struct:__anon54
grbuf	rnnoise/examples/dr_mp3.h	/^    float grbuf[2][576], scf[40], syn[18 + 15][2 * 32];$/;"	m	struct:__anon17
guid	Examples/dr_wav.h	/^        drwav_uint8 guid[16];$/;"	m	union:__anon58::__anon59
guid	rnnoise/examples/dr_wav.h	/^        drwav_uint8 guid[16];$/;"	m	union:__anon21::__anon22
h5f	rnnoise/training/bin2hdf5.py	/^h5f = h5py.File(sys.argv[4], 'w');$/;"	v
half_window	rnnoise/src/denoise.c	/^  float half_window[FRAME_SIZE];$/;"	m	struct:__anon35	file:
handleException	rnn_denoise.js	/^  function handleException(e) {$/;"	f
hasPrefix	rnn_denoise_bak.js	/^function hasPrefix(str, prefix) {$/;"	f
header	Examples/dr_mp3.h	/^    unsigned char header[4], reserv_buf[511];$/;"	m	struct:__anon39
header	rnnoise/examples/dr_mp3.h	/^    unsigned char header[4], reserv_buf[511];$/;"	m	struct:__anon2
host	rnnoise/Makefile	/^host = x86_64-pc-linux-gnu$/;"	m
host_alias	rnnoise/Makefile	/^host_alias = $/;"	m
host_cpu	rnnoise/Makefile	/^host_cpu = x86_64$/;"	m
host_os	rnnoise/Makefile	/^host_os = linux-gnu$/;"	m
host_triplet	rnnoise/Makefile	/^host_triplet = x86_64-pc-linux-gnu$/;"	m
host_vendor	rnnoise/Makefile	/^host_vendor = pc$/;"	m
htmldir	rnnoise/Makefile	/^htmldir = ${docdir}$/;"	m
hz	Examples/dr_mp3.h	/^    int frame_bytes, channels, hz, layer, bitrate_kbps;$/;"	m	struct:__anon38
hz	rnnoise/examples/dr_mp3.h	/^    int frame_bytes, channels, hz, layer, bitrate_kbps;$/;"	m	struct:__anon1
i	rnn_denoise.js	/^      'i': 'i32',$/;"	p	class:var.typeNames
i	rnn_denoise.js	/^    'i': 0x7f, \/\/ i32$/;"	p	class:convertJsFunctionToWasm.typeCodes
i	rnn_denoise_bak.js	/^      'i': 'i32',$/;"	p	class:var.typeNames
i	rnn_denoise_bak.js	/^    'i': 0x7f, \/\/ i32$/;"	p	class:convertJsFunctionToWasm.typeCodes
i	rnnoise/src/kiss_fft.h	/^    kiss_fft_scalar i;$/;"	m	struct:__anon33
i	rnnoise/src/kiss_fft.h	/^   kiss_twiddle_scalar i;$/;"	m	struct:__anon34
iCurrentSample	Examples/dr_wav.h	/^        drwav_uint64 iCurrentSample;    \/\/ The index of the next sample that will be read by drwav_read_*(). This is used with "totalSampleCount" to ensure we don't read excess samples at the end of the last block.$/;"	m	struct:__anon66::__anon67
iCurrentSample	rnnoise/examples/dr_wav.h	/^        drwav_uint64 iCurrentSample;    \/\/ The index of the next sample that will be read by drwav_read_*(). This is used with "totalSampleCount" to ensure we don't read excess samples at the end of the last block.$/;"	m	struct:__anon29::__anon30
iNextFrame	Examples/dr_mp3.h	/^    drmp3_uint32 iNextFrame;$/;"	m	struct:__anon41
iNextFrame	rnnoise/examples/dr_mp3.h	/^    drmp3_uint32 iNextFrame;$/;"	m	struct:__anon4
id	Examples/dr_wav.h	/^    } id;$/;"	m	struct:__anon58	typeref:union:__anon58::__anon59
id	rnnoise/examples/dr_wav.h	/^    } id;$/;"	m	struct:__anon21	typeref:union:__anon21::__anon22
ima	Examples/dr_wav.h	/^    } ima;$/;"	m	struct:__anon66	typeref:struct:__anon66::__anon69
ima	rnnoise/examples/dr_wav.h	/^    } ima;$/;"	m	struct:__anon29	typeref:struct:__anon29::__anon32
include_HEADERS	rnnoise/Makefile	/^include_HEADERS = include\/rnnoise.h$/;"	m
includedir	rnnoise/Makefile	/^includedir = ${prefix}\/include$/;"	m
infodir	rnnoise/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
init	rnnoise/src/denoise.c	/^  int init;$/;"	m	struct:__anon35	file:
initRuntime	rnn_denoise.js	/^function initRuntime() {$/;"	f
initRuntime	rnn_denoise_bak.js	/^function initRuntime() {$/;"	f
input_dense	rnnoise/src/rnn_data.c	/^static const DenseLayer input_dense = {$/;"	v	file:
input_dense	rnnoise/src/rnn_data.h	/^  const DenseLayer *input_dense;$/;"	m	struct:RNNModel
input_dense_bias	rnnoise/src/rnn_data.c	/^static const rnn_weight input_dense_bias[24] = {$/;"	v	file:
input_dense_size	rnnoise/src/rnn_data.h	/^  int input_dense_size;$/;"	m	struct:RNNModel
input_dense_weights	rnnoise/src/rnn_data.c	/^static const rnn_weight input_dense_weights[1008] = {$/;"	v	file:
input_weights	rnnoise/src/rnn.h	/^  const rnn_weight *input_weights;$/;"	m	struct:__anon36
input_weights	rnnoise/src/rnn.h	/^  const rnn_weight *input_weights;$/;"	m	struct:__anon37
install_sh	rnnoise/Makefile	/^install_sh = ${SHELL} \/home\/lb\/rnnoise_test\/rnnoise-wasm\/rnnoise\/install-sh$/;"	m
install_sh_DATA	rnnoise/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_PROGRAM	rnnoise/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_SCRIPT	rnnoise/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
instantiateArrayBuffer	rnn_denoise.js	/^  function instantiateArrayBuffer(receiver) {$/;"	f	function:createWasm
instantiateArrayBuffer	rnn_denoise_bak.js	/^  function instantiateArrayBuffer(receiver) {$/;"	f	function:createWasm
instantiateAsync	rnn_denoise.js	/^  function instantiateAsync() {$/;"	f	function:createWasm
instantiateAsync	rnn_denoise_bak.js	/^  function instantiateAsync() {$/;"	f	function:createWasm
intArrayFromString	rnn_denoise.js	/^function intArrayFromString(stringy, dontAddNull, length) {$/;"	f
intArrayFromString	rnn_denoise_bak.js	/^function intArrayFromString(stringy, dontAddNull, length) {$/;"	f
intArrayToString	rnn_denoise.js	/^function intArrayToString(array) {$/;"	f
intArrayToString	rnn_denoise_bak.js	/^function intArrayToString(array) {$/;"	f
interp_band_gain	rnnoise/src/denoise.c	/^void interp_band_gain(float *g, const float *bandE) {$/;"	f
inverse_transform	rnnoise/src/denoise.c	/^static void inverse_transform(float *out, const kiss_fft_cpx *in) {$/;"	f	file:
isDataURI	rnn_denoise.js	/^function isDataURI(filename) {$/;"	f
isDataURI	rnn_denoise_bak.js	/^function isDataURI(filename) {$/;"	f
isFileURI	rnn_denoise.js	/^function isFileURI(filename) {$/;"	f
isFileURI	rnn_denoise_bak.js	/^function isFileURI(filename) {$/;"	f
isNextFramesLoaded	Examples/dr_mp3.h	/^            drmp3_bool32 isNextFramesLoaded : 1;$/;"	m	struct:drmp3_src::__anon43::__anon44
isNextFramesLoaded	rnnoise/examples/dr_mp3.h	/^            drmp3_bool32 isNextFramesLoaded : 1;$/;"	m	struct:drmp3_src::__anon6::__anon7
isPrevFramesLoaded	Examples/dr_mp3.h	/^            drmp3_bool32 isPrevFramesLoaded : 1;$/;"	m	struct:drmp3_src::__anon43::__anon44
isPrevFramesLoaded	rnnoise/examples/dr_mp3.h	/^            drmp3_bool32 isPrevFramesLoaded : 1;$/;"	m	struct:drmp3_src::__anon6::__anon7
isSequentialWrite	Examples/dr_wav.h	/^    drwav_bool32 isSequentialWrite;$/;"	m	struct:__anon66
isSequentialWrite	rnnoise/examples/dr_wav.h	/^    drwav_bool32 isSequentialWrite;$/;"	m	struct:__anon29
is_supported	rnnoise/src/kiss_fft.h	/^   int is_supported;$/;"	m	struct:arch_fft_state
ist_pos	Examples/dr_mp3.h	/^    drmp3_uint8 ist_pos[2][39];$/;"	m	struct:__anon54
ist_pos	rnnoise/examples/dr_mp3.h	/^    drmp3_uint8 ist_pos[2][39];$/;"	m	struct:__anon17
j	rnn_denoise.js	/^      'j': 'i64',$/;"	p	class:var.typeNames
j	rnn_denoise.js	/^    'j': 0x7e, \/\/ i64$/;"	p	class:convertJsFunctionToWasm.typeCodes
j	rnn_denoise_bak.js	/^      'j': 'i64',$/;"	p	class:var.typeNames
j	rnn_denoise_bak.js	/^    'j': 0x7e, \/\/ i64$/;"	p	class:convertJsFunctionToWasm.typeCodes
join	rnn_denoise_bak.js	/^      },join:function() {$/;"	m	class:PATH
join2	rnn_denoise_bak.js	/^      },join2:function(l, r) {$/;"	m	class:PATH
jsStackTrace	rnn_denoise.js	/^  function jsStackTrace() {$/;"	f
jsStackTrace	rnn_denoise_bak.js	/^  function jsStackTrace() {$/;"	f
keepRuntimeAlive	rnn_denoise.js	/^function keepRuntimeAlive() {$/;"	f
key	rnn_denoise_bak.js	/^var key;$/;"	v
kf_bfly2	rnnoise/src/kiss_fft.c	/^static void kf_bfly2($/;"	f	file:
kf_bfly3	rnnoise/src/kiss_fft.c	/^static void kf_bfly3($/;"	f	file:
kf_bfly4	rnnoise/src/kiss_fft.c	/^static void kf_bfly4($/;"	f	file:
kf_bfly5	rnnoise/src/kiss_fft.c	/^static void kf_bfly5($/;"	f	file:
kf_cexp	rnnoise/src/_kiss_fft_guts.h	170;"	d
kf_cexp2	rnnoise/src/_kiss_fft_guts.h	176;"	d
kf_factor	rnnoise/src/kiss_fft.c	/^int kf_factor(int n,opus_int16 * facbuf)$/;"	f	file:
kfft	rnnoise/src/denoise.c	/^  kiss_fft_state *kfft;$/;"	m	struct:__anon35	file:
kiss_fft_cpx	rnnoise/src/kiss_fft.h	/^}kiss_fft_cpx;$/;"	t	typeref:struct:__anon33
kiss_fft_scalar	rnnoise/src/kiss_fft.h	46;"	d
kiss_fft_scalar	rnnoise/src/kiss_fft.h	55;"	d
kiss_fft_scalar	rnnoise/src/kiss_fft.h	62;"	d
kiss_fft_state	rnnoise/src/kiss_fft.h	/^typedef struct kiss_fft_state{$/;"	s
kiss_fft_state	rnnoise/src/kiss_fft.h	/^} kiss_fft_state;$/;"	t	typeref:struct:kiss_fft_state
kiss_twiddle_cpx	rnnoise/src/kiss_fft.h	/^}kiss_twiddle_cpx;$/;"	t	typeref:struct:__anon34
kiss_twiddle_scalar	rnnoise/src/kiss_fft.h	56;"	d
kiss_twiddle_scalar	rnnoise/src/kiss_fft.h	63;"	d
lDataSize	rnn_denoise.js	/^var lDataSize = document.getElementById('DataSize');$/;"	v
lDataSize	rnn_denoise_bak.js	/^var lDataSize = document.getElementById('DataSize');$/;"	v
lKbps	rnn_denoise.js	/^var lKbps = document.getElementById('Kbps');$/;"	v
lKbps	rnn_denoise_bak.js	/^var lKbps = document.getElementById('Kbps');$/;"	v
lProcessingMode	rnn_denoise.js	/^var lProcessingMode = document.getElementById('ProcessingMode');$/;"	v
lProcessingMode	rnn_denoise_bak.js	/^var lProcessingMode = document.getElementById('ProcessingMode');$/;"	v
lRecordingMsg	rnn_denoise.js	/^var lRecordingMsg = document.getElementById('RecordingMessage');$/;"	v
lRecordingMsg	rnn_denoise_bak.js	/^var lRecordingMsg = document.getElementById('RecordingMessage');$/;"	v
lSampleRate	rnn_denoise.js	/^var lSampleRate = document.getElementById('SampleRate');$/;"	v
lSampleRate	rnn_denoise_bak.js	/^var lSampleRate = document.getElementById('SampleRate');$/;"	v
lTimeIntervel	rnn_denoise.js	/^var lTimeIntervel = document.getElementById('TimeIntervel');$/;"	v
lTimeIntervel	rnn_denoise_bak.js	/^var lTimeIntervel = document.getElementById('TimeIntervel');$/;"	v
last_gain	rnnoise/src/denoise.c	/^  float last_gain;$/;"	m	struct:DenoiseState	file:
last_period	rnnoise/src/denoise.c	/^  int last_period;$/;"	m	struct:DenoiseState	file:
lastg	rnnoise/src/denoise.c	/^  float lastg[NB_BANDS];$/;"	m	struct:DenoiseState	file:
layer	Examples/dr_mp3.h	/^    int frame_bytes, channels, hz, layer, bitrate_kbps;$/;"	m	struct:__anon38
layer	rnnoise/examples/dr_mp3.h	/^    int frame_bytes, channels, hz, layer, bitrate_kbps;$/;"	m	struct:__anon1
layer_list	rnnoise/training/dump_rnn.py	/^layer_list = []$/;"	v
leftchannel	rnn_denoise.js	/^var leftchannel = [];$/;"	v
leftchannel	rnn_denoise_bak.js	/^var leftchannel = [];$/;"	v
lengthBytesUTF16	rnn_denoise.js	/^function lengthBytesUTF16(str) {$/;"	f
lengthBytesUTF16	rnn_denoise_bak.js	/^function lengthBytesUTF16(str) {$/;"	f
lengthBytesUTF32	rnn_denoise.js	/^function lengthBytesUTF32(str) {$/;"	f
lengthBytesUTF32	rnn_denoise_bak.js	/^function lengthBytesUTF32(str) {$/;"	f
lengthBytesUTF8	rnn_denoise.js	/^function lengthBytesUTF8(str) {$/;"	f
lengthBytesUTF8	rnn_denoise_bak.js	/^function lengthBytesUTF8(str) {$/;"	f
lib_LTLIBRARIES	rnnoise/Makefile	/^lib_LTLIBRARIES = librnnoise.la$/;"	m
libdir	rnnoise/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libexecdir	rnnoise/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
librnnoise_la_DEPENDENCIES	rnnoise/Makefile	/^librnnoise_la_DEPENDENCIES = $(am__DEPENDENCIES_1) \\$/;"	m
librnnoise_la_LDFLAGS	rnnoise/Makefile	/^librnnoise_la_LDFLAGS = -no-undefined \\$/;"	m
librnnoise_la_LIBADD	rnnoise/Makefile	/^librnnoise_la_LIBADD = $(DEPS_LIBS) $(lrintf_lib) $(LIBM)$/;"	m
librnnoise_la_LINK	rnnoise/Makefile	/^librnnoise_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
librnnoise_la_OBJECTS	rnnoise/Makefile	/^librnnoise_la_OBJECTS = $(am_librnnoise_la_OBJECTS)$/;"	m
librnnoise_la_SOURCES	rnnoise/Makefile	/^librnnoise_la_SOURCES = \\$/;"	m
libtool_options_prep	rnnoise/libtool	/^libtool_options_prep ()$/;"	f
libtool_options_prep	rnnoise/ltmain.sh	/^libtool_options_prep ()$/;"	f
libtool_parse_options	rnnoise/libtool	/^libtool_parse_options ()$/;"	f
libtool_parse_options	rnnoise/ltmain.sh	/^libtool_parse_options ()$/;"	f
libtool_validate_options	rnnoise/libtool	/^libtool_validate_options ()$/;"	f
libtool_validate_options	rnnoise/ltmain.sh	/^libtool_validate_options ()$/;"	f
limit	Examples/dr_mp3.h	/^    int pos, limit;$/;"	m	struct:__anon50
limit	rnnoise/examples/dr_mp3.h	/^    int pos, limit;$/;"	m	struct:__anon13
linear	Examples/dr_mp3.h	/^        } linear;$/;"	m	union:drmp3_src::__anon43	typeref:struct:drmp3_src::__anon43::__anon44
linear	rnnoise/examples/dr_mp3.h	/^        } linear;$/;"	m	union:drmp3_src::__anon6	typeref:struct:drmp3_src::__anon6::__anon7
localedir	rnnoise/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localstatedir	rnnoise/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
locateFile	rnn_denoise.js	/^function locateFile(path) {$/;"	f
locateFile	rnn_denoise_bak.js	/^function locateFile(path) {$/;"	f
logExceptionOnExit	rnn_denoise.js	/^function logExceptionOnExit(e) {$/;"	f
loops	Examples/dr_wav.h	/^    drwav_smpl_loop loops[DRWAV_MAX_SMPL_LOOPS];$/;"	m	struct:__anon65
loops	rnnoise/examples/dr_wav.h	/^    drwav_smpl_loop loops[DRWAV_MAX_SMPL_LOOPS];$/;"	m	struct:__anon28
lowpass	rnnoise/src/denoise.c	/^int lowpass = FREQ_SIZE;$/;"	v
lrintf_lib	rnnoise/Makefile	/^lrintf_lib = $/;"	m
main	Examples/rnnoise_demo.c	/^int main(int argc, char **argv) {$/;"	f
main	rnnoise/config.guess	/^		main()$/;"	f
main	rnnoise/config.guess	/^	main ()$/;"	f
main	rnnoise/examples/rnnoise_demo.c	/^int main(int argc, char **argv) {$/;"	f
main	rnnoise/examples_bak/rnnoise_demo.c	/^int main(int argc, char **argv) {$/;"	f
main	rnnoise/src/denoise.c	/^int main(int argc, char **argv) {$/;"	f
main_input	rnnoise/src/rnn_train.py	/^main_input = Input(shape=(None, 22), name='main_input')$/;"	v
main_input	rnnoise/training/rnn_train.py	/^main_input = Input(shape=(None, 42), name='main_input')$/;"	v
maindata	Examples/dr_mp3.h	/^    drmp3_uint8 maindata[DRMP3_MAX_BITRESERVOIR_BYTES + DRMP3_MAX_L3_FRAME_PAYLOAD_BYTES];$/;"	m	struct:__anon54
maindata	rnnoise/examples/dr_mp3.h	/^    drmp3_uint8 maindata[DRMP3_MAX_BITRESERVOIR_BYTES + DRMP3_MAX_L3_FRAME_PAYLOAD_BYTES];$/;"	m	struct:__anon17
makeBigInt	rnn_denoise_bak.js	/^function makeBigInt(low, high, unsigned) {$/;"	f
make_dummy_depfile	rnnoise/depcomp	/^make_dummy_depfile ()$/;"	f
mandir	rnnoise/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
manufacturer	Examples/dr_wav.h	/^    drwav_uint32 manufacturer;$/;"	m	struct:__anon65
manufacturer	rnnoise/examples/dr_wav.h	/^    drwav_uint32 manufacturer;$/;"	m	struct:__anon28
mappings	rnn_denoise_bak.js	/^      }};var SYSCALLS={mappings:{},buffers:[null,[],[]],printChar:function(stream, curr) {$/;"	p	class:SYSCALLS
mdct_overlap	Examples/dr_mp3.h	/^    float mdct_overlap[2][9 * 32], qmf_state[15 * 2 * 32];$/;"	m	struct:__anon39
mdct_overlap	rnnoise/examples/dr_mp3.h	/^    float mdct_overlap[2][9 * 32], qmf_state[15 * 2 * 32];$/;"	m	struct:__anon2
mean_squared_sqrt_error	rnnoise/training/dump_rnn.py	/^def mean_squared_sqrt_error(y_true, y_pred):$/;"	f
mediaStream	rnn_denoise.js	/^var mediaStream = null;$/;"	v
mediaStream	rnn_denoise_bak.js	/^var mediaStream = null;$/;"	v
mem_hp_x	rnnoise/src/denoise.c	/^  float mem_hp_x[2];$/;"	m	struct:DenoiseState	file:
mem_wavRead_f32	Examples/rnnoise_demo.c	/^float *mem_wavRead_f32(const void* data, size_t dataSize, uint32_t *sampleRate, uint32_t *channels, uint64_t *sampleCount) {$/;"	f
mem_wavRead_f32	rnnoise/examples/rnnoise_demo.c	/^float *mem_wavRead_f32(const void* data, size_t dataSize, uint32_t *sampleRate, uint32_t *channels, uint64_t *sampleCount) {$/;"	f
memid	rnnoise/src/denoise.c	/^  int memid;$/;"	m	struct:DenoiseState	file:
memory	Examples/dr_mp3.h	/^    } memory;   \/\/ Only used for decoders that were opened against a block of memory.$/;"	m	struct:__anon48	typeref:struct:__anon48::__anon49
memory	rnn_denoise_bak.js	/^var asmLibraryArg = { "clock_gettime": _clock_gettime, "emscripten_get_sbrk_ptr": _emscripten_get_sbrk_ptr, "emscripten_memcpy_big": _emscripten_memcpy_big, "emscripten_resize_heap": _emscripten_resize_heap, "fd_close": _fd_close, "fd_seek": _fd_seek, "fd_write": _fd_write, "memory": wasmMemory, "setTempRet0": _setTempRet0, "table": wasmTable };$/;"	p	class:asmLibraryArg
memory	rnnoise/examples/dr_mp3.h	/^    } memory;   \/\/ Only used for decoders that were opened against a block of memory.$/;"	m	struct:__anon11	typeref:struct:__anon11::__anon12
memoryInitializer	rnn_denoise_bak.js	/^var memoryInitializer = null;$/;"	v
memoryStream	Examples/dr_wav.h	/^    drwav__memory_stream memoryStream;$/;"	m	struct:__anon66
memoryStream	rnnoise/examples/dr_wav.h	/^    drwav__memory_stream memoryStream;$/;"	m	struct:__anon29
memoryStreamWrite	Examples/dr_wav.h	/^    drwav__memory_stream_write memoryStreamWrite;$/;"	m	struct:__anon66
memoryStreamWrite	rnnoise/examples/dr_wav.h	/^    drwav__memory_stream_write memoryStreamWrite;$/;"	m	struct:__anon29
metrics	rnnoise/src/rnn_train.py	/^              metrics=['binary_accuracy'])$/;"	v
midiPitchFraction	Examples/dr_wav.h	/^    drwav_uint32 midiPitchFraction;$/;"	m	struct:__anon65
midiPitchFraction	rnnoise/examples/dr_wav.h	/^    drwav_uint32 midiPitchFraction;$/;"	m	struct:__anon28
midiUnityNotes	Examples/dr_wav.h	/^    drwav_uint32 midiUnityNotes;$/;"	m	struct:__anon65
midiUnityNotes	rnnoise/examples/dr_wav.h	/^    drwav_uint32 midiUnityNotes;$/;"	m	struct:__anon28
mixed_block_flag	Examples/dr_mp3.h	/^    drmp3_uint8 global_gain, block_type, mixed_block_flag, n_long_sfb, n_short_sfb;$/;"	m	struct:__anon53
mixed_block_flag	rnnoise/examples/dr_mp3.h	/^    drmp3_uint8 global_gain, block_type, mixed_block_flag, n_long_sfb, n_short_sfb;$/;"	m	struct:__anon16
mkdir_p	rnnoise/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkinstalldirs	rnnoise/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
model	rnnoise/src/rnn_data.h	/^  const RNNModel *model;$/;"	m	struct:RNNState
model	rnnoise/src/rnn_train.py	/^model = Model(inputs=main_input, outputs=x)$/;"	v
model	rnnoise/training/dump_rnn.py	/^model = load_model(sys.argv[1], custom_objects={'msse': mean_squared_sqrt_error, 'mean_squared_sqrt_error': mean_squared_sqrt_error, 'my_crossentropy': mean_squared_sqrt_error, 'mycost': mean_squared_sqrt_error, 'WeightClip': foo})$/;"	v
model	rnnoise/training/rnn_train.py	/^model = Model(inputs=main_input, outputs=[denoise_output, vad_output])$/;"	v
moduleOverrides	rnn_denoise_bak.js	/^var moduleOverrides = {};$/;"	v
mp3FrameChannels	Examples/dr_mp3.h	/^    drmp3_uint32 mp3FrameChannels;      \/\/ The number of channels in the currently loaded MP3 frame. Internal use only.$/;"	m	struct:__anon48
mp3FrameChannels	rnnoise/examples/dr_mp3.h	/^    drmp3_uint32 mp3FrameChannels;      \/\/ The number of channels in the currently loaded MP3 frame. Internal use only.$/;"	m	struct:__anon11
mp3FrameSampleRate	Examples/dr_mp3.h	/^    drmp3_uint32 mp3FrameSampleRate;    \/\/ The sample rate of the currently loaded MP3 frame. Internal use only.$/;"	m	struct:__anon48
mp3FrameSampleRate	rnnoise/examples/dr_mp3.h	/^    drmp3_uint32 mp3FrameSampleRate;    \/\/ The sample rate of the currently loaded MP3 frame. Internal use only.$/;"	m	struct:__anon11
mp3FramesToDiscard	Examples/dr_mp3.h	/^    drmp3_uint16 mp3FramesToDiscard;    \/\/ The number of whole MP3 frames to be discarded before pcmFramesToDiscard.$/;"	m	struct:__anon46
mp3FramesToDiscard	rnnoise/examples/dr_mp3.h	/^    drmp3_uint16 mp3FramesToDiscard;    \/\/ The number of whole MP3 frames to be discarded before pcmFramesToDiscard.$/;"	m	struct:__anon9
msadpcm	Examples/dr_wav.h	/^    } msadpcm;$/;"	m	struct:__anon66	typeref:struct:__anon66::__anon68
msadpcm	rnnoise/examples/dr_wav.h	/^    } msadpcm;$/;"	m	struct:__anon29	typeref:struct:__anon29::__anon31
msse	rnnoise/training/rnn_train.py	/^def msse(y_true, y_pred):$/;"	f
myBr	rnn_denoise.js	/^var myBr = document.createElement('br');$/;"	v
myBr	rnn_denoise_bak.js	/^var myBr = document.createElement('br');$/;"	v
my_accuracy	rnnoise/training/rnn_train.py	/^def my_accuracy(y_true, y_pred):$/;"	f
my_crossentropy	rnnoise/training/rnn_train.py	/^def my_crossentropy(y_true, y_pred):$/;"	f
mycost	rnnoise/training/rnn_train.py	/^def mycost(y_true, y_pred):$/;"	f
mymask	rnnoise/training/rnn_train.py	/^def mymask(y_true):$/;"	f
n_long_sfb	Examples/dr_mp3.h	/^    drmp3_uint8 global_gain, block_type, mixed_block_flag, n_long_sfb, n_short_sfb;$/;"	m	struct:__anon53
n_long_sfb	rnnoise/examples/dr_mp3.h	/^    drmp3_uint8 global_gain, block_type, mixed_block_flag, n_long_sfb, n_short_sfb;$/;"	m	struct:__anon16
n_short_sfb	Examples/dr_mp3.h	/^    drmp3_uint8 global_gain, block_type, mixed_block_flag, n_long_sfb, n_short_sfb;$/;"	m	struct:__anon53
n_short_sfb	rnnoise/examples/dr_mp3.h	/^    drmp3_uint8 global_gain, block_type, mixed_block_flag, n_long_sfb, n_short_sfb;$/;"	m	struct:__anon16
nanotimer	Examples/rnnoise_demo.c	/^uint64_t nanotimer() {$/;"	f	file:
nanotimer	rnnoise/examples/rnnoise_demo.c	/^uint64_t nanotimer() {$/;"	f	file:
nb_inputs	rnnoise/src/rnn.h	/^  int nb_inputs;$/;"	m	struct:__anon36
nb_inputs	rnnoise/src/rnn.h	/^  int nb_inputs;$/;"	m	struct:__anon37
nb_neurons	rnnoise/src/rnn.h	/^  int nb_neurons;$/;"	m	struct:__anon36
nb_neurons	rnnoise/src/rnn.h	/^  int nb_neurons;$/;"	m	struct:__anon37
nb_sequences	rnnoise/src/rnn_train.py	/^nb_sequences = len(all_data)\/\/window_size$/;"	v
nb_sequences	rnnoise/training/rnn_train.py	/^nb_sequences = len(all_data)\/\/window_size$/;"	v
nfft	rnnoise/src/kiss_fft.h	/^    int nfft;$/;"	m	struct:kiss_fft_state
nodeFS	rnn_denoise_bak.js	/^var nodeFS;$/;"	v
nodePath	rnn_denoise.js	/^var nodePath;$/;"	v
nodePath	rnn_denoise_bak.js	/^var nodePath;$/;"	v
noinst_HEADERS	rnnoise/Makefile	/^noinst_HEADERS = src\/arch.h  \\$/;"	m
noinst_PROGRAMS	rnnoise/Makefile	/^noinst_PROGRAMS =  \\$/;"	m
noise_gru	rnnoise/src/rnn_data.c	/^static const GRULayer noise_gru = {$/;"	v	file:
noise_gru	rnnoise/src/rnn_data.h	/^  const GRULayer *noise_gru;$/;"	m	struct:RNNModel
noise_gru	rnnoise/training/rnn_train.py	/^noise_gru = GRU(48, activation='relu', recurrent_activation='sigmoid', return_sequences=True, name='noise_gru', kernel_regularizer=regularizers.l2(reg), recurrent_regularizer=regularizers.l2(reg), kernel_constraint=constraint, recurrent_constraint=constraint, bias_constraint=constraint)(noise_input)$/;"	v
noise_gru_bias	rnnoise/src/rnn_data.c	/^static const rnn_weight noise_gru_bias[144] = {$/;"	v	file:
noise_gru_recurrent_weights	rnnoise/src/rnn_data.c	/^static const rnn_weight noise_gru_recurrent_weights[6912] = {$/;"	v	file:
noise_gru_size	rnnoise/src/rnn_data.h	/^  int noise_gru_size;$/;"	m	struct:RNNModel
noise_gru_state	rnnoise/src/rnn_data.h	/^  float *noise_gru_state;$/;"	m	struct:RNNState
noise_gru_weights	rnnoise/src/rnn_data.c	/^static const rnn_weight noise_gru_weights[12960] = {$/;"	v	file:
noise_input	rnnoise/training/rnn_train.py	/^noise_input = keras.layers.concatenate([tmp, vad_gru, main_input])$/;"	v
noise_train	rnnoise/training/rnn_train.py	/^noise_train = np.copy(all_data[:nb_sequences*window_size, 64:86])$/;"	v
noise_train	rnnoise/training/rnn_train.py	/^noise_train = np.reshape(noise_train, (nb_sequences, window_size, 22))$/;"	v
normalize	rnn_denoise_bak.js	/^      },normalize:function(path) {$/;"	m	class:PATH
normalizeArray	rnn_denoise_bak.js	/^      },normalizeArray:function(parts, allowAboveRoot) {$/;"	m	class:PATH
now	Examples/rnnoise_demo.c	/^static double now() {$/;"	f	file:
now	rnnoise/examples/rnnoise_demo.c	/^static double now() {$/;"	f	file:
nowIsMonotonic	rnn_denoise.js	/^  var nowIsMonotonic = true;;$/;"	v
numSampleLoops	Examples/dr_wav.h	/^    drwav_uint32 numSampleLoops;$/;"	m	struct:__anon65
numSampleLoops	rnnoise/examples/dr_wav.h	/^    drwav_uint32 numSampleLoops;$/;"	m	struct:__anon28
oldincludedir	rnnoise/Makefile	/^oldincludedir = \/usr\/include$/;"	m
onDone	rnn_denoise.js	/^  function onDone(ret) {$/;"	f	function:ccall
onRead	Examples/dr_mp3.h	/^    drmp3_read_proc onRead;$/;"	m	struct:__anon48
onRead	Examples/dr_mp3.h	/^    drmp3_src_read_proc onRead;$/;"	m	struct:drmp3_src
onRead	Examples/dr_wav.h	/^    drwav_read_proc onRead;$/;"	m	struct:__anon66
onRead	rnnoise/examples/dr_mp3.h	/^    drmp3_read_proc onRead;$/;"	m	struct:__anon11
onRead	rnnoise/examples/dr_mp3.h	/^    drmp3_src_read_proc onRead;$/;"	m	struct:drmp3_src
onRead	rnnoise/examples/dr_wav.h	/^    drwav_read_proc onRead;$/;"	m	struct:__anon29
onSeek	Examples/dr_mp3.h	/^    drmp3_seek_proc onSeek;$/;"	m	struct:__anon48
onSeek	Examples/dr_wav.h	/^    drwav_seek_proc onSeek;$/;"	m	struct:__anon66
onSeek	rnnoise/examples/dr_mp3.h	/^    drmp3_seek_proc onSeek;$/;"	m	struct:__anon11
onSeek	rnnoise/examples/dr_wav.h	/^    drwav_seek_proc onSeek;$/;"	m	struct:__anon29
onWrite	Examples/dr_wav.h	/^    drwav_write_proc onWrite;$/;"	m	struct:__anon66
onWrite	rnnoise/examples/dr_wav.h	/^    drwav_write_proc onWrite;$/;"	m	struct:__anon29
optimizer	rnnoise/src/rnn_train.py	/^              optimizer='adam',$/;"	v
opus_alloc	rnnoise/src/kiss_fft.h	37;"	d
opus_fft	rnnoise/src/kiss_fft.h	174;"	d
opus_fft	rnnoise/src/kiss_fft.h	190;"	d
opus_fft_alloc	rnnoise/src/kiss_fft.c	/^kiss_fft_state *opus_fft_alloc(int nfft,void * mem,size_t * lenmem, int arch)$/;"	f
opus_fft_alloc_arch	rnnoise/src/kiss_fft.h	164;"	d
opus_fft_alloc_arch	rnnoise/src/kiss_fft.h	184;"	d
opus_fft_alloc_arch_c	rnnoise/src/kiss_fft.c	/^int opus_fft_alloc_arch_c(kiss_fft_state *st) {$/;"	f
opus_fft_alloc_twiddles	rnnoise/src/kiss_fft.c	/^kiss_fft_state *opus_fft_alloc_twiddles(int nfft,void * mem,size_t * lenmem,$/;"	f
opus_fft_c	rnnoise/src/kiss_fft.c	/^void opus_fft_c(const kiss_fft_state *st,const kiss_fft_cpx *fin,kiss_fft_cpx *fout)$/;"	f
opus_fft_free	rnnoise/src/kiss_fft.c	/^void opus_fft_free(const kiss_fft_state *cfg, int arch)$/;"	f
opus_fft_free_arch	rnnoise/src/kiss_fft.h	169;"	d
opus_fft_free_arch	rnnoise/src/kiss_fft.h	187;"	d
opus_fft_free_arch_c	rnnoise/src/kiss_fft.c	/^void opus_fft_free_arch_c(kiss_fft_state *st) {$/;"	f
opus_fft_impl	rnnoise/src/kiss_fft.c	/^void opus_fft_impl(const kiss_fft_state *st,kiss_fft_cpx *fout)$/;"	f
opus_free	rnnoise/src/kiss_fft.h	38;"	d
opus_ifft	rnnoise/src/kiss_fft.h	179;"	d
opus_ifft	rnnoise/src/kiss_fft.h	193;"	d
opus_ifft_c	rnnoise/src/kiss_fft.c	/^void opus_ifft_c(const kiss_fft_state *st,const kiss_fft_cpx *fin,kiss_fft_cpx *fout)$/;"	f
opus_int	rnnoise/src/opus_types.h	151;"	d
opus_int16	rnnoise/src/opus_types.h	/^     typedef _G_int16 opus_int16;$/;"	t
opus_int16	rnnoise/src/opus_types.h	/^     typedef __int16 opus_int16;$/;"	t
opus_int16	rnnoise/src/opus_types.h	/^     typedef short opus_int16;$/;"	t
opus_int16	rnnoise/src/opus_types.h	/^   typedef SInt16 opus_int16;$/;"	t
opus_int16	rnnoise/src/opus_types.h	/^   typedef int16 opus_int16;$/;"	t
opus_int16	rnnoise/src/opus_types.h	/^   typedef int16_t opus_int16;$/;"	t
opus_int16	rnnoise/src/opus_types.h	/^   typedef short opus_int16;$/;"	t
opus_int16	rnnoise/src/opus_types.h	/^   typedef signed short opus_int16;$/;"	t
opus_int32	rnnoise/src/opus_types.h	/^     typedef _G_int32_t opus_int32;$/;"	t
opus_int32	rnnoise/src/opus_types.h	/^     typedef __int32 opus_int32;$/;"	t
opus_int32	rnnoise/src/opus_types.h	/^     typedef int opus_int32;$/;"	t
opus_int32	rnnoise/src/opus_types.h	/^   typedef SInt32 opus_int32;$/;"	t
opus_int32	rnnoise/src/opus_types.h	/^   typedef int opus_int32;$/;"	t
opus_int32	rnnoise/src/opus_types.h	/^   typedef int32_t opus_int32;$/;"	t
opus_int32	rnnoise/src/opus_types.h	/^   typedef long opus_int32;$/;"	t
opus_int32	rnnoise/src/opus_types.h	/^   typedef signed int opus_int32;$/;"	t
opus_int64	rnnoise/src/opus_types.h	152;"	d
opus_int8	rnnoise/src/opus_types.h	153;"	d
opus_uint	rnnoise/src/opus_types.h	155;"	d
opus_uint16	rnnoise/src/opus_types.h	/^     typedef _G_uint16 opus_uint16;$/;"	t
opus_uint16	rnnoise/src/opus_types.h	/^     typedef unsigned __int16 opus_uint16;$/;"	t
opus_uint16	rnnoise/src/opus_types.h	/^     typedef unsigned short opus_uint16;$/;"	t
opus_uint16	rnnoise/src/opus_types.h	/^   typedef UInt16 opus_uint16;$/;"	t
opus_uint16	rnnoise/src/opus_types.h	/^   typedef u_int16 opus_uint16;$/;"	t
opus_uint16	rnnoise/src/opus_types.h	/^   typedef u_int16_t opus_uint16;$/;"	t
opus_uint16	rnnoise/src/opus_types.h	/^   typedef uint16_t opus_uint16;$/;"	t
opus_uint16	rnnoise/src/opus_types.h	/^   typedef unsigned short opus_uint16;$/;"	t
opus_uint32	rnnoise/src/opus_types.h	/^     typedef _G_uint32_t opus_uint32;$/;"	t
opus_uint32	rnnoise/src/opus_types.h	/^     typedef unsigned __int32 opus_uint32;$/;"	t
opus_uint32	rnnoise/src/opus_types.h	/^     typedef unsigned int opus_uint32;$/;"	t
opus_uint32	rnnoise/src/opus_types.h	/^   typedef UInt32 opus_uint32;$/;"	t
opus_uint32	rnnoise/src/opus_types.h	/^   typedef u_int32_t opus_uint32;$/;"	t
opus_uint32	rnnoise/src/opus_types.h	/^   typedef uint32_t opus_uint32;$/;"	t
opus_uint32	rnnoise/src/opus_types.h	/^   typedef unsigned int opus_uint32;$/;"	t
opus_uint32	rnnoise/src/opus_types.h	/^   typedef unsigned long opus_uint32;$/;"	t
opus_uint32	rnnoise/src/opus_types.h	/^   typedef unsigned opus_uint32;$/;"	t
opus_uint64	rnnoise/src/opus_types.h	156;"	d
opus_uint8	rnnoise/src/opus_types.h	157;"	d
opus_val16	rnnoise/src/arch.h	/^typedef float opus_val16;$/;"	t
opus_val16	rnnoise/src/arch.h	/^typedef opus_int16 opus_val16;$/;"	t
opus_val32	rnnoise/src/arch.h	/^typedef float opus_val32;$/;"	t
opus_val32	rnnoise/src/arch.h	/^typedef opus_int32 opus_val32;$/;"	t
opus_val64	rnnoise/src/arch.h	/^typedef float opus_val64;$/;"	t
opus_val64	rnnoise/src/arch.h	/^typedef opus_int64 opus_val64;$/;"	t
outputChannels	Examples/dr_mp3.h	/^    drmp3_uint32 outputChannels;$/;"	m	struct:__anon47
outputChannels	rnnoise/examples/dr_mp3.h	/^    drmp3_uint32 outputChannels;$/;"	m	struct:__anon10
outputSampleRate	Examples/dr_mp3.h	/^    drmp3_uint32 outputSampleRate;$/;"	m	struct:__anon47
outputSampleRate	rnnoise/examples/dr_mp3.h	/^    drmp3_uint32 outputSampleRate;$/;"	m	struct:__anon10
p	rnn_denoise.js	/^      'p': 'i32',$/;"	p	class:var.typeNames
p	rnn_denoise.js	/^    'p': 0x7f, \/\/ i32$/;"	p	class:convertJsFunctionToWasm.typeCodes
pCachedFrames	Examples/dr_mp3.h	/^    float pCachedFrames[2 * DRMP3_SRC_CACHE_SIZE_IN_FRAMES];$/;"	m	struct:__anon41
pCachedFrames	rnnoise/examples/dr_mp3.h	/^    float pCachedFrames[2 * DRMP3_SRC_CACHE_SIZE_IN_FRAMES];$/;"	m	struct:__anon4
pData	Examples/dr_mp3.h	/^        const drmp3_uint8 *pData;$/;"	m	struct:__anon48::__anon49
pData	Examples/dr_mp3.h	/^    drmp3_uint8 *pData;$/;"	m	struct:__anon48
pData	rnnoise/examples/dr_mp3.h	/^        const drmp3_uint8 *pData;$/;"	m	struct:__anon11::__anon12
pData	rnnoise/examples/dr_mp3.h	/^    drmp3_uint8 *pData;$/;"	m	struct:__anon11
pDataSize	Examples/dr_wav.h	/^    size_t* pDataSize;$/;"	m	struct:__anon61
pDataSize	rnnoise/examples/dr_wav.h	/^    size_t* pDataSize;$/;"	m	struct:__anon24
pSRC	Examples/dr_mp3.h	/^    drmp3_src *pSRC;$/;"	m	struct:__anon41
pSRC	rnnoise/examples/dr_mp3.h	/^    drmp3_src *pSRC;$/;"	m	struct:__anon4
pSeekPoints	Examples/dr_mp3.h	/^    drmp3_seek_point *pSeekPoints;      \/\/ NULL by default. Set with drmp3_bind_seek_table(). Memory is owned by the client. dr_mp3 will never attempt to free this pointer.$/;"	m	struct:__anon48
pSeekPoints	rnnoise/examples/dr_mp3.h	/^    drmp3_seek_point *pSeekPoints;      \/\/ NULL by default. Set with drmp3_bind_seek_table(). Memory is owned by the client. dr_mp3 will never attempt to free this pointer.$/;"	m	struct:__anon11
pUserData	Examples/dr_mp3.h	/^    void *pUserData;$/;"	m	struct:__anon48
pUserData	Examples/dr_mp3.h	/^    void *pUserData;$/;"	m	struct:drmp3_src
pUserData	Examples/dr_wav.h	/^    void* pUserData;$/;"	m	struct:__anon66
pUserData	rnnoise/examples/dr_mp3.h	/^    void *pUserData;$/;"	m	struct:__anon11
pUserData	rnnoise/examples/dr_mp3.h	/^    void *pUserData;$/;"	m	struct:drmp3_src
pUserData	rnnoise/examples/dr_wav.h	/^    void* pUserData;$/;"	m	struct:__anon29
paddingSize	Examples/dr_wav.h	/^    unsigned int paddingSize;$/;"	m	struct:__anon58
paddingSize	rnnoise/examples/dr_wav.h	/^    unsigned int paddingSize;$/;"	m	struct:__anon21
parameters	rnn_denoise.js	/^      parameters: [],$/;"	p	class:var.type
parameters	rnn_denoise_bak.js	/^      parameters: [],$/;"	p	class:var.type
part_23_length	Examples/dr_mp3.h	/^    drmp3_uint16 part_23_length, big_values, scalefac_compress;$/;"	m	struct:__anon53
part_23_length	rnnoise/examples/dr_mp3.h	/^    drmp3_uint16 part_23_length, big_values, scalefac_compress;$/;"	m	struct:__anon16
pcmFrameIndex	Examples/dr_mp3.h	/^    drmp3_uint64 pcmFrameIndex;         \/\/ The index of the PCM frame this seek point targets.$/;"	m	struct:__anon46
pcmFrameIndex	Examples/dr_mp3.h	/^    drmp3_uint64 pcmFrameIndex; \/\/ <-- After sample rate conversion.$/;"	m	struct:__anon55
pcmFrameIndex	rnnoise/examples/dr_mp3.h	/^    drmp3_uint64 pcmFrameIndex;         \/\/ The index of the PCM frame this seek point targets.$/;"	m	struct:__anon9
pcmFrameIndex	rnnoise/examples/dr_mp3.h	/^    drmp3_uint64 pcmFrameIndex; \/\/ <-- After sample rate conversion.$/;"	m	struct:__anon18
pcmFrames	Examples/dr_mp3.h	/^    drmp3_uint8 pcmFrames[sizeof(float) *$/;"	m	struct:__anon48
pcmFrames	rnnoise/examples/dr_mp3.h	/^    drmp3_uint8 pcmFrames[sizeof(float) *$/;"	m	struct:__anon11
pcmFramesConsumedInMP3Frame	Examples/dr_mp3.h	/^    drmp3_uint32 pcmFramesConsumedInMP3Frame;$/;"	m	struct:__anon48
pcmFramesConsumedInMP3Frame	rnnoise/examples/dr_mp3.h	/^    drmp3_uint32 pcmFramesConsumedInMP3Frame;$/;"	m	struct:__anon11
pcmFramesRemainingInMP3Frame	Examples/dr_mp3.h	/^    drmp3_uint32 pcmFramesRemainingInMP3Frame;$/;"	m	struct:__anon48
pcmFramesRemainingInMP3Frame	rnnoise/examples/dr_mp3.h	/^    drmp3_uint32 pcmFramesRemainingInMP3Frame;$/;"	m	struct:__anon11
pcmFramesToDiscard	Examples/dr_mp3.h	/^    drmp3_uint16 pcmFramesToDiscard;    \/\/ The number of leading samples to read and discard. These are discarded after mp3FramesToDiscard.$/;"	m	struct:__anon46
pcmFramesToDiscard	rnnoise/examples/dr_mp3.h	/^    drmp3_uint16 pcmFramesToDiscard;    \/\/ The number of leading samples to read and discard. These are discarded after mp3FramesToDiscard.$/;"	m	struct:__anon9
pdfdir	rnnoise/Makefile	/^pdfdir = ${docdir}$/;"	m
pitch_buf	rnnoise/src/denoise.c	/^  float pitch_buf[PITCH_BUF_SIZE];$/;"	m	struct:DenoiseState	file:
pitch_downsample	rnnoise/src/pitch.c	/^void pitch_downsample(celt_sig *x[], opus_val16 *x_lp,$/;"	f
pitch_enh_buf	rnnoise/src/denoise.c	/^  float pitch_enh_buf[PITCH_BUF_SIZE];$/;"	m	struct:DenoiseState	file:
pitch_filter	rnnoise/src/denoise.c	/^void pitch_filter(kiss_fft_cpx *X, const kiss_fft_cpx *P, const float *Ex, const float *Ep,$/;"	f
pitch_search	rnnoise/src/pitch.c	/^void pitch_search(const opus_val16 *x_lp, opus_val16 *y,$/;"	f
pkgconfig_DATA	rnnoise/Makefile	/^pkgconfig_DATA = rnnoise.pc$/;"	m
pkgconfigdir	rnnoise/Makefile	/^pkgconfigdir = $(libdir)\/pkgconfig$/;"	m
pkgdatadir	rnnoise/Makefile	/^pkgdatadir = $(datadir)\/rnnoise$/;"	m
pkgincludedir	rnnoise/Makefile	/^pkgincludedir = $(includedir)\/rnnoise$/;"	m
pkglibdir	rnnoise/Makefile	/^pkglibdir = $(libdir)\/rnnoise$/;"	m
pkglibexecdir	rnnoise/Makefile	/^pkglibexecdir = $(libexecdir)\/rnnoise$/;"	m
playButtonD	rnn_denoise.js	/^var playButtonD = document.getElementById("playButtonD");$/;"	v
playButtonD	rnn_denoise_bak.js	/^var playButtonD = document.getElementById("playButtonD");$/;"	v
playButtonR	rnn_denoise.js	/^var playButtonR = document.getElementById("playButtonR");$/;"	v
playButtonR	rnn_denoise_bak.js	/^var playButtonR = document.getElementById("playButtonR");$/;"	v
playCount	Examples/dr_wav.h	/^    drwav_uint32 playCount;$/;"	m	struct:__anon64
playCount	rnnoise/examples/dr_wav.h	/^    drwav_uint32 playCount;$/;"	m	struct:__anon27
playF32Audio	rnn_denoise.js	/^function playF32Audio(f32buffer, inSize, inSampleRate) {$/;"	f
playF32Audio	rnn_denoise_bak.js	/^function playF32Audio(f32buffer, inSize, inSampleRate) {$/;"	f
pos	Examples/dr_mp3.h	/^    int pos, limit;$/;"	m	struct:__anon50
pos	rnnoise/examples/dr_mp3.h	/^    int pos, limit;$/;"	m	struct:__anon13
postRun	rnn_denoise.js	/^function postRun() {$/;"	f
postRun	rnn_denoise_bak.js	/^function postRun() {$/;"	f
ppData	Examples/dr_wav.h	/^    void** ppData;$/;"	m	struct:__anon61
ppData	rnnoise/examples/dr_wav.h	/^    void** ppData;$/;"	m	struct:__anon24
preMain	rnn_denoise_bak.js	/^function preMain() {$/;"	f
preRun	rnn_denoise.js	/^function preRun() {$/;"	f
preRun	rnn_denoise_bak.js	/^function preRun() {$/;"	f
predictor	Examples/dr_wav.h	/^        drwav_int32  predictor[2];$/;"	m	struct:__anon66::__anon69
predictor	Examples/dr_wav.h	/^        drwav_uint16 predictor[2];$/;"	m	struct:__anon66::__anon68
predictor	rnnoise/examples/dr_wav.h	/^        drwav_int32  predictor[2];$/;"	m	struct:__anon29::__anon32
predictor	rnnoise/examples/dr_wav.h	/^        drwav_uint16 predictor[2];$/;"	m	struct:__anon29::__anon31
prefix	rnnoise/Makefile	/^prefix = \/usr\/local$/;"	m
preflag	Examples/dr_mp3.h	/^    drmp3_uint8 preflag, scalefac_scale, count1_table, scfsi;$/;"	m	struct:__anon53
preflag	rnnoise/examples/dr_mp3.h	/^    drmp3_uint8 preflag, scalefac_scale, count1_table, scfsi;$/;"	m	struct:__anon16
prevSamples	Examples/dr_wav.h	/^        drwav_int32  prevSamples[2][2]; \/\/ The previous 2 samples for each channel (2 channels at most).$/;"	m	struct:__anon66::__anon68
prevSamples	rnnoise/examples/dr_wav.h	/^        drwav_int32  prevSamples[2][2]; \/\/ The previous 2 samples for each channel (2 channels at most).$/;"	m	struct:__anon29::__anon31
print	Examples/rnnoise_demo.c	/^void print(const float* buffer, const unsigned size, char str) {$/;"	f
print	rnnoise/examples/rnnoise_demo.c	/^void print(const float* buffer, const unsigned size, char str) {$/;"	f
printChar	rnn_denoise.js	/^  function printChar(stream, curr) {$/;"	f
printCharBuffers	rnn_denoise.js	/^  var printCharBuffers = [null,[],[]];$/;"	v
printLayer	rnnoise/training/dump_rnn.py	/^def printLayer(f, ft, layer):$/;"	f
printVector	rnnoise/training/dump_rnn.py	/^def printVector(f, ft, vector, name):$/;"	f
priv	rnnoise/src/kiss_fft.h	/^   void *priv;$/;"	m	struct:arch_fft_state
procExit	rnn_denoise.js	/^function procExit(code) {$/;"	f
product	Examples/dr_wav.h	/^    drwav_uint32 product;$/;"	m	struct:__anon65
product	rnnoise/examples/dr_wav.h	/^    drwav_uint32 product;$/;"	m	struct:__anon28
program_details	rnnoise/missing	/^program_details ()$/;"	f
program_transform_name	rnnoise/Makefile	/^program_transform_name = s,x,x,$/;"	m
prototypes	rnnoise/configure	/^   function prototypes and stuff, but not '\\xHH' hex character constants.$/;"	f
psdir	rnnoise/Makefile	/^psdir = ${docdir}$/;"	m
qmf_state	Examples/dr_mp3.h	/^    float mdct_overlap[2][9 * 32], qmf_state[15 * 2 * 32];$/;"	m	struct:__anon39
qmf_state	rnnoise/examples/dr_mp3.h	/^    float mdct_overlap[2][9 * 32], qmf_state[15 * 2 * 32];$/;"	m	struct:__anon2
quit_	rnn_denoise_bak.js	/^var quit_ = function(status, toThrow) {$/;"	f
r	rnnoise/src/kiss_fft.h	/^    kiss_fft_scalar r;$/;"	m	struct:__anon33
r	rnnoise/src/kiss_fft.h	/^   kiss_twiddle_scalar r;$/;"	m	struct:__anon34
rand_resp	rnnoise/src/denoise.c	/^static void rand_resp(float *a, float *b) {$/;"	f	file:
reSign	rnn_denoise_bak.js	/^function reSign(value, bits, ignore) {$/;"	f
readAsync	rnn_denoise_bak.js	/^  readAsync = function readAsync(url, onload, onerror) {$/;"	f
readBinary	rnn_denoise_bak.js	/^  readBinary = function readBinary(filename) {$/;"	f
readSingleFile	rnn_denoise.js	/^    function readSingleFile(e) {$/;"	f
readSingleFile	rnn_denoise_bak.js	/^    function readSingleFile(e) {$/;"	f
read_	rnn_denoise.js	/^read_ = function shell_read(filename, binary) {$/;"	f
read_	rnn_denoise.js	/^var read_,$/;"	v
read_	rnn_denoise_bak.js	/^  read_ = function shell_read(filename, binary) {$/;"	f
read_	rnn_denoise_bak.js	/^var read_,$/;"	v
reader.onload	rnn_denoise.js	/^      reader.onload = function(e) {$/;"	f
reader.onload	rnn_denoise_bak.js	/^      reader.onload = function(e) {$/;"	f
receiveInstance	rnn_denoise.js	/^  function receiveInstance(instance, module) {$/;"	f	function:createWasm
receiveInstance	rnn_denoise_bak.js	/^  function receiveInstance(instance, module) {$/;"	f	function:createWasm
receiveInstantiatedSource	rnn_denoise_bak.js	/^  function receiveInstantiatedSource(output) {$/;"	f	function:createWasm
receiveInstantiationResult	rnn_denoise.js	/^  function receiveInstantiationResult(result) {$/;"	f	function:createWasm
recorder	rnn_denoise.js	/^var recorder = null;$/;"	v
recorder	rnn_denoise_bak.js	/^var recorder = null;$/;"	v
recordingLength	rnn_denoise.js	/^var recordingLength = 0;$/;"	v
recordingLength	rnn_denoise_bak.js	/^var recordingLength = 0;$/;"	v
recurrent_weights	rnnoise/src/rnn.h	/^  const rnn_weight *recurrent_weights;$/;"	m	struct:__anon37
reg	rnnoise/training/rnn_train.py	/^reg = 0.000001$/;"	v
region_count	Examples/dr_mp3.h	/^    drmp3_uint8 table_select[3], region_count[3], subblock_gain[3];$/;"	m	struct:__anon53
region_count	rnnoise/examples/dr_mp3.h	/^    drmp3_uint8 table_select[3], region_count[3], subblock_gain[3];$/;"	m	struct:__anon16
relu	rnnoise/src/rnn.c	/^static OPUS_INLINE float relu(float x)$/;"	f	file:
removeFunction	rnn_denoise.js	/^function removeFunction(index) {$/;"	f
removeFunction	rnn_denoise_bak.js	/^function removeFunction(index) {$/;"	f
removeFunctionWasm	rnn_denoise_bak.js	/^function removeFunctionWasm(index) {$/;"	f
removeRunDependency	rnn_denoise.js	/^function removeRunDependency(id) {$/;"	f
removeRunDependency	rnn_denoise_bak.js	/^function removeRunDependency(id) {$/;"	f
remove_doubling	rnnoise/src/pitch.c	/^opus_val16 remove_doubling(opus_val16 *x, int maxperiod, int minperiod,$/;"	f
requireNodeFS	rnn_denoise.js	/^var requireNodeFS;$/;"	v
reserv	Examples/dr_mp3.h	/^    int reserv, free_format_bytes;$/;"	m	struct:__anon39
reserv	rnnoise/examples/dr_mp3.h	/^    int reserv, free_format_bytes;$/;"	m	struct:__anon2
reserv_buf	Examples/dr_mp3.h	/^    unsigned char header[4], reserv_buf[511];$/;"	m	struct:__anon39
reserv_buf	rnnoise/examples/dr_mp3.h	/^    unsigned char header[4], reserv_buf[511];$/;"	m	struct:__anon2
reset	rnn_denoise.js	/^function reset() {$/;"	f
reset	rnn_denoise_bak.js	/^function reset() {$/;"	f
result	Examples/rnnoise_demo.c	/^int result[2];$/;"	v
result	rnnoise/examples/rnnoise_demo.c	/^int result[2];$/;"	v
result_buffer	Examples/rnnoise_demo.c	/^float* result_buffer;$/;"	v
result_buffer	rnnoise/examples/rnnoise_demo.c	/^float* result_buffer;$/;"	v
ret	rnn_denoise_bak.js	/^        var ret = HEAP32[(((SYSCALLS.varargs)-(4))>>2)];$/;"	v
return	rnn_denoise_bak.js	/^  return String.prototype.startsWith ?$/;"	c
rightchannel	rnn_denoise.js	/^var rightchannel = [];$/;"	v
rightchannel	rnn_denoise_bak.js	/^var rightchannel = [];$/;"	v
rnn	rnnoise/src/denoise.c	/^  RNNState rnn;$/;"	m	struct:DenoiseState	file:
rnnDeNoise	Examples/rnnoise_demo.c	/^void rnnDeNoise(char *in_file, char *out_file) {$/;"	f
rnnDeNoise	rnnoise/examples/rnnoise_demo.c	/^void rnnDeNoise(char *in_file, char *out_file) {$/;"	f
rnnDenoiseMem	Examples/rnnoise_demo.c	/^float* rnnDenoiseMem(void* audioData, size_t audioSize) {$/;"	f
rnnDenoiseMem	rnnoise/examples/rnnoise_demo.c	/^float* rnnDenoiseMem(void* audioData, size_t audioSize) {$/;"	f
rnnDenoise_rawmem	Examples/rnnoise_demo.c	/^float* rnnDenoise_rawmem(const float* audioData, const uint32_t in_sampleRate, const uint32_t in_channels, const uint32_t in_sampleCount) {$/;"	f
rnnDenoise_rawmem	rnnoise/examples/rnnoise_demo.c	/^float* rnnDenoise_rawmem(const float* audioData, const uint32_t in_sampleRate, const uint32_t in_channels, const uint32_t in_sampleCount) {$/;"	f
rnnDenoise_rawmem_perf	Examples/rnnoise_demo.c	/^float* rnnDenoise_rawmem_perf(const float* audioData, const uint32_t in_sampleRate, const uint32_t in_channels, const uint32_t in_sampleCount) {$/;"	f
rnnDenoise_rawmem_perf	rnnoise/examples/rnnoise_demo.c	/^float* rnnDenoise_rawmem_perf(const float* audioData, const uint32_t in_sampleRate, const uint32_t in_channels, const uint32_t in_sampleCount) {$/;"	f
rnn_weight	rnnoise/src/rnn.h	/^typedef signed char rnn_weight;$/;"	t
rnnoise_alloc	rnnoise/src/common.h	/^static RNN_INLINE void *rnnoise_alloc (size_t size)$/;"	f
rnnoise_create	rnnoise/src/denoise.c	/^DenoiseState *rnnoise_create(RNNModel *model) {$/;"	f
rnnoise_destroy	rnnoise/src/denoise.c	/^void rnnoise_destroy(DenoiseState *st) {$/;"	f
rnnoise_free	rnnoise/src/common.h	/^static RNN_INLINE void rnnoise_free (void *ptr)$/;"	f
rnnoise_get_frame_size	rnnoise/src/denoise.c	/^int rnnoise_get_frame_size() {$/;"	f
rnnoise_get_size	rnnoise/src/denoise.c	/^int rnnoise_get_size() {$/;"	f
rnnoise_init	rnnoise/src/denoise.c	/^int rnnoise_init(DenoiseState *st, RNNModel *model) {$/;"	f
rnnoise_model_free	rnnoise/src/rnn_reader.c	/^void rnnoise_model_free(RNNModel *model)$/;"	f
rnnoise_model_from_file	rnnoise/src/rnn_reader.c	/^RNNModel *rnnoise_model_from_file(FILE *f)$/;"	f
rnnoise_model_orig	rnnoise/src/rnn_data.c	/^const struct RNNModel rnnoise_model_orig = {$/;"	v	typeref:struct:RNNModel
rnnoise_process_frame	rnnoise/src/denoise.c	/^float rnnoise_process_frame(DenoiseState *st, float *out, const float *in) {$/;"	f
run	rnn_denoise.js	/^function run(args) {$/;"	f
run	rnn_denoise_bak.js	/^function run(args) {$/;"	f
runCaller	rnn_denoise.js	/^dependenciesFulfilled = function runCaller() {$/;"	f
runCaller	rnn_denoise_bak.js	/^dependenciesFulfilled = function runCaller() {$/;"	f
runDependencies	rnn_denoise.js	/^var runDependencies = 0;$/;"	v
runDependencies	rnn_denoise_bak.js	/^var runDependencies = 0;$/;"	v
runDependencyWatcher	rnn_denoise.js	/^var runDependencyWatcher = null;$/;"	v
runDependencyWatcher	rnn_denoise_bak.js	/^var runDependencyWatcher = null;$/;"	v
runstatedir	rnnoise/Makefile	/^runstatedir = ${localstatedir}\/run$/;"	m
runtimeExited	rnn_denoise_bak.js	/^var runtimeExited = false;$/;"	v
runtimeInitialized	rnn_denoise.js	/^var runtimeInitialized = false;$/;"	v
runtimeInitialized	rnn_denoise_bak.js	/^var runtimeInitialized = false;$/;"	v
sampleCount	Examples/rnnoise_demo.c	/^uint64_t sampleCount = 0;$/;"	v
sampleCount	rnnoise/examples/rnnoise_demo.c	/^uint64_t sampleCount = 0;$/;"	v
samplePeriod	Examples/dr_wav.h	/^    drwav_uint32 samplePeriod;$/;"	m	struct:__anon65
samplePeriod	rnnoise/examples/dr_wav.h	/^    drwav_uint32 samplePeriod;$/;"	m	struct:__anon28
sampleRate	Examples/dr_mp3.h	/^    drmp3_uint32 sampleRate;$/;"	m	struct:__anon48
sampleRate	Examples/dr_wav.h	/^    drwav_uint32 sampleRate;$/;"	m	struct:__anon62
sampleRate	Examples/dr_wav.h	/^    drwav_uint32 sampleRate;$/;"	m	struct:__anon63
sampleRate	Examples/dr_wav.h	/^    drwav_uint32 sampleRate;$/;"	m	struct:__anon66
sampleRate	Examples/rnnoise_demo.c	/^uint32_t sampleRate = 0;$/;"	v
sampleRate	rnn_denoise.js	/^var sampleRate = 44100;$/;"	v
sampleRate	rnn_denoise_bak.js	/^var sampleRate = 44100;$/;"	v
sampleRate	rnnoise/examples/dr_mp3.h	/^    drmp3_uint32 sampleRate;$/;"	m	struct:__anon11
sampleRate	rnnoise/examples/dr_wav.h	/^    drwav_uint32 sampleRate;$/;"	m	struct:__anon25
sampleRate	rnnoise/examples/dr_wav.h	/^    drwav_uint32 sampleRate;$/;"	m	struct:__anon26
sampleRate	rnnoise/examples/dr_wav.h	/^    drwav_uint32 sampleRate;$/;"	m	struct:__anon29
sampleRate	rnnoise/examples/rnnoise_demo.c	/^uint32_t sampleRate = 0;$/;"	v
sampleRateIn	Examples/dr_mp3.h	/^    drmp3_uint32 sampleRateIn;$/;"	m	struct:__anon42
sampleRateIn	rnnoise/examples/dr_mp3.h	/^    drmp3_uint32 sampleRateIn;$/;"	m	struct:__anon5
sampleRateOut	Examples/dr_mp3.h	/^    drmp3_uint32 sampleRateOut;$/;"	m	struct:__anon42
sampleRateOut	rnnoise/examples/dr_mp3.h	/^    drmp3_uint32 sampleRateOut;$/;"	m	struct:__anon5
sampleSize	rnn_denoise.js	/^var sampleSize = 0;$/;"	v
sampleSize	rnn_denoise_bak.js	/^var sampleSize = 0;$/;"	v
samplerData	Examples/dr_wav.h	/^    drwav_uint32 samplerData;$/;"	m	struct:__anon65
samplerData	rnnoise/examples/dr_wav.h	/^    drwav_uint32 samplerData;$/;"	m	struct:__anon28
sbindir	rnnoise/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
scale	rnnoise/src/kiss_fft.h	/^    opus_val16 scale;$/;"	m	struct:kiss_fft_state
scale_shift	rnnoise/src/kiss_fft.h	/^    int scale_shift;$/;"	m	struct:kiss_fft_state
scalefac_compress	Examples/dr_mp3.h	/^    drmp3_uint16 part_23_length, big_values, scalefac_compress;$/;"	m	struct:__anon53
scalefac_compress	rnnoise/examples/dr_mp3.h	/^    drmp3_uint16 part_23_length, big_values, scalefac_compress;$/;"	m	struct:__anon16
scalefac_scale	Examples/dr_mp3.h	/^    drmp3_uint8 preflag, scalefac_scale, count1_table, scfsi;$/;"	m	struct:__anon53
scalefac_scale	rnnoise/examples/dr_mp3.h	/^    drmp3_uint8 preflag, scalefac_scale, count1_table, scfsi;$/;"	m	struct:__anon16
scf	Examples/dr_mp3.h	/^    float grbuf[2][576], scf[40], syn[18 + 15][2 * 32];$/;"	m	struct:__anon54
scf	Examples/dr_mp3.h	/^    float scf[3 * 64];$/;"	m	struct:__anon51
scf	rnnoise/examples/dr_mp3.h	/^    float grbuf[2][576], scf[40], syn[18 + 15][2 * 32];$/;"	m	struct:__anon17
scf	rnnoise/examples/dr_mp3.h	/^    float scf[3 * 64];$/;"	m	struct:__anon14
scfcod	Examples/dr_mp3.h	/^    drmp3_uint8 total_bands, stereo_bands, bitalloc[64], scfcod[64];$/;"	m	struct:__anon51
scfcod	rnnoise/examples/dr_mp3.h	/^    drmp3_uint8 total_bands, stereo_bands, bitalloc[64], scfcod[64];$/;"	m	struct:__anon14
scfsi	Examples/dr_mp3.h	/^    drmp3_uint8 preflag, scalefac_scale, count1_table, scfsi;$/;"	m	struct:__anon53
scfsi	rnnoise/examples/dr_mp3.h	/^    drmp3_uint8 preflag, scalefac_scale, count1_table, scfsi;$/;"	m	struct:__anon16
scriptDirectory	rnn_denoise.js	/^var scriptDirectory = '';$/;"	v
scriptDirectory	rnn_denoise_bak.js	/^var scriptDirectory = '';$/;"	v
second_check	rnnoise/src/pitch.c	/^static const int second_check[16] = {0, 0, 3, 2, 3, 2, 5, 2, 3, 2, 3, 2, 5, 2, 3, 2};$/;"	v	file:
seekPointCount	Examples/dr_mp3.h	/^    drmp3_uint32 seekPointCount;        \/\/ The number of items in pSeekPoints. When set to 0 assumes to no seek table. Defaults to zero.$/;"	m	struct:__anon48
seekPointCount	rnnoise/examples/dr_mp3.h	/^    drmp3_uint32 seekPointCount;        \/\/ The number of items in pSeekPoints. When set to 0 assumes to no seek table. Defaults to zero.$/;"	m	struct:__anon11
seekPosInBytes	Examples/dr_mp3.h	/^    drmp3_uint64 seekPosInBytes;        \/\/ Points to the first byte of an MP3 frame.$/;"	m	struct:__anon46
seekPosInBytes	rnnoise/examples/dr_mp3.h	/^    drmp3_uint64 seekPosInBytes;        \/\/ Points to the first byte of an MP3 frame.$/;"	m	struct:__anon9
setErrNo	rnn_denoise_bak.js	/^  function setErrNo(value) {$/;"	f
setTempRet0	rnn_denoise.js	/^  "setTempRet0": _setTempRet0$/;"	p	class:asmLibraryArg
setTempRet0	rnn_denoise_bak.js	/^var asmLibraryArg = { "clock_gettime": _clock_gettime, "emscripten_get_sbrk_ptr": _emscripten_get_sbrk_ptr, "emscripten_memcpy_big": _emscripten_memcpy_big, "emscripten_resize_heap": _emscripten_resize_heap, "fd_close": _fd_close, "fd_seek": _fd_seek, "fd_write": _fd_write, "memory": wasmMemory, "setTempRet0": _setTempRet0, "table": wasmTable };$/;"	p	class:asmLibraryArg
setTempRet0	rnn_denoise_bak.js	/^var setTempRet0 = function(value) {$/;"	f
setValue	rnn_denoise.js	/^  function setValue(ptr, value, type = 'i8') {$/;"	f
setValue	rnn_denoise_bak.js	/^function setValue(ptr, value, type, noSafe) {$/;"	f
setWasmTableEntry	rnn_denoise.js	/^  function setWasmTableEntry(idx, func) {$/;"	f
setWindowTitle	rnn_denoise_bak.js	/^  setWindowTitle = function(title) { document.title = title };$/;"	f
set_base_from	rnnoise/depcomp	/^set_base_from ()$/;"	f
set_dir_from	rnnoise/depcomp	/^set_dir_from ()$/;"	f
sfbtab	Examples/dr_mp3.h	/^    const drmp3_uint8 *sfbtab;$/;"	m	struct:__anon53
sfbtab	rnnoise/examples/dr_mp3.h	/^    const drmp3_uint8 *sfbtab;$/;"	m	struct:__anon16
sharedstatedir	rnnoise/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
shell_read	rnn_denoise.js	/^read_ = function shell_read(filename, binary) {$/;"	f
shell_read	rnn_denoise_bak.js	/^  read_ = function shell_read(filename, binary) {$/;"	f
shift	rnnoise/src/kiss_fft.h	/^    int shift;$/;"	m	struct:kiss_fft_state
shouldRunNow	rnn_denoise_bak.js	/^var shouldRunNow = true;$/;"	v
sigCache	rnn_denoise_bak.js	/^      sigCache[func] = function dynCall_wrapper() {$/;"	f
sigmoid_approx	rnnoise/src/rnn.c	/^static OPUS_INLINE float sigmoid_approx(float x)$/;"	f	file:
sizeInBytes	Examples/dr_wav.h	/^    drwav_uint64 sizeInBytes;$/;"	m	struct:__anon58
sizeInBytes	rnnoise/examples/dr_wav.h	/^    drwav_uint64 sizeInBytes;$/;"	m	struct:__anon21
smpl	Examples/dr_wav.h	/^    drwav_smpl smpl;$/;"	m	struct:__anon66
smpl	rnnoise/examples/dr_wav.h	/^    drwav_smpl smpl;$/;"	m	struct:__anon29
smpteFormat	Examples/dr_wav.h	/^    drwav_uint32 smpteFormat;$/;"	m	struct:__anon65
smpteFormat	rnnoise/examples/dr_wav.h	/^    drwav_uint32 smpteFormat;$/;"	m	struct:__anon28
smpteOffset	Examples/dr_wav.h	/^    drwav_uint32 smpteOffset;$/;"	m	struct:__anon65
smpteOffset	rnnoise/examples/dr_wav.h	/^    drwav_uint32 smpteOffset;$/;"	m	struct:__anon28
splitPath	rnn_denoise_bak.js	/^  var PATH={splitPath:function(filename) {$/;"	m	class:PATH
splitpath	Examples/rnnoise_demo.c	/^void splitpath(const char *path, char *drv, char *dir, char *name, char *ext) {$/;"	f
splitpath	rnnoise/examples/rnnoise_demo.c	/^void splitpath(const char *path, char *drv, char *dir, char *name, char *ext) {$/;"	f
src	Examples/dr_mp3.h	/^    drmp3_src src;$/;"	m	struct:__anon48
src	rnnoise/examples/dr_mp3.h	/^    drmp3_src src;$/;"	m	struct:__anon11
srcdir	rnnoise/Makefile	/^srcdir = .$/;"	m
stackTrace	rnn_denoise.js	/^  function stackTrace() {$/;"	f
stackTrace	rnn_denoise_bak.js	/^  function stackTrace() {$/;"	f
start	Examples/dr_wav.h	/^    drwav_uint32 start;$/;"	m	struct:__anon64
start	rnnoise/examples/dr_wav.h	/^    drwav_uint32 start;$/;"	m	struct:__anon27
startRecordingButton	rnn_denoise.js	/^var startRecordingButton = document.getElementById("startRecordingButton");$/;"	v
startRecordingButton	rnn_denoise_bak.js	/^var startRecordingButton = document.getElementById("startRecordingButton");$/;"	v
startsWith	rnn_denoise_bak.js	/^  return String.prototype.startsWith ?$/;"	m	class:return
stepIndex	Examples/dr_wav.h	/^        drwav_int32  stepIndex[2];$/;"	m	struct:__anon66::__anon69
stepIndex	rnnoise/examples/dr_wav.h	/^        drwav_int32  stepIndex[2];$/;"	m	struct:__anon29::__anon32
stereo_bands	Examples/dr_mp3.h	/^    drmp3_uint8 total_bands, stereo_bands, bitalloc[64], scfcod[64];$/;"	m	struct:__anon51
stereo_bands	rnnoise/examples/dr_mp3.h	/^    drmp3_uint8 total_bands, stereo_bands, bitalloc[64], scfcod[64];$/;"	m	struct:__anon14
stopRecordingButton	rnn_denoise.js	/^var stopRecordingButton = document.getElementById("stopRecordingButton");$/;"	v
stopRecordingButton	rnn_denoise_bak.js	/^var stopRecordingButton = document.getElementById("stopRecordingButton");$/;"	v
streamCursor	Examples/dr_mp3.h	/^    drmp3_uint64 streamCursor;          \/\/ The current byte the decoder is sitting on in the raw stream.$/;"	m	struct:__anon48
streamCursor	rnnoise/examples/dr_mp3.h	/^    drmp3_uint64 streamCursor;          \/\/ The current byte the decoder is sitting on in the raw stream.$/;"	m	struct:__anon11
string	rnn_denoise.js	/^    'string': function(str) {$/;"	m	class:ccall.toC
string	rnn_denoise_bak.js	/^    'string': function(str) {$/;"	m	class:ccall.toC
stringToAscii	rnn_denoise.js	/^function stringToAscii(str, outPtr) {$/;"	f
stringToAscii	rnn_denoise_bak.js	/^function stringToAscii(str, outPtr) {$/;"	f
stringToUTF16	rnn_denoise.js	/^function stringToUTF16(str, outPtr, maxBytesToWrite) {$/;"	f
stringToUTF16	rnn_denoise_bak.js	/^function stringToUTF16(str, outPtr, maxBytesToWrite) {$/;"	f
stringToUTF32	rnn_denoise.js	/^function stringToUTF32(str, outPtr, maxBytesToWrite) {$/;"	f
stringToUTF32	rnn_denoise_bak.js	/^function stringToUTF32(str, outPtr, maxBytesToWrite) {$/;"	f
stringToUTF8	rnn_denoise.js	/^function stringToUTF8(str, outPtr, maxBytesToWrite) {$/;"	f
stringToUTF8	rnn_denoise_bak.js	/^function stringToUTF8(str, outPtr, maxBytesToWrite) {$/;"	f
stringToUTF8Array	rnn_denoise.js	/^function stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {$/;"	f
stringToUTF8Array	rnn_denoise_bak.js	/^function stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {$/;"	f
structLayer	rnnoise/training/dump_rnn.py	/^def structLayer(f, layer):$/;"	f
subFormat	Examples/dr_wav.h	/^    drwav_uint8 subFormat[16];$/;"	m	struct:__anon63
subFormat	rnnoise/examples/dr_wav.h	/^    drwav_uint8 subFormat[16];$/;"	m	struct:__anon26
subblock_gain	Examples/dr_mp3.h	/^    drmp3_uint8 table_select[3], region_count[3], subblock_gain[3];$/;"	m	struct:__anon53
subblock_gain	rnnoise/examples/dr_mp3.h	/^    drmp3_uint8 table_select[3], region_count[3], subblock_gain[3];$/;"	m	struct:__anon16
subdir	rnnoise/Makefile	/^subdir = .$/;"	m
syn	Examples/dr_mp3.h	/^    float grbuf[2][576], scf[40], syn[18 + 15][2 * 32];$/;"	m	struct:__anon54
syn	rnnoise/examples/dr_mp3.h	/^    float grbuf[2][576], scf[40], syn[18 + 15][2 * 32];$/;"	m	struct:__anon17
synthesis_mem	rnnoise/src/denoise.c	/^  float synthesis_mem[FRAME_SIZE];$/;"	m	struct:DenoiseState	file:
sysconfdir	rnnoise/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
tab_offset	Examples/dr_mp3.h	/^    drmp3_uint8 tab_offset, code_tab_width, band_count;$/;"	m	struct:__anon52
tab_offset	rnnoise/examples/dr_mp3.h	/^    drmp3_uint8 tab_offset, code_tab_width, band_count;$/;"	m	struct:__anon15
table	rnn_denoise_bak.js	/^var asmLibraryArg = { "clock_gettime": _clock_gettime, "emscripten_get_sbrk_ptr": _emscripten_get_sbrk_ptr, "emscripten_memcpy_big": _emscripten_memcpy_big, "emscripten_resize_heap": _emscripten_resize_heap, "fd_close": _fd_close, "fd_seek": _fd_seek, "fd_write": _fd_write, "memory": wasmMemory, "setTempRet0": _setTempRet0, "table": wasmTable };$/;"	p	class:asmLibraryArg
table_select	Examples/dr_mp3.h	/^    drmp3_uint8 table_select[3], region_count[3], subblock_gain[3];$/;"	m	struct:__anon53
table_select	rnnoise/examples/dr_mp3.h	/^    drmp3_uint8 table_select[3], region_count[3], subblock_gain[3];$/;"	m	struct:__anon16
tansig_approx	rnnoise/src/rnn.c	/^static OPUS_INLINE float tansig_approx(float x)$/;"	f	file:
tansig_table	rnnoise/src/tansig_table.h	/^static const float tansig_table[201] = {$/;"	v
tardir	rnnoise/Makefile	/^	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2$/;"	m
tardir	rnnoise/Makefile	/^	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz$/;"	m
tardir	rnnoise/Makefile	/^	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z$/;"	m
tardir	rnnoise/Makefile	/^	tardir=$(distdir) && $(am__tar) | eval GZIP= gzip $(GZIP_ENV) -c >$(distdir).tar.gz$/;"	m
tardir	rnnoise/Makefile	/^	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz$/;"	m
target_alias	rnnoise/Makefile	/^target_alias = $/;"	m
tempDouble	rnn_denoise.js	/^var tempDouble;$/;"	v
tempDouble	rnn_denoise_bak.js	/^var tempDouble;$/;"	v
tempI64	rnn_denoise.js	/^var tempI64;$/;"	v
tempI64	rnn_denoise_bak.js	/^var tempI64;$/;"	v
tempRet0	rnn_denoise.js	/^var tempRet0 = 0;$/;"	v
tempRet0	rnn_denoise_bak.js	/^var tempRet0 = 0;$/;"	v
thisProgram	rnn_denoise.js	/^var thisProgram = '.\/this.program';$/;"	v
thisProgram	rnn_denoise_bak.js	/^var thisProgram = '.\/this.program';$/;"	v
time_interval	Examples/rnnoise_demo.c	/^double time_interval = 0;$/;"	v
time_interval	rnnoise/examples/rnnoise_demo.c	/^double time_interval = 0;$/;"	v
tmp	rnnoise/training/rnn_train.py	/^tmp = Dense(24, activation='tanh', name='input_dense', kernel_constraint=constraint, bias_constraint=constraint)(main_input)$/;"	v
top_build_prefix	rnnoise/Makefile	/^top_build_prefix = $/;"	m
top_builddir	rnnoise/Makefile	/^top_builddir = .$/;"	m
top_distdir	rnnoise/Makefile	/^top_distdir = $(distdir)$/;"	m
top_srcdir	rnnoise/Makefile	/^top_srcdir = .$/;"	m
totalPCMFrameCount	Examples/dr_wav.h	/^    drwav_uint64 totalPCMFrameCount;$/;"	m	struct:__anon66
totalPCMFrameCount	rnnoise/examples/dr_wav.h	/^    drwav_uint64 totalPCMFrameCount;$/;"	m	struct:__anon29
totalSampleCount	Examples/dr_wav.h	/^    drwav_uint64 totalSampleCount;  \/\/ <-- DEPRECATED. Will be removed in a future version.$/;"	m	struct:__anon66
totalSampleCount	rnnoise/examples/dr_wav.h	/^    drwav_uint64 totalSampleCount;  \/\/ <-- DEPRECATED. Will be removed in a future version.$/;"	m	struct:__anon29
total_bands	Examples/dr_mp3.h	/^    drmp3_uint8 total_bands, stereo_bands, bitalloc[64], scfcod[64];$/;"	m	struct:__anon51
total_bands	rnnoise/examples/dr_mp3.h	/^    drmp3_uint8 total_bands, stereo_bands, bitalloc[64], scfcod[64];$/;"	m	struct:__anon14
total_wasm_processing_time	rnn_denoise.js	/^var total_wasm_processing_time = 0;$/;"	v
total_wasm_processing_time	rnn_denoise_bak.js	/^var total_wasm_processing_time = 0;$/;"	v
transform	rnnoise/Makefile	/^transform = $(program_transform_name)$/;"	m
translatedFormatTag	Examples/dr_wav.h	/^    drwav_uint16 translatedFormatTag;$/;"	m	struct:__anon66
translatedFormatTag	rnnoise/examples/dr_wav.h	/^    drwav_uint16 translatedFormatTag;$/;"	m	struct:__anon29
twiddles	rnnoise/src/kiss_fft.h	/^    const kiss_twiddle_cpx *twiddles;$/;"	m	struct:kiss_fft_state
type	Examples/dr_wav.h	/^    drwav_uint32 type;$/;"	m	struct:__anon64
type	rnnoise/examples/dr_wav.h	/^    drwav_uint32 type;$/;"	m	struct:__anon27
uleb128Encode	rnn_denoise.js	/^function uleb128Encode(n) {$/;"	f
unSign	rnn_denoise_bak.js	/^function unSign(value, bits, ignore) {$/;"	f
uni_rand	rnnoise/src/denoise.c	/^static float uni_rand() {$/;"	f	file:
updateGlobalBufferAndViews	rnn_denoise.js	/^function updateGlobalBufferAndViews(buf) {$/;"	f
updateGlobalBufferAndViews	rnn_denoise_bak.js	/^function updateGlobalBufferAndViews(buf) {$/;"	f
updateTableMap	rnn_denoise.js	/^function updateTableMap(offset, count) {$/;"	f
vad_gru	rnnoise/src/rnn_data.c	/^static const GRULayer vad_gru = {$/;"	v	file:
vad_gru	rnnoise/src/rnn_data.h	/^  const GRULayer *vad_gru;$/;"	m	struct:RNNModel
vad_gru	rnnoise/training/rnn_train.py	/^vad_gru = GRU(24, activation='tanh', recurrent_activation='sigmoid', return_sequences=True, name='vad_gru', kernel_regularizer=regularizers.l2(reg), recurrent_regularizer=regularizers.l2(reg), kernel_constraint=constraint, recurrent_constraint=constraint, bias_constraint=constraint)(tmp)$/;"	v
vad_gru_bias	rnnoise/src/rnn_data.c	/^static const rnn_weight vad_gru_bias[72] = {$/;"	v	file:
vad_gru_recurrent_weights	rnnoise/src/rnn_data.c	/^static const rnn_weight vad_gru_recurrent_weights[1728] = {$/;"	v	file:
vad_gru_size	rnnoise/src/rnn_data.h	/^  int vad_gru_size;$/;"	m	struct:RNNModel
vad_gru_state	rnnoise/src/rnn_data.h	/^  float *vad_gru_state;$/;"	m	struct:RNNState
vad_gru_weights	rnnoise/src/rnn_data.c	/^static const rnn_weight vad_gru_weights[1728] = {$/;"	v	file:
vad_output	rnnoise/src/rnn_data.c	/^static const DenseLayer vad_output = {$/;"	v	file:
vad_output	rnnoise/src/rnn_data.h	/^  const DenseLayer *vad_output;$/;"	m	struct:RNNModel
vad_output	rnnoise/training/rnn_train.py	/^vad_output = Dense(1, activation='sigmoid', name='vad_output', kernel_constraint=constraint, bias_constraint=constraint)(vad_gru)$/;"	v
vad_output_bias	rnnoise/src/rnn_data.c	/^static const rnn_weight vad_output_bias[1] = {$/;"	v	file:
vad_output_size	rnnoise/src/rnn_data.h	/^  int vad_output_size;$/;"	m	struct:RNNModel
vad_output_weights	rnnoise/src/rnn_data.c	/^static const rnn_weight vad_output_weights[24] = {$/;"	v	file:
vad_train	rnnoise/training/rnn_train.py	/^vad_train = np.copy(all_data[:nb_sequences*window_size, 86:87])$/;"	v
vad_train	rnnoise/training/rnn_train.py	/^vad_train = np.reshape(vad_train, (nb_sequences, window_size, 1))$/;"	v
validBitsPerSample	Examples/dr_wav.h	/^    drwav_uint16 validBitsPerSample;$/;"	m	struct:__anon63
validBitsPerSample	rnnoise/examples/dr_wav.h	/^    drwav_uint16 validBitsPerSample;$/;"	m	struct:__anon26
validation_data	rnnoise/src/rnn_train.py	/^          validation_data=(x_train, y_train))$/;"	v
varargs	rnn_denoise.js	/^  var SYSCALLS = {varargs:undefined,get:function() {$/;"	p	class:SYSCALLS
volume	rnn_denoise.js	/^var volume = null;$/;"	v
volume	rnn_denoise_bak.js	/^var volume = null;$/;"	v
warnOnce	rnn_denoise.js	/^function warnOnce(text) {$/;"	f
warnOnce	rnn_denoise_bak.js	/^function warnOnce(text) {$/;"	f
wasi_snapshot_preview1	rnn_denoise.js	/^    'wasi_snapshot_preview1': asmLibraryArg,$/;"	p	class:createWasm.info
wasi_snapshot_preview1	rnn_denoise_bak.js	/^    'wasi_snapshot_preview1': asmLibraryArg$/;"	p	class:createWasm.info
wasmBinary	rnn_denoise.js	/^var wasmBinary;$/;"	v
wasmBinary	rnn_denoise_bak.js	/^var wasmBinary;if (Module['wasmBinary']) wasmBinary = Module['wasmBinary'];$/;"	v
wasmBinaryFile	rnn_denoise.js	/^var wasmBinaryFile;$/;"	v
wasmBinaryFile	rnn_denoise_bak.js	/^var wasmBinaryFile = 'rnn_denoise.wasm';$/;"	v
wasmMemory	rnn_denoise.js	/^var wasmMemory;$/;"	v
wasmMemory	rnn_denoise_bak.js	/^var wasmMemory;$/;"	v
wasmTable	rnn_denoise.js	/^var wasmTable;$/;"	v
wasmTableMirror	rnn_denoise.js	/^  var wasmTableMirror = [];$/;"	v
wasm_denoise_stream	rnn_denoise.js	/^function wasm_denoise_stream(f32buffer) {$/;"	f
wasm_denoise_stream	rnn_denoise_bak.js	/^function wasm_denoise_stream(f32buffer) {$/;"	f
wasm_denoise_stream_perf	rnn_denoise.js	/^function wasm_denoise_stream_perf(f32buffer) {$/;"	f
wasm_denoise_stream_perf	rnn_denoise_bak.js	/^function wasm_denoise_stream_perf(f32buffer) {$/;"	f
wasm_processing_time	rnn_denoise.js	/^var wasm_processing_time = 0;$/;"	v
wasm_processing_time	rnn_denoise_bak.js	/^var wasm_processing_time = 0;$/;"	v
wavRead_f32	Examples/rnnoise_demo.c	/^float *wavRead_f32(const char *filename, uint32_t *sampleRate, uint64_t *sampleCount, uint32_t *channels) {$/;"	f
wavRead_f32	rnnoise/examples/rnnoise_demo.c	/^float *wavRead_f32(const char *filename, uint32_t *sampleRate, uint64_t *sampleCount, uint32_t *channels) {$/;"	f
wavWrite_f32	Examples/rnnoise_demo.c	/^void wavWrite_f32(char *filename, float *buffer, int sampleRate, uint32_t totalSampleCount, uint32_t channels) {$/;"	f
wavWrite_f32	rnnoise/examples/rnnoise_demo.c	/^void wavWrite_f32(char *filename, float *buffer, int sampleRate, uint32_t totalSampleCount, uint32_t channels) {$/;"	f
wavWrite_s16	Examples/rnnoise_demo.c	/^void wavWrite_s16(char *filename, float *buffer, int sampleRate, uint32_t totalSampleCount, uint32_t channels) {$/;"	f
wavWrite_s16	rnnoise/examples/rnnoise_demo.c	/^void wavWrite_s16(char *filename, float *buffer, int sampleRate, uint32_t totalSampleCount, uint32_t channels) {$/;"	f
weights	rnnoise/training/dump_rnn.py	/^weights = model.get_weights()$/;"	v
window_size	rnnoise/src/rnn_train.py	/^window_size = 500$/;"	v
window_size	rnnoise/training/rnn_train.py	/^window_size = 2000$/;"	v
withStackSave	rnn_denoise.js	/^  function withStackSave(f) {$/;"	f
writeArrayToMemory	rnn_denoise.js	/^function writeArrayToMemory(array, buffer) {$/;"	f
writeArrayToMemory	rnn_denoise_bak.js	/^function writeArrayToMemory(array, buffer) {$/;"	f
writeAsciiToMemory	rnn_denoise.js	/^function writeAsciiToMemory(str, buffer, dontAddNull) {$/;"	f
writeAsciiToMemory	rnn_denoise_bak.js	/^function writeAsciiToMemory(str, buffer, dontAddNull) {$/;"	f
writeStringToMemory	rnn_denoise.js	/^function writeStringToMemory(string, buffer, dontAddNull) {$/;"	f
writeStringToMemory	rnn_denoise_bak.js	/^function writeStringToMemory(string, buffer, dontAddNull) {$/;"	f
x	rnnoise/src/rnn_train.py	/^x = Dense(22, activation='sigmoid')(x)$/;"	v
x	rnnoise/src/rnn_train.py	/^x = GRU(128, activation='tanh', recurrent_activation='sigmoid', return_sequences=True)(x)$/;"	v
x	rnnoise/src/rnn_train.py	/^x=main_input$/;"	v
x_train	rnnoise/src/rnn_train.py	/^x_train = all_data[:nb_sequences*window_size, :-22]$/;"	v
x_train	rnnoise/src/rnn_train.py	/^x_train = np.reshape(x_train, (nb_sequences, window_size, 22))$/;"	v
x_train	rnnoise/src/rnn_train.py	/^x_train = x_train.astype('float32')$/;"	v
x_train	rnnoise/training/rnn_train.py	/^x_train = all_data[:nb_sequences*window_size, :42]$/;"	v
x_train	rnnoise/training/rnn_train.py	/^x_train = np.reshape(x_train, (nb_sequences, window_size, 42))$/;"	v
xcorr_kernel	rnnoise/src/pitch.h	/^static OPUS_INLINE void xcorr_kernel(const opus_val16 * x, const opus_val16 * y, opus_val32 sum[4], int len)$/;"	f
xhr.onload	rnn_denoise_bak.js	/^    xhr.onload = function xhr_onload() {$/;"	f
xhr_onload	rnn_denoise_bak.js	/^    xhr.onload = function xhr_onload() {$/;"	f
y_train	rnnoise/src/rnn_train.py	/^y_train = np.copy(all_data[:nb_sequences*window_size, -22:])$/;"	v
y_train	rnnoise/src/rnn_train.py	/^y_train = np.reshape(y_train, (nb_sequences, window_size, 22))$/;"	v
y_train	rnnoise/src/rnn_train.py	/^y_train = y_train.astype('float32')$/;"	v
y_train	rnnoise/training/rnn_train.py	/^y_train = np.copy(all_data[:nb_sequences*window_size, 42:64])$/;"	v
y_train	rnnoise/training/rnn_train.py	/^y_train = np.reshape(y_train, (nb_sequences, window_size, 22))$/;"	v
